var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiValidationError.html",[0,0.099,1,2.765]],["body/classes/ApiValidationError.html",[0,0.123,1,4.32,2,1.149,3,0.268,4,0.223,5,0.165,6,6.119,7,4.872,8,2.024,9,5.636,10,0.501,11,1.264,12,4.311,13,2.451,14,3.769,15,2.923,16,0.615,17,1.73,18,6.689,19,1.951,20,5.538,21,6.385,22,0.993,23,5.538,24,1.149,25,0.01,26,0.879,27,0.855,28,6.689,29,2.263,30,3.579,31,5.538,32,1.275,33,5.538,34,5.538,35,5.538,36,5.538,37,1.342,38,3.132,39,0.435,40,4.433,41,1.274,42,5.538,43,0.253,44,4.872,45,2.494,46,4.433,47,3.132,48,3.62,49,2.335,50,4.106,51,3.844,52,2.883,53,3.44,54,5.538,55,0.006,56,0.008,57,0.006]],["title/classes/ApiValidationErrorResponse.html",[0,0.099,58,3.563]],["body/classes/ApiValidationErrorResponse.html",[0,0.122,1,5.206,2,1.147,3,0.267,4,0.222,5,0.165,8,2.021,10,0.5,11,1.263,13,2.448,14,3.765,15,2.671,16,0.543,19,1.948,22,0.822,24,1.147,25,0.01,26,0.877,27,0.853,28,6.684,38,4.296,39,0.475,43,0.252,47,3.128,48,4.428,49,2.331,51,3.837,55,0.006,56,0.008,57,0.006,58,5.562,59,6.684,60,4.863,61,1.948,62,4.315,63,4.111,64,4.549,65,3.848,66,6.947,67,5.528,68,5.633,69,5.528,70,4.098,71,5.528,72,5.528,73,2.043,74,5.528,75,5.528,76,5.528,77,6.947,78,6.947,79,5.528,80,1.479,81,1.441,82,6.947,83,5.528]],["title/modules/AuthModule.html",[84,1.197,85,3.09]],["body/modules/AuthModule.html",[0,0.132,3,0.288,4,0.239,5,0.177,25,0.01,39,0.54,41,1.369,43,0.271,55,0.007,56,0.008,57,0.007,84,2.111,85,5.924,86,2.22,87,2.678,88,3.364,89,3.364,90,3.096,91,3.311,92,3.388,93,5.232,94,5.232,95,5.924,96,4.111,97,3.223,98,2.678,99,5.948,100,7.269,101,4.41,102,5.948,103,5.232,104,5.948,105,3.895,106,4.761,107,7.269,108,5.948,109,5.948,110,5.948,111,2.979,112,5.948,113,2.979]],["title/modules/AuthorizationModule.html",[84,1.197,114,2.915]],["body/modules/AuthorizationModule.html",[0,0.131,3,0.286,4,0.238,5,0.176,25,0.01,39,0.51,41,1.361,43,0.27,55,0.007,56,0.008,57,0.007,84,2.106,86,2.208,87,2.663,88,3.345,89,3.345,90,3.079,91,3.303,92,3.649,96,4.097,97,3.205,98,2.663,111,3.629,114,5.814,115,5.203,116,5.203,117,5.203,118,5.203,119,5.581,120,5.275,121,5.043,122,5.914,123,5.914,124,5.914,125,2.855,126,5.203]],["title/injectables/AuthorizationService.html",[120,2.634,127,1.197]],["body/injectables/AuthorizationService.html",[0,0.09,3,0.197,4,0.164,5,0.122,10,0.369,16,0.505,17,1.413,19,1.438,22,0.837,24,1.466,25,0.01,26,1.122,27,1.091,32,1.29,37,1.8,39,0.442,41,0.939,43,0.186,55,0.005,56,0.006,57,0.005,73,1.9,80,1.209,81,0.846,120,3.361,121,4.552,125,1.97,126,3.59,127,1.528,128,1.837,129,3.59,130,3.051,131,5.75,132,4.998,133,6.535,134,4.081,135,4.081,136,4.081,137,3.326,138,3.55,139,3.491,140,4.534,141,3.985,142,4.081,143,3.079,144,2.474,145,5.681,146,3.853,147,1.681,148,4.362,149,2.789,150,3.529,151,5.681,152,4.081,153,4.906,154,3.59,155,4.081,156,3.412,157,4.212,158,4.998,159,3.529,160,4.998,161,1.253,162,2.833,163,2.415,164,4.487,165,3.72,166,3.036,167,4.081,168,4.081,169,3.267,170,4.081,171,4.081,172,4.081,173,5.681,174,4.081,175,4.081,176,2.308,177,4.081,178,5.681,179,4.081,180,4.081]],["title/classes/BaseEntity.html",[0,0.099,181,1.711]],["body/classes/BaseEntity.html",[0,0.169,2,1.163,3,0.271,4,0.226,5,0.167,8,1.632,10,0.507,11,1.39,13,1.976,16,0.501,22,0.83,25,0.01,32,1.282,39,0.438,43,0.32,55,0.006,56,0.008,57,0.006,81,1.586,147,1.75,181,3.08,182,4.489,183,3.379,184,1.941,185,3.379,186,2.111,187,3.733,188,5.607,189,3.733,190,5.607,191,3.03,192,2.04,193,2.093,194,3.171,195,4.489,196,4.157,197,3.384,198,4.489,199,4.489,200,4.933,201,3.483,202,2.707,203,4.933,204,2.809,205,4.489,206,3.171,207,2.291,208,3.039,209,1.868,210,4.933,211,4.489,212,4.933,213,3.892,214,3.672,215,4.157,216,4.489,217,2.809,218,2.773,219,4.933,220,2.809]],["title/classes/BaseEntityWithTimestamps.html",[0,0.099,197,2.149]],["body/classes/BaseEntityWithTimestamps.html",[0,0.163,2,1.066,3,0.248,4,0.207,5,0.153,8,1.929,10,0.465,11,1.335,13,1.81,16,0.555,22,0.974,25,0.01,30,2.888,32,1.301,39,0.415,43,0.303,55,0.006,56,0.007,57,0.006,81,1.666,147,1.695,181,3.162,182,4.113,183,3.468,184,1.993,185,3.387,186,2.31,187,3.742,189,3.742,191,3.074,192,1.929,193,1.918,194,2.906,195,4.113,196,3.809,197,3.545,198,4.113,199,4.113,200,4.52,201,3.192,202,2.481,203,4.52,204,2.574,205,4.113,206,2.906,207,2.1,208,2.785,209,1.712,210,4.52,211,4.113,212,4.52,213,3.567,214,3.365,215,3.809,216,4.113,217,3.678,218,2.912,219,4.52,220,3.678,221,5.138,222,1.783,223,2.149,224,5.138,225,5.138,226,2.906,227,2.394,228,5.138,229,2.481,230,2.481]],["title/injectables/BaseRepo.html",[127,1.197,231,3.09]],["body/injectables/BaseRepo.html",[0,0.096,3,0.21,4,0.174,5,0.129,10,0.392,12,2.171,13,2.555,16,0.543,17,1.473,19,1.527,22,0.928,24,1.575,25,0.01,26,1.205,27,1.172,37,1.84,39,0.422,41,0.997,43,0.198,55,0.005,56,0.007,57,0.005,73,1.166,80,1.436,127,1.593,128,1.952,130,3.239,149,3.038,156,3.501,161,1.33,164,3.656,166,3.102,181,1.667,192,1.261,194,2.451,209,2.415,222,1.814,223,2.186,231,4.111,232,3.813,233,4.504,234,5.805,235,5.805,236,5.033,237,5.805,238,4.335,239,6.379,240,4.335,241,4.741,242,4.741,243,5.583,244,4.335,245,4.101,246,5.073,247,5.376,248,4.504,249,5.376,250,5.805,251,4.741,252,6.871,253,4.335,254,3.652,255,4.335,256,4.741,257,4.335,258,5.401,259,4.741,260,4.335,261,4.335,262,4.335,263,5.923,264,4.391,265,5.923,266,4.335,267,4.335,268,5.923,269,4.335,270,4.335]],["title/classes/BusinessError.html",[0,0.099,9,2.915]],["body/classes/BusinessError.html",[0,0.162,2,1.05,3,0.245,4,0.204,5,0.151,8,1.911,9,4.301,10,0.458,11,1.194,12,4.374,13,3.01,14,4.181,15,3.15,16,0.62,17,1.634,18,6.787,19,2.314,22,0.97,24,1.05,25,0.01,26,0.804,27,0.782,29,2.684,32,1.374,37,1.227,38,4.123,39,0.456,40,6.176,41,1.165,43,0.231,45,2.28,50,5.405,55,0.006,56,0.007,57,0.006,61,1.784,65,3.725,80,1.078,81,1.05,271,4.454,272,4.123,273,4.56,274,3.56,275,4.56,276,3.715,277,3.715,278,4.301,279,2.861,280,5.837,281,5.063,282,5.356,283,6.568,284,5.063,285,5.063,286,5.063,287,5.063,288,5.063,289,5.063,290,4.454,291,6.568,292,5.063,293,4.301,294,6.568,295,5.063]],["title/modules/CoreModule.html",[84,1.197,296,3.09]],["body/modules/CoreModule.html",[0,0.122,3,0.266,4,0.222,5,0.164,25,0.01,39,0.513,41,1.268,43,0.251,49,2.923,55,0.006,56,0.008,57,0.006,61,1.941,84,2.206,86,2.056,87,2.48,88,3.115,89,3.115,90,2.867,91,2.323,92,2.567,96,3.92,97,2.985,98,2.48,111,3.472,279,3.019,296,6.132,297,4.846,298,4.846,299,5.813,300,5.813,301,4.955,302,5.813,303,5.508,304,4.306,305,6.932,306,4.306,307,5.549,308,5.549,309,6.932,310,4.306,311,5.139,312,4.539,313,6.932,314,3.92,315,4.812,316,6.098,317,6.932,318,5.139,319,5.508,320,5.508,321,5.508,322,5.508]],["title/classes/Course.html",[0,0.099,323,1.764]],["body/classes/Course.html",[0,0.11,2,1.032,3,0.241,4,0.2,5,0.148,8,1.889,10,0.45,11,1.181,16,0.609,19,1.753,22,1.017,24,1.032,25,0.01,26,1.216,27,0.768,30,3.551,32,1.367,39,0.452,43,0.227,45,2.24,55,0.006,56,0.007,57,0.006,81,1.589,147,1.419,161,1.527,162,3.453,181,2.497,183,3.232,184,1.857,185,2.739,186,2.35,187,3.026,189,3.026,191,3.231,192,1.448,193,1.857,197,4.009,217,3.253,218,2.354,220,3.253,222,1.944,223,2.343,226,2.813,227,2.318,229,2.402,230,2.402,323,2.573,324,4.377,325,7.229,326,5.36,327,6.493,328,4.704,329,4.975,330,4.975,331,4.975,332,6.493,333,4.975,334,6.493,335,3.621,336,4.975,337,2.944,338,2.944,339,2.944,340,2.944,341,2.944,342,6.493,343,2.944,344,3.09,345,3.258,346,2.813]],["title/classes/CourseInfo.html",[0,0.099,347,2.517]],["body/classes/CourseInfo.html",[0,0.128,2,1.202,3,0.28,4,0.233,5,0.173,8,2.081,10,0.524,11,1.3,16,0.606,19,2.041,22,0.959,24,1.202,25,0.01,26,1.321,27,0.894,30,3.116,32,1.359,39,0.447,43,0.264,45,2.609,55,0.007,56,0.008,57,0.007,147,1.563,161,1.778,181,3.201,183,3.017,184,1.734,185,2.443,186,2.142,187,2.7,189,2.7,191,3.075,192,1.686,193,2.163,229,2.797,230,2.797,343,3.428,344,3.599,347,4.045,348,6.827,349,4.022,350,4.045,351,4.233,352,5.303,353,3.016,354,4.638,355,4.638]],["title/classes/CourseNews.html",[0,0.099,356,2.517]],["body/classes/CourseNews.html",[0,0.131,2,0.581,3,0.135,4,0.256,5,0.084,8,1.853,10,0.253,11,0.783,15,2.586,16,0.604,17,1.072,22,1.015,24,0.581,25,0.01,26,0.834,27,1.145,30,3.723,32,1.387,37,0.679,39,0.438,43,0.291,45,1.261,55,0.003,56,0.005,57,0.003,80,0.596,81,1.453,137,2.449,138,2.863,139,2.837,141,2.366,144,0.837,147,1.392,161,0.86,165,1.834,181,2.449,183,3.05,184,1.836,185,2.488,186,2.351,187,2.749,189,2.749,191,3.256,192,0.815,193,1.045,197,3.247,204,2.631,209,1.75,217,2.955,218,2.541,220,2.955,222,1.713,223,2.064,226,2.437,227,2.008,229,1.352,230,1.352,254,1.305,272,2.437,293,1.834,323,1.11,335,3.19,337,1.657,338,1.657,339,1.657,340,1.657,341,3.491,345,1.834,346,2.971,347,2.971,350,1.584,353,2.735,356,2.437,357,1.834,358,3.025,359,3.299,360,2.93,361,3.315,362,2.848,363,4.095,364,2.586,365,3.863,366,3.664,367,2.366,368,3.195,369,4.483,370,2.8,371,2.242,372,2.822,373,3.263,374,2.822,375,2.242,376,2.242,377,2.992,378,3.863,379,2.992,380,2.822,381,2.159,382,2.677,383,2.992,384,2.242,385,2.242,386,3.197,387,2.081,388,2.242,389,2.847,390,3.108,391,2.242,392,2.242,393,2.242,394,2.677,395,2.242,396,2.677,397,2.242,398,2.992,399,2.242,400,2.242,401,2.242,402,2.242,403,2.242,404,2.242,405,2.242,406,2.992,407,3.956,408,2.242,409,3.863,410,1.944,411,2.437,412,1.518,413,0.551,414,1.944,415,1.944,416,1.944,417,1.944,418,1.944,419,1.944,420,1.944,421,1.944,422,1.944,423,2.992,424,2.366,425,2.448,426,2.366,427,2.288,428,2.366,429,3.108,430,2.735,431,1.944,432,2.992,433,1.944,434,1.944,435,3.647,436,1.657,437,1.657]],["title/classes/CreateNewsParams.html",[0,0.099,438,2.915]],["body/classes/CreateNewsParams.html",[0,0.143,2,1.024,3,0.239,4,0.199,5,0.147,10,0.446,11,1.174,15,3.049,16,0.567,22,0.939,25,0.01,32,1.41,39,0.45,43,0.225,55,0.006,56,0.007,57,0.006,61,2.962,73,1.327,138,2.943,139,3.037,140,3.903,146,3.236,147,1.889,184,1.566,186,2.189,218,2.342,358,2.98,359,3.222,360,3.454,362,3.477,438,4.23,439,6.513,440,3.659,441,3.119,442,4.789,443,3.501,444,6.46,445,4.342,446,4.936,447,5.172,448,3.822,449,5.172,450,4.789,451,4.936,452,4.936,453,4.484,454,4.484,455,4.746,456,4.936,457,4.936,458,4.999,459,5.172,460,3.653,461,4.936,462,4.936,463,4.814,464,2.472,465,5.683,466,6.348,467,3.066,468,3.426,469,3.066,470,3.066]],["title/controllers/DelayController.html",[471,2.074,472,3.3]],["body/controllers/DelayController.html",[0,0.128,3,0.279,4,0.232,5,0.172,10,0.521,17,1.773,22,0.682,25,0.01,37,1.396,39,0.484,41,1.326,43,0.263,47,2.595,55,0.006,56,0.008,57,0.006,73,1.917,80,1.518,81,1.195,91,2.43,113,3.571,130,2.89,149,2.807,166,2.355,186,1.59,222,1.917,315,4.949,471,3.322,472,5.739,473,5.707,474,4.613,475,7.116,476,5.762,477,4.668,478,3.738,479,4.949,480,3.711,481,5.285,482,5.069,483,5.762,484,3.409,485,4.613,486,5.707,487,5.069,488,5.069,489,5.762,490,4.272,491,2.685,492,4.613,493,4.668,494,4.613,495,2.999,496,4.613,497,4.272]],["title/injectables/DurationLoggingInterceptor.html",[127,1.197,498,3.563]],["body/injectables/DurationLoggingInterceptor.html",[0,0.124,3,0.272,4,0.226,5,0.168,10,0.508,11,1.276,12,3.834,16,0.402,17,1.745,22,0.831,24,1.165,25,0.01,26,0.891,27,0.867,37,1.361,39,0.501,41,1.293,43,0.256,55,0.006,56,0.008,57,0.006,61,1.979,73,1.51,80,1.196,81,1.455,127,1.887,128,2.529,222,1.51,223,1.82,312,4.595,426,3.446,481,5.203,493,4.595,498,5.618,499,6.733,500,4.942,501,7.017,502,5.203,503,4.595,504,3.446,505,4.173,506,6.173,507,6.173,508,5.943,509,7.052,510,5.617,511,2.814,512,6.733,513,7.017,514,5.617,515,4.497,516,5.617,517,4.942,518,4.942,519,3.678,520,5.617,521,3.899,522,7.017,523,5.617,524,5.617,525,5.617]],["title/modules/ErrorModule.html",[84,1.197,299,3.09]],["body/modules/ErrorModule.html",[0,0.139,3,0.304,4,0.253,5,0.187,25,0.01,39,0.503,41,1.445,43,0.287,55,0.007,56,0.008,57,0.007,61,2.213,84,2.02,86,2.345,91,2.649,159,4.667,222,2.02,299,5.216,314,4.249,318,6.176,484,3.717,495,3.27,526,6.282,527,6.61,528,4.249,529,4.249,530,3.628,531,5.216,532,6.282,533,6.282,534,5.029]],["title/classes/ErrorResponse.html",[0,0.099,38,2.517]],["body/classes/ErrorResponse.html",[0,0.128,2,1.197,3,0.279,4,0.232,5,0.172,12,4.054,13,2.852,14,4.199,15,2.979,16,0.594,19,2.515,22,0.683,24,1.197,25,0.01,26,0.916,27,0.891,29,3.166,32,1.466,38,4.036,39,0.361,40,4.621,41,1.328,43,0.263,49,3.267,55,0.006,56,0.008,57,0.006,61,2.515,62,4.813,63,4.223,64,4.674,65,3.446,290,5.078,535,5.078,536,5.772,537,5.772,538,5.772,539,4.621,540,4.954,541,5.772,542,4.621,543,5.078,544,3.416,545,2.434,546,3.264,547,3.78,548,4.621]],["title/injectables/FeathersAuthProvider.html",[121,2.634,127,1.197]],["body/injectables/FeathersAuthProvider.html",[0,0.089,3,0.194,4,0.162,5,0.12,10,0.363,16,0.547,17,1.398,19,1.416,22,0.906,24,1.588,25,0.01,26,1.215,27,1.181,32,1.239,37,1.79,39,0.462,41,0.925,43,0.183,55,0.005,56,0.006,57,0.005,73,2.219,80,1.63,81,0.833,121,3.325,127,1.511,128,1.809,130,3.206,137,3.398,138,3.128,139,3.314,140,3.804,141,3.326,144,2.396,148,4.259,149,2.992,150,3.491,161,1.233,162,2.789,163,2.377,166,3.019,176,2.272,181,2.161,183,1.694,185,2.733,192,1.169,194,2.272,364,1.545,387,3.567,413,0.791,477,3.68,478,1.94,504,2.919,549,6.291,550,2.979,551,5.62,552,5.189,553,5.62,554,5.62,555,5.189,556,4.018,557,4.329,558,4.018,559,4.944,560,4.018,561,3.535,562,4.018,563,4.944,564,4.018,565,4.944,566,4.018,567,4.018,568,4.018,569,4.499,570,3.535,571,3.216,572,4.944,573,3.216,574,4.944,575,4.944,576,3.535,577,3.535,578,2.823,579,3.535,580,4.944,581,4.944,582,4.944,583,3.535,584,2.631,585,3.535,586,3.535,587,1.872,588,3.535,589,2.178,590,4.167,591,3.216,592,3.535,593,3.535,594,2.979]],["title/interfaces/FeathersError.html",[413,0.876,595,3.09]],["body/interfaces/FeathersError.html",[3,0.311,4,0.258,5,0.192,8,2.216,10,0.581,11,1.384,13,2.957,16,0.627,25,0.01,29,3.316,32,1.457,43,0.293,49,3.211,55,0.007,56,0.009,57,0.007,413,1.264,595,5.285,596,2.398,597,5.651,598,5.651,599,7.383]],["title/modules/FeathersModule.html",[84,1.197,119,2.915]],["body/modules/FeathersModule.html",[0,0.129,3,0.282,4,0.234,5,0.174,25,0.01,39,0.449,41,1.341,43,0.266,55,0.007,56,0.008,57,0.007,61,2.053,84,2.242,86,2.904,87,2.623,88,3.295,89,3.295,90,3.033,91,3.281,92,3.625,96,4.059,97,3.158,98,2.623,119,5.634,125,3.756,480,3.737,557,5.032,571,4.664,578,3.127,600,5.125,601,5.125,602,5.125,603,5.826,604,4.459,605,4.059,606,3.737,607,3.466,608,4.247,609,4.7,610,4.7,611,4.7,612,4.7,613,5.746,614,3.345]],["title/interfaces/FeathersService.html",[413,0.876,615,3.3]],["body/interfaces/FeathersService.html",[0,0.109,3,0.239,4,0.199,5,0.147,10,0.446,16,0.546,17,1.607,22,0.765,24,1.34,25,0.01,26,1.025,27,0.997,32,0.828,37,1.566,39,0.496,41,1.136,43,0.349,55,0.006,56,0.007,57,0.006,73,1.327,80,1.051,86,1.842,125,2.383,127,1.737,137,2.937,149,2.77,161,1.515,164,3.903,184,1.566,279,2.15,413,0.971,424,2.909,425,3.01,426,2.909,427,2.814,428,2.909,429,3.822,480,3.749,484,2.92,504,2.223,557,2.791,578,3.543,596,1.842,604,3.066,605,4.073,606,2.569,607,3.828,608,2.92,609,3.232,610,3.232,611,3.232,612,3.232,613,3.951,614,2.3,615,5.664,616,5.339,617,3.426,618,3.477,619,5.683,620,6.635,621,4.936,622,4.814,623,3.653,624,5.683,625,4.936,626,3.363,627,3.232,628,3.066,629,3.951,630,5.172,631,5.683,632,4.013,633,5.172,634,5.172,635,3.951,636,3.426,637,4.342,638,4.342,639,4.342,640,4.342,641,4.342]],["title/injectables/FeathersServiceProvider.html",[127,1.197,557,2.517]],["body/injectables/FeathersServiceProvider.html",[0,0.108,3,0.235,4,0.196,5,0.145,10,0.439,16,0.543,17,1.59,19,1.712,22,0.757,24,1.326,25,0.01,26,1.015,27,0.987,32,1.198,37,1.178,39,0.493,41,1.118,43,0.346,55,0.005,56,0.007,57,0.005,61,1.712,73,1.307,80,1.034,86,2.387,125,3.087,127,1.719,128,2.188,137,2.458,149,2.318,161,1.491,164,3.873,184,1.178,279,2.117,413,0.956,424,2.879,425,2.98,426,2.879,427,2.785,428,2.879,429,3.783,480,3.953,484,2.875,504,2.188,557,3.616,578,3.65,604,3.972,605,4.294,606,3.329,607,4.093,608,3.783,609,4.187,610,4.187,611,4.187,612,4.187,613,5.119,614,2.98,615,5.63,616,5.299,617,3.373,618,2.346,619,4.275,620,5.721,622,4.229,624,4.275,626,3.329,627,3.182,628,3.018,629,3.89,630,5.119,631,5.625,632,3.972,633,5.119,634,5.119,635,3.89,636,4.439,637,4.275,638,4.275,639,5.625,640,4.275,641,4.275,642,6.394,643,4.859,644,4.859,645,4.859,646,3.373]],["title/interfaces/GlobalConstants.html",[413,0.876,647,3.3]],["body/interfaces/GlobalConstants.html",[3,0.298,4,0.248,5,0.184,10,0.558,11,1.351,16,0.57,25,0.01,27,1.278,32,1.482,39,0.386,43,0.281,55,0.007,56,0.008,57,0.007,73,1.999,413,1.215,596,2.303,647,5.915,648,4.94,649,6.784,650,6.784,651,6.784,652,5.951,653,6.17,654,5.951,655,3.489,656,4.041]],["title/classes/GlobalErrorFilter.html",[0,0.099,531,3.09]],["body/classes/GlobalErrorFilter.html",[0,0.107,1,3.588,2,0.679,3,0.158,4,0.132,5,0.098,9,4.182,10,0.296,11,0.882,12,2.894,13,2.25,14,2.629,15,2.221,16,0.487,17,1.437,22,0.684,24,1.006,25,0.01,26,0.917,27,0.749,37,1.548,38,4.523,39,0.462,41,0.754,43,0.149,47,1.475,48,1.705,49,3.763,55,0.004,56,0.005,57,0.004,62,2.034,63,4.665,65,1.581,70,2.428,73,2.326,80,1.757,81,1.414,125,2.789,164,2.629,191,1.298,209,1.091,222,0.88,223,1.061,227,1.526,243,4.676,274,2.629,280,5.112,367,2.601,413,0.645,424,2.184,425,2.26,426,2.184,427,2.113,428,1.475,504,2.601,505,4.164,519,3.176,528,3.856,530,2.342,531,3.367,589,1.775,595,4.433,599,2.881,606,1.705,614,1.526,628,2.034,657,4.735,658,2.273,659,5.776,660,5.055,661,4.624,662,4.85,663,3.274,664,4.85,665,5.776,666,6.386,667,3.274,668,4.01,669,5.776,670,3.274,671,3.274,672,2.881,673,2.881,674,3.274,675,3.274,676,2.621,677,2.881,678,2.621,679,5.716,680,2.621,681,2.428,682,2.881,683,3.176,684,2.621,685,2.273,686,3.588,687,2.034,688,2.621,689,2.881,690,4.267,691,2.881,692,2.621,693,2.881,694,2.881,695,2.881,696,2.881,697,2.881,698,4.01,699,3.883,700,3.274,701,3.883,702,5.458,703,3.274,704,3.274,705,3.274,706,3.883,707,3.274,708,3.274,709,4.85,710,3.274,711,3.274,712,2.144,713,4.267,714,2.273,715,2.881,716,2.034,717,2.144,718,4.267,719,3.131,720,2.621,721,4.267,722,2.881,723,3.883,724,2.881,725,2.881,726,2.428,727,2.621,728,2.881,729,2.881,730,2.621,731,2.621,732,2.621,733,2.428,734,2.428,735,2.881,736,2.881,737,2.881,738,2.881,739,5.998,740,2.621,741,5.998,742,2.881,743,2.621,744,2.881,745,3.274,746,3.274,747,3.274,748,4.85,749,3.274,750,3.274]],["title/classes/GlobalValidationPipe.html",[0,0.099,751,3.3]],["body/classes/GlobalValidationPipe.html",[0,0.167,1,3.392,2,1.133,3,0.264,4,0.22,5,0.163,8,2.006,11,0.993,16,0.54,19,2.662,21,5.519,22,0.646,25,0.01,39,0.431,41,1.257,43,0.249,45,2.459,48,4.131,55,0.006,56,0.008,57,0.006,61,1.924,65,2.636,70,4.048,80,1.162,81,1.133,186,1.903,209,2.296,222,1.854,246,3.392,254,3.52,273,4.785,314,3.899,441,3.647,463,3.231,467,4.282,545,2.303,587,2.545,589,2.959,622,3.231,751,5.111,752,6.065,753,4.804,754,5.519,755,4.079,756,5.519,757,5.519,758,5.519,759,4.514,760,7.554,761,5.46,762,4.514,763,3.79,764,4.371,765,5.46,766,2.636,767,3.576,768,5.46,769,5.46,770,4.048,771,5.46,772,5.46,773,5.46,774,4.048,775,4.371,776,5.46,777,2.959,778,3.79,779,5.46,780,4.371,781,3.392,782,4.804,783,3.088,784,5.46,785,5.46]],["title/interfaces/ICreateNews.html",[413,0.876,786,2.915]],["body/interfaces/ICreateNews.html",[3,0.27,4,0.225,5,0.167,10,0.505,11,1.271,15,3.076,16,0.61,25,0.01,27,0.862,32,1.409,39,0.349,43,0.365,55,0.006,56,0.008,57,0.006,61,1.969,137,2.935,138,2.858,139,3.22,140,4.138,161,1.715,218,2.768,323,2.214,328,3.306,344,3.47,351,4.138,358,2.921,359,3.474,360,3.485,362,3.863,364,2.148,412,3.028,413,1.654,469,3.47,596,2.086,786,4.58,787,3.878,788,6.153,789,3.659,790,3.878,791,3.878,792,3.878,793,4.915,794,3.659,795,3.47,796,3.028]],["title/interfaces/ICurrentUser.html",[413,0.876,797,2.634]],["body/interfaces/ICurrentUser.html",[3,0.269,4,0.224,5,0.166,8,1.62,10,0.504,11,1.269,16,0.571,25,0.01,29,2.852,32,1.52,43,0.318,55,0.006,56,0.008,57,0.006,148,4.331,157,5.174,184,1.936,207,2.852,387,4.054,413,1.374,596,2.078,797,4.51,798,4.457,799,4.457,800,6.397,801,5.547,802,5.174,803,5.216,804,5.174,805,4.844,806,3.865,807,4.128,808,4.898,809,4.898,810,4.898,811,4.898,812,4.457,813,4.898,814,4.898,815,3.865]],["title/interfaces/IErrorType.html",[282,3.09,413,0.876]],["body/interfaces/IErrorType.html",[3,0.311,4,0.259,5,0.192,10,0.582,11,1.386,12,4.069,15,3.229,16,0.628,25,0.01,32,1.492,43,0.294,50,6.226,55,0.007,56,0.009,57,0.007,282,5.292,413,1.267,596,2.403,816,5.663,817,5.663]],["title/interfaces/IFindOptions.html",[413,0.876,818,2.915]],["body/interfaces/IFindOptions.html",[3,0.301,4,0.25,5,0.186,10,0.563,11,1.358,16,0.572,25,0.01,27,1.282,29,3.052,43,0.379,55,0.007,56,0.008,57,0.007,245,4.696,328,3.68,413,1.47,469,3.863,596,2.322,818,4.891,819,4.317,820,4.317,821,4.5,822,6.647,823,5.437,824,3.863,825,3.863,826,4.979,827,5.979,828,5.979]],["title/interfaces/ILogger.html",[413,0.876,829,3.3]],["body/interfaces/ILogger.html",[3,0.265,4,0.22,5,0.163,10,0.496,14,4.439,16,0.585,17,1.718,22,0.97,24,1.699,25,0.01,26,1.3,27,1.338,32,1.508,37,1.985,43,0.25,49,2.914,55,0.006,56,0.008,57,0.006,413,1.079,511,4.472,596,2.045,623,4.73,829,5.122,830,4.821,831,5.531,832,4.292,833,6.909,834,6.909,835,5.479,836,5.479,837,6.078,838,6.058,839,5.479,840,6.078,841,5.479,842,5.479,843,5.479,844,6.078,845,5.479,846,4.821,847,4.821]],["title/interfaces/INewsProperties.html",[407,2.765,413,0.876]],["body/interfaces/INewsProperties.html",[0,0.151,3,0.183,4,0.302,5,0.113,8,1.988,10,0.342,11,0.979,15,2.886,16,0.582,25,0.01,26,0.6,27,1.218,32,1.442,39,0.483,43,0.329,45,1.702,55,0.004,56,0.006,57,0.004,80,0.805,81,1.3,137,3.228,138,2.792,139,2.644,141,1.702,144,1.13,147,1.578,161,1.16,165,2.475,181,2.07,184,0.916,191,3.128,192,1.1,193,1.411,197,2.599,204,3.141,209,2.088,218,2.477,254,1.762,272,3.044,293,2.475,323,1.498,335,3.141,341,3.185,345,2.475,346,3.546,347,3.044,350,2.138,353,1.968,356,2.138,357,2.475,358,2.915,359,3.436,360,3.269,361,3.907,362,3.486,363,5.012,364,2.969,365,4.728,366,4.485,367,1.702,369,4.671,372,2.475,374,2.475,377,2.624,378,3.525,379,2.624,380,2.475,381,1.894,382,2.348,383,2.624,386,3.398,387,1.825,389,3.703,390,4.042,394,2.348,396,2.348,398,2.624,406,2.624,407,4.244,409,4.474,410,2.624,411,3.044,412,2.049,413,0.744,414,2.624,415,2.624,416,2.624,417,2.624,418,2.624,419,2.624,420,2.624,421,2.624,422,2.624,423,3.737,424,2.823,425,2.922,426,2.823,427,2.731,428,2.823,429,3.71,430,3.264,431,2.624,432,3.737,433,2.624,434,2.624,435,4.352,436,2.237,437,2.237,596,1.411]],["title/interfaces/INewsScope.html",[413,0.876,794,2.915]],["body/interfaces/INewsScope.html",[3,0.275,4,0.228,5,0.169,10,0.514,11,1.284,15,2.183,16,0.592,25,0.01,27,1.302,32,1.185,39,0.355,43,0.367,55,0.006,56,0.008,57,0.006,61,2.001,137,2.957,138,2.887,139,3.243,140,4.361,161,1.743,218,2.059,323,2.25,328,3.36,344,3.527,351,4.18,358,2.89,359,3.491,360,2.473,362,2.742,364,2.183,412,3.077,413,1.661,469,3.527,596,2.12,786,3.718,787,3.942,788,4.995,789,3.718,790,3.942,791,3.942,792,3.942,793,6.215,794,4.626,795,4.999,796,4.168]],["title/interfaces/IPagination.html",[413,0.876,823,2.915]],["body/interfaces/IPagination.html",[3,0.301,4,0.25,5,0.186,10,0.563,11,1.358,16,0.572,25,0.01,27,1.282,29,3.524,43,0.379,55,0.007,56,0.008,57,0.007,245,3.517,328,3.68,413,1.47,469,3.863,596,2.322,818,4.073,819,4.317,820,4.317,821,3.371,822,5.979,823,5.242,824,5.158,825,5.158,826,4.979,827,5.979,828,5.979]],["title/modules/InterceptorModule.html",[84,1.197,300,3.09]],["body/modules/InterceptorModule.html",[0,0.131,3,0.285,4,0.238,5,0.176,25,0.01,39,0.489,41,1.358,43,0.269,55,0.007,56,0.008,57,0.007,61,2.08,70,4.376,84,1.946,86,2.203,91,2.489,206,4.092,207,2.412,300,5.023,314,4.092,315,5.432,484,3.493,493,4.738,495,3.767,534,5.793,614,3.801,755,4.282,766,3.494,777,3.199,848,5.903,849,5.793,850,5.023,851,5.365,852,4.495,853,8.157,854,3.767,855,4.738,856,5.793,857,6.048,858,3.667]],["title/injectables/JwtAuthGuard.html",[127,1.197,859,3.3]],["body/injectables/JwtAuthGuard.html",[0,0.149,3,0.325,4,0.271,5,0.201,8,1.957,25,0.01,39,0.489,41,1.548,43,0.307,55,0.008,56,0.009,57,0.008,101,4.987,127,2.104,128,3.029,859,5.8,860,5.918,861,5.918,862,6.727,863,6.727]],["title/interfaces/JwtConstants.html",[105,2.915,413,0.876]],["body/interfaces/JwtConstants.html",[3,0.296,4,0.246,5,0.183,10,0.554,11,1.345,16,0.59,25,0.01,32,1.481,39,0.383,43,0.338,55,0.007,56,0.008,57,0.007,73,1.989,105,5.409,351,4.378,413,1.205,596,2.285,807,4.539,812,4.901,864,4.901,865,7.439,866,6.269,867,6.509,868,6.122,869,6.122,870,4.901,871,6.122,872,6.122,873,6.122,874,5.386,875,5.386]],["title/interfaces/JwtPayload.html",[413,0.876,806,3.09]],["body/interfaces/JwtPayload.html",[3,0.265,4,0.22,5,0.163,8,2.008,10,0.495,11,1.255,16,0.598,25,0.01,29,3.416,32,1.511,43,0.315,55,0.006,56,0.008,57,0.006,148,2.965,157,4.055,184,1.672,207,3.245,387,3.332,413,1.358,596,2.042,797,4.474,798,4.379,799,4.379,800,4.379,801,3.797,802,4.055,803,4.696,804,4.055,805,3.797,806,4.791,807,5.117,808,6.985,809,6.071,810,6.985,811,6.985,812,5.525,813,6.985,814,6.985,815,5.512]],["title/injectables/JwtStrategy.html",[95,3.09,127,1.197]],["body/injectables/JwtStrategy.html",[0,0.129,3,0.282,4,0.235,5,0.174,8,1.698,10,0.528,16,0.417,17,1.787,19,2.743,22,0.851,24,1.211,25,0.01,26,0.926,27,0.901,37,1.415,39,0.522,41,1.343,43,0.266,45,2.628,55,0.007,56,0.008,57,0.007,80,1.243,95,4.988,101,4.327,105,3.822,106,4.673,127,1.932,128,2.628,144,1.744,207,2.937,208,3.895,589,3.163,806,5.897,851,5.328,876,5.135,877,5.837,878,7.186,879,5.837,880,5.773,881,5.837,882,4.673,883,5.135,884,4.988,885,5.837,886,5.837,887,5.837,888,5.837,889,5.837,890,5.837,891,5.837,892,5.837,893,5.837,894,5.837,895,5.837,896,5.837]],["title/classes/Lesson.html",[0,0.099,897,2.765]],["body/classes/Lesson.html",[0,0.118,2,1.104,3,0.257,4,0.214,5,0.159,8,1.973,10,0.481,11,1.233,16,0.593,22,1.011,25,0.01,30,3.615,32,1.137,39,0.467,43,0.243,55,0.006,56,0.008,57,0.006,81,1.407,147,1.482,161,1.633,181,2.608,183,3.315,184,1.905,185,2.86,186,2.357,187,3.16,189,3.16,191,3.115,192,1.548,193,1.986,197,4.073,217,3.397,218,2.459,220,3.397,222,1.824,223,2.198,226,3.009,227,2.48,229,2.569,230,2.569,323,3.289,337,3.149,338,3.149,339,3.149,340,3.149,343,3.149,346,3.009,369,4.013,373,3.305,796,3.675,897,4.213,898,4.681,899,5.534,900,5.966,901,5.321,902,5.321,903,4.681,904,4.681]],["title/injectables/Logger.html",[127,1.197,505,2.317]],["body/injectables/Logger.html",[0,0.13,3,0.283,4,0.235,5,0.174,8,2.093,17,1.454,25,0.01,39,0.45,41,1.346,43,0.267,55,0.007,56,0.008,57,0.007,127,1.935,128,2.633,159,3.632,164,3.899,209,1.948,222,1.572,279,2.547,491,2.725,505,4.424,511,3.904,519,4.711,546,3.307,578,2.547,609,3.829,626,3.745,759,3.829,763,4.059,766,3.474,829,6.028,832,4.84,905,5.145,906,8.13,907,5.848,908,5.848,909,4.059,910,4.059,911,5.145,912,4.336,913,5.145,914,3.46,915,3.632,916,6.329,917,3.307,918,4.336,919,5.848,920,5.848,921,5.145,922,4.059,923,5.145,924,3.46,925,5.848,926,5.848,927,5.848]],["title/modules/LoggerModule.html",[84,1.197,301,2.634]],["body/modules/LoggerModule.html",[0,0.139,3,0.303,4,0.252,5,0.187,25,0.01,39,0.469,41,1.443,43,0.286,55,0.007,56,0.008,57,0.007,84,2.16,86,2.34,87,2.823,88,3.545,89,3.545,90,3.263,91,3.388,92,3.743,96,4.244,97,3.398,98,2.823,301,5.168,505,4.674,928,5.515,929,5.515,930,5.515,931,6.269,932,6.269]],["title/modules/MongoDatabaseModule.html",[84,1.197,933,3.563]],["body/modules/MongoDatabaseModule.html",[0,0.124,3,0.271,4,0.226,5,0.209,16,0.547,17,1.395,22,0.664,24,1.163,25,0.01,26,0.89,27,0.865,37,1.359,39,0.501,41,1.29,43,0.256,55,0.006,56,0.008,57,0.006,80,1.194,84,2.056,86,2.093,111,2.809,144,2.095,192,1.632,207,2.291,367,3.156,623,3.171,649,5.611,650,5.611,651,5.611,933,6.122,934,4.354,935,4.354,936,3.892,937,4.933,938,6.166,939,7.647,940,5.607,941,4.324,942,6.122,943,5.607,944,4.489,945,3.039,946,4.489,947,5.607,948,2.919,949,4.157,950,4.489,951,4.157,952,5.197,953,3.171,954,3.039,955,6.727,956,3.672,957,3.892,958,4.489,959,4.933,960,4.866,961,4.933,962,4.866,963,4.489]],["title/modules/MongoMemoryDatabaseModule.html",[84,1.197,964,3.3]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.104,3,0.227,4,0.189,5,0.14,12,2.347,16,0.446,17,1.165,19,1.651,22,0.739,24,0.972,25,0.01,26,0.744,27,0.723,37,1.513,39,0.488,41,1.078,43,0.341,55,0.005,56,0.007,57,0.005,73,2.013,80,1.593,81,0.972,84,2.013,86,1.749,91,1.976,92,2.183,111,2.347,130,2.62,149,2.263,166,2.868,192,1.816,193,1.749,195,3.75,207,1.914,367,2.81,484,2.772,491,2.908,495,3.249,503,4.087,504,3.16,519,3.068,618,2.262,623,2.649,627,4.087,716,2.91,924,2.772,934,4.36,935,4.36,936,3.252,937,4.121,938,5.491,941,3.969,942,6.241,949,5.549,950,6.418,951,3.473,953,3.53,960,4.332,964,5.204,965,5.681,966,4.685,967,7.795,968,4.685,969,5.491,970,6.175,971,7.199,972,2.772,973,3.75,974,4.121,975,5.491,976,4.996,977,4.121,978,3.75,979,3.068,980,3.252,981,3.473,982,3.75,983,3.068,984,4.121,985,3.473,986,5.491,987,4.121,988,2.539,989,4.121,990,4.121,991,4.685,992,3.068,993,4.685,994,4.685,995,4.627,996,3.252,997,3.252,998,3.252,999,3.473,1000,4.121,1001,4.685,1002,4.685]],["title/classes/MongoSharedConnection.html",[0,0.099,1003,3.3]],["body/classes/MongoSharedConnection.html",[0,0.12,2,1.125,3,0.262,4,0.218,5,0.162,8,1.997,10,0.49,16,0.388,17,1.707,22,0.812,24,1.125,25,0.01,26,0.861,27,0.837,37,1.663,39,0.429,43,0.247,55,0.006,56,0.008,57,0.006,73,1.458,130,3.113,149,2.87,153,4.764,166,2.805,192,1.997,194,3.067,227,3.198,277,3.881,623,3.067,777,2.939,796,4.081,934,4.678,935,4.678,953,3.881,954,4.29,972,3.209,988,2.939,992,3.551,995,5.583,1003,5.089,1004,4.341,1005,7.53,1006,6.336,1007,6.863,1008,5.423,1009,4.341,1010,5.423,1011,6.038,1012,6.537,1013,3.551,1014,5.227,1015,4.341,1016,4.764,1017,4.341,1018,5.423,1019,5.423,1020,5.423,1021,5.423,1022,5.423,1023,5.423,1024,5.423,1025,3.368,1026,5.423,1027,3.067,1028,5.423]],["title/classes/MongoSharedDriver.html",[0,0.099,952,3.3]],["body/classes/MongoSharedDriver.html",[0,0.139,2,1.305,3,0.304,4,0.253,5,0.188,8,2.189,10,0.569,11,1.368,12,4.031,22,0.745,25,0.01,39,0.47,43,0.287,55,0.007,56,0.008,57,0.007,81,1.56,192,1.831,194,3.56,222,1.692,223,2.04,934,4.673,935,4.673,952,5.577,953,3.56,954,4.361,997,5.787,1003,4.667,1029,5.537,1030,8.046,1031,7.079,1032,7.523,1033,6.294]],["title/classes/News.html",[0,0.099,358,1.525]],["body/classes/News.html",[0,0.137,2,0.638,3,0.149,4,0.267,5,0.092,8,1.933,10,0.278,11,0.842,15,2.683,16,0.6,17,1.152,19,1.085,22,1.004,24,0.961,25,0.01,26,0.983,27,1.199,30,3.04,32,1.39,37,0.746,39,0.453,43,0.303,45,1.386,55,0.003,56,0.005,57,0.003,80,0.655,81,1.378,137,2.554,138,2.959,139,2.943,141,2.507,144,0.92,147,1.451,161,0.945,165,2.016,181,2.554,183,2.612,184,1.691,185,1.953,186,2.304,187,2.158,189,2.158,191,3.286,192,0.896,193,1.149,197,3.496,204,2.789,209,1.855,217,2.32,218,2.408,220,2.32,222,1.497,223,1.804,226,1.741,227,1.434,229,1.486,230,1.486,254,1.434,272,2.619,293,2.016,323,1.22,335,3.327,337,1.821,338,1.821,339,1.821,340,1.821,341,3.665,345,2.016,346,3.149,347,2.619,350,2.619,353,3.224,356,1.741,357,2.016,358,2.919,359,3.275,360,3.04,361,3.457,362,2.99,363,4.299,364,2.683,365,4.056,366,3.847,367,2.507,368,3.434,369,4.51,372,3.033,373,3.458,374,3.033,377,3.215,378,4.056,379,3.215,380,3.033,381,2.32,382,2.877,383,3.215,386,3.357,387,2.236,389,3.017,390,3.294,394,2.877,396,2.877,398,3.215,406,3.215,407,4.498,409,4.056,410,2.137,411,2.619,412,1.668,413,0.606,414,2.137,415,2.137,416,2.137,417,2.137,418,2.137,419,2.137,420,2.137,421,2.137,422,2.137,423,3.215,424,2.507,425,2.594,426,2.507,427,2.425,428,2.507,429,3.294,430,2.898,431,2.137,432,3.215,433,2.137,434,2.137,435,3.865,436,1.821,437,1.821,1034,4.631,1035,3.078,1036,3.078,1037,3.078,1038,3.078,1039,3.078,1040,3.078,1041,3.078,1042,3.078,1043,3.078,1044,3.078,1045,3.078,1046,3.078]],["title/controllers/NewsController.html",[471,2.074,1047,3.3]],["body/controllers/NewsController.html",[0,0.082,3,0.18,4,0.149,5,0.111,10,0.336,12,1.86,16,0.513,17,1.322,22,0.849,24,1.487,25,0.01,26,1.138,27,1.107,32,1.341,37,1.738,39,0.508,41,0.854,43,0.169,55,0.004,56,0.006,57,0.004,73,2.151,80,1.527,81,0.77,113,1.86,130,3.168,144,2.025,146,2.662,147,1.161,149,2.943,163,2.197,164,2.88,166,2.93,184,1.288,186,1.979,233,4.209,358,2.78,364,2.043,381,2.662,438,4.438,441,3.709,464,1.86,471,1.73,587,2.893,604,2.306,622,4.414,626,3.231,719,2.88,754,2.972,797,5.052,821,3.673,880,2.753,1047,3.94,1048,3.267,1049,3.267,1050,4.602,1051,6.207,1052,4.309,1053,3.713,1054,4.602,1055,3.713,1056,5.984,1057,3.713,1058,5.315,1059,3.713,1060,6.563,1061,3.267,1062,4.704,1063,4.438,1064,3.713,1065,3.713,1066,5.315,1067,3.713,1068,4.676,1069,5.315,1070,4.01,1071,5.315,1072,3.301,1073,4.676,1074,3.713,1075,4.704,1076,5.315,1077,3.713,1078,4.602,1079,3.267,1080,3.267,1081,4.978,1082,3.713,1083,3.713,1084,2.431,1085,3.267,1086,3.856,1087,3.267,1088,2.753,1089,3.267,1090,3.267,1091,2.577,1092,2.753,1093,3.713,1094,3.713,1095,3.267,1096,3.713,1097,3.267,1098,3.267,1099,6.309,1100,3.267,1101,3.267,1102,5.962,1103,2.972,1104,4.676,1105,3.713,1106,3.713,1107,3.713,1108,3.713,1109,3.713,1110,2.753,1111,2.972,1112,3.713,1113,6.207,1114,3.713,1115,3.713,1116,3.713,1117,5.315,1118,3.713]],["title/classes/NewsFilterQuery.html",[0,0.099,1062,3.09]],["body/classes/NewsFilterQuery.html",[0,0.149,2,1.094,3,0.255,4,0.212,5,0.157,10,0.477,11,1.226,16,0.531,22,0.88,25,0.01,27,1.278,32,1.314,39,0.49,43,0.241,55,0.006,56,0.008,57,0.006,61,2.853,73,1.419,138,3.309,139,3.136,140,4.03,146,3.379,147,1.153,184,1.635,186,2.052,358,2.837,359,3.305,453,4.682,454,4.682,455,4.867,458,5.161,459,5.4,460,3.815,464,2.643,466,5.4,467,3.278,468,3.663,469,3.278,470,3.278,795,4.618,796,3.656,1062,4.682,1119,6.273,1120,4.224,1121,5.276,1122,5.4,1123,5.934,1124,5.276,1125,5.276,1126,5.276,1127,5.276,1128,5.934,1129,6.745,1130,4.682,1131,5.276,1132,5.809,1133,6.745,1134,5.276,1135,6.745,1136,6.893,1137,5.4,1138,5.276,1139,5.276]],["title/classes/NewsMapper.html",[0,0.099,1092,3.3]],["body/classes/NewsMapper.html",[0,0.1,2,0.938,3,0.219,4,0.182,5,0.135,10,0.409,15,2.344,16,0.527,17,1.516,22,0.873,24,1.53,25,0.01,26,1.171,27,1.139,37,1.788,39,0.461,43,0.206,55,0.005,56,0.007,57,0.005,73,1.984,80,1.571,81,0.938,138,2.491,139,2.908,140,3.304,144,1.351,147,0.988,358,2.639,359,1.907,360,2.655,362,2.943,364,1.739,367,3.865,438,4.832,441,3.982,587,2.841,622,3.607,786,4.515,792,4.786,794,4.832,795,2.809,1062,5.122,1075,5.122,1091,5.122,1092,4.519,1140,3.979,1141,6.095,1142,6.095,1143,4.519,1144,6.095,1145,6.095,1146,4.522,1147,6.095,1148,4.522,1149,6.095,1150,4.522,1151,6.095,1152,4.522,1153,3.353,1154,3.353,1155,6.095,1156,3.353,1157,3.353,1158,3.979,1159,4.522,1160,4.522,1161,4.522,1162,4.522,1163,4.522,1164,3.979,1165,4.522,1166,4.522,1167,4.522,1168,4.522,1169,4.522,1170,4.522,1171,4.522,1172,3.979,1173,4.522,1174,4.522,1175,4.522,1176,4.522,1177,4.522,1178,4.522,1179,4.522,1180,3.979,1181,4.522,1182,3.979,1183,4.522,1184,4.522,1185,3.979,1186,6.095,1187,4.522,1188,4.522,1189,4.522,1190,4.522,1191,6.095,1192,6.095,1193,6.095,1194,4.522,1195,4.522]],["title/modules/NewsModule.html",[84,1.197,1196,3.09]],["body/modules/NewsModule.html",[0,0.122,3,0.265,4,0.221,5,0.164,25,0.01,39,0.523,41,1.263,43,0.25,55,0.006,56,0.008,57,0.006,84,2.036,86,2.049,87,2.472,88,3.104,89,3.104,90,2.857,91,3.194,92,3.529,96,3.911,97,2.975,98,2.472,111,3.465,113,3.465,114,5.479,202,2.65,301,4.951,762,3.595,996,3.81,1047,5.894,1052,3.81,1086,5.485,1087,4.829,1196,6.156,1197,4.829,1198,4.829,1199,4.829,1200,5.489,1201,5.197,1202,5.489,1203,4.829,1204,5.489,1205,5.489,1206,4.829,1207,5.489,1208,3.595,1209,3.595,1210,6.085,1211,5.489,1212,5.489,1213,5.489,1214,3.595]],["title/injectables/NewsRepo.html",[127,1.197,1201,2.765]],["body/injectables/NewsRepo.html",[0,0.083,3,0.182,4,0.151,5,0.112,8,1.561,10,0.34,13,1.89,16,0.551,17,1.334,22,0.933,24,1.599,25,0.01,26,1.224,27,1.19,30,3.139,37,1.911,39,0.502,41,0.866,43,0.172,55,0.004,56,0.006,57,0.004,73,2.015,80,1.331,81,0.78,127,1.443,128,1.694,130,3.236,137,2.621,147,0.822,149,2.986,156,2.59,161,1.155,164,3.389,166,2.786,184,1.3,192,1.561,193,1.404,209,1.787,222,1.681,223,2.026,231,5.473,233,3.884,234,5.006,235,5.006,236,4.34,237,5.006,242,3.012,243,5.163,245,3.855,246,4.234,247,3.978,248,3.332,249,3.978,250,5.006,251,3.012,252,5.999,254,2.914,256,3.012,258,4.295,259,3.012,358,2.748,359,1.587,361,2.793,364,2.621,366,3.332,443,2.908,504,2.816,529,2.128,584,4.095,587,2.5,618,2.59,623,3.034,626,2.793,795,4.234,796,3.389,818,5.05,821,2.908,941,4.537,1050,4.636,1072,3.332,1073,4.72,1103,4.295,1104,4.72,1201,3.332,1215,3.31,1216,5.365,1217,5.365,1218,3.762,1219,4.464,1220,3.762,1221,5.365,1222,5.997,1223,3.762,1224,5.365,1225,3.762,1226,5.365,1227,4.72,1228,5.365,1229,3.724,1230,3.31,1231,3.31,1232,3.31,1233,3.31,1234,3.31,1235,2.612,1236,2.789,1237,3.31,1238,5.365,1239,3.762,1240,3.724,1241,3.762,1242,3.762,1243,5.365,1244,3.762,1245,3.762,1246,3.762,1247,3.31,1248,3.762]],["title/classes/NewsResponse.html",[0,0.099,1091,3.09]],["body/classes/NewsResponse.html",[0,0.082,2,0.765,3,0.178,4,0.316,5,0.11,10,0.333,11,0.961,15,2.75,16,0.616,22,0.997,25,0.01,27,1.149,32,1.43,39,0.422,43,0.168,55,0.004,56,0.006,57,0.004,61,3.047,73,1.663,138,2.527,139,2.608,140,3.351,141,3.22,144,2.291,146,2.649,147,1.914,153,3.671,184,1.858,186,2.325,217,3.097,218,2.699,220,3.097,358,2.993,359,2.849,360,3.115,361,3.219,362,2.985,364,2.862,365,4.049,366,3.841,389,1.998,390,2.182,394,4.196,447,4.233,448,3.129,449,4.233,450,3.92,453,4.689,454,4.689,455,4.196,458,4.292,459,4.233,460,2.99,463,4.903,464,1.847,468,2.559,469,3.841,470,3.841,764,4.233,915,3.285,1052,3.671,1091,3.671,1132,5.008,1249,2.733,1250,6.392,1251,3.687,1252,5.942,1253,3.687,1254,4.964,1255,3.687,1256,3.687,1257,3.687,1258,3.92,1259,3.687,1260,4.292,1261,4.652,1262,3.687,1263,5.439,1264,3.687,1265,4.95,1266,3.687,1267,5.288,1268,3.687,1269,2.952,1270,3.687,1271,3.687,1272,3.687,1273,3.687,1274,3.687,1275,3.92,1276,3.687,1277,5.288,1278,3.687,1279,3.687]],["title/classes/NewsScope.html",[0,0.099,1240,3.09]],["body/classes/NewsScope.html",[0,0.104,2,0.973,3,0.227,4,0.189,5,0.14,10,0.424,11,1.136,16,0.535,17,1.554,22,0.923,24,1.457,25,0.01,26,1.115,27,1.084,37,1.702,39,0.468,43,0.214,55,0.007,56,0.007,57,0.005,73,1.889,80,1.66,81,0.973,138,1.917,143,2.543,147,1.025,192,1.365,193,1.751,218,1.701,222,1.262,223,1.52,358,2.14,359,1.979,362,2.265,504,3.612,521,4.876,529,2.653,584,3.072,587,3.875,591,3.756,668,3.257,795,3.881,796,3.807,988,3.386,1025,3.881,1219,4.904,1222,7.316,1240,5.568,1280,6.421,1281,4.128,1282,7.024,1283,6.247,1284,6.247,1285,6.247,1286,5.496,1287,4.692,1288,6.247,1289,4.692,1290,6.247,1291,4.692,1292,6.247,1293,4.692,1294,4.692,1295,4.692,1296,5.001,1297,4.692,1298,6.247,1299,4.692,1300,4.692,1301,4.091,1302,4.692,1303,4.692,1304,4.692,1305,6.247,1306,4.692,1307,4.692,1308,3.072,1309,4.692,1310,4.692,1311,6.247,1312,4.692,1313,4.692,1314,4.692]],["title/interfaces/NewsTargetFilter.html",[413,0.876,1219,2.915]],["body/interfaces/NewsTargetFilter.html",[3,0.312,4,0.26,5,0.192,10,0.583,11,1.388,16,0.546,25,0.01,39,0.477,43,0.294,55,0.007,56,0.009,57,0.007,137,3.231,138,3.434,139,3.544,147,1.409,161,1.98,359,2.72,413,1.27,590,6.23,596,2.408,1219,4.998,1280,5.163,1315,5.674]],["title/injectables/NewsUc.html",[127,1.197,1086,2.765]],["body/injectables/NewsUc.html",[0,0.056,3,0.122,4,0.102,5,0.075,10,0.228,16,0.536,17,0.988,19,0.889,22,0.871,24,1.526,25,0.01,26,1.168,27,1.136,32,0.824,37,1.898,39,0.437,41,0.581,43,0.115,55,0.003,56,0.004,57,0.003,61,0.889,73,2.168,80,1.566,81,0.523,120,3.989,127,1.068,128,1.136,130,3.136,137,3.349,138,3.006,139,2.352,140,3.654,141,3.484,144,1.666,146,1.264,147,0.551,148,4.588,149,2.84,161,0.774,163,1.493,164,4.245,166,3.384,184,1.783,218,1.782,222,0.678,223,1.593,227,2.291,233,2.468,353,2.068,358,2.92,359,2.717,361,1.313,362,1.918,364,0.97,367,2.213,381,3.499,382,2.468,387,2.929,424,1.136,425,1.176,426,1.136,427,1.099,460,1.427,468,1.751,504,3.527,505,3.51,518,2.22,529,1.427,552,3.181,561,3.496,584,4.415,590,2.946,594,1.871,618,1.918,622,4.253,623,2.247,626,3.636,719,2.153,777,1.367,783,1.427,786,3.652,792,3.871,794,4.415,795,3.768,796,2.664,803,2.468,818,3.652,821,1.367,854,2.068,915,1.567,941,3.154,988,1.367,1052,3.412,1086,2.468,1103,3.181,1130,3.412,1158,2.22,1164,2.22,1172,4.906,1185,3.496,1201,4.002,1203,2.22,1219,2.602,1235,1.751,1236,1.871,1316,2.02,1317,3.973,1318,3.973,1319,3.973,1320,3.973,1321,4.915,1322,2.523,1323,2.523,1324,3.973,1325,2.523,1326,3.973,1327,2.523,1328,3.973,1329,2.523,1330,3.973,1331,2.523,1332,3.973,1333,2.523,1334,2.523,1335,3.973,1336,2.523,1337,2.758,1338,2.523,1339,4.915,1340,2.523,1341,3.973,1342,2.523,1343,2.523,1344,2.523,1345,3.181,1346,4.464,1347,2.523,1348,2.22,1349,2.523,1350,5.576,1351,2.523,1352,2.523,1353,3.973,1354,2.523,1355,4.906,1356,2.523,1357,2.523,1358,2.523,1359,3.973,1360,2.523,1361,3.973,1362,2.523,1363,3.973,1364,2.523,1365,2.523,1366,1.367,1367,4.915,1368,2.523,1369,3.973,1370,2.523,1371,2.523,1372,5.576,1373,2.523,1374,2.22,1375,2.02,1376,2.523,1377,2.523,1378,2.523,1379,2.523,1380,2.22,1381,3.973,1382,2.523,1383,2.523,1384,2.523,1385,3.973,1386,2.523,1387,2.523,1388,2.523,1389,2.523,1390,2.523]],["title/classes/PaginationQuery.html",[0,0.099,1063,2.915]],["body/classes/PaginationQuery.html",[0,0.158,2,1.195,3,0.279,4,0.232,5,0.172,10,0.521,11,1.296,16,0.51,22,0.844,25,0.01,27,1.248,29,3.461,39,0.446,43,0.263,55,0.006,56,0.008,57,0.006,61,2.512,186,1.968,222,1.917,223,2.31,464,2.886,467,3.579,780,5.707,824,4.809,825,5.163,988,3.864,1025,4.428,1063,4.668,1132,5.739,1227,6.272,1391,5.069,1392,5.997,1393,5.762,1394,3.442,1395,6.272,1396,7.129,1397,7.129,1398,7.129,1399,5.762,1400,5.762,1401,6.272,1402,5.762,1403,7.741,1404,5.069,1405,5.762,1406,5.762,1407,5.762,1408,5.762]],["title/classes/PaginationResponse.html",[0,0.099,1084,2.915]],["body/classes/PaginationResponse.html",[0,0.123,2,1.151,3,0.268,4,0.223,5,0.166,10,0.502,11,1.266,16,0.588,19,1.955,22,0.973,24,1.151,25,0.01,26,0.88,27,1.269,29,3.653,39,0.347,43,0.253,55,0.006,56,0.008,57,0.006,186,2.203,243,5.383,463,5.139,464,2.779,623,3.938,766,3.969,824,5.289,825,5.289,1084,4.559,1409,4.88,1410,5.575,1411,6.962,1412,5.547,1413,5.547,1414,5.547,1415,5.547,1416,5.547,1417,5.547,1418,5.547,1419,5.547,1420,5.547]],["title/injectables/ParseObjectIdPipe.html",[127,1.197,1081,3.09]],["body/injectables/ParseObjectIdPipe.html",[0,0.135,3,0.294,4,0.245,5,0.182,10,0.55,16,0.435,17,1.834,22,0.72,24,1.262,25,0.01,26,0.966,27,0.939,32,1.416,37,1.475,39,0.496,41,1.401,43,0.278,55,0.007,56,0.008,57,0.007,73,1.637,80,1.296,81,1.262,127,1.982,128,2.741,137,2.34,161,1.868,176,3.442,185,3.109,192,1.771,194,3.442,223,2.389,519,3.986,767,4.828,1081,5.118,1421,6.486,1422,3.995,1423,4.872,1424,7.372,1425,6.086,1426,7.372,1427,6.086,1428,7.372,1429,6.086,1430,6.086]],["title/classes/SchoolInfo.html",[0,0.099,386,2.412]],["body/classes/SchoolInfo.html",[0,0.128,2,1.202,3,0.28,4,0.233,5,0.173,8,2.081,10,0.524,11,1.3,16,0.606,19,2.041,22,0.959,24,1.202,25,0.01,26,1.321,27,0.894,30,3.116,32,1.359,39,0.447,43,0.264,45,2.609,55,0.007,56,0.008,57,0.007,147,1.563,161,1.778,181,3.201,183,3.017,184,1.734,185,2.443,186,2.142,187,2.7,189,2.7,191,3.075,192,1.686,193,2.163,229,2.797,230,2.797,343,3.428,349,4.022,350,4.045,351,4.233,352,5.303,353,3.016,354,4.638,355,4.638,386,3.877,789,3.794,1431,6.827]],["title/classes/SchoolInfoMapper.html",[0,0.099,1154,3.3]],["body/classes/SchoolInfoMapper.html",[0,0.138,2,1.287,3,0.3,4,0.25,5,0.185,10,0.561,16,0.444,17,1.855,22,0.735,24,1.287,25,0.01,26,0.985,27,0.958,37,1.504,39,0.467,43,0.283,55,0.007,56,0.008,57,0.007,73,1.669,80,1.321,81,1.287,147,1.356,367,3.602,386,4.6,441,3.602,1143,5.531,1153,4.602,1154,5.531,1157,4.602,1260,5.76,1432,6.563,1433,4.969,1434,7.46,1435,5.461,1436,6.207,1437,5.461,1438,6.207]],["title/classes/SchoolInfoResponse.html",[0,0.099,1260,3.09]],["body/classes/SchoolInfoResponse.html",[0,0.136,2,1.27,3,0.296,4,0.246,5,0.183,10,0.554,11,1.345,16,0.529,22,0.876,25,0.01,26,1.342,32,1.385,39,0.383,43,0.279,55,0.007,56,0.008,57,0.007,61,2.801,147,1.805,184,2.049,186,2.042,364,3.176,453,5.136,454,5.136,463,4.705,464,3.067,470,3.803,1250,4.901,1260,5.136,1269,4.901,1439,6.995,1440,4.901,1441,5.386,1442,5.386]],["title/classes/SchoolNews.html",[0,0.099,436,2.634]],["body/classes/SchoolNews.html",[0,0.131,2,0.581,3,0.135,4,0.256,5,0.084,8,1.853,10,0.253,11,0.783,15,2.586,16,0.604,17,1.072,22,1.015,24,0.581,25,0.01,26,0.834,27,1.145,30,3.723,32,1.387,37,0.679,39,0.438,43,0.291,45,1.261,55,0.003,56,0.005,57,0.003,80,0.596,81,1.453,137,2.449,138,2.863,139,2.837,141,2.366,144,0.837,147,1.392,161,0.86,165,1.834,181,2.449,183,3.05,184,1.836,185,2.488,186,2.351,187,2.749,189,2.749,191,3.256,192,0.815,193,1.045,197,3.247,204,2.631,209,1.75,217,2.955,218,2.541,220,2.955,222,1.713,223,2.064,226,2.437,227,2.008,229,1.352,230,1.352,254,1.305,272,2.437,293,1.834,323,1.11,335,3.19,337,1.657,338,1.657,339,1.657,340,1.657,341,3.491,345,1.834,346,2.971,347,2.437,350,1.584,353,2.735,356,1.584,357,1.834,358,3.025,359,3.299,360,2.93,361,3.315,362,2.848,363,4.095,364,2.586,365,3.863,366,3.664,367,2.366,368,3.195,369,4.483,371,2.242,372,2.822,373,3.263,374,2.822,375,2.242,376,2.242,377,2.992,378,3.863,379,2.992,380,2.822,381,2.159,382,2.677,383,2.992,384,2.242,385,2.242,386,3.452,387,2.081,388,2.242,389,2.847,390,3.108,391,2.242,392,2.242,393,2.242,394,2.677,395,2.242,396,2.677,397,2.242,398,2.992,399,2.242,400,2.242,401,2.242,402,2.242,403,2.242,404,2.242,405,2.242,406,2.992,407,3.956,408,2.242,409,3.863,410,1.944,411,2.437,412,1.518,413,0.551,414,1.944,415,1.944,416,1.944,417,1.944,418,1.944,419,1.944,420,1.944,421,1.944,422,1.944,423,2.992,424,2.366,425,2.448,426,2.366,427,2.288,428,2.366,429,3.108,430,2.735,431,1.944,432,2.992,433,1.944,434,1.944,435,3.647,436,2.55,437,1.657,1443,2.8]],["title/controllers/ServerController.html",[471,2.074,1444,3.3]],["body/controllers/ServerController.html",[0,0.141,3,0.308,4,0.256,5,0.19,10,0.576,17,1.885,22,0.754,25,0.01,32,1.271,37,1.544,39,0.398,41,1.466,43,0.291,47,2.869,55,0.007,56,0.009,57,0.007,80,1.356,113,3.191,186,1.759,222,2.037,471,3.531,475,7.363,477,4.962,478,3.658,479,5.26,480,3.944,490,4.723,491,2.969,1444,5.618,1445,5.605,1446,6.371]],["title/modules/ServerModule.html",[84,1.197,1447,3.09]],["body/modules/ServerModule.html",[0,0.107,3,0.234,4,0.195,5,0.144,16,0.346,25,0.01,32,0.811,39,0.545,41,1.113,43,0.221,52,2.518,55,0.005,56,0.007,57,0.005,80,1.03,81,1.003,84,1.917,85,5.616,86,1.805,87,2.178,88,2.735,89,2.735,90,2.518,91,2.04,92,2.254,96,3.605,97,2.621,98,2.178,111,3.193,113,3.193,144,1.445,156,2.335,192,1.855,193,1.805,207,1.977,296,5.616,323,2.526,335,3.193,347,3.605,356,3.605,358,2.184,386,3.455,409,4.174,411,3.605,424,2.178,425,2.254,426,2.178,427,2.107,428,2.178,436,3.772,437,3.772,569,3.872,649,5.103,650,5.103,651,5.103,730,3.872,731,3.872,732,3.872,897,3.96,941,3.605,945,2.621,949,3.586,951,3.586,953,3.605,960,3.357,962,3.357,963,3.872,1196,5.616,1444,5.286,1447,6.02,1448,4.255,1449,4.255,1450,5.616,1451,4.837,1452,6.375,1453,6.375,1454,4.837,1455,4.837,1456,4.837,1457,4.837,1458,4.837,1459,3.078,1460,4.174,1461,4.837,1462,4.837,1463,4.837,1464,4.837,1465,4.837,1466,3.167,1467,4.837,1468,4.837,1469,6.375,1470,4.837,1471,3.872,1472,3.167]],["title/classes/Submission.html",[0,0.099,1460,2.915]],["body/classes/Submission.html",[0,0.116,2,1.089,3,0.254,4,0.211,5,0.157,8,1.956,10,0.475,11,1.222,16,0.591,22,1.008,25,0.01,30,3.603,32,1.127,39,0.489,43,0.24,55,0.006,56,0.008,57,0.006,81,1.395,147,1.469,161,1.611,162,3.644,181,2.585,183,3.298,184,1.895,185,2.836,186,2.351,187,3.133,189,3.133,191,2.08,192,1.528,193,1.96,197,4.06,217,3.368,218,2.438,220,3.368,222,1.808,223,2.179,226,2.969,227,2.446,229,2.535,230,2.535,335,3.716,337,3.106,338,3.106,339,3.106,340,3.106,343,3.106,346,3.802,369,4.389,373,4.176,1459,3.581,1460,4.403,1473,4.619,1474,5.938,1475,5.149,1476,6.723,1477,5.25,1478,6.723,1479,5.25,1480,5.25,1481,4.619]],["title/classes/Task.html",[0,0.099,1459,2.149]],["body/classes/Task.html",[0,0.108,2,1.011,3,0.236,4,0.196,5,0.145,8,1.864,10,0.441,11,1.165,16,0.606,22,1.021,25,0.01,26,1.136,27,1.251,30,3.531,32,1.275,39,0.475,43,0.222,55,0.005,56,0.007,57,0.005,81,1.329,147,1.4,161,1.496,181,2.464,183,3.206,184,1.842,185,2.702,186,2.381,187,2.986,189,2.986,191,3.323,192,1.418,193,1.819,197,3.99,217,3.21,218,2.757,220,3.21,222,1.723,223,2.076,226,2.757,227,2.271,229,2.353,230,2.353,323,3.213,337,2.884,338,2.884,339,2.884,340,2.884,343,2.884,346,3.623,369,4.235,373,3.98,504,3.223,796,3.473,897,5.036,900,5.637,903,4.288,1459,3.094,1482,4.288,1483,5.73,1484,4.874,1485,4.874,1486,6.407,1487,4.874,1488,4.874,1489,4.874,1490,4.874,1491,4.288]],["title/controllers/TaskController.html",[471,2.074,1492,3.3]],["body/controllers/TaskController.html",[0,0.116,3,0.253,4,0.211,5,0.156,10,0.473,12,2.621,16,0.374,17,1.669,22,0.619,24,1.085,25,0.01,26,0.83,27,1.036,37,1.268,39,0.538,41,1.204,43,0.239,55,0.008,56,0.008,57,0.006,73,2.1,80,1.114,81,1.085,113,2.621,130,2.764,149,2.433,163,3.096,166,2.138,186,1.444,207,2.138,441,2.526,464,2.621,471,2.438,587,3.64,781,3.25,783,2.959,797,4.622,824,4.167,825,4.167,880,3.879,1049,4.603,1050,5.491,1056,5.422,1061,4.603,1063,5.629,1070,3.096,1080,4.603,1084,3.426,1085,4.603,1088,3.879,1089,4.603,1090,4.603,1095,4.603,1110,3.879,1410,4.393,1422,2.836,1459,2.526,1492,4.974,1493,4.603,1494,6.709,1495,5.232,1496,5.232,1497,4.85,1498,4.603,1499,3.632,1500,3.879,1501,5.232,1502,3.879,1503,5.232,1504,4.603,1505,4.603,1506,3.25,1507,6.709,1508,5.232,1509,5.232,1510,3.426,1511,5.232,1512,5.232,1513,5.232,1514,5.232,1515,5.232]],["title/classes/TaskMapper.html",[0,0.099,1500,3.3]],["body/classes/TaskMapper.html",[0,0.134,2,1.255,3,0.293,4,0.243,5,0.181,10,0.547,16,0.433,17,1.827,22,0.716,24,1.255,25,0.01,26,0.96,27,0.934,37,1.466,39,0.459,43,0.276,55,0.007,56,0.008,57,0.007,73,1.627,80,1.288,81,1.255,147,1.322,367,3.562,441,3.547,1143,5.447,1153,4.486,1157,4.486,1180,5.323,1182,5.323,1437,5.323,1459,4.07,1499,5.711,1500,5.447,1516,5.323,1517,7.346,1518,6.051,1519,6.051,1520,6.051,1521,6.051,1522,6.051,1523,6.051,1524,6.051,1525,6.051,1526,6.051,1527,6.051,1528,6.051]],["title/modules/TaskModule.html",[84,1.197,1450,3.09]],["body/modules/TaskModule.html",[0,0.136,3,0.297,4,0.247,5,0.183,25,0.01,39,0.517,41,1.412,43,0.28,55,0.007,56,0.008,57,0.007,84,2.14,86,2.29,87,2.762,88,3.469,89,3.469,90,3.193,91,3.356,92,2.858,96,4.189,97,3.324,98,2.762,113,3.71,1450,6.09,1492,5.9,1497,5.629,1498,5.396,1529,5.396,1530,5.396,1531,5.629,1532,6.134,1533,6.134,1534,5.396]],["title/injectables/TaskRepo.html",[127,1.197,1531,2.915]],["body/injectables/TaskRepo.html",[0,0.083,3,0.181,4,0.15,5,0.111,8,1.553,10,0.338,13,1.881,16,0.514,17,1.327,22,0.885,24,1.491,25,0.01,26,1.141,27,1.109,30,3.131,37,1.812,39,0.467,41,0.86,43,0.17,52,1.944,55,0.004,56,0.006,57,0.004,73,2.01,80,0.795,81,0.775,127,1.435,128,1.682,130,3.128,137,2.613,144,1.116,147,0.816,148,3.375,149,2.79,156,2.577,161,1.146,166,2.777,184,0.905,192,1.087,193,1.394,207,3.055,209,1.778,218,1.354,222,1.827,223,2.202,227,1.741,231,5.462,233,3.869,234,4.986,235,4.986,236,4.323,237,4.986,242,2.99,243,5.153,245,3.522,246,4.221,247,3.957,248,3.315,249,3.957,250,4.986,251,2.99,252,5.984,254,3.166,256,2.99,258,2.99,259,2.99,323,2.693,326,2.769,358,1.279,504,1.682,529,3.018,587,1.741,589,2.024,594,3.957,821,2.893,823,4.45,824,3.315,825,3.315,897,3.869,899,2.769,910,2.593,914,2.21,948,1.944,1070,2.21,1230,3.286,1231,3.286,1232,3.286,1233,3.286,1234,3.286,1235,2.593,1236,2.769,1237,3.286,1240,2.593,1247,3.286,1258,2.769,1410,3.495,1459,3.007,1460,2.446,1475,2.593,1483,5.44,1510,2.446,1531,3.495,1535,3.286,1536,5.337,1537,5.337,1538,3.735,1539,3.735,1540,3.286,1541,3.735,1542,3.286,1543,2.769,1544,3.735,1545,2.593,1546,3.735,1547,4.273,1548,3.286,1549,2.769,1550,2.446,1551,2.99,1552,3.735,1553,2.593,1554,6.228,1555,3.735,1556,5.337,1557,3.735,1558,3.735,1559,3.735,1560,5.337,1561,3.735,1562,3.735,1563,5.337,1564,3.735,1565,2.99,1566,5.337,1567,3.735,1568,3.735,1569,2.446,1570,3.286,1571,3.735,1572,3.735,1573,3.735,1574,3.735,1575,4.273,1576,3.286,1577,3.286,1578,3.735,1579,3.735,1580,3.735]],["title/classes/TaskResponse.html",[0,0.099,1499,3.09]],["body/classes/TaskResponse.html",[0,0.12,2,1.127,3,0.263,4,0.219,5,0.162,10,0.491,11,1.249,16,0.606,22,1.003,25,0.01,26,1.196,27,1.288,32,1.451,39,0.34,43,0.248,47,3.094,55,0.006,56,0.008,57,0.006,61,1.914,184,1.826,186,2.339,217,3.775,218,3.026,220,3.775,441,3.317,443,3.724,463,5.277,464,2.721,1459,3.317,1483,6.033,1499,4.77,1581,4.779,1582,6.045,1583,4.066,1584,7.536,1585,7.536,1586,5.432,1587,5.432,1588,5.432,1589,5.432,1590,5.432,1591,5.432,1592,5.432,1593,4.027]],["title/injectables/TaskUC.html",[127,1.197,1497,2.915]],["body/injectables/TaskUC.html",[0,0.124,3,0.27,4,0.225,5,0.167,10,0.505,16,0.5,17,1.739,19,1.969,22,0.828,24,1.451,25,0.01,26,1.11,27,1.079,37,1.354,39,0.515,41,1.286,43,0.255,55,0.006,56,0.008,57,0.006,73,1.502,80,1.189,127,1.881,128,2.516,130,2.85,137,3.076,141,2.516,144,1.67,147,1.221,148,3.028,149,2.536,161,1.715,163,3.306,166,2.283,206,3.16,207,3.12,529,3.16,821,4.336,823,5.239,1235,3.878,1236,4.142,1410,4.58,1459,2.698,1497,4.58,1510,5.239,1531,5.503,1534,4.915,1548,4.915,1594,4.915,1595,6.994,1596,5.587,1597,5.587,1598,6.994,1599,5.587,1600,4.473,1601,3.878,1602,5.587,1603,4.142,1604,4.142,1605,4.915,1606,3.878,1607,5.587]],["title/classes/TeamInfo.html",[0,0.099,411,2.517]],["body/classes/TeamInfo.html",[0,0.128,2,1.202,3,0.28,4,0.233,5,0.173,8,2.081,10,0.524,11,1.3,16,0.606,19,2.041,22,0.959,24,1.202,25,0.01,26,1.321,27,0.894,30,3.116,32,1.359,39,0.447,43,0.264,45,2.609,55,0.007,56,0.008,57,0.007,147,1.563,161,1.778,181,3.201,183,3.017,184,1.734,185,2.443,186,2.142,187,2.7,189,2.7,191,3.075,192,1.686,193,2.163,229,2.797,230,2.797,343,3.428,349,4.022,350,4.045,351,4.233,352,5.303,353,3.016,354,4.638,355,4.638,411,4.045,790,4.022,1608,6.827]],["title/classes/TeamNews.html",[0,0.099,437,2.634]],["body/classes/TeamNews.html",[0,0.131,2,0.581,3,0.135,4,0.256,5,0.084,8,1.853,10,0.253,11,0.783,15,2.586,16,0.604,17,1.072,22,1.015,24,0.581,25,0.01,26,0.834,27,1.145,30,3.723,32,1.387,37,0.679,39,0.438,43,0.291,45,1.261,55,0.003,56,0.005,57,0.003,80,0.596,81,1.453,137,2.449,138,2.863,139,2.837,141,2.366,144,0.837,147,1.392,161,0.86,165,1.834,181,2.449,183,3.05,184,1.836,185,2.488,186,2.351,187,2.749,189,2.749,191,3.256,192,0.815,193,1.045,197,3.247,204,2.631,209,1.75,217,2.955,218,2.541,220,2.955,222,1.713,223,2.064,226,2.437,227,2.008,229,1.352,230,1.352,254,1.305,272,2.437,293,1.834,323,1.11,335,3.19,337,1.657,338,1.657,339,1.657,340,1.657,341,3.491,345,1.834,346,2.971,347,2.437,350,1.584,353,2.735,356,1.584,357,1.834,358,3.025,359,3.299,360,2.93,361,3.315,362,2.848,363,4.095,364,2.586,365,3.863,366,3.664,367,2.366,368,3.195,369,4.483,371,2.242,372,2.822,373,3.263,374,2.822,375,2.242,376,2.242,377,2.992,378,3.863,379,2.992,380,2.822,381,2.159,382,2.677,383,2.992,384,2.242,385,2.242,386,3.197,387,2.081,388,2.242,389,2.847,390,3.108,391,2.242,392,2.242,393,2.242,394,2.677,395,2.242,396,2.677,397,2.242,398,2.992,399,2.242,400,2.242,401,2.242,402,2.242,403,2.242,404,2.242,405,2.242,406,2.992,407,3.956,408,2.242,409,3.863,410,1.944,411,2.971,412,1.518,413,0.551,414,1.944,415,1.944,416,1.944,417,1.944,418,1.944,419,1.944,420,1.944,421,1.944,422,1.944,423,2.992,424,2.366,425,2.448,426,2.366,427,2.288,428,2.366,429,3.108,430,2.735,431,1.944,432,2.992,433,1.944,434,1.944,435,3.647,436,1.657,437,2.55,1609,2.8]],["title/injectables/TimeoutInterceptor.html",[127,1.197,857,3.3]],["body/injectables/TimeoutInterceptor.html",[0,0.109,3,0.238,4,0.198,5,0.147,10,0.444,11,1.171,16,0.514,17,1.602,22,0.937,24,1.336,25,0.01,26,1.022,27,1.177,29,3.32,37,1.561,39,0.477,41,1.13,43,0.224,55,0.006,56,0.007,57,0.006,61,1.731,80,1.623,106,3.933,127,1.732,128,2.212,222,1.321,223,1.592,367,3.235,424,2.212,425,2.289,426,3.434,427,2.14,428,2.212,429,2.907,471,3.001,481,4.775,486,5.156,493,4.217,504,3.235,506,5.666,507,5.666,508,5.654,509,6.709,511,2.461,512,6.321,515,3.933,517,4.322,519,3.217,606,3.352,607,3.109,633,3.933,668,3.41,679,3.933,854,2.557,855,5.32,857,4.775,998,4.471,1031,6.321,1286,5.666,1610,4.322,1611,6.44,1612,4.471,1613,4.471,1614,4.217,1615,5.156,1616,7.185,1617,7.185,1618,4.912,1619,4.912,1620,5.327,1621,4.912,1622,4.912,1623,4.912,1624,4.912,1625,4.912,1626,6.44,1627,6.44,1628,4.912,1629,6.44,1630,4.912,1631,4.912,1632,4.912,1633,4.912,1634,4.912,1635,4.912,1636,4.912,1637,6.44,1638,4.912,1639,4.912]],["title/classes/UpdateNewsParams.html",[0,0.099,1075,3.09]],["body/classes/UpdateNewsParams.html",[0,0.175,2,1.123,3,0.262,4,0.218,5,0.162,10,0.49,11,1.438,15,3.138,16,0.538,22,0.891,25,0.01,27,1.058,32,1.326,39,0.429,43,0.247,55,0.006,56,0.008,57,0.006,61,2.787,147,1.822,186,2.077,218,2.486,358,2.935,360,3.555,362,3.633,440,4.013,441,3.31,443,3.716,445,4.762,447,5.489,448,4.057,449,5.489,450,5.083,464,2.712,465,6.031,466,6.024,467,3.363,759,4.49,791,4.759,1075,4.759,1132,5.864,1136,6.959,1640,6.959,1641,6.856,1642,6.856,1643,5.083,1644,4.759,1645,6.031,1646,6.856,1647,5.413,1648,5.413,1649,5.413]],["title/interfaces/User.html",[144,1.33,413,0.876]],["body/interfaces/User.html",[0,0.104,3,0.227,4,0.189,5,0.14,10,0.424,11,1.135,16,0.502,25,0.01,32,1.307,39,0.488,41,1.078,43,0.214,55,0.005,56,0.007,57,0.005,73,2.286,80,1.707,81,0.972,121,2.772,127,1.678,130,2.91,137,3.236,138,2.551,139,2.96,140,3.383,141,3.61,144,2.515,148,3.383,149,2.826,150,2.91,161,1.438,162,3.252,163,2.772,166,3.186,176,2.649,181,2.4,183,3.157,185,3.451,192,1.363,194,2.649,364,1.801,387,3.871,413,0.922,477,4.087,478,2.262,504,2.11,549,3.75,550,3.473,552,3.75,555,3.75,557,3.969,559,4.121,563,4.121,565,4.121,569,4.996,570,4.121,571,3.75,572,5.491,573,3.75,574,5.491,575,5.491,576,4.121,577,4.121,578,3.057,579,4.121,580,5.491,581,5.491,582,5.491,583,4.121,584,3.068,585,4.121,586,4.121,587,2.183,588,4.121,589,2.539,590,4.627,591,3.75,592,4.121,593,4.121,594,3.473,596,1.749]],["title/classes/UserInfo.html",[0,0.099,335,2.23]],["body/classes/UserInfo.html",[0,0.124,2,1.161,3,0.271,4,0.225,5,0.167,8,2.037,10,0.506,11,1.273,16,0.61,19,1.972,22,0.976,24,1.161,25,0.01,26,0.888,27,0.864,30,3.05,32,1.43,39,0.438,43,0.255,45,2.52,55,0.006,56,0.008,57,0.006,147,1.53,161,1.718,181,3.169,183,2.953,184,1.697,185,2.36,186,2.21,187,2.608,189,2.608,191,3.266,192,1.629,193,2.089,229,2.702,230,2.702,335,3.507,343,3.312,349,3.885,350,3.96,351,4.143,352,4.15,353,2.914,803,3.477,1650,7.043,1651,7.043,1652,7.043,1653,7.001,1654,5.597,1655,5.597,1656,5.597,1657,5.597]],["title/classes/UserInfoMapper.html",[0,0.099,1156,3.3]],["body/classes/UserInfoMapper.html",[0,0.137,2,1.28,3,0.298,4,0.248,5,0.184,10,0.558,16,0.441,17,1.849,22,0.73,24,1.28,25,0.01,26,0.979,27,0.952,37,1.495,39,0.465,43,0.281,55,0.007,56,0.008,57,0.007,73,1.659,80,1.314,81,1.28,147,1.348,335,4.245,367,3.592,441,3.589,1143,5.511,1153,4.575,1156,5.511,1157,4.575,1254,5.748,1433,4.94,1435,5.428,1658,6.54,1659,7.433,1660,6.17,1661,6.17,1662,6.17,1663,6.17,1664,6.17]],["title/classes/UserInfoResponse.html",[0,0.099,1254,3.09]],["body/classes/UserInfoResponse.html",[0,0.13,2,1.217,3,0.284,4,0.236,5,0.175,10,0.531,11,1.311,16,0.558,22,0.924,25,0.01,26,1.292,32,1.426,39,0.367,43,0.268,55,0.007,56,0.008,57,0.007,61,2.868,144,2.542,147,1.576,184,2.025,186,2.155,453,5.006,454,5.006,463,4.817,464,2.94,470,3.646,1250,5.773,1254,5.006,1269,4.699,1440,4.699,1441,5.164,1442,5.164,1651,6.867,1652,6.867,1665,7.162,1666,4.722,1667,6.344,1668,5.87]],["title/classes/ValidationErrorDetailResponse.html",[0,0.099,68,3.3]],["body/classes/ValidationErrorDetailResponse.html",[0,0.145,2,1.354,3,0.316,4,0.263,5,0.195,12,3.271,16,0.467,19,2.301,22,0.773,24,1.354,25,0.01,26,1.036,27,1.008,32,1.462,43,0.298,44,5.745,49,3.243,55,0.007,56,0.009,57,0.007,65,3.946,68,5.7,1669,6.764,1670,5.745,1671,6.53,1672,6.53,1673,6.155]],["title/modules/ValidationModule.html",[84,1.197,302,3.09]],["body/modules/ValidationModule.html",[0,0.145,3,0.316,4,0.263,5,0.195,25,0.01,39,0.512,41,1.506,43,0.299,55,0.007,56,0.009,57,0.007,84,2.07,86,2.443,91,2.76,302,5.344,316,6.773,484,3.872,495,3.407,534,5.239,751,5.708,1674,6.544,1675,6.544,1676,6.544]],["title/changelog.html",[1677,2.772,1678,2.595,1679,3.289]],["body/changelog.html",[0,0.049,2,0.845,3,0.032,4,0.027,5,0.134,10,0.061,13,1.044,14,0.364,22,0.261,25,0.003,26,0.279,27,0.272,29,0.511,37,0.426,39,0.11,47,2.504,48,1.859,49,2.345,51,1.221,52,0.349,53,0.777,55,0.001,56,0.003,57,0.002,65,1.968,80,0.143,81,1.153,84,0.473,87,0.564,92,0.313,97,0.678,98,0.564,125,0.85,130,0.25,141,1.478,143,0.364,144,2.07,146,0.336,148,0.678,149,0.638,150,0.417,153,0.466,156,1.066,157,1.305,164,0.364,166,0.274,176,0.379,184,0.535,196,0.497,201,0.417,202,2.346,205,0.537,208,2.078,209,1.498,211,2.859,213,0.869,214,0.82,218,1.074,222,0.701,223,0.406,233,1.619,245,0.708,246,1.619,247,0.497,249,0.497,254,0.313,264,0.497,274,0.364,275,0.466,276,0.708,277,1.675,278,0.82,279,0.292,304,0.417,308,0.537,310,2.531,312,2.339,323,1.174,326,2.648,328,0.397,341,1.306,344,1.371,360,0.766,361,0.916,364,2.536,380,0.439,381,1.921,387,0.324,389,0.954,396,0.417,412,1.412,413,0.132,424,0.792,425,0.583,428,0.564,430,0.349,442,1.305,443,0.678,448,1.752,455,0.777,460,1.248,477,3.181,478,2.074,479,0.869,480,1.542,490,0.497,491,2.002,495,0.916,503,0.439,511,0.336,521,4.621,529,0.995,530,0.324,540,1.221,542,0.537,544,1.306,545,0.528,546,0.708,547,0.439,573,1.002,578,3.162,587,1.214,589,0.678,605,0.379,606,0.349,607,1.724,608,2.113,610,1.939,614,1.38,618,1.066,622,0.397,626,0.349,628,0.417,630,0.537,632,2.219,646,0.466,652,0.537,655,1.248,656,0.439,660,0.497,680,0.537,681,0.928,683,0.439,685,0.466,687,0.777,698,0.466,702,1.002,712,1.446,714,0.869,719,2.078,733,0.497,734,1.305,743,0.537,755,1.752,757,0.537,758,1.767,759,1.706,762,2.149,763,1.221,764,2.859,766,1.968,775,2.371,777,2.209,780,0.537,781,1.093,783,0.379,789,3.181,790,1.532,791,0.466,801,1.809,802,2.648,803,4.331,804,0.928,805,0.869,807,0.497,815,1.221,821,0.678,832,1.093,852,0.417,854,1.542,855,0.439,856,3.07,858,0.417,866,0.497,870,0.537,880,1.305,882,2.627,884,1.532,897,0.777,904,1.548,910,5.288,912,0.497,915,1.093,917,4.508,921,0.59,924,1.942,941,0.379,944,0.537,945,3.972,948,1.356,953,0.379,954,0.954,956,2.149,958,6.708,962,0.869,965,0.869,972,0.741,983,0.439,985,0.497,988,0.678,995,0.928,996,1.532,997,2.278,998,0.466,999,1.305,1006,1.002,1009,0.537,1013,1.446,1014,0.466,1015,1.002,1016,0.869,1017,1.002,1025,1.093,1027,2.02,1052,2.056,1070,1.041,1072,1.093,1079,2.606,1110,0.497,1122,0.537,1128,2.606,1208,0.439,1209,0.82,1210,4.122,1214,0.82,1229,0.466,1258,1.305,1275,2.433,1301,0.82,1308,1.152,1337,0.466,1366,0.954,1374,0.59,1375,2.086,1392,4.288,1394,1.066,1395,0.59,1404,0.59,1422,1.196,1459,0.604,1460,0.82,1466,1.706,1471,1.409,1472,0.439,1474,3.07,1475,0.466,1481,1.548,1491,1.548,1502,0.928,1506,0.777,1510,0.82,1540,0.59,1543,0.497,1545,0.869,1547,2.371,1550,1.152,1565,1.002,1569,0.82,1570,1.101,1575,0.537,1582,0.59,1583,1.306,1593,0.928,1600,0.537,1601,0.466,1606,0.869,1612,0.869,1613,0.869,1620,0.497,1643,2.196,1644,1.532,1666,1.152,1667,1.548,1673,1.002,1679,2.606,1680,0.671,1681,1.221,1682,1.002,1683,0.59,1684,0.671,1685,0.671,1686,1.76,1687,1.002,1688,3.484,1689,5.561,1690,4.138,1691,0.671,1692,7.901,1693,0.671,1694,0.671,1695,0.671,1696,1.101,1697,0.671,1698,0.671,1699,1.76,1700,1.002,1701,0.671,1702,0.397,1703,0.671,1704,1.76,1705,2.039,1706,1.101,1707,4.858,1708,0.671,1709,3.572,1710,3.262,1711,0.671,1712,0.497,1713,2.887,1714,0.537,1715,1.76,1716,0.671,1717,0.59,1718,0.59,1719,0.777,1720,0.59,1721,0.671,1722,7.185,1723,5.676,1724,2.196,1725,1.76,1726,0.671,1727,0.671,1728,0.671,1729,0.671,1730,0.439,1731,1.84,1732,0.671,1733,2.208,1734,0.671,1735,2.859,1736,0.671,1737,0.59,1738,0.59,1739,1.76,1740,0.671,1741,3.779,1742,1.252,1743,6.093,1744,1.548,1745,2.278,1746,1.221,1747,1.548,1748,1.101,1749,0.671,1750,1.409,1751,0.671,1752,2.292,1753,3.957,1754,6.723,1755,0.671,1756,4.685,1757,0.671,1758,0.671,1759,0.671,1760,4.075,1761,3.572,1762,0.671,1763,4.858,1764,0.671,1765,0.671,1766,3.282,1767,0.671,1768,2.606,1769,3.374,1770,0.671,1771,0.671,1772,1.767,1773,0.537,1774,0.671,1775,0.59,1776,0.671,1777,1.942,1778,0.671,1779,0.671,1780,1.76,1781,0.671,1782,1.942,1783,0.671,1784,1.932,1785,1.942,1786,0.671,1787,1.76,1788,1.101,1789,1.252,1790,1.252,1791,1.942,1792,1.252,1793,0.671,1794,0.59,1795,0.671,1796,1.252,1797,3.602,1798,1.252,1799,1.76,1800,1.76,1801,1.252,1802,1.548,1803,1.942,1804,0.671,1805,1.101,1806,0.671,1807,1.252,1808,1.101,1809,0.671,1810,5.019,1811,2.887,1812,2.962,1813,1.252,1814,0.671,1815,2.292,1816,0.671,1817,2.962,1818,3.282,1819,0.671,1820,0.671,1821,1.252,1822,0.671,1823,0.537,1824,0.59,1825,0.671,1826,0.671,1827,0.671,1828,0.59,1829,0.671,1830,1.76,1831,0.671,1832,0.59,1833,2.606,1834,2.292,1835,0.59,1836,0.671,1837,0.671,1838,0.671,1839,0.671,1840,1.76,1841,0.671,1842,0.671,1843,1.101,1844,0.671,1845,1.252,1846,0.671,1847,1.252,1848,0.671,1849,1.548,1850,1.002,1851,0.671,1852,0.671,1853,1.252,1854,1.252,1855,0.671,1856,5.175,1857,1.942,1858,0.671,1859,2.433,1860,0.671,1861,1.152,1862,0.671,1863,0.671,1864,2.371,1865,0.671,1866,0.671,1867,2.208,1868,3.835,1869,0.671,1870,3.262,1871,0.671,1872,0.671,1873,1.409,1874,1.101,1875,0.537,1876,0.671,1877,0.671,1878,0.671,1879,2.859,1880,1.252,1881,1.252,1882,1.252,1883,1.101,1884,1.252,1885,0.671,1886,1.548,1887,0.671,1888,0.671,1889,0.671,1890,0.671,1891,1.252,1892,0.671,1893,0.671,1894,1.101,1895,0.671,1896,0.671,1897,1.548,1898,1.942,1899,0.671,1900,0.671,1901,1.002,1902,0.671,1903,4.685,1904,0.671,1905,0.671,1906,0.671,1907,0.671,1908,5.019,1909,2.962,1910,1.252,1911,0.671,1912,0.671,1913,0.671,1914,0.671,1915,0.671,1916,0.671,1917,1.101,1918,0.671,1919,4.075,1920,0.671,1921,1.76,1922,2.606,1923,0.671,1924,1.548,1925,0.671,1926,0.671,1927,1.101,1928,0.671,1929,0.671,1930,2.606,1931,1.101,1932,0.671,1933,1.76,1934,0.671,1935,0.59,1936,0.671,1937,0.671,1938,1.252,1939,1.767,1940,0.671,1941,0.671,1942,1.101,1943,0.671,1944,0.671,1945,0.59,1946,0.928,1947,1.252,1948,1.932,1949,2.962,1950,0.671,1951,0.671,1952,0.671,1953,0.537,1954,1.252,1955,0.671,1956,1.252,1957,1.767,1958,1.252,1959,0.671,1960,0.671,1961,0.671,1962,0.671,1963,2.606,1964,0.59,1965,0.671,1966,1.252,1967,0.671,1968,0.59,1969,2.208,1970,1.002,1971,0.671,1972,1.252,1973,1.76,1974,1.939,1975,0.671,1976,0.671,1977,0.466,1978,0.671,1979,0.671,1980,1.252,1981,0.671,1982,1.619,1983,0.537,1984,0.671,1985,1.548,1986,0.671,1987,0.671,1988,1.76,1989,0.671,1990,0.671,1991,1.252,1992,1.76,1993,0.671,1994,0.671,1995,0.671,1996,0.671,1997,1.252,1998,0.671,1999,1.76,2000,1.101,2001,1.942,2002,0.671,2003,0.537,2004,0.671,2005,1.221,2006,1.252,2007,1.637,2008,0.671,2009,0.671,2010,0.671,2011,0.671,2012,1.76,2013,1.767,2014,0.671,2015,0.59,2016,0.671,2017,1.76,2018,2.606,2019,0.671,2020,0.671,2021,0.671,2022,1.76,2023,0.671,2024,0.671,2025,0.671,2026,1.252,2027,0.671,2028,1.548,2029,1.252,2030,0.671,2031,0.671,2032,0.671,2033,0.671,2034,0.671,2035,0.928,2036,0.497,2037,0.928,2038,0.497,2039,0.671,2040,0.671,2041,0.59,2042,1.101,2043,0.671,2044,0.671,2045,0.671,2046,4.858,2047,0.671,2048,1.76,2049,0.671,2050,0.671,2051,0.671,2052,2.208,2053,0.671,2054,1.252,2055,1.252,2056,0.671,2057,0.671,2058,0.671,2059,1.252,2060,0.671,2061,0.671,2062,0.671,2063,0.59,2064,0.59,2065,0.671,2066,0.671,2067,0.59,2068,0.671,2069,1.252,2070,0.59,2071,0.671,2072,0.671,2073,0.671,2074,0.671,2075,0.671,2076,0.671,2077,0.671,2078,0.671,2079,0.59,2080,0.671,2081,0.671,2082,0.671,2083,0.671,2084,0.671,2085,1.252,2086,0.671,2087,0.671,2088,1.76,2089,0.59,2090,1.252,2091,0.671,2092,1.446,2093,0.671,2094,1.252,2095,0.59,2096,0.671,2097,0.59,2098,0.671,2099,1.252,2100,0.671,2101,0.671,2102,0.671,2103,2.606,2104,0.671,2105,0.671,2106,0.537,2107,0.671,2108,0.671,2109,0.59,2110,0.671,2111,0.671,2112,0.671,2113,0.671,2114,0.671,2115,0.497,2116,0.671,2117,1.76,2118,0.671,2119,0.497,2120,0.671,2121,0.671,2122,0.671,2123,0.671,2124,0.995,2125,0.777,2126,1.76,2127,1.252,2128,0.671,2129,1.76,2130,0.671,2131,1.942,2132,0.671,2133,0.671,2134,0.671,2135,0.671,2136,0.671,2137,2.962,2138,0.671,2139,1.252,2140,0.671,2141,0.671,2142,1.252,2143,0.537,2144,1.252,2145,0.59,2146,1.409,2147,0.671,2148,0.671,2149,0.537,2150,0.671,2151,7.775,2152,2.887,2153,0.671,2154,0.671,2155,0.537,2156,0.671,2157,0.671,2158,0.671,2159,0.671,2160,0.671,2161,2.962,2162,0.671,2163,1.305,2164,0.671,2165,0.671,2166,0.671,2167,0.671,2168,0.671,2169,2.208,2170,2.208,2171,2.292,2172,1.532,2173,1.548,2174,2.606,2175,1.252,2176,1.252,2177,3.142,2178,1.637,2179,3.282,2180,1.101,2181,1.252,2182,1.221,2183,1.252,2184,1.002,2185,1.002,2186,1.252,2187,0.671,2188,0.671,2189,2.887,2190,0.537,2191,0.439,2192,2.606,2193,1.002,2194,0.671,2195,0.537,2196,0.466,2197,0.497,2198,0.671,2199,0.671,2200,0.59,2201,1.101,2202,0.671,2203,1.252,2204,0.671,2205,0.671,2206,1.101,2207,0.671,2208,0.671,2209,1.252,2210,0.671,2211,0.671,2212,1.252,2213,0.671,2214,0.671,2215,0.671,2216,0.59,2217,1.532,2218,0.671,2219,0.671,2220,1.101,2221,0.497,2222,0.671,2223,1.76,2224,2.086,2225,0.671,2226,0.59,2227,1.252,2228,0.671,2229,0.671,2230,0.59,2231,0.671,2232,3.374,2233,1.252,2234,0.671,2235,0.671,2236,0.671,2237,0.671,2238,0.671,2239,1.101,2240,1.101,2241,2.208,2242,1.767,2243,0.671,2244,1.76,2245,0.671,2246,0.671,2247,1.409,2248,0.671,2249,0.671,2250,0.671,2251,1.252,2252,1.76,2253,0.537,2254,0.671,2255,0.671,2256,0.671,2257,0.671,2258,1.252,2259,0.671,2260,1.002,2261,1.252,2262,0.671,2263,0.59,2264,0.671,2265,0.671,2266,0.671,2267,1.252,2268,0.671,2269,1.252,2270,0.671,2271,0.671,2272,0.671,2273,0.671,2274,0.671,2275,1.706,2276,1.76,2277,1.76,2278,1.637,2279,0.466,2280,2.086,2281,0.671,2282,1.76,2283,1.252,2284,0.439,2285,0.59,2286,0.671,2287,0.671,2288,0.59,2289,0.497,2290,1.252,2291,1.221,2292,1.76,2293,1.101,2294,0.671,2295,0.671,2296,0.59,2297,0.671,2298,0.671,2299,0.671,2300,1.809,2301,0.671,2302,0.671,2303,0.671,2304,0.671,2305,0.928,2306,0.671,2307,0.671,2308,0.671,2309,0.671,2310,0.671,2311,0.671,2312,1.252,2313,0.59,2314,0.537,2315,0.59,2316,0.671,2317,0.59,2318,0.671,2319,0.537,2320,1.002,2321,0.671,2322,1.409,2323,0.671,2324,0.671,2325,0.671,2326,1.252,2327,0.671,2328,0.671,2329,0.671,2330,0.671,2331,0.671,2332,1.002,2333,0.671,2334,0.671,2335,0.671,2336,0.671,2337,0.671,2338,2.208,2339,0.59,2340,0.671,2341,1.252,2342,0.671,2343,0.671,2344,1.252,2345,1.252,2346,1.252,2347,1.76,2348,1.76,2349,1.942,2350,1.252,2351,1.409,2352,1.002,2353,0.59,2354,0.466,2355,0.671,2356,0.537,2357,0.59,2358,0.671,2359,0.869,2360,0.671,2361,1.548,2362,0.671,2363,0.671,2364,0.671,2365,0.671,2366,1.809,2367,0.59,2368,0.671,2369,1.252,2370,1.002,2371,1.76,2372,1.101,2373,0.671,2374,0.671,2375,0.671,2376,1.252,2377,1.409,2378,1.101,2379,1.252,2380,0.671,2381,0.671,2382,0.671,2383,0.671,2384,0.671,2385,0.671,2386,0.671,2387,0.671,2388,0.671,2389,0.59,2390,0.59,2391,0.671,2392,0.671,2393,1.76,2394,0.671,2395,1.252,2396,0.671,2397,1.101,2398,0.671,2399,1.252,2400,0.671,2401,1.252,2402,0.671,2403,1.002,2404,0.671,2405,0.59,2406,0.671,2407,0.671,2408,0.59,2409,1.76,2410,2.208,2411,1.252,2412,0.82,2413,1.101,2414,1.252,2415,1.101,2416,1.252,2417,0.869,2418,0.671,2419,1.252,2420,0.59,2421,0.671,2422,1.252,2423,1.101,2424,0.671,2425,0.59,2426,0.671,2427,0.59,2428,0.671,2429,0.671,2430,1.252,2431,0.671,2432,0.671,2433,2.606,2434,1.002,2435,0.671,2436,3.572,2437,0.671,2438,0.59,2439,0.59,2440,0.671,2441,0.671,2442,0.671,2443,0.671,2444,2.208,2445,0.671,2446,0.671,2447,1.409,2448,0.671,2449,0.671,2450,0.671,2451,0.671,2452,0.59,2453,1.101,2454,0.671,2455,0.671,2456,0.671,2457,0.671,2458,1.002,2459,0.671,2460,0.671,2461,0.671,2462,0.671,2463,0.671,2464,0.671,2465,0.671,2466,0.671,2467,0.671,2468,0.671,2469,0.537,2470,0.671,2471,0.537,2472,0.671,2473,0.671,2474,0.59,2475,0.671,2476,0.497,2477,0.671,2478,0.671,2479,0.59,2480,0.671,2481,0.671,2482,0.671,2483,0.671,2484,0.671,2485,0.671,2486,0.671,2487,1.76,2488,0.537,2489,0.671,2490,0.537,2491,0.671,2492,0.671,2493,0.671,2494,0.671,2495,1.76,2496,0.671,2497,1.252,2498,1.76,2499,1.252,2500,1.252,2501,1.252,2502,1.252,2503,0.671,2504,1.252,2505,0.671,2506,0.671,2507,0.671,2508,0.671,2509,0.671,2510,0.59,2511,0.671,2512,1.252,2513,0.671,2514,0.671,2515,0.497,2516,0.671,2517,0.537,2518,0.671,2519,1.252,2520,0.671,2521,0.59,2522,0.671,2523,0.671,2524,0.671,2525,0.671,2526,0.537,2527,0.671,2528,0.671,2529,1.76,2530,1.76,2531,0.671,2532,1.101,2533,0.671,2534,0.671,2535,1.101,2536,0.671,2537,0.671,2538,0.671,2539,0.671,2540,0.671,2541,0.671,2542,0.671,2543,1.252,2544,0.671,2545,0.59,2546,0.671,2547,0.671,2548,0.671,2549,0.671,2550,0.671,2551,0.671,2552,0.671,2553,0.671,2554,0.671,2555,1.252,2556,1.252,2557,0.671,2558,0.59,2559,0.671,2560,0.671,2561,0.671,2562,1.252,2563,0.671,2564,0.671,2565,1.252,2566,0.671,2567,1.252,2568,0.671,2569,0.671,2570,1.252,2571,0.417,2572,2.208,2573,0.671,2574,0.671,2575,0.671,2576,0.671,2577,0.671,2578,0.928,2579,0.59,2580,0.59,2581,1.252,2582,0.671,2583,0.671,2584,1.252,2585,0.671,2586,0.671,2587,0.671,2588,0.671,2589,0.671,2590,1.252,2591,0.671,2592,0.671,2593,0.671,2594,0.671,2595,0.671,2596,0.671,2597,0.671,2598,1.76,2599,0.671,2600,0.671,2601,0.671,2602,0.671,2603,0.671,2604,0.671,2605,0.671,2606,0.671,2607,1.252,2608,1.252,2609,0.671,2610,0.671,2611,0.671,2612,2.208,2613,4.498,2614,1.252,2615,1.002,2616,1.101,2617,1.252,2618,2.208,2619,1.101,2620,1.252,2621,0.671,2622,1.252,2623,1.101,2624,1.252,2625,1.252,2626,1.252,2627,1.002,2628,1.252,2629,2.208,2630,1.252,2631,2.208,2632,1.252,2633,1.252,2634,1.101,2635,1.76,2636,1.252,2637,0.671,2638,0.671,2639,1.252,2640,0.928,2641,0.466,2642,1.252,2643,0.671,2644,2.606,2645,1.252,2646,0.671,2647,0.537,2648,0.671,2649,2.208,2650,0.671,2651,0.671,2652,0.671,2653,0.671,2654,0.671,2655,0.466,2656,0.59,2657,0.671,2658,0.671,2659,0.671,2660,1.252,2661,1.252,2662,1.252,2663,0.671,2664,0.671,2665,0.671,2666,0.59,2667,0.537,2668,0.671,2669,0.671,2670,1.252,2671,1.252,2672,0.671,2673,0.671,2674,0.671,2675,1.252,2676,0.497,2677,0.671,2678,0.671,2679,0.671,2680,1.252,2681,0.671,2682,1.76,2683,1.548,2684,0.671,2685,0.671,2686,0.537,2687,1.252,2688,1.252,2689,0.671,2690,0.497,2691,0.671,2692,1.76,2693,1.252,2694,0.671,2695,1.252,2696,0.537,2697,0.671,2698,1.252,2699,0.671,2700,0.671,2701,0.671,2702,2.208,2703,0.671,2704,0.671,2705,0.671,2706,0.671,2707,0.671,2708,0.671,2709,0.671,2710,1.252,2711,0.671,2712,0.671,2713,0.671,2714,0.59,2715,1.252,2716,0.671,2717,1.252,2718,0.671,2719,0.671,2720,0.537,2721,0.671,2722,1.252,2723,2.208,2724,0.671,2725,0.59,2726,0.671,2727,1.252,2728,1.252,2729,0.671,2730,0.671,2731,0.59,2732,1.252,2733,0.671,2734,0.671,2735,1.252,2736,0.537,2737,1.252,2738,0.671,2739,0.671,2740,0.671,2741,1.252,2742,1.252,2743,0.671,2744,0.671,2745,1.252,2746,0.671,2747,0.671,2748,0.671,2749,0.671,2750,1.252,2751,0.671,2752,0.671,2753,0.537,2754,0.671,2755,2.208,2756,0.537,2757,0.671,2758,0.671,2759,1.252,2760,0.59,2761,0.497,2762,1.252,2763,0.671,2764,2.606,2765,1.252,2766,0.497,2767,0.671,2768,0.671,2769,0.537,2770,0.671,2771,0.671,2772,0.671,2773,0.671,2774,0.671,2775,0.671,2776,0.671,2777,0.671,2778,0.671,2779,0.671,2780,0.671,2781,0.671,2782,1.101,2783,0.671,2784,0.671,2785,0.671,2786,0.671,2787,0.671,2788,0.537,2789,0.671,2790,0.671,2791,0.671,2792,0.59,2793,0.671,2794,0.671,2795,0.671,2796,0.537,2797,0.466,2798,0.671,2799,0.671,2800,0.59,2801,1.76,2802,0.671,2803,0.59,2804,0.59,2805,0.671,2806,0.59,2807,0.671,2808,0.671,2809,0.671,2810,0.671,2811,0.671,2812,2.208,2813,0.671,2814,0.671,2815,0.59,2816,0.671,2817,1.548,2818,0.671,2819,0.671,2820,0.671,2821,0.671,2822,0.59,2823,0.671,2824,1.252,2825,0.671,2826,0.671,2827,0.671,2828,0.537,2829,1.252,2830,0.671,2831,0.671,2832,0.671,2833,0.671,2834,0.671,2835,1.76,2836,1.252,2837,1.252,2838,0.671,2839,0.59,2840,0.671,2841,1.252,2842,0.59,2843,1.76,2844,0.671,2845,0.671,2846,0.671,2847,0.671,2848,0.671,2849,1.252,2850,1.252,2851,1.252,2852,1.252,2853,1.548,2854,1.252,2855,0.671,2856,1.252,2857,0.671,2858,1.252,2859,0.439,2860,0.59,2861,1.76,2862,0.671,2863,0.59,2864,0.671,2865,0.671,2866,0.671,2867,2.606,2868,0.671,2869,0.59,2870,0.671,2871,0.671,2872,0.671,2873,0.59,2874,0.671,2875,1.101,2876,0.671,2877,0.59,2878,0.497,2879,0.671,2880,0.671,2881,0.671,2882,0.671,2883,1.252,2884,0.671,2885,0.671,2886,0.671,2887,0.671,2888,0.59,2889,0.671,2890,0.671,2891,0.537,2892,0.671,2893,0.671,2894,0.497,2895,0.671,2896,0.671,2897,0.671,2898,1.252,2899,0.59,2900,0.59]],["title/coverage.html",[2125,3.746]],["body/coverage.html",[0,0.193,1,1.582,5,0.076,6,2.241,7,2.241,9,1.668,16,0.182,25,0.01,38,1.441,48,1.326,49,2.364,55,0.003,56,0.004,57,0.003,58,2.039,59,2.241,60,2.241,68,1.889,81,0.528,90,1.326,95,1.768,105,2.622,120,1.507,121,1.507,127,2.111,129,2.241,144,0.761,181,0.98,182,3.205,197,1.23,231,1.768,232,2.241,271,2.241,282,1.768,323,1.01,324,2.241,335,1.276,347,1.441,348,2.241,349,3.892,356,1.441,357,3.991,358,0.873,359,1.074,386,1.381,407,1.582,411,1.441,413,1.562,436,1.507,437,1.507,438,1.668,439,3.205,440,3.667,458,3.434,471,2.612,472,1.889,473,3.96,474,3.96,485,2.039,492,2.039,498,2.039,499,2.241,500,2.241,505,1.326,531,1.768,535,2.241,539,2.039,549,3.205,550,2.968,557,1.441,595,1.768,597,2.241,598,2.241,615,1.889,616,2.968,617,2.779,647,1.889,648,3.96,654,2.039,657,5.577,658,5.221,661,2.039,676,2.039,678,2.039,684,2.039,688,2.039,698,4.23,726,1.889,727,2.039,740,2.039,751,1.889,752,2.241,753,2.241,786,1.668,787,2.779,794,1.668,797,1.507,798,3.205,799,3.205,806,1.768,816,2.241,817,2.241,818,1.668,819,2.779,820,2.779,823,1.668,829,1.889,830,2.241,857,1.889,859,1.889,860,2.241,861,2.241,864,3.96,876,2.241,897,1.582,898,2.241,905,2.241,934,3.785,935,3.785,936,1.768,952,1.889,954,3.038,956,2.622,965,2.779,973,2.039,988,4.913,1003,1.889,1004,3.96,1012,2.039,1016,1.768,1029,2.241,1047,1.889,1048,2.241,1056,1.768,1062,1.768,1063,1.668,1075,1.768,1081,1.768,1084,1.668,1086,1.582,1088,1.889,1091,1.768,1092,1.889,1119,3.205,1120,3.205,1137,2.039,1140,2.241,1154,1.889,1156,1.889,1201,1.582,1215,2.241,1219,1.668,1240,1.768,1249,3.667,1254,1.768,1260,1.768,1265,2.039,1280,3.205,1281,2.241,1296,2.039,1315,2.241,1316,2.039,1391,2.241,1409,2.241,1421,2.241,1422,1.381,1423,2.039,1431,2.241,1432,2.241,1433,3.205,1439,2.241,1440,3.205,1444,1.889,1445,2.241,1459,1.23,1460,1.668,1473,2.241,1482,2.241,1492,1.889,1493,2.241,1497,1.668,1499,1.768,1500,1.889,1516,2.241,1531,1.668,1535,2.241,1581,2.241,1594,2.241,1608,2.241,1610,2.241,1620,1.889,1640,2.241,1650,2.241,1658,2.241,1665,2.241,1669,2.241,1670,2.241,1724,2.968,1750,2.039,1879,2.039,1924,3.522,1942,2.241,1985,4.352,2092,1.668,2125,1.582,2152,2.241,2447,3.205,2452,2.241,2753,7.055,2901,2.039,2902,6.767,2903,8.8,2904,6.166,2905,7.009,2906,4.352,2907,2.241,2908,2.039,2909,2.241,2910,5.606,2911,5.606,2912,5.606,2913,5.606,2914,6.767,2915,2.241,2916,2.241,2917,4.352,2918,4.352,2919,2.241,2920,2.241,2921,4.946,2922,2.241,2923,7.522,2924,3.96,2925,2.039,2926,2.241,2927,2.548,2928,2.548,2929,2.548,2930,2.241,2931,2.548,2932,4.946,2933,4.004,2934,2.548,2935,4.004,2936,6.094,2937,4.946,2938,2.548,2939,4.946,2940,2.548,2941,2.548,2942,2.548,2943,2.548,2944,4.004,2945,2.548,2946,4.004,2947,5.953,2948,2.241,2949,2.241,2950,2.241,2951,2.241,2952,2.548,2953,3.522,2954,3.522,2955,2.241,2956,2.241,2957,2.241,2958,2.241,2959,2.241,2960,4.352,2961,2.548]],["title/dependencies.html",[87,2.405,2469,2.993]],["body/dependencies.html",[0,0.122,4,0.157,5,0.164,16,0.279,25,0.01,41,0.897,47,1.755,55,0.004,56,0.006,57,0.004,87,1.755,101,2.89,103,3.429,125,3.078,130,2.054,149,2.511,156,1.882,184,0.945,192,1.855,193,1.455,194,2.204,277,3.606,304,2.421,306,2.421,372,3.603,390,2.306,424,2.477,464,1.953,467,3.96,484,2.306,515,3.12,578,1.698,607,2.656,628,4.302,629,3.12,673,3.429,883,5.609,884,2.706,951,2.89,972,2.306,1070,2.306,1078,2.89,1466,5.21,1502,4.079,1719,3.417,1744,3.429,1850,4.404,1883,3.429,1977,2.706,2041,3.429,2042,3.429,2095,3.429,2216,3.429,2239,3.429,2240,3.429,2275,2.552,2284,2.552,2285,3.429,2288,3.429,2296,3.429,2339,3.429,2354,2.706,2359,3.819,2372,3.429,2377,3.12,2580,3.429,2839,3.429,2877,3.429,2962,5.501,2963,7.791,2964,3.898,2965,3.898,2966,3.898,2967,3.898,2968,3.898,2969,5.501,2970,5.501,2971,3.898,2972,5.501,2973,3.898,2974,3.898,2975,3.898,2976,3.898,2977,3.898,2978,3.898,2979,3.898,2980,3.898,2981,3.898,2982,6.376,2983,3.898,2984,3.898,2985,3.898,2986,3.898,2987,3.898,2988,3.898,2989,5.501,2990,3.898,2991,3.898,2992,5.501,2993,3.898,2994,3.898,2995,7.304,2996,3.898,2997,3.898,2998,3.898,2999,3.898,3000,3.898,3001,3.898,3002,3.898,3003,3.898,3004,3.898,3005,3.898,3006,5.501,3007,3.898,3008,2.89,3009,3.898,3010,3.898,3011,5.501,3012,3.898,3013,5.501,3014,5.501,3015,3.898,3016,3.898,3017,3.898,3018,3.12,3019,3.898,3020,3.898,3021,3.898,3022,3.898,3023,3.898,3024,5.501,3025,3.898,3026,3.898,3027,3.898,3028,3.898,3029,3.898,3030,3.898,3031,3.898,3032,3.898,3033,3.898,3034,3.898,3035,3.898,3036,3.898,3037,3.898,3038,3.898,3039,3.898,3040,3.898,3041,3.898,3042,5.501,3043,4.84,3044,3.898,3045,3.898,3046,3.898,3047,3.898,3048,3.429,3049,3.898,3050,5.501,3051,3.898,3052,3.898,3053,3.898,3054,3.898,3055,3.898,3056,3.898,3057,3.898,3058,3.898,3059,3.898,3060,3.898,3061,3.898,3062,3.898,3063,5.501,3064,3.898,3065,3.898,3066,3.898,3067,3.898,3068,3.898,3069,5.501,3070,3.898,3071,3.429,3072,3.12,3073,3.898,3074,3.898,3075,3.898,3076,3.898,3077,3.898,3078,3.898,3079,3.898,3080,3.898,3081,3.898,3082,3.898,3083,3.898,3084,3.898,3085,3.898,3086,3.898,3087,3.898,3088,3.898,3089,3.898,3090,3.898,3091,3.12,3092,3.898,3093,3.898,3094,3.898,3095,3.898,3096,3.898,3097,3.898,3098,3.898,3099,3.898,3100,3.898,3101,3.898,3102,3.898,3103,3.898,3104,3.898]],["title/miscellaneous/enumerations.html",[3105,2.212,3106,4.699]],["body/miscellaneous/enumerations.html",[10,0.597,25,0.01,55,0.007,56,0.009,57,0.007,139,3.263,223,2.796,323,2.615,344,4.099,364,2.537,412,3.577,787,4.581,789,4.321,790,4.581,819,4.581,820,5.37,826,6.193,827,6.193,828,6.193,3105,3.905,3106,5.806,3107,5.806,3108,5.806]],["title/miscellaneous/functions.html",[3105,2.212,3109,3.708]],["body/miscellaneous/functions.html",[10,0.554,16,0.438,24,1.649,25,0.01,26,1.262,27,1.227,32,1.241,37,1.927,38,4.184,49,3.353,55,0.007,56,0.008,57,0.007,90,4.139,223,1.984,254,2.853,589,3.318,623,3.462,657,4.539,658,5.733,699,4.901,701,4.901,706,4.901,726,5.485,767,4.009,796,3.318,988,3.318,1025,3.803,1137,6.365,2800,5.386,2915,6.509,2916,6.509,2922,5.386,2956,5.386,2957,6.509,3105,3.622,3109,4.25,3110,6.122,3111,6.995,3112,6.122,3113,4.901,3114,6.122,3115,6.122]],["title/index.html",[10,0.338,1677,2.772,1678,2.595]],["body/index.html",[5,0.18,13,2.415,14,2.423,15,1.719,17,1.112,25,0.009,26,0.96,29,3.001,52,3.568,53,2.777,55,0.005,56,0.007,57,0.005,61,1.575,64,2.928,81,0.927,125,2.159,184,1.083,201,4.562,202,3.819,206,3.421,208,3.278,209,1.489,222,1.202,277,2.528,279,1.947,323,1.772,430,2.327,443,2.423,448,2.645,478,3.705,491,2.819,530,2.92,547,2.928,578,1.947,607,2.92,608,2.645,618,2.159,632,2.777,656,2.928,712,2.928,719,4.383,755,4.056,774,3.315,777,2.423,783,3.421,854,2.327,858,2.777,917,3.421,972,2.645,976,3.579,1013,3.961,1027,3.877,1070,2.645,1366,2.423,1401,3.933,1502,3.315,1553,3.103,1614,2.928,1666,2.928,1681,3.103,1682,5.488,1692,3.933,1702,2.645,1719,3.757,1730,4.809,1731,5.322,1747,3.933,1748,3.933,1797,4.484,1859,3.315,1897,3.933,1935,7.114,1939,3.579,1948,3.315,1974,2.928,2067,3.933,2092,3.961,2124,2.528,2125,2.777,2143,4.842,2172,3.103,2221,3.315,2279,3.103,2284,2.928,2317,6.031,2319,4.842,2322,3.579,2357,3.933,2545,3.933,2579,3.933,2640,4.484,2641,3.103,2686,3.579,2796,3.579,2797,3.103,2873,3.933,2894,3.315,2904,3.933,3091,3.579,3116,3.315,3117,6.048,3118,6.332,3119,4.471,3120,3.933,3121,4.471,3122,3.103,3123,3.103,3124,3.933,3125,3.103,3126,4.471,3127,4.471,3128,3.103,3129,3.103,3130,4.471,3131,3.933,3132,3.961,3133,3.933,3134,4.471,3135,3.579,3136,4.471,3137,6.031,3138,5.445,3139,3.757,3140,3.933,3141,6.048,3142,6.048,3143,7.673,3144,7.344,3145,4.471,3146,4.471,3147,6.048,3148,3.933,3149,4.471,3150,3.933,3151,6.048,3152,4.471,3153,3.933,3154,6.048,3155,6.048,3156,3.103,3157,3.933,3158,4.471,3159,4.471,3160,4.471,3161,4.471,3162,4.471,3163,4.471,3164,4.471,3165,3.579,3166,4.471,3167,3.315,3168,3.579,3169,4.471,3170,3.933,3171,4.471,3172,3.579,3173,3.579,3174,4.484,3175,4.471,3176,4.471,3177,3.933,3178,4.471,3179,3.933]],["title/license.html",[1677,2.772,1678,2.595,3180,3.289]],["body/license.html",[0,0.021,4,0.32,5,0.05,13,2.657,17,0.23,22,0.11,25,0.002,29,0.688,39,0.058,52,1.486,53,0.575,55,0.003,56,0.002,57,0.002,64,1.103,80,0.197,81,0.907,98,0.417,141,2.204,143,1.547,144,1.739,146,1.43,147,0.368,153,1.169,158,2.039,159,3.415,191,0.367,196,3.013,209,2.172,214,5.591,218,0.336,245,0.953,274,0.502,276,0.953,279,0.403,306,0.575,311,0.686,360,0.403,364,0.356,378,0.606,381,2.452,382,0.575,413,0.8,426,0.417,427,0.403,443,1.256,448,1.689,450,0.686,460,0.523,479,4.978,480,2.276,491,2.384,495,1.934,504,0.417,511,0.464,540,0.642,544,1.689,545,2.389,547,2.864,578,0.734,596,0.865,604,1.44,608,2.198,614,1.33,618,0.813,626,0.482,628,1.046,668,0.642,687,1.046,733,1.249,759,0.606,762,0.606,766,1.119,770,0.686,775,2.285,777,0.913,778,1.169,781,1.773,783,0.953,803,3.178,825,1.046,850,3.69,909,0.642,914,0.548,917,1.311,918,0.686,941,0.523,945,1.547,948,2.767,954,0.502,957,1.169,958,1.348,962,0.642,979,0.606,980,2.821,982,0.741,983,2.432,985,1.718,997,1.981,999,3.941,1009,0.741,1013,1.518,1025,2.059,1027,2.101,1072,1.046,1078,0.686,1111,0.741,1122,4.256,1130,1.981,1209,0.606,1229,0.642,1337,0.642,1366,2.013,1375,0.741,1392,1.718,1422,3.534,1472,0.606,1504,2.039,1506,1.44,1550,1.869,1565,1.348,1593,0.686,1600,0.741,1601,2.821,1603,0.686,1604,4.077,1605,2.916,1613,1.609,1614,1.869,1645,4.089,1666,0.606,1683,0.814,1688,1.981,1700,1.348,1702,3.027,1705,1.773,1706,1.482,1712,0.686,1724,1.249,1731,2.525,1735,1.348,1737,2.916,1741,1.482,1746,0.642,1773,0.741,1788,1.482,1797,0.686,1803,0.814,1823,0.741,1828,0.814,1850,1.348,1861,0.606,1879,0.741,1886,0.814,1898,0.814,1901,0.741,1917,0.814,1939,5.939,1946,2.458,1948,1.249,1957,0.741,1968,1.482,1970,0.741,1983,1.348,2003,2.654,2005,0.642,2013,0.741,2015,0.814,2018,0.814,2036,0.686,2037,2.458,2063,0.814,2097,0.814,2115,0.686,2125,1.046,2145,1.482,2149,1.348,2155,0.741,2172,0.642,2178,3.013,2185,2.285,2193,0.741,2195,5.785,2196,3.397,2197,1.718,2200,6.029,2217,2.301,2221,1.249,2275,1.518,2278,3.242,2291,4.649,2300,3.036,2305,0.686,2314,0.741,2332,0.741,2349,0.814,2351,1.348,2352,1.348,2356,3.501,2389,0.814,2412,1.869,2413,0.814,2415,0.814,2447,0.741,2453,0.814,2458,0.741,2476,1.249,2479,0.814,2490,0.741,2515,1.249,2535,0.814,2571,2.307,2615,1.348,2640,2.116,2641,1.609,2647,1.348,2655,1.981,2667,0.741,2686,1.348,2690,1.718,2725,1.482,2736,0.741,2761,1.718,2766,0.686,2769,2.974,2788,4.095,2797,0.642,2803,5.356,2804,1.482,2806,1.482,2815,0.814,2853,0.814,2860,1.482,2863,0.814,2878,3.793,2888,2.039,2930,0.814,3018,0.741,3118,0.741,3125,2.301,3128,1.981,3129,0.642,3132,0.606,3133,2.511,3135,1.855,3139,0.575,3153,0.814,3156,1.609,3174,1.718,3180,7.561,3181,6.088,3182,5.958,3183,0.926,3184,2.318,3185,7.115,3186,3.315,3187,4.77,3188,5.025,3189,3.315,3190,0.926,3191,0.926,3192,1.684,3193,2.318,3194,2.318,3195,5.316,3196,0.926,3197,0.926,3198,1.482,3199,3.315,3200,3.254,3201,1.684,3202,1.684,3203,4.984,3204,4.373,3205,0.926,3206,0.926,3207,3.714,3208,1.482,3209,0.814,3210,0.814,3211,4.5,3212,7.714,3213,2.318,3214,2.039,3215,0.926,3216,0.926,3217,2.854,3218,4.648,3219,0.926,3220,4.648,3221,0.926,3222,2.854,3223,0.686,3224,2.854,3225,0.741,3226,5.118,3227,0.814,3228,0.814,3229,4.894,3230,5.115,3231,3.315,3232,5.316,3233,0.926,3234,1.684,3235,0.926,3236,0.926,3237,2.039,3238,0.926,3239,0.926,3240,0.926,3241,0.926,3242,0.926,3243,0.926,3244,2.854,3245,0.926,3246,2.318,3247,0.926,3248,0.926,3249,5.06,3250,1.718,3251,0.926,3252,0.926,3253,1.855,3254,2.318,3255,0.926,3256,0.686,3257,1.684,3258,1.684,3259,2.318,3260,6.814,3261,0.926,3262,3.315,3263,3.315,3264,3.714,3265,2.318,3266,4.686,3267,1.684,3268,0.926,3269,0.926,3270,0.926,3271,2.318,3272,0.926,3273,0.926,3274,1.684,3275,3.714,3276,0.926,3277,1.684,3278,0.926,3279,3.397,3280,0.926,3281,2.854,3282,0.814,3283,1.684,3284,7.682,3285,2.318,3286,4.648,3287,2.511,3288,1.249,3289,0.926,3290,1.684,3291,2.318,3292,4.648,3293,4.894,3294,0.926,3295,2.854,3296,1.684,3297,2.854,3298,2.511,3299,0.926,3300,2.318,3301,6.924,3302,1.482,3303,0.926,3304,4.373,3305,0.926,3306,2.039,3307,2.432,3308,0.926,3309,5.818,3310,2.039,3311,1.684,3312,3.575,3313,5.115,3314,3.714,3315,0.926,3316,1.684,3317,4.064,3318,0.926,3319,5.498,3320,1.684,3321,0.926,3322,0.926,3323,0.926,3324,2.318,3325,0.926,3326,0.926,3327,0.926,3328,0.741,3329,2.318,3330,2.511,3331,0.926,3332,0.926,3333,0.926,3334,1.482,3335,4.894,3336,0.814,3337,0.741,3338,2.039,3339,2.318,3340,1.718,3341,2.318,3342,0.926,3343,2.916,3344,3.268,3345,0.814,3346,1.103,3347,2.039,3348,0.926,3349,0.926,3350,0.926,3351,0.926,3352,1.482,3353,0.926,3354,6.15,3355,1.482,3356,2.039,3357,0.642,3358,1.684,3359,2.854,3360,0.814,3361,0.926,3362,1.684,3363,2.654,3364,0.926,3365,0.926,3366,0.926,3367,1.684,3368,0.926,3369,1.348,3370,0.926,3371,2.654,3372,0.926,3373,0.741,3374,4.064,3375,2.285,3376,0.926,3377,2.916,3378,0.926,3379,1.684,3380,0.926,3381,0.926,3382,0.926,3383,0.926,3384,0.926,3385,2.318,3386,0.926,3387,1.684,3388,1.684,3389,1.684,3390,0.926,3391,5.498,3392,1.482,3393,0.926,3394,0.926,3395,0.814,3396,0.926,3397,0.642,3398,0.926,3399,0.926,3400,2.318,3401,0.814,3402,0.926,3403,5.118,3404,0.686,3405,0.926,3406,0.926,3407,3.315,3408,3.268,3409,0.926,3410,0.926,3411,2.318,3412,0.926,3413,0.926,3414,2.854,3415,0.926,3416,0.926,3417,0.926,3418,0.926,3419,0.926,3420,0.926,3421,1.684,3422,0.926,3423,2.318,3424,0.926,3425,0.926,3426,1.684,3427,0.926,3428,0.926,3429,0.926,3430,0.926,3431,0.926,3432,1.684,3433,1.169,3434,4.089,3435,0.926,3436,3.714,3437,0.926,3438,0.926,3439,1.482,3440,2.318,3441,2.854,3442,2.854,3443,2.854,3444,0.926,3445,2.916,3446,2.916,3447,0.926,3448,2.318,3449,0.926,3450,1.684,3451,0.926,3452,1.482,3453,3.315,3454,1.684,3455,2.854,3456,2.854,3457,0.926,3458,2.318,3459,2.916,3460,0.926,3461,0.926,3462,3.254,3463,2.318,3464,2.318,3465,1.684,3466,0.642,3467,0.926,3468,0.814,3469,0.926,3470,0.926,3471,2.039,3472,0.926,3473,0.926,3474,0.926,3475,0.926,3476,0.926,3477,2.318,3478,0.926,3479,0.814,3480,2.039,3481,1.684,3482,3.714,3483,5.737,3484,2.318,3485,1.684,3486,1.684,3487,1.684,3488,0.814,3489,0.926,3490,0.926,3491,0.926,3492,3.268,3493,1.684,3494,0.926,3495,0.926,3496,0.926,3497,0.926,3498,1.684,3499,0.926,3500,1.684,3501,0.926,3502,0.926,3503,3.036,3504,0.926,3505,4.5,3506,0.926,3507,0.926,3508,0.926,3509,0.926,3510,1.684,3511,0.926,3512,2.854,3513,1.684,3514,0.814,3515,0.926,3516,0.926,3517,0.926,3518,0.926,3519,1.684,3520,0.926,3521,0.926,3522,0.741,3523,2.511,3524,0.926,3525,1.684,3526,0.926,3527,0.926,3528,2.039,3529,0.926,3530,0.926,3531,0.926,3532,0.926,3533,2.854,3534,0.926,3535,0.926,3536,0.926,3537,0.814,3538,0.814,3539,0.814,3540,0.926,3541,0.926,3542,0.926,3543,3.315,3544,0.926,3545,0.926,3546,2.854,3547,0.926,3548,0.814,3549,0.926,3550,0.926,3551,0.926,3552,0.926,3553,0.926,3554,2.854,3555,0.926,3556,0.926,3557,2.318,3558,0.926,3559,0.741,3560,2.318,3561,0.926,3562,0.926,3563,0.926,3564,0.926,3565,0.926,3566,0.926,3567,0.926,3568,0.814,3569,1.482,3570,0.926,3571,0.642,3572,1.684,3573,0.814,3574,0.926,3575,2.854,3576,0.926,3577,0.926,3578,1.684,3579,2.318,3580,2.318,3581,0.741,3582,1.684,3583,0.926,3584,2.318,3585,4.064,3586,0.926,3587,0.926,3588,1.684,3589,0.926,3590,0.926,3591,0.926,3592,0.926,3593,2.854,3594,2.318,3595,0.926,3596,3.315,3597,0.926,3598,0.926,3599,0.926,3600,0.926,3601,0.814,3602,0.926,3603,1.684,3604,1.684,3605,1.482,3606,2.318,3607,0.814,3608,0.926,3609,1.348,3610,2.318,3611,0.926,3612,1.482,3613,0.926,3614,1.684,3615,0.926,3616,0.926,3617,1.684,3618,6.697,3619,2.318,3620,0.926,3621,3.315,3622,4.894,3623,2.318,3624,0.926,3625,0.814,3626,0.926,3627,0.926,3628,2.854,3629,0.926,3630,2.318,3631,0.926,3632,0.926,3633,0.926,3634,0.926,3635,0.926,3636,0.926,3637,0.926,3638,2.854,3639,1.684,3640,0.926,3641,0.926,3642,2.318,3643,0.926,3644,1.684,3645,2.318,3646,1.684,3647,0.926,3648,0.926,3649,0.926,3650,1.684,3651,2.318,3652,0.926,3653,0.814,3654,0.926,3655,0.926,3656,1.684,3657,0.926,3658,0.814,3659,0.926,3660,0.926,3661,0.926,3662,0.926,3663,2.318,3664,1.684,3665,0.814,3666,0.926,3667,0.926,3668,2.854,3669,0.926,3670,2.318,3671,0.926,3672,0.926,3673,1.684,3674,0.926,3675,0.926,3676,0.926,3677,2.318,3678,1.684,3679,1.684,3680,0.926,3681,1.684,3682,4.064,3683,1.482,3684,2.318,3685,2.854,3686,0.814,3687,0.926,3688,1.684,3689,0.926,3690,2.318,3691,0.926,3692,0.926,3693,0.926,3694,0.926,3695,0.926,3696,0.926,3697,2.318,3698,1.684,3699,0.926,3700,1.684,3701,0.814,3702,0.926,3703,0.926,3704,1.684,3705,1.684,3706,0.926,3707,1.482,3708,0.926,3709,0.926,3710,0.741,3711,0.926,3712,2.318,3713,0.926,3714,0.926,3715,0.926,3716,0.926,3717,1.684,3718,2.318,3719,0.926,3720,0.926,3721,0.926,3722,0.926,3723,0.741,3724,1.684,3725,0.926,3726,0.926,3727,0.926,3728,0.926,3729,0.926,3730,0.926,3731,0.926,3732,0.926,3733,0.686,3734,0.926,3735,0.926,3736,0.926,3737,2.854,3738,0.926,3739,0.926,3740,1.684,3741,0.926,3742,0.926,3743,0.926,3744,0.926,3745,0.926,3746,0.926,3747,0.926,3748,0.741,3749,0.926,3750,0.926,3751,0.926,3752,0.814,3753,1.684,3754,0.926,3755,0.926,3756,0.926,3757,0.926,3758,0.814,3759,1.684,3760,0.926,3761,0.926,3762,0.814,3763,0.814,3764,0.606,3765,0.926,3766,1.684,3767,1.684,3768,2.654,3769,0.926,3770,0.926,3771,0.814,3772,0.926,3773,0.926,3774,2.318,3775,1.348,3776,0.926,3777,1.684,3778,1.684,3779,1.684,3780,0.926,3781,0.814,3782,0.814,3783,0.926,3784,0.814,3785,0.926,3786,0.926,3787,1.684,3788,0.926,3789,2.318,3790,0.926,3791,0.926,3792,0.926,3793,0.926,3794,0.926,3795,0.926,3796,0.926,3797,0.926,3798,0.926,3799,0.926,3800,0.814,3801,0.926,3802,0.741,3803,0.926,3804,0.926,3805,0.926,3806,0.926,3807,0.926,3808,0.926,3809,0.926,3810,0.926,3811,0.926,3812,0.926,3813,0.926,3814,0.926,3815,0.926,3816,0.686,3817,0.814,3818,1.684,3819,1.482,3820,0.926,3821,0.926,3822,0.926,3823,0.926,3824,0.926,3825,0.926,3826,1.684,3827,0.926,3828,0.926,3829,0.814,3830,0.741,3831,0.926,3832,0.926,3833,0.741,3834,0.926,3835,0.926,3836,0.926,3837,0.926]],["title/modules.html",[86,2.251]],["body/modules.html",[25,0.008,55,0.007,56,0.008,57,0.007,85,4.326,86,2.326,114,4.081,119,4.081,296,4.326,299,4.326,300,4.326,301,3.687,302,4.326,933,4.989,964,4.62,1196,4.326,1447,4.326,1450,4.326,1702,5.028,2275,5.761,3838,8.797,3839,8.797,3840,7.918,3841,8.497]],["title/overview.html",[3842,4.828]],["body/overview.html",[2,1.033,25,0.01,55,0.006,56,0.007,57,0.006,84,1.34,85,5.521,86,1.86,87,2.244,88,2.818,89,2.818,90,2.594,91,2.101,92,2.322,93,4.384,94,4.384,95,5.022,96,3.676,97,2.701,98,2.244,113,2.496,114,5.628,115,4.384,116,4.384,117,4.384,118,4.384,119,5.341,120,4.916,121,4.281,128,2.244,296,6.01,297,4.384,298,4.384,299,5.022,300,5.022,301,4.916,302,5.022,505,4.324,557,4.698,596,1.86,600,4.384,601,4.384,602,4.384,928,4.384,929,4.384,930,4.384,1086,5.16,1196,6.047,1197,4.384,1198,4.384,1199,4.384,1201,4.494,1447,5.966,1448,4.384,1449,4.384,1450,5.767,1497,4.738,1529,4.384,1530,4.384,1531,4.738,1735,3.989,1750,3.989,1901,3.989,2641,3.459,3842,3.989,3843,4.983]],["title/todo.html",[207,1.528,1677,2.772,1678,2.595]],["body/todo.html",[0,0.093,5,0.125,11,0.761,13,1.474,16,0.413,25,0.009,26,0.917,32,0.702,47,2.603,48,2.178,49,2.438,51,2.905,52,3.903,55,0.006,56,0.006,57,0.005,65,2.02,84,1.921,92,1.95,98,2.603,111,2.096,125,2.791,130,2.472,144,1.25,146,2.096,147,1.694,149,1.517,156,2.02,161,1.284,184,1.401,198,5.302,201,3.591,202,3.837,207,1.71,208,3.589,209,2.38,222,1.554,241,3.35,273,4.013,304,3.591,310,3.591,314,2.366,315,2.905,318,3.102,358,1.433,361,2.178,425,2.694,430,2.178,441,2.791,443,3.133,471,1.95,478,3.837,491,1.95,505,2.178,511,2.896,528,2.366,529,2.366,546,3.269,596,1.562,605,3.745,607,2.791,614,1.95,618,3.198,627,2.74,646,2.905,655,2.366,656,2.74,658,2.905,683,2.74,686,2.599,716,4.437,717,3.785,755,2.476,756,6.002,762,2.74,777,4.389,832,3.591,855,2.74,909,2.905,924,2.476,941,3.745,953,2.366,954,2.268,957,2.905,969,5.827,979,2.74,980,2.905,992,2.74,996,4.597,997,2.905,1013,3.785,1072,2.599,1209,2.74,1275,3.102,1366,2.268,1422,2.268,1466,4.337,1549,3.102,1553,2.905,1606,2.905,1688,2.905,1705,4.437,1714,3.35,1718,3.681,1719,2.599,1720,3.681,1730,2.74,1753,3.681,1754,3.681,1769,3.681,1856,5.719,1859,3.102,1864,3.35,1982,2.599,2035,3.102,2092,2.74,2106,3.35,2173,3.681,2177,3.681,2185,3.35,2224,3.35,2260,3.35,2275,2.74,2278,3.102,2279,2.905,2370,4.628,2458,3.35,2469,3.35,2471,3.35,2571,2.599,2797,2.905,2828,3.35,2859,3.785,2891,3.35,2894,3.102,3043,3.681,3071,3.681,3072,3.35,3139,2.599,3150,3.681,3167,3.102,3223,3.102,3357,2.905,3395,3.681,3439,3.681,3522,3.35,3771,5.085,3816,4.286,3844,3.35,3845,4.184,3846,3.681,3847,3.681,3848,3.102,3849,3.35,3850,4.184,3851,4.184,3852,3.681,3853,5.085,3854,4.184,3855,4.597,3856,4.184,3857,4.184,3858,4.184,3859,4.184,3860,3.681,3861,4.184,3862,3.35,3863,4.184,3864,4.184,3865,4.184,3866,4.184,3867,4.184,3868,3.681,3869,3.681,3870,4.184,3871,4.184,3872,4.184,3873,4.184,3874,4.184,3875,2.905,3876,3.681,3877,4.184,3878,4.184,3879,3.681,3880,3.681,3881,3.681,3882,4.184,3883,3.681,3884,4.184,3885,4.184,3886,4.184,3887,4.184,3888,5.827,3889,4.184,3890,4.184,3891,4.184,3892,4.184,3893,4.184,3894,4.184,3895,3.35,3896,3.681,3897,4.184,3898,5.781,3899,3.681,3900,4.184]],["title/miscellaneous/typealiases.html",[3105,2.212,3901,5.341]],["body/miscellaneous/typealiases.html",[10,0.521,16,0.578,25,0.01,29,2.355,32,0.966,55,0.006,56,0.008,57,0.006,137,2.741,144,1.722,147,1.259,184,1.396,243,5.069,328,4.218,358,2.442,381,3.571,413,1.134,616,4.272,617,5.374,620,5.707,634,5.707,635,5.707,787,4,791,4,792,4.949,819,4,820,4.949,822,5.707,934,3.579,935,3.579,936,4.949,955,5.069,959,6.272,960,4,961,5.069,962,4,1235,5.374,1249,4.272,1263,6.272,1316,4.613,1345,4.613,1346,4.613,1410,3.773,1835,5.069,1873,4.613,1875,4.613,2924,4.613,2925,5.707,3105,3.409,3107,5.069,3108,5.069,3514,5.069,3902,5.762,3903,5.762,3904,5.762,3905,7.129,3906,7.129,3907,5.069,3908,5.762,3909,5.069,3910,5.069,3911,7.129,3912,5.762,3913,7.129,3914,5.762,3915,5.762,3916,5.762,3917,3.773,3918,5.762,3919,5.762,3920,5.762,3921,5.762]],["title/miscellaneous/variables.html",[1745,3.708,3105,2.212]],["body/miscellaneous/variables.html",[1,2.171,9,2.288,10,0.194,11,0.391,13,1.231,15,1.698,16,0.558,25,0.01,29,1.428,32,0.853,37,0.521,38,2.498,43,0.201,47,1.989,48,1.119,49,3.63,50,1.593,55,0.004,56,0.004,57,0.002,62,2.171,63,3.01,65,1.038,73,2.055,80,1.645,81,1.244,91,1.474,105,2.892,113,1.077,125,2.132,130,0.802,143,1.165,144,1.673,149,0.779,160,1.891,166,0.878,176,1.976,183,0.906,186,0.593,191,0.852,202,1.687,206,1.215,207,0.878,209,0.716,222,2.336,223,2.81,227,1.629,254,1.629,274,1.894,280,3.536,282,1.492,314,1.215,315,1.492,351,1.272,389,1.165,390,1.272,424,0.968,425,1.001,426,0.968,427,0.936,428,0.968,439,1.72,440,2.591,443,1.894,458,4.164,463,1.272,468,3.066,471,1.001,472,1.593,473,1.72,474,3.536,477,1.407,478,1.687,481,1.593,485,2.798,486,2.798,487,1.891,488,1.891,491,1.629,492,2.798,493,2.288,494,1.72,495,2.299,496,1.72,497,1.593,505,3.291,508,1.593,511,1.751,528,2.877,530,1.687,546,1.215,587,1.629,589,1.894,595,2.426,605,1.215,606,1.119,607,1.687,614,1.001,618,1.038,627,1.407,646,1.492,647,1.593,648,1.72,652,1.72,654,3.536,655,1.215,656,1.407,657,1.593,658,4.574,660,1.593,661,2.798,668,2.426,676,2.798,677,1.891,678,2.798,679,4.802,680,1.72,681,1.593,682,1.891,683,2.892,684,2.798,685,1.492,686,2.743,687,1.335,688,2.798,689,1.891,690,3.074,691,1.891,692,1.72,693,1.891,694,1.891,695,1.891,696,1.891,697,1.891,699,1.72,701,1.72,702,4.481,706,1.72,712,1.407,713,3.074,714,1.492,715,1.891,716,1.335,717,2.892,718,3.074,719,2.394,720,1.72,721,3.074,722,1.891,723,2.798,724,1.891,725,1.891,726,1.593,727,2.798,728,1.891,729,1.891,730,1.72,731,1.72,732,1.72,733,1.593,734,1.593,735,1.891,736,1.891,737,1.891,738,1.891,739,4.924,740,2.798,741,4.924,742,1.891,743,1.72,744,1.891,755,1.272,758,2.798,767,1.407,770,1.593,781,1.335,797,1.272,805,1.492,850,1.492,854,1.119,864,1.72,865,1.891,866,1.593,867,1.891,870,1.72,874,1.891,875,1.891,882,1.72,884,3.886,914,1.272,917,1.215,924,1.272,934,2.171,935,2.171,936,2.426,941,1.976,942,2.798,944,1.72,945,2.394,946,2.798,949,2.591,950,2.798,953,1.215,954,2.757,956,4.14,960,2.426,965,3.066,971,4.924,973,2.798,974,1.891,975,3.074,976,1.72,977,1.891,978,1.72,979,1.407,980,1.492,981,1.593,982,1.72,983,1.407,984,1.891,985,1.593,986,3.074,987,1.891,988,1.165,989,1.891,990,1.891,1004,3.536,1011,1.891,1012,2.798,1016,2.426,1017,1.72,1056,3.066,1088,2.591,1119,1.72,1120,2.798,1208,1.407,1249,1.593,1258,1.593,1265,2.798,1296,2.798,1308,1.407,1392,1.593,1422,1.165,1471,1.72,1472,2.288,1505,1.891,1583,2.068,1612,1.492,1620,2.591,1644,1.492,1705,1.335,1719,2.171,1730,3.331,1731,2.743,1745,1.492,1752,1.891,1794,1.891,1802,3.074,1864,2.798,1974,1.407,2037,1.593,2125,1.335,2191,1.407,2260,1.72,2284,1.407,2314,1.72,2322,1.72,2353,1.891,2354,3.066,2366,4.164,2390,3.074,2434,1.72,2891,1.72,2901,1.72,2906,1.891,2907,3.074,2908,2.798,2909,3.074,2917,1.891,2918,4.476,2919,3.074,2920,3.885,2924,1.72,2925,4.073,2926,3.885,2947,1.891,2948,3.885,2949,3.885,2950,3.885,2951,3.885,2953,1.891,2954,1.891,2955,3.074,2958,1.891,2959,3.074,2960,4.476,3008,1.593,3105,1.272,3109,2.426,3111,5.562,3113,1.72,3116,2.591,3170,1.891,3357,1.492,3849,1.72,3862,3.536,3869,1.891,3875,1.492,3879,3.074,3888,3.074,3907,3.885,3909,3.074,3910,3.885,3922,6.322,3923,3.495,3924,6.322,3925,4.416,3926,2.149,3927,4.416,3928,2.149,3929,3.495,3930,2.149,3931,2.149,3932,2.149,3933,2.149,3934,2.149,3935,2.149,3936,2.149,3937,2.149,3938,2.149,3939,2.149,3940,2.149,3941,1.891,3942,2.149,3943,2.149,3944,2.149,3945,2.149,3946,2.149,3947,2.798,3948,1.891,3949,1.891,3950,1.891,3951,2.149,3952,2.149,3953,2.149,3954,3.074,3955,2.149,3956,2.149,3957,2.149,3958,2.149,3959,2.149,3960,1.891,3961,2.149,3962,2.149,3963,2.149,3964,2.149,3965,2.149,3966,2.149,3967,2.149,3968,2.149,3969,2.149,3970,2.149,3971,2.149,3972,2.149,3973,2.149,3974,2.149,3975,2.149,3976,2.149,3977,2.149,3978,2.149,3979,2.149,3980,2.149,3981,2.149,3982,2.149,3983,2.149,3984,2.149,3985,2.149,3986,1.891,3987,2.149,3988,2.149,3989,2.149,3990,2.149,3991,2.149,3992,2.149,3993,2.149,3994,2.149,3995,2.149,3996,2.149]],["title/additional-documentation/nestjs-application.html",[279,1.404,530,1.556,545,1.359,1394,1.556]],["body/additional-documentation/nestjs-application.html",[8,1.253,13,2.755,25,0.009,55,0.005,56,0.007,57,0.007,84,1.158,86,1.607,125,2.078,143,2.333,159,2.674,202,3.866,207,1.759,208,3.195,209,2.239,222,1.158,236,2.988,276,2.435,279,3.551,360,1.875,367,2.654,424,2.654,428,2.654,455,2.674,478,2.846,491,2.747,497,3.192,530,3.776,545,1.816,546,2.435,547,3.86,548,3.446,578,1.875,596,1.607,605,2.435,608,3.488,614,2.006,618,2.846,628,2.674,683,4.402,712,2.819,716,4.176,723,3.446,766,2.078,770,3.192,777,2.333,831,3.446,849,3.446,850,4.092,858,2.674,910,2.988,912,3.192,914,2.547,917,2.435,946,3.446,981,3.192,1130,4.092,1208,4.402,1209,4.402,1214,2.819,1275,3.192,1394,2.846,1472,2.819,1550,2.819,1644,5.019,1702,2.547,1705,2.674,1717,3.787,1719,2.674,1730,4.734,1731,5.064,1856,3.446,1861,2.819,1931,3.787,1957,3.446,1982,2.674,2092,5.243,2106,3.446,2119,3.192,2124,2.435,2125,3.662,2146,5.382,2284,2.819,2300,4.092,2474,5.186,2578,3.192,2619,5.186,2634,3.787,2667,5.382,2908,5.382,3008,3.192,3116,3.192,3118,3.446,3120,3.787,3122,2.988,3124,5.186,3138,4.984,3139,4.176,3187,3.446,3340,3.192,3345,3.787,3346,2.819,3356,3.787,3357,4.666,3403,3.787,3433,2.988,3503,2.988,3571,2.988,3658,3.787,3665,3.787,3802,3.446,3840,3.787,3860,3.787,3875,2.988,3876,5.914,3880,5.186,3881,5.186,3917,3.86,3947,4.719,3948,3.787,3949,3.787,3950,3.787,3986,3.787,3997,4.305,3998,3.446,3999,4.305,4000,4.305,4001,3.446,4002,4.305,4003,6.722,4004,4.305,4005,3.787,4006,4.305,4007,4.305,4008,4.305,4009,7.573,4010,4.305,4011,4.305,4012,3.787,4013,4.305,4014,4.305,4015,4.305,4016,4.305,4017,5.895,4018,4.305,4019,4.305,4020,4.305,4021,4.305,4022,4.305,4023,4.305,4024,4.305,4025,4.305,4026,4.305,4027,4.305,4028,4.305,4029,4.305,4030,4.305,4031,3.192,4032,4.305,4033,4.305,4034,3.787,4035,4.305,4036,5.186,4037,3.787,4038,4.305,4039,5.895,4040,4.305,4041,4.719,4042,3.787,4043,3.787,4044,4.305,4045,6.722,4046,5.895,4047,4.305,4048,4.305,4049,4.305,4050,3.787,4051,4.305,4052,3.446,4053,3.787,4054,4.305,4055,4.305,4056,4.305,4057,4.305,4058,4.305,4059,4.305]],["title/additional-documentation/nestjs-application/software-architecture.html",[545,1.359,1394,1.556,3188,2.39,4060,2.111]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.623,4,0.09,5,0.09,13,2.4,14,0.691,22,0.538,24,0.623,25,0.005,26,0.356,29,0.521,45,1.011,47,3.067,48,2.147,49,2.502,51,0.885,52,1.565,53,1.867,55,0.003,56,0.003,57,0.001,62,1.394,63,1.328,65,1.747,80,0.271,81,0.623,87,1.857,92,0.594,98,1.011,111,0.639,141,1.011,143,1.629,144,1.964,146,3.765,147,0.657,150,0.792,156,0.616,159,2.248,169,1.021,176,0.721,184,1.19,201,4.594,202,0.616,204,0.639,207,0.521,208,1.216,209,2.336,213,0.885,214,1.968,222,0.343,223,0.974,245,0.721,246,3.241,248,1.867,254,0.594,272,0.721,274,4.516,275,0.885,276,2.047,277,3.555,279,3.012,306,3.241,307,1.797,310,3.049,311,0.945,312,3.748,314,0.721,323,0.505,326,1.664,344,1.867,359,0.946,360,0.978,381,1.124,389,1.629,394,0.792,412,0.691,413,1.127,427,0.555,430,1.168,442,0.945,448,1.328,455,2.825,460,1.269,470,0.792,478,1.451,479,0.885,480,3.739,495,2.857,502,4.244,503,3.417,511,3.464,521,0.885,528,0.721,544,2.904,545,1.268,547,3.748,578,3.128,587,1.687,596,0.838,605,1.7,606,2.555,607,3.748,608,2.441,610,1.47,614,1.687,626,0.664,632,1.867,636,2.086,655,3.103,685,0.885,686,3.685,687,0.792,692,1.021,714,0.885,717,0.835,719,1.962,755,1.328,766,3.787,767,0.835,777,0.691,781,1.394,783,1.269,789,0.835,801,1.558,803,3.049,804,0.945,805,0.885,815,0.885,821,0.691,824,0.792,832,1.867,838,3.641,851,0.945,852,2.248,854,1.884,855,0.835,856,4.393,858,0.792,866,0.945,899,0.945,909,2.086,910,0.885,914,1.328,915,0.792,917,0.721,918,2.683,922,1.558,945,1.216,948,2.716,954,0.691,972,0.755,978,1.021,979,0.835,980,2.863,983,1.968,996,2.863,998,0.885,999,3.058,1006,1.797,1016,0.885,1027,2.047,1068,1.974,1070,0.755,1214,0.835,1229,0.885,1301,0.835,1308,0.835,1337,0.885,1366,0.691,1394,0.616,1422,0.691,1475,0.885,1506,2.248,1510,1.968,1542,1.974,1543,3.058,1545,0.885,1550,3.214,1551,1.021,1553,0.885,1569,5.408,1577,2.644,1583,2.691,1603,2.228,1612,0.885,1614,0.835,1615,1.021,1643,1.664,1681,1.558,1682,1.797,1687,1.021,1688,2.086,1690,2.406,1700,1.021,1702,1.328,1710,1.797,1719,1.867,1724,0.945,1738,1.122,1745,0.885,1746,2.863,1772,1.021,1773,1.797,1775,1.122,1777,1.122,1785,1.122,1791,1.122,1815,1.122,1832,1.122,1834,2.644,1859,0.945,1861,0.835,1870,1.021,1874,1.122,1875,1.797,1927,1.974,1946,6.137,1948,0.945,1953,1.797,1974,1.47,1977,2.086,1982,2.248,2000,1.122,2001,1.122,2005,2.512,2007,5.484,2028,1.122,2036,1.664,2070,1.974,2092,1.47,2115,1.664,2119,0.945,2124,0.721,2131,2.644,2143,1.021,2149,1.021,2163,3.058,2171,1.122,2172,2.086,2178,2.683,2182,0.885,2189,3.184,2196,3.157,2197,0.945,2201,1.122,2217,4.563,2220,1.122,2221,1.664,2224,1.021,2226,1.122,2232,1.122,2242,1.797,2247,2.406,2263,5.036,2278,2.228,2279,0.885,2280,1.021,2284,1.968,2289,3.372,2291,3.157,2300,1.558,2319,1.021,2352,1.021,2359,0.885,2366,0.885,2367,3.629,2378,1.974,2408,2.644,2412,2.701,2417,0.885,2427,1.974,2433,2.644,2471,1.021,2476,0.945,2488,2.406,2490,1.021,2515,2.683,2517,1.021,2526,1.021,2571,2.825,2578,0.945,2616,1.122,2623,1.122,2655,2.086,2656,3.629,2666,1.974,2676,1.664,2690,1.664,2720,1.021,2753,1.021,2756,1.021,2760,3.184,2761,0.945,2766,2.228,2769,1.021,2782,1.122,2788,1.797,2817,1.122,2828,3.929,2842,1.122,2859,0.835,2869,1.122,2878,1.664,2899,1.974,2900,1.974,3091,1.797,3116,2.228,3122,1.558,3123,1.558,3125,2.086,3128,3.407,3129,2.512,3132,0.835,3135,1.797,3137,1.122,3138,0.945,3156,0.885,3174,1.664,3187,1.797,3188,0.945,3198,1.974,3200,1.021,3203,1.122,3208,1.122,3211,1.122,3214,1.122,3223,0.945,3226,1.122,3237,1.122,3249,1.797,3250,3.372,3253,3.641,3256,1.664,3266,2.683,3279,2.863,3282,1.122,3287,1.122,3288,4.244,3307,0.835,3310,1.122,3312,1.974,3328,1.021,3330,2.644,3334,1.122,3336,1.122,3343,1.122,3344,2.644,3346,1.968,3354,1.122,3355,1.122,3363,5.032,3369,1.021,3371,1.021,3373,1.797,3375,1.021,3377,1.122,3397,0.885,3404,2.683,3408,1.122,3433,0.885,3434,1.122,3452,1.122,3462,1.021,3466,0.885,3480,1.122,3483,1.122,3488,1.122,3492,1.974,3503,0.885,3505,1.122,3523,1.122,3537,1.974,3538,3.629,3548,1.122,3559,1.021,3568,3.184,3569,1.122,3571,0.885,3573,1.122,3581,1.021,3601,1.122,3605,1.122,3607,1.122,3609,4.393,3612,1.122,3625,1.122,3653,4.001,3683,1.122,3701,1.122,3710,3.929,3733,4.537,3748,1.021,3762,1.122,3763,1.122,3764,3.748,3775,1.021,3817,1.122,3833,1.021,3842,1.021,3844,1.797,3847,1.122,3848,3.372,3853,1.122,3883,1.974,3899,1.122,4001,1.021,4031,0.945,4042,1.122,4060,4.922,4061,1.275,4062,1.275,4063,5.219,4064,5.487,4065,2.244,4066,3.005,4067,2.644,4068,4.177,4069,2.244,4070,2.644,4071,4.908,4072,1.275,4073,1.275,4074,2.683,4075,3.184,4076,1.275,4077,1.275,4078,1.275,4079,1.275,4080,1.275,4081,2.244,4082,2.244,4083,1.275,4084,1.275,4085,4.125,4086,1.275,4087,1.275,4088,3.005,4089,2.244,4090,1.275,4091,1.275,4092,1.275,4093,1.275,4094,6.337,4095,1.275,4096,1.275,4097,1.275,4098,1.122,4099,2.244,4100,4.548,4101,1.275,4102,1.275,4103,2.244,4104,2.244,4105,3.619,4106,3.005,4107,3.619,4108,1.275,4109,3.184,4110,3.184,4111,1.275,4112,1.275,4113,1.275,4114,1.275,4115,1.275,4116,1.275,4117,2.898,4118,2.244,4119,1.021,4120,2.644,4121,1.275,4122,1.275,4123,1.275,4124,6.811,4125,1.275,4126,6.315,4127,1.275,4128,1.974,4129,1.275,4130,1.275,4131,2.244,4132,1.021,4133,3.809,4134,5.487,4135,1.275,4136,2.644,4137,1.974,4138,2.244,4139,1.275,4140,1.275,4141,1.275,4142,1.275,4143,1.275,4144,1.275,4145,2.898,4146,2.244,4147,1.275,4148,1.122,4149,1.275,4150,1.275,4151,1.275,4152,1.122,4153,1.275,4154,2.406,4155,1.275,4156,1.275,4157,1.275,4158,1.122,4159,1.275,4160,1.275,4161,1.275,4162,1.122,4163,1.275,4164,3.005,4165,1.275,4166,1.275,4167,1.275,4168,2.683,4169,2.244,4170,1.275,4171,2.244,4172,3.005,4173,1.275,4174,1.275,4175,1.275,4176,1.974,4177,2.244,4178,3.005,4179,1.275,4180,1.275,4181,1.275,4182,1.275,4183,1.275,4184,1.275,4185,1.122,4186,1.275,4187,2.244,4188,1.275,4189,1.275,4190,5.487,4191,1.275,4192,1.122,4193,1.021,4194,1.275,4195,1.275,4196,1.275,4197,0.945,4198,1.275,4199,1.275,4200,1.275,4201,1.275,4202,1.275,4203,2.244,4204,3.005,4205,1.275,4206,1.275,4207,1.275,4208,1.275,4209,2.244,4210,1.275,4211,1.275,4212,1.275,4213,1.974,4214,1.275,4215,1.275,4216,1.275,4217,2.244,4218,1.275,4219,1.122,4220,1.275,4221,2.244,4222,1.275,4223,1.275,4224,1.122,4225,1.275,4226,1.275,4227,1.122,4228,1.275,4229,1.275,4230,2.244,4231,1.275,4232,1.275,4233,1.275,4234,1.275,4235,1.275,4236,1.122,4237,1.275,4238,1.275,4239,1.275,4240,1.122,4241,1.122,4242,3.005,4243,1.275,4244,1.275,4245,1.275,4246,1.275,4247,1.275,4248,1.275,4249,2.244,4250,1.275,4251,1.122,4252,1.275,4253,3.005,4254,1.122,4255,1.275,4256,1.275,4257,2.244,4258,1.275,4259,2.244,4260,1.275,4261,1.275,4262,1.275,4263,1.275,4264,1.275,4265,1.275,4266,1.275,4267,2.244,4268,1.275,4269,1.275,4270,1.275,4271,1.275,4272,1.275,4273,1.275,4274,1.275,4275,1.275,4276,7.33,4277,1.275,4278,1.275,4279,4.125,4280,1.122,4281,1.275,4282,1.275,4283,2.244,4284,1.275,4285,1.275,4286,1.275,4287,1.275,4288,1.275,4289,1.275,4290,1.275,4291,1.122,4292,1.275,4293,1.275,4294,1.122,4295,1.275,4296,1.275,4297,1.275,4298,1.275,4299,2.244,4300,1.275,4301,1.275,4302,1.275,4303,1.275,4304,1.021,4305,1.275,4306,1.275,4307,1.275,4308,4.125,4309,1.275,4310,1.275,4311,1.275,4312,1.275,4313,1.275,4314,1.275,4315,1.275,4316,1.275,4317,1.275,4318,1.275,4319,1.275,4320,1.275,4321,1.275,4322,2.244,4323,1.275,4324,1.275,4325,2.244,4326,1.275,4327,1.275,4328,1.275,4329,2.244,4330,1.275,4331,1.275,4332,1.275,4333,1.275,4334,1.275,4335,1.122,4336,2.244,4337,1.275,4338,2.244,4339,1.275,4340,1.275,4341,1.275,4342,1.122,4343,2.244]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[13,0.998,545,1.195,1394,1.368,4060,1.855,4133,1.966]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.162,2,0.475,3,0.111,4,0.092,5,0.218,11,0.838,13,1.296,16,0.263,19,0.807,22,0.799,25,0.01,26,1.071,39,0.23,43,0.282,47,2.781,48,2.4,52,1.915,55,0.006,56,0.004,57,0.003,63,1.355,64,3.458,65,1.106,73,1.42,80,0.982,81,0.763,84,2.163,86,2.726,87,1.031,91,1.552,92,2.878,111,1.843,113,2.897,114,1.5,119,3.02,120,2.177,121,3.124,125,2.792,127,0.616,130,1.373,143,1.241,144,1.728,146,2.645,147,1.418,149,1.334,150,1.423,156,3.362,163,1.355,166,1.504,184,0.555,186,1.596,191,0.908,202,2.226,204,3.094,206,2.986,209,2.715,215,1.698,216,1.834,222,0.616,246,2.864,248,1.423,264,1.698,272,2.081,273,1.59,274,2.862,276,2.608,278,2.409,279,0.998,304,2.864,314,2.081,328,1.355,358,1.58,360,1.603,364,1.773,389,1.994,413,0.451,428,1.031,430,1.192,438,1.5,441,3.134,443,1.241,455,2.285,460,1.295,467,2.864,471,3.145,478,1.776,480,3.379,491,1.067,493,1.5,502,3.419,528,1.295,530,2.792,544,3.422,545,1.945,546,1.295,548,1.834,550,1.698,555,1.834,557,3.493,578,3.24,587,1.067,596,1.373,604,1.423,605,3.271,606,3.215,609,3.02,610,1.5,611,1.5,612,1.5,614,2.461,617,1.59,618,1.106,622,1.355,627,2.409,632,1.423,636,1.59,655,1.295,672,2.015,683,1.5,686,1.423,717,3.02,719,2.862,754,3.692,756,2.946,766,3.362,767,1.5,774,1.698,778,1.59,781,1.423,783,2.081,797,2.177,815,1.59,851,1.698,852,2.285,859,1.698,884,1.59,899,2.728,917,2.608,922,2.554,924,1.355,945,1.241,948,3.215,954,3.347,956,1.5,979,2.409,1014,1.59,1027,2.081,1054,1.698,1056,2.554,1063,1.5,1072,3.592,1078,1.698,1081,1.59,1097,2.015,1098,2.015,1099,2.015,1100,2.015,1101,2.015,1102,2.015,1111,1.834,1130,3.201,1208,1.5,1261,2.015,1301,1.5,1366,1.994,1422,1.994,1423,1.834,1459,1.106,1466,1.5,1474,1.834,1506,1.423,1545,1.59,1547,1.834,1549,1.698,1569,4.419,1583,1.355,1606,3.201,1613,1.59,1666,1.5,1687,3.692,1690,1.834,1702,1.355,1705,2.864,1710,4.227,1712,3.419,1745,1.59,1746,3.201,1808,2.015,1857,2.015,1945,2.015,1977,2.554,1982,1.423,2005,2.554,2007,1.698,2035,1.698,2037,1.698,2038,2.728,2124,2.081,2178,1.698,2182,1.59,2184,1.834,2190,1.834,2191,2.409,2196,1.59,2197,1.698,2217,1.59,2242,3.692,2253,1.834,2289,1.698,2300,2.554,2305,2.728,2313,2.015,2315,2.015,2354,4.015,2366,2.554,2397,2.015,2403,1.834,2405,2.015,2412,1.5,2417,1.59,2420,2.015,2438,2.015,2439,2.015,2521,2.015,2571,1.423,2640,1.698,2676,1.698,2696,2.946,2731,2.015,2756,1.834,2859,1.5,3113,1.834,3123,4.834,3128,1.59,3131,2.015,3132,1.5,3138,3.915,3139,1.423,3148,2.015,3156,1.59,3157,2.015,3168,1.834,3173,1.834,3174,3.915,3177,2.015,3179,2.015,3210,2.015,3225,1.834,3227,2.015,3256,1.698,3266,1.698,3279,4.015,3288,1.698,3302,2.015,3307,1.5,3328,1.834,3337,1.834,3338,2.015,3340,1.698,3346,1.5,3360,2.015,3369,1.834,3375,1.834,3397,1.59,3404,1.698,3433,2.554,3445,2.015,3466,1.59,3503,1.59,3559,1.834,3571,1.59,3609,2.946,3686,4.057,3723,2.946,3733,2.728,3758,2.015,3764,1.5,3784,2.015,3833,1.834,3848,3.915,3849,3.692,3855,4.834,3862,3.692,3895,3.692,3917,3.02,3941,2.015,3954,2.015,3960,2.015,4001,1.834,4005,2.015,4041,2.946,4060,3.02,4063,2.015,4074,1.698,4094,3.692,4110,2.015,4126,6.169,4128,2.015,4132,2.946,4133,4.015,4148,2.015,4152,2.015,4154,1.834,4162,2.015,4168,1.698,4176,2.015,4185,3.237,4192,4.057,4197,2.728,4224,2.015,4227,3.237,4241,4.057,4251,3.237,4291,3.237,4294,2.015,4344,1.834,4345,2.015,4346,2.29,4347,4.611,4348,2.29,4349,5.71,4350,2.946,4351,2.29,4352,2.29,4353,3.679,4354,5.28,4355,2.29,4356,2.29,4357,2.29,4358,2.29,4359,2.29,4360,2.29,4361,2.29,4362,3.679,4363,2.29,4364,5.088,4365,2.29,4366,2.29,4367,2.015,4368,3.679,4369,4.611,4370,2.29,4371,2.29,4372,2.29,4373,2.29,4374,2.29,4375,2.29,4376,2.015,4377,3.679,4378,2.29,4379,1.834,4380,2.29,4381,2.29,4382,2.29,4383,2.29,4384,2.29,4385,2.29,4386,2.29,4387,2.29,4388,3.679,4389,3.679,4390,2.29,4391,2.015,4392,3.237,4393,2.29,4394,2.29,4395,2.29,4396,2.29,4397,2.29,4398,2.29,4399,2.29,4400,2.29,4401,2.29,4402,2.29,4403,2.29,4404,2.29,4405,2.29,4406,2.29,4407,2.29,4408,2.29,4409,2.29,4410,2.29,4411,2.29,4412,2.29,4413,2.29,4414,2.29,4415,1.698,4416,2.29,4417,2.29,4418,2.29,4419,2.29,4420,2.29,4421,2.015,4422,2.29,4423,2.29,4424,2.29,4425,2.29,4426,2.29,4427,2.29,4428,2.29,4429,2.015,4430,2.29,4431,2.29,4432,1.698,4433,2.29,4434,2.015,4435,2.29,4436,2.29,4437,2.29,4438,2.29,4439,2.29,4440,2.29,4441,2.29,4442,2.29,4443,2.29,4444,2.015,4445,2.29]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[545,1.195,1394,1.368,3855,1.966,4074,2.1,4446,2.492]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[13,1.832,22,0.426,25,0.01,32,0.604,46,2.884,49,1.519,52,3.177,53,3.23,55,0.004,56,0.006,57,0.004,64,2.359,73,1.398,80,1.107,81,1.386,98,1.622,130,1.345,137,1.999,144,2.409,147,1.136,149,1.306,156,3.565,166,2.896,169,4.163,176,2.037,186,0.994,204,2.605,207,1.472,208,2.818,209,2.719,264,3.855,274,4.126,275,4.236,276,2.037,277,2.037,278,2.359,279,3.216,304,2.237,307,4.163,310,2.237,311,2.671,312,2.359,353,1.875,361,1.875,364,2.346,374,3.405,381,1.804,387,2.511,413,0.709,442,4.524,460,3.779,480,1.875,503,2.359,511,1.804,521,2.5,528,2.037,530,2.511,544,4.611,578,1.569,587,2.423,606,4.133,611,2.359,612,2.359,614,2.423,685,2.5,686,2.237,698,2.5,712,2.359,719,2.818,766,3.421,774,2.671,778,2.5,850,2.5,854,1.875,915,3.791,917,2.941,948,3.177,957,2.5,988,1.952,992,2.359,1013,2.359,1027,2.037,1054,2.671,1214,2.359,1308,2.359,1337,2.5,1348,3.169,1380,3.169,1459,1.739,1466,2.359,1506,2.237,1510,2.359,1551,2.884,1569,2.359,1576,4.575,1601,2.5,1604,2.671,1644,2.5,1681,2.5,1731,2.237,1782,5.369,1784,2.671,1811,3.169,1982,3.23,2005,4.236,2036,2.671,2038,2.671,2155,2.884,2163,2.671,2191,2.359,2195,4.163,2253,2.884,2291,2.5,2320,2.884,2359,2.5,2377,4.163,2412,2.359,2417,4.919,2515,2.671,2526,2.884,2655,3.61,2696,4.163,2720,2.884,2761,2.671,2859,3.405,2878,2.671,3018,2.884,3109,2.5,3123,2.5,3125,3.61,3128,2.5,3129,3.61,3132,2.359,3165,2.884,3167,2.671,3225,4.163,3250,5.475,3256,2.671,3266,2.671,3279,3.61,3307,2.359,3346,3.405,3397,3.61,3466,2.5,3503,3.61,3571,2.5,3710,2.884,3733,2.671,3752,3.169,3764,2.359,3802,2.884,3816,2.671,3829,4.575,3830,2.884,3844,2.884,3855,5.865,3917,2.359,3998,2.884,4031,2.671,4041,2.884,4060,4.376,4070,3.169,4074,3.855,4075,3.169,4117,2.884,4119,2.884,4126,5.254,4168,2.671,4197,3.855,4219,3.169,4240,3.169,4280,3.169,4304,2.884,4344,2.884,4349,4.575,4367,4.575,4415,2.671,4429,3.169,4432,2.671,4434,3.169,4446,3.169,4447,3.602,4448,3.602,4449,3.602,4450,3.602,4451,3.602,4452,3.602,4453,3.602,4454,3.602,4455,5.2,4456,3.602,4457,3.602,4458,3.602,4459,3.602,4460,3.602,4461,3.602,4462,3.602,4463,3.602,4464,3.602,4465,3.602,4466,3.602,4467,3.602,4468,3.602,4469,3.602,4470,3.169,4471,3.602,4472,3.602,4473,3.602,4474,3.169,4475,3.602,4476,3.602,4477,3.169,4478,3.602,4479,3.602,4480,3.602,4481,3.602,4482,3.602,4483,3.602,4484,4.575,4485,3.602,4486,3.602,4487,3.602,4488,3.602,4489,3.602,4490,3.602,4491,3.602,4492,3.602,4493,3.602,4494,3.602,4495,3.602,4496,3.602,4497,3.602,4498,3.602,4499,3.602,4500,3.602,4501,3.602,4502,3.602,4503,3.602,4504,3.602,4505,3.602,4506,3.602,4507,3.602,4508,3.602,4509,3.602,4510,3.602,4511,3.602,4512,3.602,4513,3.602,4514,3.602,4515,3.169,4516,3.602,4517,2.884,4518,3.602,4519,3.169,4520,3.602,4521,3.602,4522,3.602,4523,3.602,4524,2.884]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[306,1.759,545,1.195,1394,1.368,3764,1.855,4068,2.267]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.131,13,2.372,14,2.34,15,1.66,16,0.517,19,1.521,21,4.728,25,0.01,26,0.685,29,2.413,32,1.388,39,0.421,43,0.197,46,3.456,47,2.659,48,3.504,49,3.197,53,2.681,55,0.005,56,0.007,57,0.007,62,2.681,63,2.554,65,3.66,84,2.038,111,2.958,127,1.161,130,1.611,143,2.34,159,4.182,199,3.456,202,2.084,204,3.372,206,2.441,209,2.411,222,2.038,272,2.441,274,4.108,275,2.997,276,3.34,277,2.441,279,1.88,301,3.495,304,2.681,306,3.669,310,2.681,312,4.74,318,3.2,413,1.162,448,3.495,491,2.012,504,1.944,505,4.247,511,4.145,527,3.798,528,3.34,529,2.441,530,2.851,531,2.997,539,3.456,540,4.1,544,2.554,545,2.491,546,3.807,578,2.573,607,2.084,609,2.827,655,2.441,686,4.182,687,5.068,716,3.669,720,3.456,766,2.084,783,3.34,832,3.669,837,3.798,838,3.456,840,3.798,844,3.798,846,3.798,847,3.798,852,2.681,854,3.074,909,2.997,911,3.798,914,2.554,922,4.1,924,3.495,945,2.34,948,3.074,1027,2.441,1110,4.379,1206,3.798,1355,3.798,1366,2.34,1545,2.997,1673,3.456,1797,3.2,1974,2.827,2124,2.441,2182,2.997,2289,3.2,2423,3.798,2476,3.2,2627,4.728,3122,2.997,3139,2.681,3352,3.798,3479,3.798,3723,3.456,3764,2.827,3768,3.456,4037,3.798,4068,4.728,4193,3.456,4236,3.798,4350,3.456,4376,3.798,4379,3.456,4415,3.2,4421,3.798,4432,3.2,4444,3.798,4524,3.456,4525,4.317,4526,7.238,4527,4.317,4528,4.317,4529,7.238,4530,3.798,4531,4.317,4532,4.317,4533,6.732,4534,4.317,4535,4.317,4536,4.317,4537,4.317,4538,5.906,4539,4.317,4540,4.317,4541,4.317,4542,4.317,4543,3.798,4544,4.317,4545,5.906,4546,4.317,4547,4.317,4548,4.317,4549,4.317,4550,4.317,4551,4.317,4552,4.317,4553,4.317,4554,4.317,4555,4.317,4556,4.317,4557,4.317]],["title/additional-documentation/nestjs-application/testing.html",[545,1.577,858,2.322,1394,1.805]],["body/additional-documentation/nestjs-application/testing.html",[0,0.064,2,0.351,13,2.001,16,0.314,22,0.519,24,0.351,25,0.01,26,0.592,37,0.41,39,0.179,47,0.762,49,2.98,55,0.006,56,0.003,57,0.003,62,2.316,63,2.904,65,0.817,73,1.865,80,1.045,81,0.595,84,1.781,86,1.07,87,1.679,91,1.572,98,0.762,111,1.867,113,0.848,120,1.696,130,2.756,131,1.489,132,1.489,138,0.692,141,0.762,143,3.488,144,1.114,146,0.848,147,0.37,148,0.917,149,1.933,150,1.78,154,1.489,156,1.8,166,3.053,176,2.108,192,0.493,202,4.021,204,1.436,206,0.957,208,2.02,209,2.515,213,1.99,215,1.255,222,1.18,223,1.422,233,1.051,236,1.175,239,2.522,241,2.984,245,0.957,248,1.051,254,0.789,273,1.175,274,2.02,276,1.621,278,1.877,279,2.138,301,1.002,308,1.355,310,1.78,323,0.671,356,0.957,358,1.826,387,0.817,396,1.051,426,0.762,427,0.737,430,1.941,441,0.817,470,1.051,471,2.044,478,4.021,480,2.555,482,4.689,491,0.789,494,3.929,495,2.555,496,3.512,497,3.639,502,1.255,503,2.873,508,1.255,511,1.436,528,2.108,530,0.817,540,1.175,542,2.295,543,2.522,544,3.36,546,0.957,578,1.911,584,1.108,589,0.917,604,1.051,606,0.881,607,1.8,614,2.646,626,1.492,632,1.78,636,1.175,646,1.175,655,3.746,656,1.108,660,2.125,681,1.255,687,1.051,698,4.985,714,1.175,716,3.311,717,2.873,719,2.889,734,2.125,755,1.002,757,1.355,762,1.108,763,1.99,766,3.198,778,1.175,782,1.489,800,1.355,801,1.175,802,1.255,821,1.553,831,1.355,832,1.051,849,1.355,852,1.78,854,2.284,855,1.877,858,4.777,912,1.255,913,1.489,914,1.002,915,1.051,916,1.489,918,3.253,922,1.175,924,2.206,945,0.917,948,2.555,957,1.99,963,1.355,964,2.125,965,1.99,970,1.489,972,1.002,981,1.255,983,1.108,992,3.49,995,2.125,998,1.175,1000,1.489,1014,1.175,1015,1.355,1025,3.049,1027,0.957,1050,2.125,1054,2.125,1060,1.489,1070,1.002,1072,1.051,1084,1.108,1086,1.051,1123,1.489,1201,2.316,1208,3.214,1209,2.441,1214,3.214,1252,1.489,1301,2.873,1308,2.441,1345,1.355,1346,1.355,1366,0.917,1410,1.108,1422,0.917,1447,1.99,1472,2.441,1475,1.175,1506,1.051,1543,1.255,1549,1.255,1553,4.319,1569,4.074,1583,1.696,1593,1.255,1601,2.588,1603,1.255,1604,2.764,1606,4.904,1612,3.7,1613,1.175,1614,1.108,1615,1.355,1666,1.108,1678,1.175,1688,1.175,1696,1.489,1702,1.696,1713,2.522,1714,2.984,1731,1.051,1743,1.489,1746,3.046,1784,1.255,1805,2.522,1823,1.355,1824,1.489,1843,1.489,1849,4.318,1861,1.108,1870,1.355,1873,2.295,1894,4.996,1922,1.489,1946,1.255,1964,1.489,1970,1.355,1974,1.877,1982,3.049,1983,1.355,2003,3.512,2007,1.255,2013,1.355,2035,1.255,2038,1.255,2079,1.489,2089,1.489,2109,1.489,2124,3.995,2163,2.125,2172,2.588,2180,1.489,2182,3.7,2184,1.355,2190,1.355,2191,1.877,2193,1.355,2196,3.7,2206,1.489,2217,1.99,2230,1.489,2247,1.355,2279,1.99,2280,1.355,2291,1.175,2305,3.952,2320,1.355,2332,2.984,2351,1.355,2356,2.295,2359,1.175,2361,1.489,2366,1.99,2370,1.355,2417,1.99,2425,1.489,2434,2.984,2517,1.355,2532,1.489,2558,3.28,2571,1.051,2578,1.255,2615,1.355,2627,1.355,2641,1.99,2647,1.355,2655,3.407,2676,1.255,2683,4.996,2690,2.125,2766,1.255,2792,1.489,2796,1.355,2822,1.489,2859,1.108,2875,1.489,2901,1.355,3008,2.125,3048,1.489,3072,1.355,3109,3.942,3123,3.046,3125,1.99,3129,1.99,3132,1.108,3156,1.99,3165,2.295,3167,1.255,3168,1.355,3173,1.355,3188,1.255,3200,1.355,3209,1.489,3223,1.255,3228,1.489,3249,1.355,3250,2.764,3253,1.355,3260,2.522,3279,1.175,3288,1.255,3298,1.489,3306,1.489,3307,1.108,3337,1.355,3340,2.125,3346,2.873,3347,1.489,3363,2.295,3371,1.355,3373,1.355,3392,1.489,3397,1.175,3401,1.489,3404,1.255,3433,1.175,3446,1.489,3459,1.489,3462,1.355,3466,1.175,3471,1.489,3522,1.355,3528,1.489,3539,5.662,3581,1.355,3707,1.489,3768,1.355,3775,1.355,3781,1.489,3782,1.489,3800,3.86,3816,1.255,3848,2.764,3852,1.489,3855,1.175,3868,1.489,3875,1.99,3895,1.355,3896,1.489,3917,1.108,3998,1.355,4012,1.489,4031,4.427,4034,1.489,4036,1.489,4043,1.489,4067,1.489,4094,1.355,4098,1.489,4109,1.489,4117,1.355,4120,2.522,4126,4.772,4132,1.355,4133,3.407,4136,1.489,4137,1.489,4145,1.355,4154,1.355,4158,3.86,4168,1.255,4193,1.355,4197,3.253,4254,1.489,4304,2.984,4342,2.522,4344,3.512,4345,1.489,4350,1.355,4364,1.489,4379,1.355,4391,1.489,4392,1.489,4415,3.639,4432,4.427,4470,1.489,4474,1.489,4477,1.489,4484,1.489,4515,4.318,4519,1.489,4524,2.295,4530,1.489,4543,1.489,4558,2.866,4559,1.693,4560,1.693,4561,1.693,4562,1.693,4563,1.693,4564,1.693,4565,1.693,4566,1.693,4567,1.693,4568,1.693,4569,1.693,4570,1.693,4571,1.693,4572,1.693,4573,2.866,4574,1.693,4575,1.693,4576,1.693,4577,1.693,4578,1.693,4579,1.693,4580,1.693,4581,1.693,4582,1.693,4583,1.693,4584,1.693,4585,1.693,4586,1.693,4587,1.693,4588,1.693,4589,1.693,4590,1.693,4591,1.693,4592,1.693,4593,1.693,4594,1.693,4595,1.693,4596,1.693,4597,1.693,4598,1.693,4599,1.693,4600,1.693,4601,1.693,4602,1.693,4603,1.489,4604,3.728,4605,1.693,4606,3.728,4607,2.866,4608,4.908,4609,2.866,4610,3.728,4611,1.693,4612,4.387,4613,1.693,4614,1.693,4615,2.866,4616,1.693,4617,1.693,4618,1.693,4619,1.693,4620,1.693,4621,1.693,4622,1.693,4623,1.693,4624,5.33,4625,1.693,4626,1.693,4627,1.693,4628,1.693,4629,1.693,4630,1.693,4631,1.693,4632,1.693,4633,1.693,4634,1.693,4635,1.693,4636,1.693,4637,2.866,4638,1.693,4639,2.866,4640,1.693,4641,1.693,4642,1.693,4643,2.866,4644,1.693,4645,1.693,4646,1.693,4647,3.728,4648,2.866,4649,2.866,4650,1.693,4651,1.693,4652,4.387,4653,1.693,4654,1.693,4655,1.693,4656,1.693,4657,1.693,4658,1.693,4659,1.693,4660,2.866,4661,1.693,4662,2.866,4663,1.693,4664,2.866,4665,1.693,4666,1.693,4667,1.693,4668,1.693,4669,1.693,4670,2.866,4671,2.866,4672,1.693,4673,2.866,4674,1.693,4675,1.693,4676,2.866,4677,1.693,4678,1.693,4679,1.693,4680,1.693,4681,1.693,4682,1.693,4683,2.866,4684,4.387,4685,1.693,4686,1.693,4687,1.693,4688,1.693,4689,1.693,4690,1.693,4691,2.866,4692,1.693,4693,1.693,4694,2.866,4695,1.693,4696,1.693,4697,1.693,4698,1.693,4699,1.693,4700,1.693,4701,1.693,4702,1.693,4703,1.693,4704,1.693,4705,1.693,4706,2.866,4707,1.693,4708,1.693,4709,1.693,4710,1.693,4711,1.693,4712,1.693,4713,1.693,4714,1.693,4715,1.693,4716,1.693,4717,1.693,4718,1.693,4719,1.693,4720,1.693,4721,1.693,4722,1.693,4723,1.693,4724,1.693,4725,1.693,4726,1.693,4727,1.693,4728,1.693,4729,1.693,4730,1.693,4731,1.693,4732,1.693,4733,1.693,4734,1.693,4735,1.693,4736,1.693,4737,1.693,4738,1.693,4739,1.693]],["title/additional-documentation/nestjs-application/decisions.html",[545,1.577,1394,1.805,4517,2.993]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.47,25,0.009,47,2.571,55,0.006,56,0.008,57,0.006,147,1.247,156,3.422,184,1.384,186,1.576,192,1.661,201,3.546,209,2.568,214,3.739,248,3.546,277,3.229,341,3.378,428,3.192,490,4.233,491,2.66,495,2.972,530,2.757,607,2.757,611,4.642,612,3.739,626,2.972,655,3.229,759,3.739,763,3.963,766,2.757,923,5.023,948,2.972,953,3.229,972,4.562,992,3.739,1014,3.963,1301,4.642,1366,3.094,1575,5.675,1583,4.194,1681,3.963,1772,4.571,1861,3.739,1953,4.571,1977,3.963,2064,5.023,2119,5.716,2124,3.229,2146,4.571,2275,5.049,2293,5.023,2354,3.963,2412,3.739,2488,5.675,2510,5.023,2571,3.546,2714,5.023,3122,3.963,3307,3.739,3748,4.571,3830,4.571,4060,3.739,4119,5.675,4133,3.963,4145,4.571,4335,5.023,4517,5.675,4603,5.023,4740,5.709,4741,5.709,4742,5.709,4743,5.709,4744,5.709,4745,5.709,4746,5.709,4747,5.709,4748,5.709,4749,7.089,4750,5.709,4751,5.709,4752,5.709,4753,5.709,4754,5.709,4755,5.709,4756,5.709,4757,5.709,4758,5.709,4759,5.709,4760,5.709,4761,5.709,4762,5.709]],["title/additional-documentation/nestjs-application/vscode.html",[545,1.577,1394,1.805,4052,2.993]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.223,25,0.009,52,3.897,55,0.007,56,0.008,57,0.007,202,3.615,278,4.089,279,3.261,306,3.879,478,3.015,530,3.615,618,3.615,948,3.25,1229,4.334,1550,4.089,1583,3.695,1614,4.089,1643,4.629,1705,4.65,1712,4.629,1730,4.089,1784,4.629,2115,4.629,2124,3.531,2191,4.089,2403,5.994,2736,4.999,3139,3.879,3140,6.586,3357,4.334,3468,5.493,3819,7.054,3846,5.493,3875,5.197,3917,4.089,3947,4.999,4050,5.493,4052,5.994,4053,5.493,4763,6.244,4764,6.244,4765,6.244,4766,6.244,4767,6.244,4768,6.244,4769,6.244,4770,6.244,4771,6.244,4772,6.244]],["title/additional-documentation/nestjs-application/git.html",[545,1.577,1394,1.805,3172,2.993]],["body/additional-documentation/nestjs-application/git.html",[25,0.009,55,0.008,56,0.009,57,0.008,314,3.854,427,2.968,852,4.233,854,3.547,945,3.693,956,4.462,2797,4.73,2894,5.844,3172,6.658,4213,5.995,4773,6.814,4774,6.814,4775,6.814,4776,6.814,4777,6.814]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":988,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":3036,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":3073,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":3084,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":2998,"title":{},"body":{"dependencies.html":{}}}],["0.21.0",{"_index":2988,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":2997,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":3062,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":3096,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":3088,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":3055,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":3047,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":3087,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":2982,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":3040,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2903,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2939,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2945,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2934,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2914,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2923,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2902,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2936,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2921,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2932,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2944,"title":{},"body":{"coverage.html":{}}}],["0000d224816abba584714c9c",{"_index":4713,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":4715,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":1768,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":1763,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1908,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1760,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2436,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":1723,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1756,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1903,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1025,"title":{},"body":{"classes/MongoSharedConnection.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":3063,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3076,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":3023,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":3010,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":3058,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":4660,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":3020,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":3104,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":3074,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":2993,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":4662,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":2989,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":2421,"title":{},"body":{"changelog.html":{}}}],["1.28.1",{"_index":3026,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":2968,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":3001,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2905,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2913,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2911,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2935,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2940,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2933,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2952,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2943,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1392,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":2904,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["11",{"_index":1741,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["12",{"_index":2152,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["12.0.0",{"_index":3065,"title":{},"body":{"dependencies.html":{}}}],["1289",{"_index":2281,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":1901,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["1316",{"_index":2519,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1750,"title":{},"body":{"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["1499",{"_index":1796,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1735,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["1508",{"_index":1836,"title":{},"body":{"changelog.html":{}}}],["1589",{"_index":2324,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1724,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":3021,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":1930,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":2176,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":1985,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["19",{"_index":1886,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":3420,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":4756,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":4755,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":2003,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":3024,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":3038,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":3059,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":3083,"title":{},"body":{"dependencies.html":{}}}],["2.306.0",{"_index":2987,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":2985,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":3005,"title":{},"body":{"dependencies.html":{}}}],["2/7",{"_index":2946,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1879,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["2007",{"_index":3184,"title":{},"body":{"license.html":{}}}],["2020",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1722,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["22.10.0",{"_index":2764,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":2762,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":2759,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":2898,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":2867,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":2866,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":2861,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":2835,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":2829,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":2824,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":2858,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":2812,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":2854,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":2852,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":2849,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":2843,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":2841,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":2837,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":2836,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2452,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["23.0.0",{"_index":2750,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":2745,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":2710,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":2605,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":2612,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":2553,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["2418",{"_index":1770,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1924,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["25.0.0",{"_index":2539,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":2500,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":2525,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":2518,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":2511,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":2507,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":2472,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":2467,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":2435,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":2431,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":2429,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":2428,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":2463,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":2462,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":2456,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":2446,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":2168,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":2387,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":2385,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":2382,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":2375,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":2374,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":2204,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":2198,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":2166,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":2164,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":2159,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":2156,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":2150,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":2147,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":2112,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":2111,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":2061,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":2060,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":2058,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":2056,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":2049,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":2107,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":2055,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":2086,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":2075,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":2072,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":2065,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":2010,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":2008,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":1938,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":1933,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":1959,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":1955,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":1998,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":1995,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":1993,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":1989,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":1984,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":1966,"title":{},"body":{"changelog.html":{}}}],["26.0",{"_index":1934,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":1937,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":1902,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":1900,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":1895,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":1892,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":1888,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":1885,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":1878,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":1936,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":1929,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":1923,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":1920,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":1916,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":1914,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":1907,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":1906,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":1865,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":1767,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":1762,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":1759,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":1755,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":1749,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":1740,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":1734,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":1729,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":1727,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":1721,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":2699,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":2447,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["29",{"_index":1921,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":2874,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":3871,"title":{},"body":{"todo.html":{}}}],["3",{"_index":1601,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":3069,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":3078,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":4706,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":3066,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":3057,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":3102,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":3079,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":2931,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1917,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030",{"_index":3930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":1909,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":2910,"title":{},"body":{"coverage.html":{}}}],["3395",{"_index":2791,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":2772,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":2784,"title":{},"body":{"changelog.html":{}}}],["37",{"_index":3843,"title":{},"body":{"overview.html":{}}}],["3719",{"_index":2765,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":2884,"title":{},"body":{"changelog.html":{}}}],["3821",{"_index":2895,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":2790,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":2778,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":2801,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":2862,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2641,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":2995,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":3092,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":3016,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":3033,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":2970,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":2999,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":2963,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":2969,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3017,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":2976,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":3127,"title":{},"body":{"index.html":{}}}],["4/5",{"_index":2927,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2929,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":2942,"title":{},"body":{"coverage.html":{}}}],["4008",{"_index":2781,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":2779,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":3883,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":2813,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":2751,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":4555,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":720,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":2786,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":2795,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":2830,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["4215",{"_index":2825,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":2941,"title":{},"body":{"coverage.html":{}}}],["4506",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":2654,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":2215,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":2746,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":1823,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":2984,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":3101,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":3019,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":3061,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":3041,"title":{},"body":{"dependencies.html":{}}}],["5/21",{"_index":2938,"title":{},"body":{"coverage.html":{}}}],["5/27",{"_index":2937,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2912,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":4546,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":1847,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":2492,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":2660,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":2613,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":2094,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":2227,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":2551,"title":{},"body":{"changelog.html":{}}}],["5686",{"_index":2663,"title":{},"body":{"changelog.html":{}}}],["57",{"_index":2928,"title":{},"body":{"coverage.html":{}}}],["5733",{"_index":2689,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":2650,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":2575,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":4714,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":1824,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":3003,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2978,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":1883,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.6.6",{"_index":3080,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":3067,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2930,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["6060",{"_index":2297,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":2294,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":2347,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":1715,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":2593,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":2481,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":2401,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":2573,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":2568,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["6637",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":2546,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":1941,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":2228,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":2274,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":2563,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":2376,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":2477,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":2399,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":2473,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":2396,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":1821,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":2524,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":2409,"title":{},"body":{"changelog.html":{}}}],["6b",{"_index":3499,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3517,"title":{},"body":{"license.html":{}}}],["7",{"_index":1565,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":3006,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":2974,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":2973,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":3015,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":2972,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":2971,"title":{},"body":{"dependencies.html":{}}}],["7021",{"_index":1844,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":2391,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":2236,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["7115",{"_index":2508,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":2468,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":2243,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":2234,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":2287,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":2445,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":2333,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":2235,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":2298,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":2241,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":2457,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":2342,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":2194,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":2261,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":2337,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":2334,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":2267,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":2214,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":2358,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":2246,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":2430,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":2432,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":2386,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":2188,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":2029,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":2113,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":2207,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":2208,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":1787,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":2365,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":1783,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":1831,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":2165,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2582,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":3099,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":1884,"title":{},"body":{"changelog.html":{}}}],["8.5.0",{"_index":2980,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":3028,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":2926,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["8020",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":2021,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":2123,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":2199,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":4013,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["8101",{"_index":2169,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":2160,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":2128,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":2108,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":2027,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":1960,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":2039,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":2136,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":2157,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":1776,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["8300",{"_index":2044,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":2100,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":2105,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":1779,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":2087,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":1781,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":1997,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":2054,"title":{},"body":{"changelog.html":{}}}],["8440",{"_index":1814,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":2080,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":2057,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":2076,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":2059,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":1842,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":2066,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":2062,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":2011,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":1947,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":2030,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":2050,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":1826,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":1950,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":1910,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":1858,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":1869,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":1880,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":1915,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":1853,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":1925,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":1918,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":1789,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":1876,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":1757,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":1904,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":1887,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":1866,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":1893,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":1896,"title":{},"body":{"changelog.html":{}}}],["8933",{"_index":1855,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":1889,"title":{},"body":{"changelog.html":{}}}],["8959",{"_index":1708,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":1792,"title":{},"body":{"changelog.html":{}}}],["9003",{"_index":1694,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":1742,"title":{},"body":{"changelog.html":{}}}],["9018",{"_index":1693,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":1736,"title":{},"body":{"changelog.html":{}}}],["9055",{"_index":1816,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":1809,"title":{},"body":{"changelog.html":{}}}],["9092",{"_index":1703,"title":{},"body":{"changelog.html":{}}}],["9093",{"_index":1698,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":1764,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":1751,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":1728,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":4020,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":1398,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":3147,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":454,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":672,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":695,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":708,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":4346,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":696,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":710,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":4029,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":183,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["_queries",{"_index":1282,"title":{},"body":{"classes/NewsScope.html":{}}}],["_timeout",{"_index":1616,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.m",{"_index":3176,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":4599,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":3559,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":3174,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":3444,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":3809,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":272,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstraction",{"_index":4267,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accept",{"_index":3639,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":3638,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":3860,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["accepts",{"_index":2800,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":480,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":4332,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":383,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["accessible",{"_index":2352,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":2367,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessors",{"_index":1286,"title":{},"body":{"classes/NewsScope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":3484,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":3813,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":3255,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3443,"title":{},"body":{"license.html":{}}}],["according",{"_index":1773,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":802,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":800,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":2410,"title":{},"body":{"changelog.html":{}}}],["achieve",{"_index":3817,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":3383,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3688,"title":{},"body":{"license.html":{}}}],["act",{"_index":4598,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["actions",{"_index":2736,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":2880,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":896,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":3300,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3729,"title":{},"body":{"license.html":{}}}],["actors",{"_index":4455,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":3710,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":3538,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":3278,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":4124,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":945,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":3982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":917,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":1785,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":545,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":4421,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":4010,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1283,"title":{},"body":{"classes/NewsScope.html":{}}}],["addquery(query",{"_index":1288,"title":{},"body":{"classes/NewsScope.html":{}}}],["address",{"_index":3763,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3273,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":2378,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":2131,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adduser",{"_index":1860,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":4481,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":1684,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":2232,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":2876,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":2552,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":1868,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":3418,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3565,"title":{},"body":{"license.html":{}}}],["advised",{"_index":3801,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3566,"title":{},"body":{"license.html":{}}}],["affero",{"_index":3182,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3669,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3380,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":4669,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":4671,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach",{"_index":4592,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":4721,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":4590,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":2634,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":3433,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":4244,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":3471,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":4144,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":4121,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":4335,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["agpl",{"_index":3837,"title":{},"body":{"license.html":{}}}],["agree",{"_index":3746,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":3788,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":4452,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":3697,"title":{},"body":{"license.html":{}}}],["aims",{"_index":4061,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":2979,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":1899,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":2331,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":872,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":3902,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":4114,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":2520,"title":{},"body":{"changelog.html":{}}}],["alleging",{"_index":3676,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1784,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":1506,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":1643,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":4588,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":3446,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":1229,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":3238,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3495,"title":{},"body":{"license.html":{}}}],["always",{"_index":4145,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":1875,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amqplib",{"_index":2981,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":2871,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":4037,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":3095,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":3640,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":4614,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":3231,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":4356,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":4338,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":4110,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":4693,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["anti",{"_index":3406,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":2384,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":3456,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3287,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":4406,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":47,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"controllers/ServerController.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api_path",{"_index":2907,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api_validation_error",{"_index":46,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":3933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":463,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty({description",{"_index":1250,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({enum",{"_index":1271,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":1269,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional",{"_index":1132,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["apipropertyoptional({description",{"_index":1267,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apipropertyoptional({type",{"_index":1264,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":4085,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":1080,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["apitags('news",{"_index":1094,"title":{},"body":{"controllers/NewsController.html":{}}}],["apitags('task",{"_index":1508,"title":{},"body":{"controllers/TaskController.html":{}}}],["apivalidationerror",{"_index":1,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":785,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":76,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":58,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["app",{"_index":717,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":4723,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":4718,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":318,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":317,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":315,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":316,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":2823,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":3900,"title":{},"body":{"todo.html":{}}}],["applicable",{"_index":3292,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":4022,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":279,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["application).service(path",{"_index":641,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["applications",{"_index":3122,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":4420,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":3769,"title":{},"body":{"license.html":{}}}],["apply",{"_index":850,"title":{},"body":{"modules/InterceptorModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":3934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":4727,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":4100,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":3312,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":3438,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":3808,"title":{},"body":{"license.html":{}}}],["apps",{"_index":3969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":3957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":3910,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":3922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":3903,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../create",{"_index":3925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":3929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../empty",{"_index":3926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":3904,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":3906,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../find",{"_index":3108,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":3111,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":3110,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":3907,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":3928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":3909,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":3107,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":3908,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":3927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":3112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":3923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.schema.ts",{"_index":3924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../value",{"_index":3912,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":4005,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":4044,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":3963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":4049,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":3973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":648,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/constants.ts",{"_index":2906,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":303,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":59,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":535,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":537,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":1669,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":526,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":657,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":816,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":597,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["apps/server/src/core/error/server",{"_index":2917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":848,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":830,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":841,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":839,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":845,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":836,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":843,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":931,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":905,"title":{},"body":{"injectables/Logger.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":752,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":1674,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":2922,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":864,"title":{},"body":{"interfaces/JwtConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":2924,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":860,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":798,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":876,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18",{"_index":879,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8",{"_index":877,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":122,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":129,"title":{},"body":{"injectables/AuthorizationService.html":{},"coverage.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":152,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:33",{"_index":142,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:53",{"_index":155,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":135,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":549,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":934,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":616,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":603,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":439,"title":{},"body":{"classes/CreateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":1119,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":1249,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:15",{"_index":1257,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:20",{"_index":1273,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:25",{"_index":1251,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:30",{"_index":1256,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:37",{"_index":1266,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:42",{"_index":1268,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:49",{"_index":1272,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:55",{"_index":1270,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:60",{"_index":1262,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:65",{"_index":1255,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:70",{"_index":1276,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:75",{"_index":1253,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:80",{"_index":1274,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:85",{"_index":1259,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":1439,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":1640,"title":{},"body":{"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":1665,"title":{},"body":{"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":1048,"title":{},"body":{"controllers/NewsController.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:19",{"_index":1055,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:30",{"_index":1064,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:46",{"_index":1067,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:57",{"_index":1077,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:68",{"_index":1059,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/entity/course",{"_index":348,"title":{},"body":{"classes/CourseInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts",{"_index":357,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:101",{"_index":370,"title":{},"body":{"classes/CourseNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:107",{"_index":1609,"title":{},"body":{"classes/TeamNews.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:30",{"_index":1044,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:34",{"_index":1035,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:38",{"_index":1037,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:41",{"_index":1038,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:44",{"_index":1040,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:47",{"_index":1041,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:51",{"_index":1042,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:55",{"_index":1043,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:58",{"_index":1039,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:61",{"_index":1036,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:64",{"_index":1045,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:66",{"_index":1034,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:76",{"_index":1046,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/modules/news/entity/news.entity.ts:95",{"_index":1443,"title":{},"body":{"classes/SchoolNews.html":{}}}],["apps/server/src/modules/news/entity/news.types.ts",{"_index":787,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/entity/school",{"_index":1431,"title":{},"body":{"classes/SchoolInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/team",{"_index":1608,"title":{},"body":{"classes/TeamInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/entity/user",{"_index":1650,"title":{},"body":{"classes/UserInfo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":1140,"title":{},"body":{"classes/NewsMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:28",{"_index":1148,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:42",{"_index":1146,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:55",{"_index":1152,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:7",{"_index":1150,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":1432,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":1658,"title":{},"body":{"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":1202,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":1280,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":1215,"title":{},"body":{"injectables/NewsRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:19",{"_index":1220,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:32",{"_index":1225,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:37",{"_index":1223,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":1316,"title":{},"body":{"injectables/NewsUc.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:102",{"_index":1342,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:126",{"_index":1327,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:13",{"_index":1323,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:137",{"_index":1334,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:157",{"_index":1340,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:175",{"_index":1333,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:185",{"_index":1336,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:25",{"_index":1325,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:52",{"_index":1329,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:78",{"_index":1331,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":1581,"title":{},"body":{"classes/TaskResponse.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:11",{"_index":1589,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:14",{"_index":1586,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:17",{"_index":1588,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":1590,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":1587,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":1592,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":1591,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":1493,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:22",{"_index":1495,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts",{"_index":324,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:13",{"_index":331,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:16",{"_index":330,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:19",{"_index":336,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/course.entity.ts:6",{"_index":329,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts",{"_index":898,"title":{},"body":{"classes/Lesson.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:11",{"_index":901,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/lesson.entity.ts:8",{"_index":902,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts",{"_index":1473,"title":{},"body":{"classes/Submission.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:12",{"_index":1479,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/submission.entity.ts:9",{"_index":1477,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts",{"_index":1482,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:12",{"_index":1485,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:15",{"_index":1489,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:18",{"_index":1484,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:21",{"_index":1487,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/entity/task.entity.ts:9",{"_index":1488,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":1516,"title":{},"body":{"classes/TaskMapper.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:7",{"_index":1518,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":1535,"title":{},"body":{"injectables/TaskRepo.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:12",{"_index":1538,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.schema.ts",{"_index":2947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":1532,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":1594,"title":{},"body":{"injectables/TaskUC.html":{},"coverage.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:12",{"_index":1599,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:9",{"_index":1597,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/server.controller.ts",{"_index":1445,"title":{},"body":{"controllers/ServerController.html":{},"coverage.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":1446,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":1451,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/shared/$1",{"_index":3972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":6,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":271,"title":{},"body":{"classes/BusinessError.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":284,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":286,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":285,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":283,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:26",{"_index":287,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":2953,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":499,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":473,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":1610,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":1621,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":1619,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":1618,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":1623,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":1625,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":1391,"title":{},"body":{"classes/PaginationQuery.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":1399,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":1402,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":1409,"title":{},"body":{"classes/PaginationResponse.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:12",{"_index":1413,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:15",{"_index":1416,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:18",{"_index":1415,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:21",{"_index":1414,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":1412,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":1421,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":2954,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":2956,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":182,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"coverage.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":190,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":221,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":225,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":224,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":228,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":188,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":819,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":3914,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":3918,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":3919,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":232,"title":{},"body":{"injectables/BaseRepo.html":{},"coverage.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:15",{"_index":257,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:23",{"_index":260,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:34",{"_index":255,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:43",{"_index":244,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:47",{"_index":253,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":240,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":2958,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["arc",{"_index":2326,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":4060,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":4418,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":3832,"title":{},"body":{"license.html":{}}}],["archives",{"_index":4469,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":4595,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":4483,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":2983,"title":{},"body":{"dependencies.html":{}}}],["argument",{"_index":4645,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":666,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":4093,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":3792,"title":{},"body":{"license.html":{}}}],["around",{"_index":3844,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":3707,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":3718,"title":{},"body":{"license.html":{}}}],["array",{"_index":1017,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(constraint",{"_index":79,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":576,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["arrays",{"_index":2398,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":3415,"title":{},"body":{"license.html":{}}}],["asc",{"_index":827,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["asking",{"_index":2466,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":4237,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":4107,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":3228,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":4692,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":3658,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":4391,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":3364,"title":{},"body":{"license.html":{}}}],["assume",{"_index":3784,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":4433,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":3812,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3605,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":130,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":2425,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":4315,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":4212,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":3819,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attempt",{"_index":3616,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":2254,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":2137,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":1988,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":3589,"title":{},"body":{"license.html":{}}}],["aud",{"_index":808,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":807,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":4308,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth.guard.ts",{"_index":861,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.provider",{"_index":126,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":550,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":558,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":566,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":568,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":562,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":560,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":564,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":869,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":875,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":874,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["authenticate",{"_index":1088,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":1095,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authenticated",{"_index":805,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":4320,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":2366,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authentication/decorator/auth.decorator",{"_index":1089,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authentication/interface/jwt",{"_index":1090,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["authguard",{"_index":862,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":863,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":85,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":3588,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":1603,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":124,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorization/authorization.module",{"_index":1205,"title":{},"body":{"modules/NewsModule.html":{}}}],["authorization/authorization.service",{"_index":1343,"title":{},"body":{"injectables/NewsUc.html":{}}}],["authorizationmodule",{"_index":114,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":120,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":3581,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":3683,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":3722,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3594,"title":{},"body":{"license.html":{}}}],["auto",{"_index":4027,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["autoflush",{"_index":252,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["automated",{"_index":4558,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":1803,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":2640,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":1890,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":4563,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":1702,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoid",{"_index":1713,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":4077,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":166,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":4615,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":3206,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2877,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":2288,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":3344,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":1747,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["background",{"_index":4123,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backup.js",{"_index":2793,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":2890,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":1213,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":4494,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":2346,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":1427,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('invalid",{"_index":1430,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["base",{"_index":273,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base64",{"_index":3098,"title":{},"body":{"dependencies.html":{}}}],["based",{"_index":608,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["baseentity",{"_index":181,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["baseentity:10",{"_index":230,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentity:7",{"_index":229,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["baseentitywithtimestamps",{"_index":197,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["baseentitywithtimestamps:19",{"_index":337,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:22",{"_index":339,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:25",{"_index":338,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baseentitywithtimestamps:28",{"_index":340,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["baserepo",{"_index":231,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["baserepo:15",{"_index":1233,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["baserepo:23",{"_index":1234,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["baserepo:34",{"_index":1232,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["baserepo:43",{"_index":1230,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["baserepo:47",{"_index":1231,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["basic",{"_index":3373,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":4277,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":4276,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":4283,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":2042,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bcryptjs",{"_index":2990,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":3984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":3985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":3240,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":3251,"title":{},"body":{"license.html":{}}}],["before",{"_index":430,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":4659,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":4647,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":4023,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":3148,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":3393,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":4701,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":308,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":1615,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":2351,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":3716,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":4103,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":4189,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":3401,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":3234,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":4265,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":3917,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":3816,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":979,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":2052,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1746,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":3473,"title":{},"body":{"license.html":{}}}],["bind",{"_index":2625,"title":{},"body":{"changelog.html":{}}}],["birth",{"_index":2344,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":4286,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bl",{"_index":1548,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["blackbox",{"_index":4567,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":4575,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["bob",{"_index":4468,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":1078,"title":{},"body":{"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":3090,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":796,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/MongoSharedConnection.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":2957,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boolish",{"_index":3114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bootstraps",{"_index":4646,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["both",{"_index":2415,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["box",{"_index":4638,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":1935,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":1802,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brandenburg",{"_index":1819,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":2068,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":4463,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":4263,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":2203,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3840,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":3838,"title":{},"body":{"modules.html":{}}}],["btw",{"_index":216,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":4296,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["buffers",{"_index":4171,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":683,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["builder",{"_index":1568,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["building",{"_index":1863,"title":{},"body":{"changelog.html":{}}}],["buildpipelines",{"_index":1771,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":4012,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":1777,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":1882,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":4200,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":3850,"title":{},"body":{"todo.html":{}}}],["business",{"_index":274,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":42,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror",{"_index":9,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":31,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:12",{"_index":35,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:14",{"_index":34,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:16",{"_index":33,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businesserror:26",{"_index":36,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["businessexception",{"_index":4545,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["bytargets",{"_index":1284,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":1290,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":1285,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":1292,"title":{},"body":{"classes/NewsScope.html":{}}}],["c",{"_index":3186,"title":{},"body":{"license.html":{}}}],["caches",{"_index":4169,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":2510,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":2799,"title":{},"body":{"changelog.html":{}}}],["calculating",{"_index":3164,"title":{},"body":{"index.html":{}}}],["calendar",{"_index":4326,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":503,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":1000,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":2655,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":4249,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":509,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":715,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":2163,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":4390,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":4157,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":4709,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["capitalization",{"_index":2771,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":4231,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":2191,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":4290,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":4519,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":4550,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":3450,"title":{},"body":{"license.html":{}}}],["case",{"_index":544,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":3250,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":660,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":664,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":4298,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":1630,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":1633,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":4300,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":4101,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":4127,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":1968,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":2856,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":919,"title":{},"body":{"injectables/Logger.html":{}}}],["cease",{"_index":3620,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":788,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":2555,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":3578,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":3631,"title":{},"body":{"license.html":{}}}],["chain",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["chains",{"_index":1714,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":2994,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":4273,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":1688,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":910,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":1679,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1681,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":1957,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":1738,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":2491,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":4330,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":3556,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3218,"title":{},"body":{"license.html":{}}}],["chat",{"_index":1927,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":4180,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":208,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checked",{"_index":4239,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":131,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":136,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":757,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":3158,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":3170,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":2578,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkusernotexistbyemail(email",{"_index":4510,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["children",{"_index":2202,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":2647,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":3773,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":4245,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":3068,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":1980,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":1798,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":3399,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3407,"title":{},"body":{"license.html":{}}}],["civil",{"_index":3811,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3673,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3685,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":599,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":853,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":2417,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":2370,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clear",{"_index":3506,"title":{},"body":{"license.html":{}}}],["clearly",{"_index":4524,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":4045,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":2067,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["client",{"_index":277,"title":{},"body":{"classes/BusinessError.html":{},"classes/MongoSharedConnection.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":4193,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":960,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":2868,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":3171,"title":{},"body":{"index.html":{}}}],["close",{"_index":995,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["close(force",{"_index":1007,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["closed",{"_index":4673,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":3807,"title":{},"body":{"license.html":{}}}],["closing",{"_index":2180,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":3116,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":1720,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":2873,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":2285,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":3045,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":3031,"title":{},"body":{"dependencies.html":{}}}],["clouds",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":115,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":118,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":116,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":117,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":297,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":298,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":600,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":601,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":602,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":928,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":929,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":930,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":1197,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":1199,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":1200,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":1198,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_servermodule",{"_index":1448,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":1449,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":1529,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":1530,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluttered",{"_index":4292,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":2896,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":2545,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":13,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":2558,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":769,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":4089,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":3748,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":3956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":341,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":332,"title":{},"body":{"classes/Course.html":{}}}],["collections",{"_index":1733,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":325,"title":{},"body":{"classes/Course.html":{}}}],["columnnames",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["combine",{"_index":3758,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":1504,"title":{},"body":{"controllers/TaskController.html":{},"license.html":{}}}],["come",{"_index":3245,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3457,"title":{},"body":{"license.html":{}}}],["command",{"_index":4487,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commands",{"_index":3322,"title":{},"body":{"license.html":{}}}],["commentschema",{"_index":2811,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":3541,"title":{},"body":{"license.html":{}}}],["commit",{"_index":2319,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":3698,"title":{},"body":{"license.html":{}}}],["committing",{"_index":3169,"title":{},"body":{"index.html":{}}}],["common",{"_index":3018,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":2283,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":4135,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":3369,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":3202,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":4393,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":680,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":4282,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":4751,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":3465,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3472,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":3732,"title":{},"body":{"license.html":{}}}],["compile",{"_index":497,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":3351,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":2368,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":3157,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completely",{"_index":4217,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":922,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":3654,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":4111,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":3390,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":4039,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":1946,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":4175,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":4094,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":1841,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":3000,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":3295,"title":{},"body":{"license.html":{}}}],["concept",{"_index":1710,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":4349,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":3764,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":4414,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":3002,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":4579,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":3726,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1604,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":4182,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":956,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":3942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":2269,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1859,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('request_timeout",{"_index":3996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":4051,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":1699,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":305,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":2870,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":4348,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":1006,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connection",{"_index":997,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedDriver.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["connection.ts",{"_index":1004,"title":{},"body":{"classes/MongoSharedConnection.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connection.ts:13",{"_index":1010,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connection.ts:22",{"_index":1008,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connections",{"_index":1016,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connections.length",{"_index":1026,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connections.push(this",{"_index":1020,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connections.splice(connections.indexof(this",{"_index":1024,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["connector",{"_index":2814,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":4269,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":1815,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":1963,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":3642,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":3791,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3607,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":4516,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":249,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["consistent",{"_index":2149,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":4438,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":4042,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["conspicuously",{"_index":3437,"title":{},"body":{"license.html":{}}}],["const",{"_index":73,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":3382,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":77,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":4173,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject(request",{"_index":638,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(apivalidationerror",{"_index":66,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(data",{"_index":1411,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(em",{"_index":238,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":134,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":556,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":1671,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(newsrepo",{"_index":1322,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(partial",{"_index":327,"title":{},"body":{"classes/Course.html":{}}}],["constructor(private",{"_index":163,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":350,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["constructor(protected",{"_index":261,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["constructor(readonly",{"_index":44,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":643,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(taskrepo",{"_index":1596,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(type",{"_index":536,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":281,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(validationerrors",{"_index":20,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":3736,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3523,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":4215,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":1828,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":3733,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":4082,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":3153,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":3609,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":360,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contents",{"_index":3695,"title":{},"body":{"license.html":{}}}],["context",{"_index":511,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":4711,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":2145,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":3550,"title":{},"body":{"license.html":{}}}],["contract",{"_index":4081,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":3604,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":3742,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3209,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":3682,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3684,"title":{},"body":{"license.html":{}}}],["control",{"_index":2769,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":3687,"title":{},"body":{"license.html":{}}}],["controller",{"_index":471,"title":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('news",{"_index":1096,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('task",{"_index":1509,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller.ts",{"_index":4362,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/auth.controller",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["controller/dto",{"_index":1153,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["controller/news.controller",{"_index":1204,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":1533,"title":{},"body":{"modules/TaskModule.html":{}}}],["controllers",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":3315,"title":{},"body":{"license.html":{}}}],["convention",{"_index":4571,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":4132,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["converted",{"_index":2712,"title":{},"body":{"changelog.html":{}}}],["convey",{"_index":3301,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3720,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3557,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3309,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3603,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":3201,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3195,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2200,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":3262,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3197,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3185,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3270,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3396,"title":{},"body":{"license.html":{}}}],["core",{"_index":304,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":4777,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":1462,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":4551,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":1206,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":4528,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":296,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":2182,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":3786,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2683,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":3354,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":3004,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":3493,"title":{},"body":{"license.html":{}}}],["count",{"_index":1104,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["counted",{"_index":1235,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":1243,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["counterclaim",{"_index":3674,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":3920,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":2211,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":3299,"title":{},"body":{"license.html":{}}}],["country",{"_index":3712,"title":{},"body":{"license.html":{}}}],["counts",{"_index":3916,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":4264,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":4091,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":323,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course.entity",{"_index":903,"title":{},"body":{"classes/Lesson.html":{},"classes/Task.html":{}}}],["coursegroups",{"_index":1546,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["courseid",{"_index":900,"title":{},"body":{"classes/Lesson.html":{},"classes/Task.html":{}}}],["courseinfo",{"_index":347,"title":{"classes/CourseInfo.html":{}},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["coursemodel",{"_index":3992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursename",{"_index":1584,"title":{},"body":{"classes/TaskResponse.html":{}}}],["coursenews",{"_index":356,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":431,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courses",{"_index":344,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courseschema",{"_index":2948,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coursesofstudent",{"_index":1554,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["court",{"_index":3741,"title":{},"body":{"license.html":{}}}],["courts",{"_index":3806,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3702,"title":{},"body":{"license.html":{}}}],["cover",{"_index":3165,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":2125,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":3958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":3959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":3961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":3284,"title":{},"body":{"license.html":{}}}],["covers",{"_index":4699,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":1838,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":719,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":1097,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":1053,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":1324,"title":{},"body":{"injectables/NewsUc.html":{}}}],["created",{"_index":915,"title":{},"body":{"injectables/Logger.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":217,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{}}}],["createerrorresponse",{"_index":661,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":669,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":2915,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":699,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":2916,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":706,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":688,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":722,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":705,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":726,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":701,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":368,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":406,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":973,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createmikroormmodule(options",{"_index":994,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["createnestapplication",{"_index":4707,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":4425,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":438,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":3939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":685,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createtestmodule",{"_index":492,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["creating",{"_index":442,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":1978,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":764,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":361,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":374,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["criteria",{"_index":4271,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":3327,"title":{},"body":{"license.html":{}}}],["critical",{"_index":4228,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":2440,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":306,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":4306,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":4416,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":4486,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":3007,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":2433,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":2773,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":744,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":746,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":3940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":200,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":3634,"title":{},"body":{"license.html":{}}}],["current",{"_index":1258,"title":{},"body":{"classes/NewsResponse.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":981,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":1056,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":1100,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1099,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":546,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":4547,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":3486,"title":{},"body":{"license.html":{}}}],["customary",{"_index":3755,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3490,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":309,"title":{},"body":{"modules/CoreModule.html":{}}}],["customproviderclass.name",{"_index":926,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":4068,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":4108,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":3463,"title":{},"body":{"license.html":{}}}],["damages",{"_index":3789,"title":{},"body":{"license.html":{}}}],["dash",{"_index":2357,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["data",{"_index":766,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"classes/PaginationResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data/rules",{"_index":4198,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":4190,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":655,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":1467,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":936,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:13",{"_index":940,"title":{},"body":{"modules/MongoDatabaseModule.html":{}}}],["database.module.ts:47",{"_index":966,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:57",{"_index":968,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":935,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":4752,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":4149,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":1542,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["date",{"_index":218,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":522,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["dated",{"_index":4289,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1706,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["db",{"_index":996,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":4268,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":649,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":650,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":651,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{}}}],["dbname",{"_index":961,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["dbs",{"_index":4256,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":2775,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":2774,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":4447,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":1912,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1541,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["deata",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":831,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":835,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":846,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":3140,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":4036,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":3419,"title":{},"body":{"license.html":{}}}],["decide",{"_index":3771,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":1775,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":4517,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declarations",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["declare",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["declining",{"_index":3595,"title":{},"body":{"license.html":{}}}],["decorated",{"_index":776,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":3113,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":186,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":4062,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":4206,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":4216,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dedicated",{"_index":4156,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":3409,"title":{},"body":{"license.html":{}}}],["default",{"_index":222,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defaultmessage",{"_index":50,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1395,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":1617,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":3783,"title":{},"body":{"license.html":{}}}],["defending",{"_index":3235,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":3738,"title":{},"body":{"license.html":{}}}],["define",{"_index":204,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":4001,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":215,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":64,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":1712,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":485,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":489,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":472,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":233,"title":{},"body":{"injectables/BaseRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":1058,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":1326,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":1057,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(objs",{"_index":242,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["deleteall",{"_index":234,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["deleteall(objs",{"_index":251,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["deleted",{"_index":2206,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedid",{"_index":1117,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletes",{"_index":4288,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":2028,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1707,"title":{},"body":{"changelog.html":{}}}],["delivered",{"_index":4562,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":4243,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":3562,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":3699,"title":{},"body":{"license.html":{}}}],["depend",{"_index":4484,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":87,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":3998,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deploy",{"_index":1804,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":2757,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":1801,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":630,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{}}}],["deprecates",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":3708,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":2099,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":828,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":4304,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":4584,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":4585,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":4729,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":4102,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":61,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/SchoolInfoResponse.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"index.html":{}}}],["descriptive",{"_index":4083,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["design",{"_index":4074,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":3501,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3200,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":4293,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":4072,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":4329,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":3762,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":72,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":1670,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["detail.response.ts:1",{"_index":1672,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3130,"title":{},"body":{"index.html":{}}}],["details",{"_index":53,"title":{},"body":{"classes/ApiValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":682,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":2527,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":3967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":3966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":2220,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":3532,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":4763,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":4017,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":3118,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":4572,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":3224,"title":{},"body":{"license.html":{}}}],["development",{"_index":2279,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":1854,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":3178,"title":{},"body":{"index.html":{}}}],["di",{"_index":4374,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":1452,"title":{},"body":{"modules/ServerModule.html":{}}}],["die",{"_index":4246,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":3042,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":3890,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":3761,"title":{},"body":{"license.html":{}}}],["different",{"_index":2571,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":3586,"title":{},"body":{"license.html":{}}}],["digits",{"_index":1825,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":4311,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":3394,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3507,"title":{},"body":{"license.html":{}}}],["directly",{"_index":3288,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["director",{"_index":1571,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["directory",{"_index":3856,"title":{},"body":{"todo.html":{}}}],["disable",{"_index":425,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":2847,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":3430,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":3774,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3583,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":2819,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":2632,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":4450,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":4458,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":198,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":414,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":435,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":3724,"title":{},"body":{"license.html":{}}}],["display",{"_index":3464,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":362,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":1585,"title":{},"body":{"classes/TaskResponse.html":{}}}],["displayed",{"_index":450,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":3311,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":2580,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":4006,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":4596,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":3765,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3193,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3823,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":3727,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3263,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4131,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":4104,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":2118,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1840,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3879,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":443,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":2092,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":3977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":1683,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":1845,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":984,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":4738,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":4164,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["doku",{"_index":1503,"title":{},"body":{"controllers/TaskController.html":{}}}],["domain",{"_index":3855,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":3009,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":213,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":1553,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dos",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["dosomethingcrazy",{"_index":4604,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":4609,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":4625,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":4620,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":4628,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":3534,"title":{},"body":{"license.html":{}}}],["down",{"_index":4565,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":3650,"title":{},"body":{"license.html":{}}}],["driven",{"_index":4446,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":955,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["driver.ts",{"_index":1029,"title":{},"body":{"classes/MongoSharedDriver.html":{},"coverage.html":{}}}],["driver.ts:7",{"_index":1033,"title":{},"body":{"classes/MongoSharedDriver.html":{}}}],["dropdown",{"_index":1829,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":4474,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":441,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":4354,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.content",{"_index":1161,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":1523,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":1180,"title":{},"body":{"classes/NewsMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":1175,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displayat",{"_index":1163,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":1525,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":1521,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":1661,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.id",{"_index":1157,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":1663,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":1437,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":1184,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.school",{"_index":1173,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.source",{"_index":1165,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":1167,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.target",{"_index":1187,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":1169,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":1171,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":1159,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":1189,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":1182,"title":{},"body":{"classes/NewsMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":1178,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/error.response",{"_index":675,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dtolist",{"_index":1107,"title":{},"body":{"controllers/NewsController.html":{}}}],["dtos",{"_index":756,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":3987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":247,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["duedate",{"_index":1483,"title":{},"body":{"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{}}}],["duplicate",{"_index":2109,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":2048,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":212,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":1961,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":3485,"title":{},"body":{"license.html":{}}}],["duration",{"_index":501,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":498,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["during",{"_index":2224,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":3531,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":3365,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":942,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":733,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":201,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":735,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":736,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1208,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":2196,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":3283,"title":{},"body":{"license.html":{}}}],["easier",{"_index":4066,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":631,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":380,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":1951,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":1817,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":2584,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":3804,"title":{},"body":{"license.html":{}}}],["effected",{"_index":3427,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3410,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3821,"title":{},"body":{"license.html":{}}}],["effects",{"_index":4166,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":4564,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":3667,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":3827,"title":{},"body":{"license.html":{}}}],["elements",{"_index":1227,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{}}}],["eligible",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":241,"title":{},"body":{"injectables/BaseRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":4748,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":4722,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":2377,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":1813,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":4459,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":4759,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":3481,"title":{},"body":{"license.html":{}}}],["employer",{"_index":3834,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1308,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":1296,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":4476,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":762,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":758,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":2758,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":772,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":2955,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enables",{"_index":3303,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":4138,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":4177,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":4106,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":4151,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encouraged",{"_index":3243,"title":{},"body":{"license.html":{}}}],["encryption",{"_index":2883,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":2305,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":4768,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":4776,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":1696,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":2247,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enforce",{"_index":3700,"title":{},"body":{"license.html":{}}}],["enforced",{"_index":4448,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":3432,"title":{},"body":{"license.html":{}}}],["enough",{"_index":4195,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":2834,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":4199,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":143,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":4224,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entered",{"_index":3734,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3455,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":3750,"title":{},"body":{"license.html":{}}}],["entites",{"_index":4196,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":156,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entitiyids",{"_index":178,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":147,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.ts",{"_index":4353,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entityid",{"_index":137,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":239,"title":{},"body":{"injectables/BaseRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":1469,"title":{},"body":{"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":171,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":175,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":210,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":4309,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":1069,"title":{},"body":{"controllers/NewsController.html":{}}}],["enum",{"_index":469,"title":{},"body":{"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["enumeration",{"_index":2752,"title":{},"body":{"changelog.html":{}}}],["enumerations",{"_index":3106,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":459,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":1744,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":3863,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":2280,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":1851,"title":{},"body":{"changelog.html":{}}}],["equal",{"_index":2887,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":3385,"title":{},"body":{"license.html":{}}}],["err",{"_index":1634,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":4626,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":49,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":837,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":533,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":658,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:114",{"_index":663,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:117",{"_index":667,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:125",{"_index":670,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":700,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":598,"title":{},"body":{"interfaces/FeathersError.html":{},"coverage.html":{}}}],["error.response",{"_index":71,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts",{"_index":60,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"coverage.html":{}}}],["error.response.ts:23",{"_index":69,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":67,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":739,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":729,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":319,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":4252,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":299,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":728,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":38,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":711,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":295,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":697,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":65,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errros",{"_index":2394,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":3011,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":424,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":429,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{}}}],["eslint/restrict",{"_index":730,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["especially",{"_index":4120,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":3347,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":4096,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":2618,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":2828,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":4552,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":4553,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":2686,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":2453,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":1782,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":2148,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":3192,"title":{},"body":{"license.html":{}}}],["everything",{"_index":2184,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":4307,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":3282,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":3363,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exceeds",{"_index":2561,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":2185,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":528,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":694,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":689,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":691,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":724,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":784,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":659,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":693,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":687,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchangeable",{"_index":4080,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["excluded",{"_index":3521,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":2015,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":2389,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":3692,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3388,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":3743,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3339,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1209,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":4303,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":1214,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":4009,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":3294,"title":{},"body":{"license.html":{}}}],["execution",{"_index":1612,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":508,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":3668,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3428,"title":{},"body":{"license.html":{}}}],["exist",{"_index":4351,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exist/is",{"_index":895,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["existing",{"_index":1644,"title":{},"body":{"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existinguser",{"_index":4511,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":2320,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exp",{"_index":810,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":4158,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":4627,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":4733,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":4607,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":4630,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":4689,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":4610,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":4695,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":4732,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":4600,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":3539,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":4688,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":4624,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":2413,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":2827,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":4451,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":4616,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":809,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["expiresin",{"_index":873,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":633,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":3379,"title":{},"body":{"license.html":{}}}],["export",{"_index":43,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exported",{"_index":4369,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exporting",{"_index":2420,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":3853,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":4146,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":4214,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":628,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":3776,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":732,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":3615,"title":{},"body":{"license.html":{}}}],["extend",{"_index":759,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":3723,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":3938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/FeathersError.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":3468,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":3314,"title":{},"body":{"license.html":{}}}],["external",{"_index":2007,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":867,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":363,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["extract",{"_index":1577,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":782,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":881,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":889,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":4317,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":3601,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":453,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":2263,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":4581,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":3756,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3389,"title":{},"body":{"license.html":{}}}],["factory",{"_index":4557,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":1970,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":51,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":4769,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["fails",{"_index":2013,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":3799,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3384,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":2258,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":589,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":3526,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":3152,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":3280,"title":{},"body":{"license.html":{}}}],["fast",{"_index":4470,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":3082,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":3536,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":125,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":4222,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":570,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["feathers/feathers.module",{"_index":123,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersauthprovider",{"_index":121,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":595,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":677,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersjs/authentication",{"_index":2962,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":2964,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":2965,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":629,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":2966,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":2967,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":119,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":615,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{}}}],["feathersserviceparams",{"_index":620,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":557,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":635,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":1797,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":3151,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":2879,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":2238,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":4041,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":3448,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":2787,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":4055,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":4485,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":2292,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":1673,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":346,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["fields",{"_index":3852,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":4099,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filename",{"_index":4030,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["files",{"_index":1705,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["filestorage",{"_index":1848,"title":{},"body":{"changelog.html":{}}}],["filter",{"_index":529,"title":{},"body":{"modules/ErrorModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter.query.ts",{"_index":1120,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":1126,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":1124,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":1131,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":1315,"title":{},"body":{"interfaces/NewsTargetFilter.html":{},"coverage.html":{}}}],["filter/global",{"_index":532,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":2840,"title":{},"body":{"changelog.html":{}}}],["filterquery",{"_index":1222,"title":{},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{}}}],["filters",{"_index":1129,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["final",{"_index":4518,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":3626,"title":{},"body":{"license.html":{}}}],["find",{"_index":618,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":619,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":1050,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":1061,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":1218,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallforuser",{"_index":1317,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":1328,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallopenbystudent",{"_index":1536,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenbystudent(userid",{"_index":1537,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallopenforuser",{"_index":1595,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallopenforuser(userid",{"_index":1598,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallspy",{"_index":4685,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["finding",{"_index":793,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":1216,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":1221,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":1051,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":1065,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":1217,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyid(id",{"_index":1224,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findonebyidforuser",{"_index":1318,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":1330,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":1468,"title":{},"body":{"modules/ServerModule.html":{}}}],["finduser(userid",{"_index":4260,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":4536,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":1666,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstname",{"_index":1651,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["fit",{"_index":4185,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":3779,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1856,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":4028,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":958,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"changelog.html":{},"license.html":{}}}],["fixes",{"_index":2177,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixtures",{"_index":4655,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":1128,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flow",{"_index":3370,"title":{},"body":{"license.html":{}}}],["flush",{"_index":235,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["fly",{"_index":1862,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":4491,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":4698,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":3138,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folders",{"_index":4347,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":2761,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1550,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":4048,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forbid",{"_index":3426,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":4429,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":3935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":779,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":1009,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["foreign",{"_index":4758,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":4691,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":2788,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":540,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":2474,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":3476,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":937,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":938,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":2299,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":1472,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":3189,"title":{},"body":{"license.html":{}}}],["framework",{"_index":4064,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":4310,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":4218,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":3187,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":3207,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":3022,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":4440,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":4439,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["frontend",{"_index":1748,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fulfilled",{"_index":4225,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":3413,"title":{},"body":{"license.html":{}}}],["full",{"_index":1861,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["function",{"_index":698,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":307,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":4109,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":3551,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3109,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":3503,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":382,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":4046,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":1871,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":2291,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":2074,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":3361,"title":{},"body":{"license.html":{}}}],["generate",{"_index":2193,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":3986,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generateregistrationlink",{"_index":2783,"title":{},"body":{"changelog.html":{}}}],["generation",{"_index":1949,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":2402,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4176,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["get(':id",{"_index":1066,"title":{},"body":{"controllers/NewsController.html":{}}}],["get('dashboard",{"_index":1494,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(id",{"_index":624,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getentitypermissions",{"_index":132,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":151,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["gethello",{"_index":475,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{}}}],["getnewspermissions",{"_index":1319,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":1332,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getpermittedentities",{"_index":133,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":154,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":551,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":559,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getpermittedtargets",{"_index":552,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["getpermittedtargets(userid",{"_index":561,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":1294,"title":{},"body":{"classes/NewsScope.html":{}}}],["getrequiredpermissions",{"_index":1320,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":1335,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":18,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{}}}],["getservice",{"_index":642,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":639,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":1321,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":1338,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettimeout",{"_index":1622,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":1677,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":553,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":563,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getuserschoolpermissions",{"_index":554,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":565,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["getusertargetpermissions",{"_index":555,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":567,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["git",{"_index":3172,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git+https://github.com/hpi",{"_index":3030,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/leeroybrun/mongoose",{"_index":3052,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/schul",{"_index":3044,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":3124,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":3445,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1613,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":604,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":3451,"title":{},"body":{"license.html":{}}}],["global",{"_index":314,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":647,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":531,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":748,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":849,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":652,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":2885,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":751,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{},"coverage.html":{}}}],["gnu",{"_index":3181,"title":{},"body":{"license.html":{}}}],["go",{"_index":3137,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":3167,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":3256,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":4466,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["good",{"_index":4603,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":3575,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3257,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":3596,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3374,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3645,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3841,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":3502,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":3815,"title":{},"body":{"license.html":{}}}],["group",{"_index":1570,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["grouping",{"_index":1979,"title":{},"body":{"changelog.html":{}}}],["groups",{"_index":1552,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["gt",{"_index":1312,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":1574,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["guarantee",{"_index":1111,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":3941,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":4377,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":4322,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guide",{"_index":4734,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":4178,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":1642,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":1545,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handled",{"_index":275,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":2471,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":714,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":310,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":4092,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":4413,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":4678,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":4115,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hash",{"_index":2273,"title":{},"body":{"changelog.html":{}}}],["haspermissions",{"_index":173,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["having",{"_index":3387,"title":{},"body":{"license.html":{}}}],["header",{"_index":870,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":4247,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":4240,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":3242,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":4150,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["help",{"_index":4643,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":1827,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":681,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":2313,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":4617,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":4602,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hence",{"_index":4235,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":206,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/TaskUC.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":3689,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":4339,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":899,"title":{},"body":{"classes/Lesson.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":4492,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":4079,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hierarchical",{"_index":2424,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":4088,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":4434,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":2089,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":4163,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":3043,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":3046,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":3622,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3582,"title":{},"body":{"license.html":{}}}],["holding",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["home",{"_index":1544,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homework",{"_index":1474,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":1476,"title":{},"body":{"classes/Submission.html":{}}}],["homeworks",{"_index":1491,"title":{},"body":{"classes/Task.html":{},"changelog.html":{}}}],["homeworkswithsubmissions",{"_index":1560,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["homogeneitysolve",{"_index":4095,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":2189,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":4236,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":2359,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":3824,"title":{},"body":{"license.html":{}}}],["host",{"_index":665,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":745,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":3509,"title":{},"body":{"license.html":{}}}],["hot",{"_index":3880,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":1932,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":3527,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2284,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":372,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{}}}],["http",{"_index":62,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":3191,"title":{},"body":{"license.html":{}}}],["http://localhost:3030/docs",{"_index":3121,"title":{},"body":{"index.html":{}}}],["http://www.gnu.org/licenses",{"_index":3826,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":280,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":4544,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":4378,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":4736,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/mikro",{"_index":4479,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":1718,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":4057,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":4489,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":4417,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":4058,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":4056,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":4208,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":3858,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":4210,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["httpstatus",{"_index":40,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["httpstatus.bad_request",{"_index":54,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["httpstatus.conflict",{"_index":290,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":2321,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":4548,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i.e",{"_index":4229,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":811,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["icons",{"_index":4772,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icreatenews",{"_index":786,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["icurrentuser",{"_index":797,"title":{"interfaces/ICurrentUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":184,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":1423,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":1425,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":3905,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["identifiable",{"_index":3714,"title":{},"body":{"license.html":{}}}],["identified",{"_index":4554,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifier",{"_index":539,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identify",{"_index":4578,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":4749,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":157,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["ierrortype",{"_index":282,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":4503,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":4513,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":4505,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifindoptions",{"_index":818,"title":{"interfaces/IFindOptions.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["iframe",{"_index":2101,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":944,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":890,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["ilogger",{"_index":829,"title":{"interfaces/ILogger.html":{}},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"coverage.html":{}}}],["image",{"_index":2748,"title":{},"body":{"changelog.html":{}}}],["immediately",{"_index":613,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":1987,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":4118,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":909,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":3346,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":4379,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":2289,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":519,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":4430,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":4747,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":3737,"title":{},"body":{"license.html":{}}}],["import",{"_index":39,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":636,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importer",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":2465,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":3680,"title":{},"body":{"license.html":{}}}],["imports",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":3606,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":3740,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":1307,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3236,"title":{},"body":{"license.html":{}}}],["improves",{"_index":4559,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":4355,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":3793,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":3796,"title":{},"body":{"license.html":{}}}],["inc",{"_index":3190,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":3790,"title":{},"body":{"license.html":{}}}],["include",{"_index":196,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":3341,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3298,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":2356,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":3475,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":765,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":2406,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":2857,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":3241,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":3757,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3530,"title":{},"body":{"license.html":{}}}],["increase",{"_index":1897,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":2850,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":4203,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":3602,"title":{},"body":{"license.html":{}}}],["independant",{"_index":2893,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":4521,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":3466,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":4248,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":3849,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":1753,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":3648,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":3613,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1983,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":3276,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3542,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":3988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":407,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["inewsscope",{"_index":794,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["inewuserprops",{"_index":4497,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info.entity",{"_index":409,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{}}}],["info.entity.ts",{"_index":349,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"coverage.html":{}}}],["info.entity.ts:10",{"_index":1653,"title":{},"body":{"classes/UserInfo.html":{}}}],["info.entity.ts:7",{"_index":352,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["info.mapper",{"_index":1155,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":1433,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["info.mapper.ts:5",{"_index":1435,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":1277,"title":{},"body":{"classes/NewsResponse.html":{}}}],["info.response.ts",{"_index":1440,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["info.response.ts:13",{"_index":1442,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":1668,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":1441,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":3514,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":547,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infrastructure",{"_index":4367,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":3646,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3677,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3291,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":199,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inherited",{"_index":30,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["inital",{"_index":1793,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":4530,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":916,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":4316,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":3671,"title":{},"body":{"license.html":{}}}],["inject",{"_index":627,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject(mikroorm",{"_index":991,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":993,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":127,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":128,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"overview.html":{}}}],["injected",{"_index":609,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":912,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":4275,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["inner",{"_index":4568,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":852,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["insensitive",{"_index":2547,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":278,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":4735,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":3356,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":3546,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3560,"title":{},"body":{"license.html":{}}}],["instance",{"_index":763,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":679,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":2875,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instead",{"_index":1982,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":3131,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":3440,"title":{},"body":{"license.html":{}}}],["integration",{"_index":1849,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":3210,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":3431,"title":{},"body":{"license.html":{}}}],["interact",{"_index":3829,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":3752,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":3306,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":4139,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":3310,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":4305,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":506,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":507,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":493,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":322,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":300,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":3487,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3664,"title":{},"body":{"license.html":{}}}],["interface",{"_index":413,"title":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/User.html":{}},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":886,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":596,"title":{},"body":{"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/User.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":3552,"title":{},"body":{"license.html":{}}}],["internal",{"_index":389,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":4495,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internalservererrorexception",{"_index":671,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":704,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":2700,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":3803,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3353,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3368,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":4464,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":610,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":2756,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":2720,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":3997,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":3845,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":2117,"title":{},"body":{"changelog.html":{}}}],["invalidate",{"_index":3461,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":4336,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":4341,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":4284,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":4147,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":4259,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":4465,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":823,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{}}}],["iprimarykey",{"_index":1453,"title":{},"body":{"modules/ServerModule.html":{}}}],["irrevocable",{"_index":3376,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":1133,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":678,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":718,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isdate",{"_index":465,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@apiproperty({description",{"_index":446,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["iserv",{"_index":1969,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":1867,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":676,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":713,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isin",{"_index":1134,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":1139,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":1403,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":1400,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":1393,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":1135,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isolated",{"_index":4342,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":4587,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":1136,"title":{},"body":{"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":1127,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":1647,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":1121,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":1646,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":1125,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":1368,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":813,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":466,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":444,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":457,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":452,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["issue",{"_index":1761,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":812,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":2146,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["istanbul",{"_index":943,"title":{},"body":{"modules/MongoDatabaseModule.html":{}}}],["istechnicalerror",{"_index":684,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":721,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":927,"title":{},"body":{"injectables/Logger.html":{}}}],["it's",{"_index":4168,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":4586,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":4606,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":4608,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":4684,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["item",{"_index":3325,"title":{},"body":{"license.html":{}}}],["items",{"_index":1835,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":3563,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":792,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["jest",{"_index":3875,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":2960,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jest.spyon(repo",{"_index":4686,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":3975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":3145,"title":{},"body":{"index.html":{}}}],["job",{"_index":4279,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["jobs",{"_index":2656,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["join",{"_index":2064,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["jose",{"_index":3025,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":3008,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":2260,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(e.constraints",{"_index":737,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":3027,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":814,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{}}}],["jwauthguard",{"_index":4705,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":884,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtauthguard",{"_index":859,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":105,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":893,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":892,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":888,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":865,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":806,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtstrategy",{"_index":95,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kafka",{"_index":4220,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1013,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":4007,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":3348,"title":{},"body":{"license.html":{}}}],["key",{"_index":1375,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{}}}],["keyof",{"_index":3921,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":3548,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":3302,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":3198,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":2872,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":3223,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knowingly",{"_index":3704,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3711,"title":{},"body":{"license.html":{}}}],["known",{"_index":2038,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":4299,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":2025,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":3155,"title":{},"body":{"index.html":{}}}],["language",{"_index":1700,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":4204,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":3469,"title":{},"body":{"license.html":{}}}],["last",{"_index":1667,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastname",{"_index":1652,"title":{},"body":{"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{}}}],["later",{"_index":3768,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":2991,"title":{},"body":{"dependencies.html":{}}}],["launch",{"_index":4050,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["law",{"_index":3293,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3267,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3675,"title":{},"body":{"license.html":{}}}],["layer",{"_index":4126,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":4294,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":4086,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":3848,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":1754,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":2312,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":2219,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":3029,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":3032,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":2682,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":2820,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":2526,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":3831,"title":{},"body":{"license.html":{}}}],["lean",{"_index":3048,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["leave",{"_index":3897,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":1611,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":605,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/nest",{"_index":3887,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":3995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":3230,"title":{},"body":{"license.html":{}}}],["legend",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["lern",{"_index":1833,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":2126,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":2817,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":897,"title":{"classes/Lesson.html":{}},"body":{"classes/Lesson.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["lesson.entity",{"_index":1490,"title":{},"body":{"classes/Task.html":{}}}],["lessonid",{"_index":1486,"title":{},"body":{"classes/Task.html":{}}}],["lessonmodel",{"_index":3993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lessons",{"_index":904,"title":{},"body":{"classes/Lesson.html":{},"changelog.html":{}}}],["lessonschema",{"_index":2949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lessonsofstudent",{"_index":1556,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["letter",{"_index":4388,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":3247,"title":{},"body":{"license.html":{}}}],["level",{"_index":2676,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":4583,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":3585,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3290,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3338,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":3522,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":3180,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3271,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3272,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3274,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3204,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3649,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3593,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":3643,"title":{},"body":{"license.html":{}}}],["limit",{"_index":825,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["limitation",{"_index":3787,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3777,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3584,"title":{},"body":{"license.html":{}}}],["limits",{"_index":1837,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":427,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":3962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":1948,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":3366,"title":{},"body":{"license.html":{}}}],["links",{"_index":1992,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":3876,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":153,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/MongoSharedConnection.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":351,"title":{},"body":{"classes/CourseInfo.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":3672,"title":{},"body":{"license.html":{}}}],["living",{"_index":4462,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":4188,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":2268,"title":{},"body":{"changelog.html":{}}}],["load/perf",{"_index":3861,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":4363,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loaded",{"_index":4475,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":4636,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":1913,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":1850,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localization",{"_index":4211,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":3119,"title":{},"body":{"index.html":{}}}],["localstrategy",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["locate",{"_index":4427,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":4192,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":2315,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":2264,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":1905,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":673,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"dependencies.html":{}}}],["log",{"_index":832,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":840,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":3877,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":4327,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logger",{"_index":505,"title":{"injectables/Logger.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":662,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":513,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger.error(error",{"_index":741,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":738,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":725,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":4621,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":907,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":932,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":320,"title":{},"body":{"modules/CoreModule.html":{}}}],["logger/logger.service",{"_index":674,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["loggermodule",{"_index":301,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":4538,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":312,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":500,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"coverage.html":{}}}],["logging.interceptor.ts:11",{"_index":514,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":510,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":1569,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":4167,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":1551,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":1857,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":4397,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":3847,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":3156,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["longer",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":2579,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loop",{"_index":2485,"title":{},"body":{"changelog.html":{}}}],["loss",{"_index":3794,"title":{},"body":{"license.html":{}}}],["losses",{"_index":3797,"title":{},"body":{"license.html":{}}}],["lost",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":2818,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":4090,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":4389,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1313,"title":{},"body":{"classes/NewsScope.html":{}}}],["ltitools",{"_index":2104,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":4313,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":4757,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":3478,"title":{},"body":{"license.html":{}}}],["made",{"_index":3237,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":2535,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["mails",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["main",{"_index":4241,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":3869,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["mainly",{"_index":4258,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":2490,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":2408,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":2666,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":3343,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":999,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":3404,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":1645,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":4679,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["manage",{"_index":4137,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":1953,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":4142,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manager",{"_index":4477,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":4191,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":3851,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":3690,"title":{},"body":{"license.html":{}}}],["manual",{"_index":1800,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":4618,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":2221,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":342,"title":{},"body":{"classes/Course.html":{}}}],["manytomany({fieldname",{"_index":333,"title":{},"body":{"classes/Course.html":{}}}],["manytoone",{"_index":369,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone({fieldname",{"_index":373,"title":{},"body":{"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":1977,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapcreatenewstodomain",{"_index":1141,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":1145,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":4371,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapfootodomain",{"_index":4372,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapnewsscopetodomain",{"_index":1142,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":1147,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":4251,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper",{"_index":4364,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":4370,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/news.mapper",{"_index":1093,"title":{},"body":{"controllers/NewsController.html":{}}}],["mapper/task.mapper",{"_index":1501,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":4704,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":4133,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["maps",{"_index":4162,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoresponse",{"_index":1143,"title":{},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(news",{"_index":1149,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":1434,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(task",{"_index":1517,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(userinfo",{"_index":1659,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":1144,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":1151,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":3735,"title":{},"body":{"license.html":{}}}],["marked",{"_index":3591,"title":{},"body":{"license.html":{}}}],["marks",{"_index":3600,"title":{},"body":{"license.html":{}}}],["masks",{"_index":3269,"title":{},"body":{"license.html":{}}}],["master",{"_index":2143,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":548,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matches",{"_index":4675,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":56,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":3391,"title":{},"body":{"license.html":{}}}],["materially",{"_index":3564,"title":{},"body":{"license.html":{}}}],["materials",{"_index":1786,"title":{},"body":{"changelog.html":{}}}],["matrix",{"_index":1791,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":4194,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":4261,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":1404,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":1408,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":1397,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maybe",{"_index":978,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":3882,"title":{},"body":{"todo.html":{}}}],["meaning",{"_index":3608,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":3175,"title":{},"body":{"index.html":{}}}],["means",{"_index":3266,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":3412,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3423,"title":{},"body":{"license.html":{}}}],["mechanisms",{"_index":4340,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":3436,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3449,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3326,"title":{},"body":{"license.html":{}}}],["member",{"_index":573,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"changelog.html":{}}}],["members",{"_index":2006,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":2538,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":965,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":3323,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":3778,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3305,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3179,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":1931,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["merges",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":2802,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":3660,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":14,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":4221,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":1709,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":1795,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":3378,"title":{},"body":{"license.html":{}}}],["meta",{"_index":4742,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":3072,"title":{},"body":{"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["method",{"_index":632,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":17,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"index.html":{},"license.html":{}}}],["metic",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":2240,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":4202,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":4140,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":2521,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":3034,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":2782,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":1210,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":1891,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":1212,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":192,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":969,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm/asynclocalstorage",{"_index":3874,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":986,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":989,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":990,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":949,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":963,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":974,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":987,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":950,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":1626,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["min",{"_index":1405,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(0",{"_index":1406,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["min(1",{"_index":1407,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":4272,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":1396,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":1852,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":2419,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":4395,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":4762,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":3105,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":2833,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":3590,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1752,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":1306,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":4122,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":3035,"title":{},"body":{"dependencies.html":{}}}],["mm",{"_index":2776,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":2322,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mocha's",{"_index":4591,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":4652,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":4639,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":4641,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":2667,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":460,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["models",{"_index":1380,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":3264,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3329,"title":{},"body":{"license.html":{}}}],["modified",{"_index":2803,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":3454,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":2032,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":3232,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3296,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":2257,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":4000,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["module",{"_index":84,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":4717,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":4720,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":4719,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":4682,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":4681,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":3960,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":4635,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":4404,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":4398,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":3943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":3970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":970,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":4651,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":4650,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":86,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":1455,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":4410,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":4408,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":4409,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/news/entity",{"_index":1458,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/course",{"_index":1463,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/entity/team",{"_index":1464,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/news/news.module",{"_index":1465,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/entity",{"_index":1461,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":1457,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":3037,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":953,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongoclient",{"_index":1011,"title":{},"body":{"classes/MongoSharedConnection.html":{},"miscellaneous/variables.html":{}}}],["mongoclient.connect(this.config.getclienturl",{"_index":1018,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["mongoconnection",{"_index":1005,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["mongod",{"_index":976,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["mongod.geturi",{"_index":977,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongodatabasemodule",{"_index":933,"title":{"modules/MongoDatabaseModule.html":{}},"body":{"modules/MongoDatabaseModule.html":{},"modules.html":{}}}],["mongodb",{"_index":972,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongodriver",{"_index":1030,"title":{},"body":{"classes/MongoSharedDriver.html":{}}}],["mongomemorydatabasemodule",{"_index":964,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":4665,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":971,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":1466,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["mongosharedconnection",{"_index":1003,"title":{"classes/MongoSharedConnection.html":{}},"body":{"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"coverage.html":{}}}],["mongosharedconnection(this.config",{"_index":1032,"title":{},"body":{"classes/MongoSharedDriver.html":{}}}],["mongoshareddriver",{"_index":952,"title":{"classes/MongoSharedDriver.html":{}},"body":{"modules/MongoDatabaseModule.html":{},"classes/MongoSharedDriver.html":{},"coverage.html":{}}}],["monitoring",{"_index":4232,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":3054,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":1027,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":3632,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":4561,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mounted",{"_index":4702,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["move",{"_index":1547,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":2282,"title":{},"body":{"changelog.html":{}}}],["ms",{"_index":486,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":690,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":2623,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":4125,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":246,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/GlobalValidationPipe.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":4159,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":4161,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":267,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["n21",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":3173,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["names",{"_index":1072,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":3895,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":3056,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":1877,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":3075,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":3467,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":2809,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":2807,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":2808,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":1573,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["necessary",{"_index":2515,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":3128,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3355,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needs",{"_index":1543,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":716,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":3886,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":4003,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":4008,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:doc:serve",{"_index":4011,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":4040,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":4025,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":4026,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":4002,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":4014,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":4018,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":4016,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":4021,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":3948,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":4038,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":4033,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":4035,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":3950,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":3949,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":4032,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":2714,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestinterceptor",{"_index":481,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":530,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":4047,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":484,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2975,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":464,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":483,"title":{},"body":{"controllers/DelayController.html":{}}}],["nestjs/testing.test",{"_index":4640,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestlogger",{"_index":906,"title":{},"body":{"injectables/Logger.html":{}}}],["network",{"_index":3203,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":4262,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":150,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":81,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newly",{"_index":4457,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":358,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":1162,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createdat",{"_index":1181,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":1352,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":1164,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":1158,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":440,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":1649,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":462,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":445,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:27",{"_index":451,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:28",{"_index":1648,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:35",{"_index":461,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:42",{"_index":456,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":1185,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":1166,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":1168,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":1372,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.target?.id",{"_index":1170,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.targetmodel",{"_index":1172,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":1160,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.types",{"_index":410,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news.updatedat",{"_index":1183,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":1177,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news/entity",{"_index":162,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Submission.html":{},"interfaces/User.html":{}}}],["news:10",{"_index":405,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:19",{"_index":400,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:22",{"_index":402,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:25",{"_index":401,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:28",{"_index":403,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:30",{"_index":397,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:34",{"_index":371,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:38",{"_index":376,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:41",{"_index":384,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:44",{"_index":391,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:47",{"_index":392,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:51",{"_index":393,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":395,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":388,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":375,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":399,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":385,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:7",{"_index":404,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:76",{"_index":408,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news[key",{"_index":1377,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":4424,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":4428,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":1211,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":1351,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":1346,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":1265,"title":{},"body":{"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":1279,"title":{},"body":{"classes/NewsResponse.html":{}}}],["news_view",{"_index":1345,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":1047,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"coverage.html":{}}}],["newscount",{"_index":1359,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsfilterquery",{"_index":1062,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsid",{"_index":1060,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":1103,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{}}}],["newslist.length",{"_index":1365,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":1108,"title":{},"body":{"controllers/NewsController.html":{}}}],["newslist.map(async",{"_index":1362,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsmapper",{"_index":1092,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"coverage.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":1101,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":1106,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":1102,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":1116,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":1196,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":1201,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":1091,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"coverage.html":{}}}],["newsscope",{"_index":1240,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/TaskRepo.html":{},"coverage.html":{}}}],["newstargetfilter",{"_index":1219,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"coverage.html":{}}}],["newstargetmodel",{"_index":139,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":423,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":165,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":432,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newsuc",{"_index":1086,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":1370,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":1357,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":2780,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":426,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":1631,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":523,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["nin",{"_index":1572,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["node",{"_index":2891,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":3117,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":2886,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":4314,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":3051,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":3053,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":2278,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":3497,"title":{},"body":{"license.html":{}}}],["none",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":1385,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nooptions",{"_index":959,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["normal",{"_index":2036,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":3525,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":3994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":2919,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["notable",{"_index":1680,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":195,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["notfound",{"_index":4250,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":569,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/ServerModule.html":{},"interfaces/User.html":{}}}],["notfoundexception(`the",{"_index":1470,"title":{},"body":{"modules/ServerModule.html":{}}}],["nothing",{"_index":3644,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3317,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3313,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":3633,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3629,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3579,"title":{},"body":{"license.html":{}}}],["november",{"_index":3183,"title":{},"body":{"license.html":{}}}],["now",{"_index":521,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now}ms",{"_index":525,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":1730,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":594,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{}}}],["number",{"_index":29,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"interfaces/JwtPayload.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":3767,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":3915,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":1772,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":3126,"title":{},"body":{"index.html":{}}}],["o",{"_index":4333,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":2339,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":2095,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["obj",{"_index":258,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["object",{"_index":1422,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(this",{"_index":345,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["object.entries(params",{"_index":1376,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.values(constraint",{"_index":83,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":468,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":185,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{}}}],["objectid().tohexstring",{"_index":4694,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["objectid.isvalid(value",{"_index":1429,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":4415,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objs",{"_index":250,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["objs.map((n",{"_index":265,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["obligate",{"_index":3747,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3511,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3414,"title":{},"body":{"license.html":{}}}],["observable",{"_index":512,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":2810,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":4184,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":3496,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":692,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":3641,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":2155,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["oderby",{"_index":1578,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["of.ts",{"_index":3913,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":3229,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3516,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3500,"title":{},"body":{"license.html":{}}}],["official",{"_index":3331,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":2026,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":1822,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":1928,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":1579,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ok",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":4488,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":4570,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":2001,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":1600,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["omit",{"_index":939,"title":{},"body":{"modules/MongoDatabaseModule.html":{}}}],["once",{"_index":4069,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1366,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onerror",{"_index":2749,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":4394,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["oneweekago",{"_index":1563,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":1564,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["onload",{"_index":2470,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":967,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":4174,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":219,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":1015,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":2354,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":4019,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":3800,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":3504,"title":{},"body":{"license.html":{}}}],["operates",{"_index":4560,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":3349,"title":{},"body":{"license.html":{}}}],["operation",{"_index":2860,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":2171,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3252,"title":{},"body":{"license.html":{}}}],["opportunity",{"_index":3754,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":4744,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":1769,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":2755,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":4436,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":4750,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":985,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"injectables/JwtStrategy.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":4549,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":4540,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":941,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["options.ts",{"_index":820,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["orchestration",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":2122,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":245,"title":{},"body":{"injectables/BaseRepo.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1247,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["ordering",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":2310,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":3656,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":3277,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":4071,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":2063,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":2806,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":992,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":4724,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":4059,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":193,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":1239,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":4656,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":4480,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":194,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":951,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["os",{"_index":3136,"title":{},"body":{"index.html":{}}}],["others",{"_index":778,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":983,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":4385,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":4580,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outgoing",{"_index":4257,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2476,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":2794,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":3397,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":2488,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":4700,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":4153,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":4542,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":2434,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":4708,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":4716,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":527,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":313,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":4644,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":3842,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":1964,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":3686,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":4112,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":1261,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":4407,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["package",{"_index":2469,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":3460,"title":{},"body":{"license.html":{}}}],["packages",{"_index":3859,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":3342,"title":{},"body":{"license.html":{}}}],["page",{"_index":1394,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":1401,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":588,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["pagination",{"_index":821,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":4359,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination].query.ts",{"_index":4426,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":1063,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1084,"title":{"classes/PaginationResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"coverage.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["paginationresponse(dtolist",{"_index":1109,"title":{},"body":{"controllers/NewsController.html":{}}}],["paginationresponse(tasksresponse",{"_index":1515,"title":{},"body":{"controllers/TaskController.html":{}}}],["paging",{"_index":2816,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":3060,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":3828,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3619,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3696,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":1922,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":1758,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":164,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["param('id",{"_index":1113,"title":{},"body":{"controllers/NewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":4631,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":4629,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":4358,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parameter",{"_index":1110,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":622,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":1192,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":1193,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.target",{"_index":1349,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":1195,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":1194,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1191,"title":{},"body":{"classes/NewsMapper.html":{}}}],["param|query].ts",{"_index":4357,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":1812,"title":{},"body":{"changelog.html":{}}}],["parents",{"_index":2201,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":2397,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":4423,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1081,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":2992,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":4285,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":3279,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":328,"title":{},"body":{"classes/Course.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":1641,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":3335,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3304,"title":{},"body":{"license.html":{}}}],["parts",{"_index":3371,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":3505,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":3662,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":4386,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":774,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":1505,"title":{},"body":{"controllers/TaskController.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":883,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":885,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":887,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":962,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["passwordrecovery",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":377,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":1079,"title":{},"body":{"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":1076,"title":{},"body":{"controllers/NewsController.html":{}}}],["patching",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["patent",{"_index":3618,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3681,"title":{},"body":{"license.html":{}}}],["path",{"_index":646,"title":{},"body":{"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":3971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":2353,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":470,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":880,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"changelog.html":{}}}],["payload.ts",{"_index":799,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["payment",{"_index":3728,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3512,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3515,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":2071,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":3168,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":1898,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":3362,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3628,"title":{},"body":{"license.html":{}}}],["permission",{"_index":381,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":1390,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":141,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":174,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":1389,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":2767,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":2768,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":3442,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3474,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3246,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1605,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["perpetuity",{"_index":3555,"title":{},"body":{"license.html":{}}}],["persist",{"_index":2253,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist/make",{"_index":4442,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persisted",{"_index":264,"title":{},"body":{"injectables/BaseRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":4445,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":1832,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":4539,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":4573,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":1788,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":3745,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":4456,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":3482,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3494,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2167,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":3221,"title":{},"body":{"license.html":{}}}],["pin",{"_index":1811,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":2023,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":754,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":1675,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":1799,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":4376,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":1426,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":2418,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":1737,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["plain",{"_index":4431,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":2237,"title":{},"body":{"changelog.html":{}}}],["platform",{"_index":2892,"title":{},"body":{"changelog.html":{}}}],["please",{"_index":4213,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":3013,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":3666,"title":{},"body":{"license.html":{}}}],["point",{"_index":447,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":3822,"title":{},"body":{"license.html":{}}}],["policy",{"_index":2731,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":2216,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":1575,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":1073,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{}}}],["populates",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":2908,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":3519,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":3491,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3458,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":3802,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":2172,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1054,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["potential",{"_index":1911,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":3867,"title":{},"body":{"todo.html":{}}}],["power",{"_index":3425,"title":{},"body":{"license.html":{}}}],["pr",{"_index":3143,"title":{},"body":{"index.html":{}}}],["practical",{"_index":3205,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3701,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":4737,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":3873,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":3196,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3261,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4515,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":3663,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":4543,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":4589,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":3328,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":1049,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["preload",{"_index":2585,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":4761,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":4760,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":920,"title":{},"body":{"injectables/Logger.html":{}}}],["present",{"_index":2314,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":4128,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":3321,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3587,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":2544,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":211,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":2349,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":3665,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":3217,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":3730,"title":{},"body":{"license.html":{}}}],["primary",{"_index":2186,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":187,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["principle",{"_index":4654,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":4070,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":4490,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":3630,"title":{},"body":{"license.html":{}}}],["prioritization",{"_index":1790,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":4746,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":504,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["problem",{"_index":2796,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":2115,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedure",{"_index":3134,"title":{},"body":{"index.html":{}}}],["procedures",{"_index":3547,"title":{},"body":{"license.html":{}}}],["process",{"_index":2517,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":4331,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":4280,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":4172,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":3719,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3352,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":4535,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":3483,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":2106,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":3731,"title":{},"body":{"license.html":{}}}],["program",{"_index":3212,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3435,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":3835,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3336,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":3222,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":3814,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":3395,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":3421,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3725,"title":{},"body":{"license.html":{}}}],["project",{"_index":1682,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":3064,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":2239,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":3324,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3316,"title":{},"body":{"license.html":{}}}],["promise",{"_index":149,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":487,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1361,"title":{},"body":{"injectables/NewsUc.html":{}}}],["promises",{"_index":4612,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":3012,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":3286,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3647,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3297,"title":{},"body":{"license.html":{}}}],["proper",{"_index":2838,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":2179,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersError.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":4743,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["property",{"_index":191,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property({onupdate",{"_index":226,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["propertydecorator",{"_index":3115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":353,"title":{},"body":{"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.content",{"_index":417,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.creator",{"_index":421,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.displayat",{"_index":419,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":1655,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.lastname",{"_index":1657,"title":{},"body":{"classes/UserInfo.html":{}}}],["props.name",{"_index":355,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["props.school",{"_index":420,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.target",{"_index":422,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.title",{"_index":415,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":3225,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1031,"title":{},"body":{"classes/MongoSharedDriver.html":{},"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":3405,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3447,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":4063,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":3568,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":3782,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":495,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":159,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":924,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/InterceptorModule.html":{},"modules/LoggerModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/ValidationModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":918,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":311,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":3580,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3624,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":3770,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":3772,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":479,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":3592,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3254,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":2851,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3439,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1130,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":2317,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pulled",{"_index":4207,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":3359,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3528,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":3717,"title":{},"body":{"license.html":{}}}],["put",{"_index":2859,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":4444,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["qf",{"_index":1774,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":2012,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":2296,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":3637,"title":{},"body":{"license.html":{}}}],["quality",{"_index":3781,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":1301,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":1305,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":4266,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":587,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query.targetid",{"_index":1188,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":1186,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":1190,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":4422,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["queryorder",{"_index":1539,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["queryorder.asc",{"_index":1580,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["queryordermap",{"_index":1238,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["querys",{"_index":1507,"title":{},"body":{"controllers/TaskController.html":{}}}],["querystring",{"_index":2295,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1739,"title":{},"body":{"changelog.html":{}}}],["raise",{"_index":2516,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":1839,"title":{},"body":{"changelog.html":{}}}],["rates",{"_index":4233,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":3014,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1070,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":3479,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readily",{"_index":3706,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3571,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":2345,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IErrorType.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedDriver.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":2183,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":4472,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":4653,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":947,"title":{},"body":{"modules/MongoDatabaseModule.html":{}}}],["reason",{"_index":3715,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3492,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":3635,"title":{},"body":{"license.html":{}}}],["receive",{"_index":3220,"title":{},"body":{"license.html":{}}}],["received",{"_index":3462,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":3651,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3721,"title":{},"body":{"license.html":{}}}],["recent",{"_index":2798,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":3554,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3713,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3275,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3332,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4774,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":4767,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":4765,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":634,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":2513,"title":{},"body":{"changelog.html":{}}}],["red",{"_index":3866,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":3070,"title":{},"body":{"dependencies.html":{}}}],["redistribute",{"_index":3818,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":1874,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":2226,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":4078,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactoring",{"_index":1843,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":4205,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":2229,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":4454,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":394,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["referenced",{"_index":396,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["references",{"_index":1014,"title":{},"body":{"classes/MongoSharedConnection.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["referring",{"_index":3216,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3265,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":3071,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":4461,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":3749,"title":{},"body":{"license.html":{}}}],["regard",{"_index":3576,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3459,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regards",{"_index":2770,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":3372,"title":{},"body":{"license.html":{}}}],["regex",{"_index":2390,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":1807,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":4496,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":1810,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":2450,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":2855,"title":{},"body":{"changelog.html":{}}}],["reigstration",{"_index":2158,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":4680,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":3623,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":4690,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rejections",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":455,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":4478,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":4754,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":2119,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":3398,"title":{},"body":{"license.html":{}}}],["release",{"_index":1805,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":3258,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":3248,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":3452,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":3259,"title":{},"body":{"license.html":{}}}],["relies",{"_index":4435,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":3881,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":3705,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3510,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3214,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":3751,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":3753,"title":{},"body":{"license.html":{}}}],["removal",{"_index":3577,"title":{},"body":{"license.html":{}}}],["remove",{"_index":777,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"classes/MongoSharedConnection.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["removed",{"_index":1689,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":1725,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":2304,"title":{},"body":{"changelog.html":{}}}],["rendered",{"_index":3795,"title":{},"body":{"license.html":{}}}],["repair",{"_index":2097,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":2129,"title":{},"body":{"changelog.html":{}}}],["replace",{"_index":2000,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":2035,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":2270,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":4527,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":3870,"title":{},"body":{"todo.html":{}}}],["repo",{"_index":1606,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":4658,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":4366,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":1344,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":1203,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["repo/task.repo",{"_index":1534,"title":{},"body":{"modules/TaskModule.html":{},"injectables/TaskUC.html":{}}}],["report",{"_index":2619,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":4556,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":4143,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":4034,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":4197,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":3123,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":3544,"title":{},"body":{"license.html":{}}}],["req",{"_index":4710,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":4712,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":2034,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":607,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":4739,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":4730,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request/response",{"_index":4227,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":4234,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":1620,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":1471,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":2416,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":856,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":1627,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":2037,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":868,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":653,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":3976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('ts",{"_index":3974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":781,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":1369,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":3453,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3125,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":770,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":3281,"title":{},"body":{"license.html":{}}}],["reset",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"changelog.html":{},"overview.html":{}}}],["resolve",{"_index":2081,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":3535,"title":{},"body":{"license.html":{}}}],["resolves",{"_index":1226,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resources",{"_index":4670,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":3429,"title":{},"body":{"license.html":{}}}],["respond",{"_index":3891,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":4703,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":63,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":4731,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":750,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":4361,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":4360,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":4170,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":4419,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":4105,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":3653,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":4441,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":1794,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":4004,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":3892,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":502,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":4301,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":4223,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":2031,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1373,"title":{},"body":{"injectables/NewsUc.html":{}}}],["restricting",{"_index":3422,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3610,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2725,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":2411,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":1716,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":55,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["result.query.ts",{"_index":2959,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resulted",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["resulting",{"_index":3244,"title":{},"body":{"license.html":{}}}],["results",{"_index":57,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":3558,"title":{},"body":{"license.html":{}}}],["retention",{"_index":4287,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":1068,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":4325,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":4295,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":80,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"interfaces/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":1582,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":37,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":4605,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":4076,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":4375,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":4183,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":1881,"title":{},"body":{"changelog.html":{}}}],["reverted",{"_index":1996,"title":{},"body":{"changelog.html":{}}}],["review",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":3159,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":3805,"title":{},"body":{"license.html":{}}}],["revised",{"_index":3759,"title":{},"body":{"license.html":{}}}],["rich",{"_index":4460,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":2888,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["rights",{"_index":3226,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":3077,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":3780,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":1926,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":2427,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":4179,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":804,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role/permissions",{"_index":4226,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleids",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["roles",{"_index":801,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["rollback",{"_index":2514,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":3561,"title":{},"body":{"license.html":{}}}],["room",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":2404,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":205,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["rootdir",{"_index":3944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":2249,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":3968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":4677,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":477,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":2363,"title":{},"body":{"changelog.html":{}}}],["route_praefix",{"_index":2909,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":1864,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":2483,"title":{},"body":{"changelog.html":{}}}],["royalty",{"_index":3670,"title":{},"body":{"license.html":{}}}],["rss",{"_index":390,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":4482,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":2005,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":1731,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":4634,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":1614,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3350,"title":{},"body":{"license.html":{}}}],["runtime",{"_index":4642,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":515,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":517,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":1704,"title":{},"body":{"changelog.html":{}}}],["s3_key",{"_index":2881,"title":{},"body":{"changelog.html":{}}}],["safari",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":3820,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3679,"title":{},"body":{"license.html":{}}}],["same",{"_index":2412,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":574,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["sample",{"_index":4432,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":4648,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":4392,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":4649,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":4532,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["sanitize",{"_index":2041,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":3857,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":170,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":158,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":236,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["save(obj",{"_index":256,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["saveall",{"_index":237,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["saveall(objs",{"_index":259,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["saying",{"_index":3508,"title":{},"body":{"license.html":{}}}],["sc",{"_index":1692,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":2832,"title":{},"body":{"changelog.html":{}}}],["scenarios",{"_index":4201,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schema",{"_index":2696,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":4365,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":1808,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":3983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":364,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":1976,"title":{},"body":{"changelog.html":{}}}],["school_edit",{"_index":2844,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":2845,"title":{},"body":{"changelog.html":{}}}],["schoolid",{"_index":387,"title":{},"body":{"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/JwtPayload.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":2414,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":386,"title":{"classes/SchoolInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolinfo.id",{"_index":1436,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":1438,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":1154,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{},"coverage.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":1174,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":1260,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"coverage.html":{}}}],["schoolnews",{"_index":436,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["schoolnews(props",{"_index":434,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":789,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/SchoolInfo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolslist",{"_index":1695,"title":{},"body":{"changelog.html":{}}}],["schoolyear",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":449,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":1719,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":490,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":626,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.bytargets(targets",{"_index":1241,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":1242,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.request",{"_index":637,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":1382,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.transient",{"_index":908,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":1281,"title":{},"body":{"classes/NewsScope.html":{},"coverage.html":{}}}],["scope.ts:17",{"_index":1291,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:32",{"_index":1293,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:38",{"_index":1289,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:7",{"_index":1287,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:9",{"_index":1295,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope?.target",{"_index":1379,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":1356,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":582,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["scopes",{"_index":1071,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":1766,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":3357,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":2986,"title":{},"body":{"dependencies.html":{}}}],["search",{"_index":1870,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":2132,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["second",{"_index":4541,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":3289,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":3233,"title":{},"body":{"license.html":{}}}],["secret",{"_index":866,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretorkey",{"_index":891,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":3403,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":3477,"title":{},"body":{"license.html":{}}}],["secure",{"_index":2103,"title":{},"body":{"changelog.html":{}}}],["secured",{"_index":1697,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":1690,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":52,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["seeddata",{"_index":4593,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seems",{"_index":3884,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":3864,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":2889,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":2900,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":3694,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3678,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1685,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":3268,"title":{},"body":{"license.html":{}}}],["send",{"_index":1830,"title":{},"body":{"changelog.html":{}}}],["sending",{"_index":2785,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":4504,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":4152,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":4328,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":543,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":2173,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":2977,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":2175,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":3518,"title":{},"body":{"license.html":{}}}],["separate",{"_index":914,"title":{},"body":{"injectables/Logger.html":{},"injectables/TaskRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":3150,"title":{},"body":{"index.html":{},"todo.html":{}}}],["separately",{"_index":2197,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":4270,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":4520,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":4075,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":4594,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["serialization",{"_index":3854,"title":{},"body":{"todo.html":{}}}],["serialized",{"_index":2293,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":189,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{}}}],["serve",{"_index":3081,"title":{},"body":{"dependencies.html":{}}}],["served",{"_index":3120,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":491,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.controller",{"_index":1456,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":3885,"title":{},"body":{"todo.html":{}}}],["servercontroller",{"_index":1444,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"coverage.html":{}}}],["servererrortypes",{"_index":2920,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":4526,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":1447,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":2815,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":3345,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":578,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"interfaces/User.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":585,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["service.findallforuser(userid",{"_index":4687,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":4412,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":581,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["service.provider",{"_index":571,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/User.html":{}}}],["service.provider.ts",{"_index":617,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":625,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":621,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":644,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":645,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":4368,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":606,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":3785,"title":{},"body":{"license.html":{}}}],["session",{"_index":2181,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":854,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["setcontext",{"_index":925,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":3979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sets",{"_index":2230,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":1624,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":488,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":3937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":2403,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":3978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":755,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setversion('3.0",{"_index":3981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":3408,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":3208,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":954,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":70,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":1083,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/dto/pagination.query",{"_index":1496,"title":{},"body":{"controllers/TaskController.html":{}}}],["shared/controller/dto/pagination.response",{"_index":1085,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["shared/controller/pipe",{"_index":1082,"title":{},"body":{"controllers/NewsController.html":{}}}],["shared/controller/transformer",{"_index":1138,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":4380,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":161,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"todo.html":{}}}],["shared/domain/types",{"_index":1236,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["shared/pipes",{"_index":4405,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":1297,"title":{},"body":{"classes/NewsScope.html":{}}}],["shared/repo/base.repo",{"_index":1237,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["shared/utils",{"_index":4381,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":4401,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":4384,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharedclient",{"_index":1012,"title":{},"body":{"classes/MongoSharedConnection.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sharedclient?.close(force",{"_index":1028,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["sharetoken",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":1818,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["shortid",{"_index":3050,"title":{},"body":{"dependencies.html":{}}}],["shouldnt",{"_index":2591,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["show_version",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":2070,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":4165,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":3836,"title":{},"body":{"license.html":{}}}],["signature",{"_index":4312,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":3545,"title":{},"body":{"license.html":{}}}],["similar",{"_index":3135,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":4154,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":3899,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":4291,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":4601,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":4611,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":4725,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":3744,"title":{},"body":{"license.html":{}}}],["single",{"_index":783,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"controllers/TaskController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":4155,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["size",{"_index":2560,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":824,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":780,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":3889,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":2361,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":4771,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":707,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":3085,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":2869,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soften",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":3188,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":3529,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3386,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3400,"title":{},"body":{"license.html":{}}}],["solid",{"_index":4740,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":4119,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":3833,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":4533,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":4537,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sorted",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["sorting",{"_index":1954,"title":{},"body":{"changelog.html":{}}}],["sortorder",{"_index":826,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["sortordermap",{"_index":822,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":4352,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":365,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":1717,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":1263,"title":{},"body":{"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":4087,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":4302,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":4319,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":3489,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3215,"title":{},"body":{"license.html":{}}}],["spec",{"_index":946,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["spec.ts",{"_index":3947,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":3952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3569,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":146,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":3199,"title":{},"body":{"license.html":{}}}],["specification",{"_index":2242,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":4443,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":3334,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":3766,"title":{},"body":{"license.html":{}}}],["specify",{"_index":982,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":1973,"title":{},"body":{"changelog.html":{}}}],["spirit",{"_index":3760,"title":{},"body":{"license.html":{}}}],["split",{"_index":4130,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sportinhalt",{"_index":1820,"title":{},"body":{"changelog.html":{}}}],["spy",{"_index":4683,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":4674,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":4253,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":4753,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":4274,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":3954,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":3945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/config",{"_index":1454,"title":{},"body":{"modules/ServerModule.html":{}}}],["src/core/error/dto/error.response",{"_index":288,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":289,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger/logger.service",{"_index":518,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":4663,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["stabilisation",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":4084,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":723,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":2407,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":1806,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3330,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":3333,"title":{},"body":{"license.html":{}}}],["start",{"_index":3139,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":1678,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["starts",{"_index":4015,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":709,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":2423,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":2332,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":3377,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":3612,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":2901,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":2213,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":367,"title":{},"body":{"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["statically",{"_index":4024,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":3441,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":2486,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":2620,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":1593,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stay",{"_index":4113,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":1576,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":3227,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":4566,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":4449,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":998,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":2154,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":2018,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["store",{"_index":1834,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":4187,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":4321,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":4676,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":2925,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":3931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":882,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt.strategy",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/local.strategy",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{}}}],["strictly",{"_index":4073,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":32,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":921,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{}}}],["stringtoboolean",{"_index":1137,"title":{},"body":{"classes/NewsFilterQuery.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":3089,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":611,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":4773,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":4344,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":4345,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":923,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["student",{"_index":1475,"title":{},"body":{"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student_create",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":2461,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":2754,"title":{},"body":{"changelog.html":{}}}],["studentid",{"_index":1478,"title":{},"body":{"classes/Submission.html":{}}}],["students",{"_index":326,"title":{},"body":{"classes/Course.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":2763,"title":{},"body":{"changelog.html":{}}}],["studio",{"_index":3142,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":3177,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":4098,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["styling",{"_index":1943,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":815,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":3659,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3652,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":3691,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3402,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1460,"title":{"classes/Submission.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"coverage.html":{}}}],["submission.homework.id",{"_index":1562,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissions",{"_index":1481,"title":{},"body":{"classes/Submission.html":{},"changelog.html":{}}}],["submissionschema",{"_index":2950,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["submissionsofstudent",{"_index":1558,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["submissionsofstudent.map((submission",{"_index":1561,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["subprograms",{"_index":3367,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":3498,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3540,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3657,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":2897,"title":{},"body":{"changelog.html":{}}}],["succeed",{"_index":4623,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["succesful",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":2255,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":2627,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":3249,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":3703,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3549,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":145,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":3898,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":3846,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["summarize",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":45,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"classes/News.html":{},"classes/SchoolInfo.html":{},"classes/SchoolNews.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(type",{"_index":74,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":2024,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":4637,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":3572,"title":{},"body":{"license.html":{}}}],["support",{"_index":2275,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["supported",{"_index":4129,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":3999,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":2804,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sure",{"_index":3213,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":3739,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3611,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":3798,"title":{},"body":{"license.html":{}}}],["svg",{"_index":3839,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1502,"title":{},"body":{"controllers/TaskController.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["swaggermodule.createdocument(app",{"_index":3989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":3990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symmetric",{"_index":2882,"title":{},"body":{"changelog.html":{}}}],["synapse",{"_index":2307,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":1743,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["synced",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":2223,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":2308,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":2805,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":1732,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":1765,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":2821,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1374,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":2217,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system/school",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":2760,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":243,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"injectables/TaskRepo.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":4770,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":1942,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["tablename",{"_index":343,"title":{},"body":{"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/Lesson.html":{},"classes/SchoolInfo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamInfo.html":{},"classes/UserInfo.html":{}}}],["tables",{"_index":2233,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2961,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":3132,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taken",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":2190,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":3936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tangible",{"_index":3524,"title":{},"body":{"license.html":{}}}],["tap",{"_index":516,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":359,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":592,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["target.targetids",{"_index":1304,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":1387,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":1302,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":1303,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":458,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsResponse.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["targetid",{"_index":140,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["targetids",{"_index":590,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{}}}],["targetmodel",{"_index":138,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":1339,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":1383,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":580,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["targets",{"_index":584,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":1386,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":591,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{},"interfaces/User.html":{}}}],["task",{"_index":1459,"title":{"classes/Task.html":{}},"body":{"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.course?.color",{"_index":1526,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course?.name",{"_index":1524,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createdat",{"_index":1527,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":1522,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":1480,"title":{},"body":{"classes/Submission.html":{}}}],["task.id",{"_index":1519,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":1520,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.updatedat",{"_index":1528,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task_dashboard_view_v3",{"_index":1726,"title":{},"body":{"changelog.html":{}}}],["taskcontroller",{"_index":1492,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskmapper",{"_index":1500,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"coverage.html":{}}}],["taskmapper.maptoresponse(task",{"_index":1514,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodel",{"_index":3991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskmodule",{"_index":1450,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskrepo",{"_index":1531,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["taskresponse",{"_index":1499,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"coverage.html":{}}}],["tasks",{"_index":1510,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":1513,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskschema",{"_index":2951,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasksresponse",{"_index":1512,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskuc",{"_index":1497,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"coverage.html":{},"overview.html":{}}}],["teacher",{"_index":2899,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["teachers",{"_index":1919,"title":{},"body":{"changelog.html":{}}}],["team",{"_index":412,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teaminfo",{"_index":411,"title":{"classes/TeamInfo.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews",{"_index":437,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"coverage.html":{}}}],["teamnews(props",{"_index":433,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teams",{"_index":790,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/TeamInfo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":3868,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":4054,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":4323,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":686,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":4116,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":3411,"title":{},"body":{"license.html":{}}}],["technology",{"_index":4065,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":4043,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":3318,"title":{},"body":{"license.html":{}}}],["template",{"_index":731,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":3375,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":3617,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3636,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3627,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3614,"title":{},"body":{"license.html":{}}}],["terms",{"_index":2195,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":478,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"interfaces/User.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":494,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":474,"title":{},"body":{"controllers/DelayController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":476,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":3946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/services",{"_index":3161,"title":{},"body":{"index.html":{}}}],["testable",{"_index":4471,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testcase",{"_index":4576,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":4597,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":4031,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":3965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":858,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":482,"title":{},"body":{"controllers/DelayController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":4664,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":4672,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":4668,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":4667,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":4666,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":3953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":3951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":202,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":1945,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":4399,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":4382,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":4400,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":203,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":4181,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":3253,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":2479,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["think",{"_index":4350,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":3434,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._queries",{"_index":1299,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.length",{"_index":1298,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries.push(query",{"_index":1314,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._queries[0",{"_index":1300,"title":{},"body":{"classes/NewsScope.html":{}}}],["this._timeout",{"_index":1637,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.addquery",{"_index":1311,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":1309,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":1310,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":1371,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":4498,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":1350,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":1388,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":1384,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.client",{"_index":1021,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["this.client.db(this.config.get('dbname",{"_index":1023,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["this.code",{"_index":291,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.content",{"_index":416,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.createerrorresponse(error",{"_index":749,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.data",{"_index":1417,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.db",{"_index":1022,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["this.displayat",{"_index":418,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.em.find(course",{"_index":1555,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(lesson",{"_index":1557,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.find(submission",{"_index":1559,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount",{"_index":1567,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findandcount(news",{"_index":1246,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":1245,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.flush",{"_index":268,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(n",{"_index":266,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(obj",{"_index":262,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.populate(obj",{"_index":1248,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.remove(n",{"_index":270,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(objs",{"_index":269,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":179,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":180,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":167,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":168,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":593,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":579,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":583,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":4411,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.findnewsandcount(scope.query",{"_index":1244,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.firstname",{"_index":1654,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.flush",{"_index":263,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.getconnectionoptions",{"_index":1019,"title":{},"body":{"classes/MongoSharedConnection.html":{}}}],["this.getentitypermissions(userid",{"_index":172,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":1363,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":1358,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfilters(userid",{"_index":1381,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getuser(userid",{"_index":572,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["this.lastname",{"_index":1656,"title":{},"body":{"classes/UserInfo.html":{}}}],["this.limit",{"_index":1420,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.logger.log(`create",{"_index":1348,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":4534,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":1354,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":1364,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":1355,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":4507,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(newsuc.name",{"_index":1347,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":4531,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":520,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":524,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.message",{"_index":294,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":1002,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":354,"title":{},"body":{"classes/CourseInfo.html":{},"classes/SchoolInfo.html":{},"classes/TeamInfo.html":{}}}],["this.newsrepo.delete(news",{"_index":1378,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findall(targets",{"_index":1360,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":1367,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.save(news",{"_index":1353,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":1098,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":1118,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":1105,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":1114,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":1115,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.orm.close",{"_index":1001,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.request.app",{"_index":640,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.skip",{"_index":1419,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.taskrepo.findallopenbystudent(userid",{"_index":1607,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findallopenforuser(currentuser.userid",{"_index":1511,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.timeout",{"_index":3865,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":4619,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":293,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.total",{"_index":1418,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":292,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":4506,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":4512,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.save(user",{"_index":4502,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":4500,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.validationerrors",{"_index":75,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":2878,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":3574,"title":{},"body":{"license.html":{}}}],["thr",{"_index":2069,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":2615,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":3307,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":176,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":1628,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":1636,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":1635,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":2792,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":169,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":2848,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":3392,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":3144,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":3146,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":4186,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":448,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":855,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":1639,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":1632,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":1629,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":857,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":1638,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":2079,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":2616,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":1252,"title":{},"body":{"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timezone",{"_index":1701,"title":{},"body":{"changelog.html":{}}}],["timouts",{"_index":4613,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":3093,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":15,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["todo",{"_index":207,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/ICurrentUser.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":1123,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":2846,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":1780,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":4633,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":3360,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":1944,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":4525,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["total",{"_index":1410,"title":{},"body":{"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":838,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":4318,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":4343,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":3598,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3597,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3599,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":2178,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":248,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":3308,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3553,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3655,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":4473,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":767,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":1424,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":771,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":2996,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":768,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":911,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":4775,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":4230,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":3513,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":4437,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":4334,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":2209,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":1846,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":3573,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":3417,"title":{},"body":{"license.html":{}}}],["tries",{"_index":2822,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":4242,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":4337,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":2842,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":254,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/CourseNews.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":712,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":3862,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":2530,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2766,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":871,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseInfo.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFindOptions.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolInfo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TeamInfo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"interfaces/User.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":817,"title":{},"body":{"interfaces/IErrorType.html":{},"coverage.html":{}}}],["typealiases",{"_index":3901,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":4741,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1278,"title":{},"body":{"classes/NewsResponse.html":{}}}],["typeorm",{"_index":4745,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":1687,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":2918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typesafety",{"_index":1112,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":428,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":3537,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":4278,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":612,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":3955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":1549,"title":{},"body":{"injectables/TaskRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":4373,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/news.uc",{"_index":1087,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.uc",{"_index":1498,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["ui",{"_index":3091,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":4297,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":538,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":160,"title":{},"body":{"injectables/AuthorizationService.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":177,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":2493,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":4467,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":4238,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":227,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/Lesson.html":{},"classes/MongoSharedConnection.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3260,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":4067,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":4622,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":4577,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":743,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":2506,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":4097,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":542,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":2124,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["unit.test.js",{"_index":3163,"title":{},"body":{"index.html":{}}}],["universal",{"_index":3094,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":702,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":703,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":3543,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":4697,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":3381,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3285,"title":{},"body":{"license.html":{}}}],["unneccesary",{"_index":1711,"title":{},"body":{"changelog.html":{}}}],["unnecessary",{"_index":2863,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":3570,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":2826,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":795,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":1691,"title":{},"body":{"changelog.html":{}}}],["unskip",{"_index":1207,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":4522,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":3625,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["up",{"_index":1974,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":1052,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":1341,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":1074,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":1275,"title":{},"body":{"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":220,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{}}}],["updatenewsparams",{"_index":1075,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{},"coverage.html":{}}}],["updater",{"_index":366,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":398,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":2853,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":791,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":1228,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":3086,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":2789,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":2831,"title":{},"body":{"changelog.html":{}}}],["upon",{"_index":4453,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":4387,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":541,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":3039,"title":{},"body":{"dependencies.html":{}}}],["url",{"_index":656,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["urlsafe",{"_index":3097,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":2438,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":209,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/CourseNews.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":4134,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":534,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":948,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedglobals",{"_index":654,"title":{},"body":{"interfaces/GlobalConstants.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":975,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":3825,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":3932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":144,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtStrategy.html":{},"modules/MongoDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"interfaces/User.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":4501,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.id",{"_index":4508,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.ldapdn",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":577,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["user.repo.ts",{"_index":4402,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.schoolid.tostring",{"_index":575,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["user.test.js",{"_index":3162,"title":{},"body":{"index.html":{}}}],["user.uc.ts",{"_index":4396,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user/class",{"_index":4141,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":4493,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":4499,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":4514,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["userid",{"_index":148,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"interfaces/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":4696,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":586,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/User.html":{}}}],["userids",{"_index":334,"title":{},"body":{"classes/Course.html":{}}}],["userinfo",{"_index":335,"title":{"classes/UserInfo.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{},"classes/UserInfo.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfo.firstname",{"_index":1662,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.id",{"_index":1660,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfo.lastname",{"_index":1664,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["userinfomapper",{"_index":1156,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{},"coverage.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":1176,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":1179,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":1254,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"coverage.html":{}}}],["username",{"_index":2532,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":4403,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":803,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/JwtPayload.html":{},"injectables/NewsUc.html":{},"classes/UserInfo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":2400,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":2865,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":2864,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":4509,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":2478,"title":{},"body":{"changelog.html":{}}}],["userstasks",{"_index":1566,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["uses",{"_index":2690,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":496,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":614,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":4136,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["util",{"_index":2439,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":4632,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":2405,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":2839,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":3980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":1778,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":3888,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/index",{"_index":3893,"title":{},"body":{"todo.html":{}}}],["valid",{"_index":775,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":851,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":878,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":4148,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validates",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["validation",{"_index":48,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.error.ts",{"_index":7,"title":{},"body":{"classes/ApiValidationError.html":{},"coverage.html":{}}}],["validation.error.ts:4",{"_index":23,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":1676,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":753,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"coverage.html":{}}}],["validation.pipe.ts:12",{"_index":761,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":321,"title":{},"body":{"modules/CoreModule.html":{}}}],["validationerror",{"_index":21,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":78,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":68,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{},"coverage.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":82,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":28,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":302,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":760,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":467,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":4383,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":1428,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":223,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/Lesson.html":{},"classes/MongoSharedDriver.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["valueof",{"_index":3911,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":1873,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["variable",{"_index":2753,"title":{},"body":{"changelog.html":{},"coverage.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":1745,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["verbatim",{"_index":3194,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":833,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":842,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":847,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":4728,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":4726,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":1894,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":4657,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":2140,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1939,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["versioning",{"_index":1686,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":3211,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":4117,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":1583,"title":{},"body":{"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":1337,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":379,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":3567,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3621,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":3049,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":3872,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":378,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":3141,"title":{},"body":{"index.html":{}}}],["void",{"_index":668,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"classes/NewsScope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":3470,"title":{},"body":{"license.html":{}}}],["vor",{"_index":1999,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":3896,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4052,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":4766,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":3894,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":4053,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":4764,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["wait",{"_index":3100,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":3424,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":3810,"title":{},"body":{"license.html":{}}}],["want",{"_index":957,"title":{},"body":{"modules/MongoDatabaseModule.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":4160,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":834,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":844,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":1540,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{}}}],["warranties",{"_index":3320,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3319,"title":{},"body":{"license.html":{}}}],["watch",{"_index":3878,"title":{},"body":{"todo.html":{}}}],["way",{"_index":980,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":3480,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":3830,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weeks",{"_index":1602,"title":{},"body":{"injectables/TaskUC.html":{}}}],["weight",{"_index":1872,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3129,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":4574,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":3661,"title":{},"body":{"license.html":{}}}],["whereas",{"_index":4281,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":913,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":3533,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":773,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["whitelisted",{"_index":894,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3340,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":3520,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3337,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":3239,"title":{},"body":{"license.html":{}}}],["wil",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":2458,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":2894,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":2372,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":3154,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":3416,"title":{},"body":{"license.html":{}}}],["wise",{"_index":3166,"title":{},"body":{"index.html":{}}}],["wish",{"_index":3219,"title":{},"body":{"license.html":{}}}],["within",{"_index":276,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":2300,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["words",{"_index":3149,"title":{},"body":{"index.html":{}}}],["work",{"_index":214,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":3358,"title":{},"body":{"license.html":{}}}],["workflows",{"_index":4523,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":2797,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":4569,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":1122,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{},"license.html":{}}}],["world",{"_index":4219,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":3693,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":4661,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wrapped",{"_index":4582,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["wraps",{"_index":4209,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":4254,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":740,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":747,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writes",{"_index":4324,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":727,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":742,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":3775,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":3133,"title":{},"body":{"index.html":{},"license.html":{}}}],["wrong",{"_index":734,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":3964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xml2js",{"_index":3103,"title":{},"body":{"dependencies.html":{}}}],["xss",{"_index":2747,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":4255,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["year",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":3488,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":623,"title":{},"body":{"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"modules/MongoDatabaseModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoSharedConnection.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":3160,"title":{},"body":{"index.html":{}}}],["yourself",{"_index":3709,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":4529,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["yyyy",{"_index":2777,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/FeathersModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                    ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BusinessError\n\n                                \n                            \n                        \n                            \n                                    Defined in         BusinessError:12\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidationErrorDetailResponse[]\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\n// import { AuthController } from './controller/auth.controller';\n// import { LocalStrategy } from './strategy/local.strategy';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants)],\n\tproviders: [JwtStrategy],\n\texports: [],\n\tcontrollers: [\n\t\t/* AuthController */\n\t],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            checkEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:33\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEntityPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedEntities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:53\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '../news/entity';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps extends BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteAll\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                saveAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(objs: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:43\n                \n            \n\n\n            \n                \n                    In order to delete multiple entities use {@code deleteAll}\nDue to multiple transactions consistency\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objs\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAll(objs: T[], autoFlush)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    objs\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    autoFlush\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            flush\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(obj: T, autoFlush)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:15\n                \n            \n\n\n            \n                \n                    In order to save multiple entities use {@code saveAll}\nDue to multiple transactions consistency\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    autoFlush\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAll(objs: T[], autoFlush)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    objs\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    autoFlush\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\t/**\n\t * In order to save multiple entities use {@code saveAll}\n\t * Due to multiple transactions consistency\n\t * @param obj\n\t * @param autoFlush\n\t */\n\tasync save(obj: T, autoFlush = true): Promise {\n\t\tthis.em.persist(obj);\n\t\tif (autoFlush) {\n\t\t\tawait this.flush();\n\t\t}\n\t\treturn obj;\n\t}\n\n\tasync saveAll(objs: T[], autoFlush = true): Promise {\n\t\tconst persisted = objs.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tif (autoFlush) {\n\t\t\tawait this.em.flush();\n\t\t}\n\t\treturn persisted;\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n\n\t/**\n\t * In order to delete multiple entities use {@code deleteAll}\n\t * Due to multiple transactions consistency\n\t * @param objs\n\t */\n\tasync delete(objs: T): Promise {\n\t\tawait this.em.removeAndFlush(objs);\n\t}\n\n\tasync deleteAll(objs: T[], autoFlush = true): Promise {\n\t\tobjs.map((n) => this.em.remove(n));\n\t\tif (autoFlush) {\n\t\t\tawait this.flush();\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            code\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/error/business.error.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\tconstructor({ type, title, defaultMessage }: IErrorType, code: HttpStatus = HttpStatus.CONFLICT) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                name\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/entity/course.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            students\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Collection(this)\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToMany({fieldName: 'userIds', type: UserInfo})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/course.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\tconstructor(partial: Partial) {\n\t\tsuper();\n\t\tObject.assign(this, partial);\n\t}\n\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tcolor: string;\n\n\t@ManyToMany({ fieldName: 'userIds', type: UserInfo })\n\tstudents = new Collection(this);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseInfo.html":{"url":"classes/CourseInfo.html","title":"class - CourseInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/course-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/course-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'courses' })\nexport class CourseInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CourseInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget!: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsDate()@ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDate, IsString } from 'class-validator';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(DurationLoggingInterceptor.name)\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger/logger.service';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedSchools\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserSchoolPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserTargetPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModel } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        className\n                                \n                                \n                                        code\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    find\n                                \n                                \n                                    get\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getService\n                        \n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst service = (this.request.app as Application).service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        DB_PASSWORD\n                                \n                                \n                                        DB_URL\n                                \n                                \n                                            Optional\n                                        DB_USERNAME\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('Error')\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:114\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport * as _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger } from '../../logger/logger.service';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                news interface for ceating news \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        displayAt\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport enum NewsTargetModel {\n\tSchool = 'schools',\n\tCourse = 'courses',\n\tTeam = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        accountId\n                                \n                                \n                                        roles\n                                \n                                \n                                        schoolId\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[] \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        defaultMessage\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        order\n                                \n                                \n                                            Optional\n                                        pagination\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    debug\n                                \n                                \n                                    error\n                                \n                                \n                                    log\n                                \n                                \n                                        Optional\n                                    verbose\n                                \n                                \n                                    warn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            log\n                        \n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            verbose\n                        \n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warn\n                        \n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        creator\n                                \n                                \n                                        displayAt\n                                \n                                \n                                            Optional\n                                        externalId\n                                \n                                \n                                        school\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                            Optional\n                                        sourceDescription\n                                \n                                \n                                        target\n                                \n                                \n                                        title\n                                \n                                \n                                            Optional\n                                        updater\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                    \n                                \n                                \n                                    \n                                        school:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                    \n                                \n                                \n                                    \n                                        updater:         EntityId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget!: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.types.ts\n        \n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        target\n                                \n                                \n                                            Optional\n                                        unpublished\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\n\nexport enum NewsTargetModel {\n\tSchool = 'schools',\n\tCourse = 'courses',\n\tTeam = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        limit\n                                \n                                \n                                            Optional\n                                        skip\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        jwtOptions\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        aud\n                                \n                                \n                                        exp\n                                \n                                \n                                        iat\n                                \n                                \n                                        iss\n                                \n                                \n                                        jti\n                                \n                                \n                                        sub\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n}\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         JwtPayload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor() {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tvalidate(payload: JwtPayload): JwtPayload {\n\t\t// TODO check jwt is whitelisted\n\t\t// TODO check user exist/is active\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/lesson.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/lesson.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { Course } from './course.entity';\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\thidden: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        NestLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, Logger as NestLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend NestLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends NestLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoDatabaseModule.html":{"url":"modules/MongoDatabaseModule.html","title":"module - MongoDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-database/mongo-database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: Omit)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-database/mongo-database.module.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Omit\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /* istanbul ignore file */\n// TODO add spec when this will be really used\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Module } from '@nestjs/common';\nimport { MongoSharedDriver } from './mongo-shared-driver';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from '../../../config';\n\n// the options we want to be fixed\ntype NoOptions = 'type' | 'driver' | 'clientUrl' | 'dbName' | 'user' | 'password';\n\n@Module({})\nexport class MongoDatabaseModule {\n\tstatic forRoot(options?: Omit): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoDatabaseModule,\n\t\t\timports: [\n\t\t\t\tMikroOrmModule.forRoot({\n\t\t\t\t\t...(options || {}),\n\t\t\t\t\tdriver: MongoSharedDriver,\n\t\t\t\t\tclientUrl: DB_URL,\n\t\t\t\t\tuser: DB_USERNAME,\n\t\t\t\t\tpassword: DB_PASSWORD,\n\t\t\t\t}),\n\t\t\t],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MikroOrmModuleSyncOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            MikroOrmModuleSyncOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nconst createMikroOrmModule = (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MikroOrmModuleSyncOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule(options || {})],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoSharedConnection.html":{"url":"classes/MongoSharedConnection.html","title":"class - MongoSharedConnection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoSharedConnection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MongoConnection\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                connect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close(force?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    force\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            connect\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    connect()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MongoConnection } from '@mikro-orm/mongodb';\nimport { MongoClient } from 'mongodb';\n\n// the shared mongo client\nlet sharedClient: MongoClient | undefined;\n\n// keep a list of references to all open mikro-orm mongo connections\nconst connections: Array = [];\n\nexport class MongoSharedConnection extends MongoConnection {\n\tasync connect(): Promise {\n\t\tif (!sharedClient) {\n\t\t\tsharedClient = await MongoClient.connect(this.config.getClientUrl(), this.getConnectionOptions());\n\t\t}\n\t\tconnections.push(this);\n\t\tthis.client = sharedClient;\n\t\tthis.db = this.client.db(this.config.get('dbName'));\n\t}\n\n\tasync close(force?: boolean): Promise {\n\t\t// remove from list of references\n\t\tconnections.splice(connections.indexOf(this), 1);\n\t\tif (connections.length === 0) {\n\t\t\t// close client when there are no more references\n\t\t\tawait sharedClient?.close(force);\n\t\t\tsharedClient = undefined;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoSharedDriver.html":{"url":"classes/MongoSharedDriver.html","title":"class - MongoSharedDriver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoSharedDriver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-database/mongo-shared-driver.ts\n        \n\n\n            \n                Extends\n            \n            \n                    MongoDriver\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                connection\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Readonly\n                            connection\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MongoSharedConnection(this.config)\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/database/mongo-database/mongo-shared-driver.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MongoDriver } from '@mikro-orm/mongodb';\nimport { MongoSharedConnection } from './mongo-shared-connection';\n\nexport class MongoSharedDriver extends MongoDriver {\n\tprotected readonly connection = new MongoSharedConnection(this.config);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:34\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:38\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:51\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:55\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:30\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/entity/news.entity.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget!: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:46\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ParseObjectIdPipe } from '@shared/controller/pipe';\nimport { PaginationQuery } from '@shared/controller';\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { NewsUc } from '../uc/news.uc';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise> {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\treturn new PaginationResponse(dtoList, count);\n\t}\n\n\t/** Retrieve a specific news entry by id. A user may only read news of scopes he has the read permission. The news entity has school and user names populated. */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            unpublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '../../entity';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapCreateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapNewsScopeToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapUpdateNewsToDomain\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { ICreateNews, INewsScope, IUpdateNews, News, NewsTargetModel } from '../entity';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target?.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_imports\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { AuthorizationModule } from '../authorization/authorization.module';\nimport { LoggerModule } from '../../core/logger/logger.module';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteAll\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                saveAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:19\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            findNewsAndCount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:32\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements names (school, updator/creator) populated already \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(objs: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:43\n\n                \n            \n\n\n            \n                \n                    In order to delete multiple entities use {@code deleteAll}\nDue to multiple transactions consistency\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objs\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAll(objs: T[], autoFlush)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    objs\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    autoFlush\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            flush\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(obj: T, autoFlush)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:15\n\n                \n            \n\n\n            \n                \n                    In order to save multiple entities use {@code saveAll}\nDue to multiple transactions consistency\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    autoFlush\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAll(objs: T[], autoFlush)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    objs\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    autoFlush\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { News } from '../entity';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements names (school, updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst news = await this.em.findOneOrFail(News, id, ['school', 'creator', 'updater']);\n\t\treturn news;\n\t}\n\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [obj, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tconst newsList = await this.em.populate(obj, ['school', 'creator', 'updater']);\n\t\treturn [newsList, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The creation timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Reference to the User that created the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The School ownership'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SourceType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'The source description of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The update timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfoResponse\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/news.response.ts:70\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { NewsTargetModel } from '../../entity';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addQuery\n                            \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _queries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FilterQuery[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addQuery(query: FilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byTargets\n                        \n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            byUnpublished\n                        \n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/news/repo/news-scope.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from '@shared/repo';\nimport { News } from '../entity';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { $and: this._queries } : this._queries[0];\n\t\treturn query;\n\t}\n\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n\n\tprivate addQuery(query: FilterQuery) {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetIds\n                                \n                                \n                                        targetModel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '../entity';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneByIdForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getNewsPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getPermittedTargets\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            getRequiredPermissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            getTargetFilters\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { AuthorizationService } from '../../authorization/authorization.service';\nimport { News, NewsTargetModel, ICreateNews, INewsScope, IUpdateNews } from '../entity';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService, private logger: Logger) {\n\t\tthis.logger.setContext(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, ...props } = params;\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.save(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.save(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.delete(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 10\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T, total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/controller/dto/pagination.response.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginationResponse {\n\tconstructor(data: T, total: number, skip?: number, limit?: number) {\n\t\tthis.data = data;\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tdata: T;\n\n\t@ApiProperty()\n\ttotal: number;\n\n\t@ApiProperty()\n\tskip?: number;\n\n\t@ApiProperty()\n\tlimit?: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfo.html":{"url":"classes/SchoolInfo.html","title":"class - SchoolInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/school-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/school-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'schools' })\nexport class SchoolInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: SchoolInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                SchoolInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SchoolInfo } from '../entity';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: SchoolInfo): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'The name of the School entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget!: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from '@src/config';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { TaskModule } from './modules/task/task.module';\nimport { CourseNews, News, SchoolInfo, SchoolNews, TeamNews, UserInfo } from './modules/news/entity';\nimport { Task, Submission, Lesson, Course } from './modules/task/entity';\nimport { CoreModule } from './core/core.module';\nimport { CourseInfo } from './modules/news/entity/course-info.entity';\nimport { TeamInfo } from './modules/news/entity/team-info.entity';\nimport { NewsModule } from './modules/news/news.module';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tNewsModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: [\n\t\t\t\tNews,\n\t\t\t\tCourseInfo,\n\t\t\t\tCourseNews,\n\t\t\t\tSchoolNews,\n\t\t\t\tTeamNews,\n\t\t\t\tSchoolInfo,\n\t\t\t\tTeamInfo,\n\t\t\t\tUserInfo,\n\t\t\t\tTask,\n\t\t\t\tLesson,\n\t\t\t\tCourse,\n\t\t\t\tSubmission,\n\t\t\t],\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/submission.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                homework\n                            \n                            \n                                student\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            homework\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Task\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'homeworkId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            student\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'studentId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/submission.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { UserInfo } from '../../news/entity';\nimport { Task } from './task.entity';\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne({ fieldName: 'homeworkId' })\n\thomework: Task;\n\n\t@ManyToOne({ fieldName: 'studentId' })\n\tstudent: UserInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/entity/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                private\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Course\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'courseId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dueDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            lesson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Lesson\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'lessonId'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            private\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/entity/task.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from '@shared/domain';\nimport { Course } from './course.entity';\nimport { Lesson } from './lesson.entity';\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate?: boolean;\n\n\t@ManyToOne({ fieldName: 'courseId' })\n\tcourse: Course;\n\n\t@ManyToOne({ fieldName: 'lessonId' })\n\tlesson?: Lesson;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('dashboard')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { PaginationResponse } from '@shared/controller/dto/pagination.response';\nimport { PaginationQuery } from '@shared/controller/dto/pagination.query';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '../../authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '../../authentication/interface/jwt-payload';\nimport { TaskUC } from '../uc/task.uc';\n\nimport { TaskResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n// TODO: swagger doku do not read from combined query object only from passed single parameter in Query(), but this do not allowed optional querys only required querys\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('task')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get('dashboard')\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise> {\n\t\tconst [tasks, total] = await this.taskUc.findAllOpenForUser(currentUser.userId, paginationQuery);\n\t\tconst tasksResponse = tasks.map((task) => TaskMapper.mapToResponse(task));\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new PaginationResponse(tasksResponse, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskResponse } from '../controller/dto';\nimport { Task } from '../entity';\n\nexport class TaskMapper {\n\tstatic mapToResponse(task: Task): TaskResponse {\n\t\tconst dto = new TaskResponse();\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.courseName = task.course?.name;\n\t\tdto.displayColor = task.course?.color;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nTaskRepo\n\nTaskRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc/task.uc';\nimport { TaskRepo } from './repo/task.repo';\n\n@Module({\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenByStudent\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteAll\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                    Async\n                                save\n                            \n                            \n                                    Async\n                                saveAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenByStudent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenByStudent(userId: EntityId, undefined: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(objs: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:43\n\n                \n            \n\n\n            \n                \n                    In order to delete multiple entities use {@code deleteAll}\nDue to multiple transactions consistency\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objs\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteAll(objs: T[], autoFlush)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    objs\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    autoFlush\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            flush\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(obj: T, autoFlush)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:15\n\n                \n            \n\n\n            \n                \n                    In order to save multiple entities use {@code saveAll}\nDue to multiple transactions consistency\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    autoFlush\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            saveAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAll(objs: T[], autoFlush)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    objs\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    autoFlush\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { QueryOrder } from '@mikro-orm/core';\nimport { Counted } from '@shared/domain/types';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { Task, Submission, Course, Lesson } from '../entity';\n\n@Injectable()\nexport class TaskRepo extends BaseRepo {\n\t// WARNING: this is used to deal with the current datamodel, and needs to be changed.\n\t// DO NOT DO THIS AT HOME!!\n\tasync findAllOpenByStudent(userId: EntityId, { limit, skip }: IPagination = {}): Promise> {\n\t\t// todo: handle coursegroups\n\n\t\t// TODO move BL to UC\n\t\t// we have following logical groups:\n\t\t// filter for all news a user might read\n\t\t// filter by tasks not yet done\n\t\t// order by duedate\n\t\t// pagination\n\n\t\tconst coursesOfStudent = await this.em.find(Course, {\n\t\t\tstudents: userId,\n\t\t});\n\t\tconst lessonsOfStudent = await this.em.find(Lesson, {\n\t\t\tcourse: { $in: coursesOfStudent },\n\t\t\thidden: false,\n\t\t});\n\n\t\tconst submissionsOfStudent = await this.em.find(Submission, {\n\t\t\tstudent: userId,\n\t\t});\n\t\tconst homeworksWithSubmissions = submissionsOfStudent.map((submission) => submission.homework.id);\n\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\tconst [usersTasks, total] = await this.em.findAndCount(\n\t\t\tTask,\n\t\t\t{\n\t\t\t\t// TODO task query builder, see NewsScope\n\t\t\t\t$and: [\n\t\t\t\t\t// TODO move into a logic group / director\n\t\t\t\t\t{ id: { $nin: homeworksWithSubmissions } },\n\t\t\t\t\t{ private: { $ne: true } },\n\t\t\t\t\t{ course: { $in: coursesOfStudent } },\n\t\t\t\t\t{ $or: [{ lesson: null }, { lesson: { $in: lessonsOfStudent } }] },\n\t\t\t\t\t{ $or: [{ dueDate: { $gte: oneWeekAgo } }, { dueDate: null }] },\n\t\t\t\t],\n\t\t\t},\n\t\t\t// TODO Populate in separate step\n\t\t\t// TODO extract pagination, oderby\n\t\t\t{ populate: ['course'], limit, offset: skip, orderBy: { dueDate: QueryOrder.ASC } }\n\t\t);\n\n\t\treturn [usersTasks, total];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            courseName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            displayColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            duedate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\tname: string;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t// status: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllOpenForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllOpenForUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllOpenForUser(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IPagination } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { TaskRepo } from '../repo/task.repo';\nimport { Task } from '../entity';\n\n// filter tasks older than 3 weeks\n@Injectable()\nexport class TaskUC {\n\tconstructor(private taskRepo: TaskRepo) {}\n\n\tasync findAllOpenForUser(userId: EntityId, pagination: IPagination): Promise> {\n\t\t// TODO authorization (user conditions -> permissions?)\n\t\t// TODO get permitted tasks...\n\t\t// TODO have BL from repo here\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllOpenByStudent(userId, pagination);\n\t\treturn [tasks, total];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamInfo.html":{"url":"classes/TeamInfo.html","title":"class - TeamInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/team-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/team-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'teams' })\nexport class TeamInfo extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/news.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TeamInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/news.entity.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:34\n\n                            \n                        \n\n                \n                    \n                        the news content as html \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'creatorId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:61\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:38\n\n                            \n                        \n\n                \n                    \n                        only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            externalId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            permissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:66\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            school\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SchoolInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'schoolId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:58\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            source\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"internal\" | \"rss\"\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sourceDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:47\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BaseEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:51\n\n                            \n                        \n\n                \n                    \n                        id reference to a collection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            targetModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NewsTargetModel\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:55\n\n                            \n                        \n\n                \n                    \n                        name of a collection which is referenced in target \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:30\n\n                            \n                        \n\n                \n                    \n                        the news title \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updater\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserInfo\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ManyToOne({fieldName: 'updaterId'})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:64\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         News\n\n                                \n                            \n                        \n                            \n                                    Defined in         News:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property({onUpdate: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntityWithTimestamps\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntityWithTimestamps:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            createInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntity, BaseEntityWithTimestamps, EntityId } from '@shared/domain';\nimport { CourseInfo } from './course-info.entity';\nimport { NewsTargetModel } from './news.types';\nimport { SchoolInfo } from './school-info.entity';\nimport { TeamInfo } from './team-info.entity';\nimport { UserInfo } from './user-info.entity';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId;\n\tcreator: EntityId;\n\ttarget: EntityId;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: EntityId;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection */\n\t@ManyToOne()\n\ttarget!: BaseEntity;\n\n\t/** name of a collection which is referenced in target */\n\t@Property()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne({ fieldName: 'schoolId' })\n\tschool!: SchoolInfo;\n\n\t@ManyToOne({ fieldName: 'creatorId' })\n\tcreator!: UserInfo;\n\n\t@ManyToOne({ fieldName: 'updaterId' })\n\tupdater?: UserInfo;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, target: props.target });\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne()\n\ttarget: SchoolInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne()\n\ttarget: CourseInfo;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne()\n\ttarget: TeamInfo;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Optional\n                            _timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            defaultTimeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : REQUEST_TIMEOUT\n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        permissions\n                                \n                                \n                                        schoolId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                    \n                                \n                                \n                                    \n                                        schoolId:     ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModel } from '../news/entity';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfo.html":{"url":"classes/UserInfo.html","title":"class - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/entity/user-info.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Property()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/entity/user-info.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ObjectId\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @SerializedPrimaryKey()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:10\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from '@shared/domain';\n\n@Entity({ tableName: 'users' })\nexport class UserInfo extends BaseEntity {\n\t@Property()\n\tfirstName!: string;\n\n\t@Property()\n\tlastName!: string;\n\n\tconstructor(props: { firstName: string; lastName: string }) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            mapToResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(userInfo: UserInfo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userInfo\n                                    \n                                                UserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UserInfo } from '../entity';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(userInfo: UserInfo): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = userInfo.id;\n\t\tdto.firstName = userInfo.firstName;\n\t\tdto.lastName = userInfo.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'First name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Last name of the user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\nUnreleased\nAdded\n\nSC-9018; SC-9003 - created schoolsList public endpoint, and jwt secured /schools endpoint\nSC-9093 - make configured default language and timezone available in config service\nSC-9092 - delete S3 files after 7 days from user deletion\nSC-8959 - Add messenger to deletion concept\n\nChanged\n\nremove unneccesary timeout definitions from tests and avoid promise chains\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n[26.2.2] - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n[26.2.1] - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n[26.2.0] - 2021-06-01\nAdded\n\nOPS-2418 - Change buildpipelines (Server, Client, Nuxt) to execute E2E tests according QF decision\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\nSC-9004 - Sync env variables between backend and frontend\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches\nAdd run script for sync indexes based on existing and registered schemas.\n\nChanged\n\nSC-8440 - fixed open api validation for manual consent\nSC-9055 - changed Edu-Sharing permissions for Brandenburg Sportinhalt content\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8933 - fix date format on first login\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            interface\n            GlobalConstants\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            usedGlobals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/config/database.config.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            API_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/constants.ts\n            \n            variable\n            ROUTE_PRAEFIX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/api-validation-error.response.ts\n            \n            class\n            ApiValidationErrorResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/dto/validation-error-detail.response.ts\n            \n            class\n            ValidationErrorDetailResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            class\n            GlobalErrorFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            function\n            createErrorResponseForUnknownError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            createErrorResponseForHttpException\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isBusinessError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isFeathersError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            isTechnicalError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeErrorLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/filter/global-error.filter.ts\n            \n            variable\n            writeValidationErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/error-type.interface.ts\n            \n            interface\n            IErrorType\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/interface/feathers-error.interface.ts\n            \n            interface\n            FeathersError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            NOT_FOUND_ERROR_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            serverErrorTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/error/server-error-types.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/core/logger/logger.service.ts\n            \n            injectable\n            Logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/core/validation/pipe/global-validation.pipe.ts\n            \n            class\n            GlobalValidationPipe\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            interface\n            JwtConstants\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            Authenticate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/decorator/auth.decorator.ts\n            \n            variable\n            STRATEGIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            ICurrentUser\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/interface/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/authorization.service.ts\n            \n            injectable\n            AuthorizationService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            injectable\n            FeathersAuthProvider\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/authorization/feathers-auth.provider.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n            \n            class\n            MongoSharedConnection\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n            \n            variable\n            connections\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n            \n            variable\n            sharedClient\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-database/mongo-shared-driver.ts\n            \n            class\n            MongoSharedDriver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n            \n            variable\n            createMikroOrmModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            injectable\n            FeathersServiceProvider\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/feathers/feathers-service.provider.ts\n            \n            interface\n            FeathersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            class\n            CreateNewsParams\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/create-news.params.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            class\n            NewsFilterQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news-filter.query.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            class\n            NewsResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            NEWS_SOURCES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/news.response.ts\n            \n            variable\n            TARGET_MODEL_VALUES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/school-info.response.ts\n            \n            class\n            SchoolInfoResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/update-news.params.ts\n            \n            class\n            UpdateNewsParams\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/dto/user-info.response.ts\n            \n            class\n            UserInfoResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/controller/news.controller.ts\n            \n            controller\n            NewsController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/course-info.entity.ts\n            \n            class\n            CourseInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            CourseNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            News\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            SchoolNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            class\n            TeamNews\n            \n                18 %\n                (5/27)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.entity.ts\n            \n            interface\n            INewsProperties\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            ICreateNews\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/news.types.ts\n            \n            interface\n            INewsScope\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/school-info.entity.ts\n            \n            class\n            SchoolInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/team-info.entity.ts\n            \n            class\n            TeamInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/entity/user-info.entity.ts\n            \n            class\n            UserInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/news.mapper.ts\n            \n            class\n            NewsMapper\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/school-info.mapper.ts\n            \n            class\n            SchoolInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/mapper/user-info.mapper.ts\n            \n            class\n            UserInfoMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-scope.ts\n            \n            class\n            NewsScope\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news-target-filter.ts\n            \n            interface\n            NewsTargetFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/repo/news.repo.ts\n            \n            injectable\n            NewsRepo\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/news/uc/news.uc.ts\n            \n            injectable\n            NewsUc\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/dto/task.response.ts\n            \n            class\n            TaskResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/controller/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/course.entity.ts\n            \n            class\n            Course\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/lesson.entity.ts\n            \n            class\n            Lesson\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/submission.entity.ts\n            \n            class\n            Submission\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/entity/task.entity.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/mapper/task.mapper.ts\n            \n            class\n            TaskMapper\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.repo.ts\n            \n            injectable\n            TaskRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            CourseSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            LessonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            SubmissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            TaskSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/repo/task.schema.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/modules/task/uc/task.uc.ts\n            \n            injectable\n            TaskUC\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/server.controller.ts\n            \n            controller\n            ServerController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/api-validation.error.ts\n            \n            class\n            ApiValidationError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/error/business.error.ts\n            \n            class\n            BusinessError\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            REQUEST_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/constants.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n            \n            injectable\n            DurationLoggingInterceptor\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            controller\n            DelayController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            createTestModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/test/create-test.module.ts\n            \n            variable\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n            \n            injectable\n            TimeoutInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.query.ts\n            \n            class\n            PaginationQuery\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/dto/pagination.response.ts\n            \n            class\n            PaginationResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n            \n            injectable\n            ParseObjectIdPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            config\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/swagger.ts\n            \n            variable\n            enableOpenApiDocs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n            \n            function\n            StringToBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/entity/base.entity.ts\n            \n            class\n            BaseEntityWithTimestamps\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IFindOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/domain/interface/find-options.ts\n            \n            interface\n            IPagination\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/base.repo.ts\n            \n            injectable\n            BaseRepo\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                apps/server/src/shared/repo/query/empty-result.query.ts\n            \n            variable\n            EmptyResultQuery\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                jest.config.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.2.0\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.13\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.13\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.5.0\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.306.0\n        \n            axios : ^0.21.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.7.0\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.1.0\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git+https://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.12.3\n        \n            mongoose-diff-history : git+https://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.0\n        \n            mongoose-shortid-nodeps : git+https://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^6.6.6\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^5.0.1\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/news/entity/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForBusinessError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForFeathersError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createErrorResponseForUnknownError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            StringToBoolean\n                        \n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nBased on Node.js and Feathers\nDevelop:  \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nSwagger UI documentation when running the server locally, it is served at http://localhost:3030/docs/.\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages.\n\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\n\nSetup\nYou will need the client as well. For more detailed setup instructions, take a look here. It is written for Windows but the procedure is similar for other OS.\nRun\n\nGo into project folder\nRun mongod\nRun npm start\nRun npm run setup\n\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nTesting\nRun tests\n\nGo into project folder\nrun npm run test\n\nTo run a single test, use npm run mocha-single -- .\nCreate tests\n\nCreate a folder for the \"service\" you're working on in \"/test/services\"\nCreate a file \"user.test.js\" for frontend tests (e.g. clicking a link or check if URL is available)\nCreate a file \"unit.test.js\" for backend tests (e.g. calculating a number)\n\nTry to cover as many methods as possible unit test wise - goal is 100% of course, so one test per method.\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU Affero General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\nNotwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    37 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\n\nACCEPTED\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            NoOptions   (apps/.../mongo-database.module.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/news/entity/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news \n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    apps/server/src/modules/database/mongo-database/mongo-database.module.ts\n    \n    \n        \n            \n                \n                    \n                    NoOptions\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_PATH   (apps/.../constants.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            connections   (apps/.../mongo-shared-connection.ts)\n                        \n                        \n                            CourseSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            LessonSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            PORT   (apps/.../constants.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            ROUTE_PRAEFIX   (apps/.../constants.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            sharedClient   (apps/.../mongo-shared-connection.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            SubmissionSchema   (apps/.../task.schema.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            TaskSchema   (apps/.../task.schema.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../task.schema.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_PATH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'api'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PORT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 3030\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTE_PRAEFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'v3'\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                        \n                    \n\n                \n                    \n                        Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                        \n                    \n\n                \n                    \n                        Returns the current authenticated user.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STRATEGIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['jwt'] as const\n                        \n                    \n\n\n            \n        \n\n    jest.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Config.InitialOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$', 'main.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('ts-jest/utils')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('./tsconfig.json')\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/controller/swagger.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                        \n                    \n\n                \n                    \n                        \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableOpenApiDocs\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/database/mongo-database/mongo-shared-connection.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            connections\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sharedClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MongoClient | undefined\n\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/task/repo/task.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            LessonSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SubmissionSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : submissionSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskSchema\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : taskModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : courseModel\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lessonModel\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponse\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponseForHttpException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                        \n                    \n\n                \n                    \n                        Creates ErrorResponse from NestJS build in technical exceptions\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isBusinessError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFeathersError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTechnicalError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                        \n                    \n\n                \n                    \n                        Compare helper to detect an error is a build in NestJS http exception.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeErrorLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: unknown, logger: Logger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValidationErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (error: ApiValidationError, logger: Logger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createMikroOrmModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: MikroOrmModuleSyncOptions): DynamicModule => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: () => {\n\t\t\t\t\treturn new MongoMemoryServer();\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongod: MongoMemoryServer) => {\n\t\t\tconst clientUrl = await mongod.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tconst mikroOrmCoreModule = (mikroOrmModule.imports || [])[0] as DynamicModule;\n\tif (mikroOrmCoreModule) {\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createTestModule\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EmptyResultQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { $and: [{ _id: false }] }\n                        \n                    \n\n                \n                    \n                        When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                    \n                \n\n            \n        \n\n    apps/server/src/modules/authentication/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         JwtConstants\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : externalAuthConfig\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NEWS_SOURCES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ['internal', 'rss'] as const\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/core/error/server-error-types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NOT_FOUND_ERROR_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IErrorType\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serverErrorTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : legacyErrorTypes\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : serverErrorTypes\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            REQUEST_TIMEOUT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TARGET_MODEL_VALUES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(NewsTargetModel)\n                        \n                    \n\n\n            \n        \n\n    apps/server/src/config/database.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            usedGlobals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GlobalConstants\n\n                        \n                    \n                    \n                        \n                            Default value : globals\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : usedGlobals\n                        \n                    \n\n                \n                    \n                        Database URL \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:doc:serve builds code documentation and module relations into /documentation folder and serves it on port :8080\nnest:start starts the nest application // TODO how?\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to statically check the code\n\nnest:lint run eslint to report linter issues and apply formatting\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting \n\nHow to test the application?\n\nnest:test executes all jest  (NestJS) tests, to separate them from existing tests, not use _.test.[ts|js] as filename but instead either *.spec.ts beside tested files or *.e2e-spec.ts in test folder\nnest:test:watch executes changed tests again on save\nnest:test:cov reports coverage results\nnest:test:debug executes tests for debugging\nnest:test:e2e execute e2e tests only\nnest:test:spec execute spec tests (without e2e) only\n\nStatic Code Analysis\nBased on npm run nest:test:all you can ensure the code is accepted to be merged. This executes all tests, checks for linter issues and code coverage. \nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture divides the application into technical ***layers\\* based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into component parts\\ for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to *external consumers *over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                        (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                           (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as PaginationResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
