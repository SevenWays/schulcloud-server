var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AdminIdAndToken.html",[0,0.573,1,4.124]],["body/interfaces/AdminIdAndToken.html",[0,0.534,1,6.698,2,0.897,3,0.045,4,0.038,5,0.028,6,2.331,7,2.453,8,0.118,9,0.509,10,1.765,11,7.115,12,1.024,13,0.203,14,0.004,15,0.12,16,5.038,17,1.787,18,0.941,19,0.569,20,2.453,21,2.331,22,0.078,23,3.655,24,3.135,25,3.496,26,3.496,27,3.496,28,3.496,29,6.188,30,1.939,31,0.138,32,2.453,33,0.633,34,2.316,35,2.581,36,2.605,37,0.811,38,3.567,39,2.23,40,1.533,41,2.605,42,2.605,43,4.025,44,4.095,45,3.657,46,3.894,47,4.095,48,4.771,49,6.276,50,6.188,51,5.038,52,2.331,53,2.605,54,2.499,55,2.605,56,2.453,57,2.605,58,2.605,59,2.605,60,3.371,61,2.605,62,2.605,63,5.038,64,2.605,65,2.605,66,2.605,67,2.605,68,2.453,69,0.626,70,2.605,71,1.51,72,1.077,73,6.093,74,2.843,75,2.605,76,3.571,77,2.779,78,1.406,79,2.605,80,6.872,81,2.605,82,2.316,83,2.605,84,1.743,85,2.605,86,2.605,87,2.605,88,2.605,89,2.605,90,2.605,91,2.605,92,2.605,93,6.872,94,6.872,95,2.605,96,2.605,97,2.605,98,2.605,99,2.605,100,2.605,101,2.605,102,2.605,103,2.605,104,2.605,105,2.605,106,2.605,107,2.605,108,2.605,109,2.605,110,4.085,111,4.085,112,2.197,113,2.605,114,0.461,115,2.605,116,2.605,117,2.605,118,3.998,119,4.744,120,2.605,121,1.833,122,2.453,123,0.857,124,2.605,125,2.605,126,2.605,127,4.378,128,1.336,129,2.184,130,4.085,131,2.605,132,4.085,133,4.085,134,2.605,135,2.605,136,2.605,137,5.038,138,3.998,139,3.75,140,3.998,141,2.605,142,3.846,143,3.728,144,3.846,145,1.25,146,4.312,147,5.038,148,2.815,149,1.34,150,5.038,151,5.038,152,5.038,153,2.605,154,2.605,155,2.605,156,2.605,157,6.195,158,5.038,159,5.038,160,5.038,161,2.605,162,4.085,163,4.085,164,2.605,165,2.605,166,2.605,167,2.605,168,1.254,169,2.605,170,4.085,171,3.846,172,0.002,173,0.002]],["title/classes/ApiValidationError.html",[31,0.148,174,3.749]],["body/classes/ApiValidationError.html",[3,0.092,4,0.076,5,0.056,8,0.239,9,0.842,12,0.852,13,0.31,14,0.004,15,0.199,19,1.151,22,0.081,30,5.034,31,0.178,33,1.643,34,2.985,37,1.638,69,1.266,71,3.237,84,4.526,114,0.482,172,0.003,173,0.003,174,5.789,175,1.266,176,8.097,177,6.304,178,6.947,179,3.834,180,5.561,181,3.05,182,1.432,183,7.035,184,7.035,185,6.304,186,7.055,187,0.763,188,6.304,189,0.859,190,0.496,191,8.057,192,4.643,193,5.265,194,5.265,195,5.265,196,5.265,197,5.265,198,5.265,199,1.417,200,5.265,201,3.919,202,4.957,203,5.265,204,5.265,205,2.069,206,5.265,207,4.142,208,4.759,209,4.507,210,4.957,211,2.831,212,5.678]],["title/classes/ApiValidationErrorResponse.html",[31,0.148,213,4.38]],["body/classes/ApiValidationErrorResponse.html",[3,0.095,4,0.079,5,0.058,8,0.248,9,0.863,13,0.271,14,0.004,15,0.224,22,0.084,31,0.184,33,1.682,34,3.098,38,4.331,69,1.314,78,1.143,84,4.634,114,0.5,128,1.478,149,1.498,172,0.003,173,0.003,174,7.213,175,1.314,179,3.926,181,2.827,187,0.615,189,0.892,190,0.515,191,8.198,201,5.659,207,4.242,208,6.024,210,5.145,213,6.926,214,9.102,215,6.543,216,1.627,217,5.697,218,5.495,219,5.625,220,8.291,221,6.543,222,7.603,223,6.543,224,4.195,225,5.893,226,6.543,227,6.543,228,6.543,229,6.543,230,8.291,231,8.291,232,6.543,233,8.291,234,6.543]],["title/interfaces/AppendedAttachment.html",[0,0.573,235,3.475]],["body/interfaces/AppendedAttachment.html",[0,1.137,2,2.016,3,0.102,4,0.085,5,0.062,8,0.265,9,0.9,12,1.032,14,0.004,22,0.09,33,2.045,114,0.535,172,0.003,173,0.003,235,6.224,236,4.815,237,6.501,238,6.924,239,4.815,240,4.815,241,5.736,242,4.815,243,4.815,244,4.815,245,6.224,246,4.644,247,4.815,248,5.736,249,5.947,250,5.947,251,5.736,252,4.958,253,4.644,254,4.815,255,4.815,256,4.815]],["title/modules/AuthModule.html",[257,1.425,258,3.603]],["body/modules/AuthModule.html",[3,0.099,4,0.083,5,0.061,14,0.004,15,0.257,19,1.249,22,0.088,31,0.193,172,0.003,173,0.003,257,2.318,258,7.373,259,2.71,260,3.83,261,6.162,262,6.162,263,6.162,264,6.763,265,8.024,266,7.626,267,5.571,268,4.275,269,3.239,270,2.879,271,6.841,272,3.646,273,3.83,274,8.527,275,5.38,276,6.841,277,6.162,278,5.714,279,3.5,280,6.841,281,5.113,282,5.38,283,6.841,284,6.162,285,6.841]],["title/modules/AuthorizationModule.html",[257,1.425,286,3.749]],["body/modules/AuthorizationModule.html",[3,0.103,4,0.086,5,0.063,14,0.004,15,0.242,19,1.298,22,0.092,31,0.2,172,0.003,173,0.003,257,2.373,259,2.816,260,3.922,268,4.378,269,3.366,270,2.992,272,3.733,273,3.922,286,7.677,287,6.403,288,6.403,289,6.403,290,6.403,291,7.364,292,7.147,293,7.364,294,7.109,295,4.378,296,6.403,297,7.109,298,4.072,299,6.403]],["title/injectables/AuthorizationService.html",[18,1.009,292,3.475]],["body/injectables/AuthorizationService.html",[3,0.069,4,0.057,5,0.042,8,0.179,12,0.874,13,0.25,14,0.004,15,0.19,18,1.282,19,0.861,22,0.061,31,0.133,40,4.511,69,0.947,74,2.754,76,3.46,77,2.523,78,0.918,114,0.64,128,1.361,129,2.604,145,2.058,148,2.527,149,1.203,172,0.003,173,0.003,182,1.178,187,0.622,189,1.143,190,0.659,199,1.547,292,4.414,293,6.561,298,2.703,299,4.249,300,1.629,301,4.718,302,6.952,303,5.998,304,7.718,305,4.718,306,4.718,307,4.718,308,3.374,309,5.349,310,5.186,311,6.241,312,4.792,313,4.718,314,4.14,315,6.659,316,1.623,317,6.659,318,4.718,319,3.899,320,4.249,321,4.718,322,2.62,323,5.237,324,5.998,325,4.414,326,4.977,327,1.088,328,1.925,329,4.536,330,4.761,331,4.718,332,4.718,333,3.941,334,4.718,335,4.718,336,4.718,337,1.955,338,4.718,339,2.637,340,2.519,341,4.249,342,4.718,343,4.718,344,5.998,345,4.718,346,4.718,347,4.718,348,6.659,349,4.718,350,4.718]],["title/entities/BaseEntity.html",[316,0.927,351,3.362]],["body/entities/BaseEntity.html",[3,0.094,4,0.078,5,0.058,8,0.245,9,0.992,10,2.04,12,0.862,13,0.27,14,0.004,15,0.202,22,0.117,31,0.255,112,2.906,149,1.635,172,0.003,173,0.003,179,3.063,187,0.61,316,1.685,322,2.573,351,5.805,352,5.403,353,6.31,354,4.876,355,2.088,356,8.584,357,6.469,358,8.584,359,6.469,360,2.935,361,2.048,362,1.861,363,2.857,364,5.403,365,3.532,366,4.148,367,4.835,368,5.087,369,5.403,370,3.038,371,5.403,372,5.403,373,5.827,374,4.445,375,3.802,376,5.827,377,3.243,378,5.087,379,4.148,380,2.324,381,3.616,382,2.681,383,5.827,384,5.827,385,5.827,386,4.625,387,3.802,388,5.087,389,5.403,390,3.379,391,2.9,392,5.827,393,3.309]],["title/entities/BaseEntityWithTimestamps.html",[316,0.927,370,1.935]],["body/entities/BaseEntityWithTimestamps.html",[3,0.089,4,0.074,5,0.055,8,0.233,9,0.973,10,2.009,12,0.842,13,0.263,14,0.004,15,0.196,22,0.114,31,0.249,112,2.766,149,1.751,172,0.003,173,0.003,179,2.916,187,0.694,316,1.654,322,2.492,351,5.113,352,5.143,353,6.214,354,4.786,355,2.235,356,8.427,358,8.427,360,3.033,361,1.984,362,1.772,363,2.72,364,5.143,365,3.362,366,3.948,367,4.602,368,4.842,369,5.143,370,3.265,371,5.143,372,5.143,373,5.546,374,4.231,375,3.619,376,5.546,377,3.087,378,4.842,379,3.948,380,2.212,381,3.442,382,2.551,383,5.546,384,5.546,385,5.546,386,4.402,387,3.619,388,4.842,389,5.143,390,4.621,391,3.104,392,5.546,393,4.525,394,6.157,395,2.143,396,2.322,397,6.157,398,6.157,399,6.157,400,6.157]],["title/classes/BaseFactory.html",[31,0.148,401,3.475]],["body/classes/BaseFactory.html",[0,0.498,3,0.041,4,0.035,5,0.025,8,0.108,9,0.676,10,1.57,12,0.542,13,0.289,14,0.004,15,0.112,22,0.037,31,0.16,37,2.067,43,2.557,44,2.602,45,3.245,46,2.474,47,2.602,48,2.382,54,1.89,69,1.143,71,2.007,72,2.746,78,1.173,114,0.667,128,1.55,139,5.134,149,1.665,168,1.833,172,0.002,173,0.002,175,0.573,182,0.806,187,0.683,189,1.324,190,0.687,199,1.67,211,2.048,216,1.617,316,1.731,319,3.305,322,2.032,328,1.165,329,3.989,337,1.183,353,1.831,354,1.461,377,3.562,395,2.346,396,2.478,401,3.023,402,2.856,403,7.037,404,2.49,405,4.467,406,4.561,407,5.142,408,6.493,409,3.134,410,5.205,411,5.554,412,3.134,413,3.134,414,3.023,415,1.966,416,4.682,417,4.467,418,5.786,419,5.597,420,2.856,421,3.396,422,4.561,423,5.674,424,1.962,425,3.912,426,2.856,427,4.444,428,4.802,429,3.879,430,4.673,431,3.47,432,4.882,433,1.962,434,1.596,435,1.893,436,5.044,437,1.962,438,1.962,439,3.134,440,4.234,441,2.856,442,5.021,443,3.134,444,6.332,445,5.463,446,2.856,447,3.654,448,2.502,449,3.134,450,2.856,451,3.134,452,2.856,453,2.835,454,1.962,455,5.716,456,2.856,457,1.962,458,4.467,459,4.467,460,2.856,461,5.463,462,3.261,463,3.134,464,3.134,465,2.856,466,2.856,467,3.134,468,2.856,469,3.134,470,2.856,471,2.042,472,1.831,473,4.108,474,3.809,475,2.924,476,3.586,477,3.879,478,2.856,479,2.856,480,2.856,481,2.856,482,2.856,483,2.856,484,4.561,485,2.856,486,2.856,487,6.501,488,2.856,489,8.258,490,6.501,491,2.856,492,2.856,493,2.856,494,2.856,495,2.856,496,4.108,497,2.856,498,2.856,499,2.856,500,2.856,501,2.856]],["title/entities/BaseFile.html",[316,0.927,502,3.603]],["body/entities/BaseFile.html",[0,0.66,3,0.088,4,0.073,5,0.07,8,0.229,9,0.819,12,0.884,13,0.287,14,0.004,15,0.228,22,0.12,31,0.247,33,1.778,123,2.165,145,1.925,172,0.003,173,0.003,187,0.65,190,0.73,205,1.982,316,1.642,322,1.887,355,2.021,360,3.344,361,1.502,362,1.738,370,2.907,391,2.806,502,6.381,503,4.749,504,4.398,505,6.941,506,7.303,507,6.039,508,6.039,509,2.347,510,6.039,511,2.541,512,2.324,513,5.662,514,4.749,515,2.624,516,5.886,517,5.63,518,5.63,519,3.471,520,4.483,521,3.754,522,4.114,523,5.049,524,4.002,525,2.829,526,4.749,527,2.392,528,4.749,529,2.007,530,4.749,531,4.749,532,4.749,533,4.749,534,4.749,535,4.749,536,4.749,537,4.749,538,4.749,539,3.754,540,3.459]],["title/injectables/BaseRepo.html",[18,1.009,541,3.475]],["body/injectables/BaseRepo.html",[3,0.072,4,0.06,5,0.044,8,0.189,13,0.295,14,0.004,15,0.195,18,1.333,19,0.911,22,0.064,31,0.141,69,1.002,71,1.541,74,2.934,77,2.761,78,1.287,114,0.758,128,1.125,129,2.659,168,3.455,172,0.003,173,0.003,182,1.225,187,0.745,189,1.352,190,0.78,199,1.735,300,1.724,316,1.652,322,2.686,327,1.151,351,3.2,361,1.241,363,2.204,436,5.779,541,4.591,542,4.991,543,6.423,544,4.306,545,5.177,546,5.177,547,4.759,548,3.782,549,5.177,550,5.177,551,5.177,552,3.014,553,4.587,554,4.991,555,3.473,556,4.991,557,4.759,558,4.991,559,5.177,560,4.991,561,5.177,562,4.991,563,4.759,564,4.991,565,5.177,566,4.991,567,5.177,568,4.991,569,5.177,570,4.991,571,5.177,572,4.991,573,3.925,574,4.991,575,4.991,576,7.178,577,6.927,578,6.927,579,6.927,580,7.955,581,7.955,582,4.991,583,6.927]],["title/interfaces/Board.html",[0,0.573,584,3.362]],["body/interfaces/Board.html",[0,0.483,2,1.272,3,0.064,4,0.053,5,0.039,8,0.168,9,0.662,12,0.932,13,0.282,14,0.004,15,0.183,18,1.224,19,0.807,22,0.096,31,0.179,35,2.722,69,0.888,71,2.514,74,1.243,76,2.284,77,1.215,78,1.366,82,3.855,123,2.238,128,1.698,129,2.398,145,1.862,149,1.149,172,0.002,173,0.002,181,2.941,267,4.065,279,2.262,308,2.414,327,1.02,380,2.675,509,2.917,525,2.675,584,5.934,585,3.693,586,4.413,587,4.71,588,5.717,589,7.502,590,2.948,591,3.481,592,5.363,593,4.012,594,4.497,595,4.935,596,4.935,597,5.001,598,5.727,599,3.693,600,3.983,601,3.345,602,3.161,603,3.983,604,3.305,605,3.983,606,6.403,607,3.983,608,5.727,609,3.983,610,5.727,611,3.983,612,4.265,613,3.983,614,3.983,615,7.769,616,3.983,617,4.497,618,3.983,619,7.334,620,3.983,621,3.983,622,3.983,623,5.001,624,5.001,625,4.941,626,5.727,627,3.983,628,3.983,629,3.983,630,3.983,631,3.983,632,3.983,633,3.983,634,3.983,635,3.693,636,3.693,637,3.983,638,6.22,639,3.693,640,5.311,641,3.693,642,3.983,643,3.554,644,3.983,645,3.983,646,5.727,647,5.727,648,3.983,649,3.011,650,3.983]],["title/classes/BoardElementResponse.html",[31,0.148,651,3.749]],["body/classes/BoardElementResponse.html",[3,0.072,4,0.06,5,0.044,8,0.189,9,0.719,10,1.984,12,0.981,13,0.299,14,0.004,15,0.195,22,0.111,31,0.242,40,3.905,69,1.811,82,3.761,114,0.731,172,0.003,173,0.003,175,0.999,181,2.926,187,0.589,189,0.678,190,0.391,216,2.381,355,1.594,360,1.613,380,1.788,390,4.876,391,2.989,393,4.775,509,1.483,584,6.259,586,4.391,587,4.337,588,5.264,591,3.67,593,3.991,601,4.3,612,2.851,617,3.006,643,4.44,651,6.844,652,3.914,653,2.717,654,4.977,655,6.136,656,6.136,657,3.96,658,4.977,659,5.436,660,4.977,661,4.232,662,4.452,663,1.654,664,6.414,665,2.274,666,4.75,667,3.914,668,3.719,669,3.215,670,3.273,671,4.582,672,4.582,673,3.094,674,2.851,675,2.851,676,4.175,677,3.558,678,3.419,679,3.006,680,3.094,681,3.419,682,4.75,683,3.914,684,2.274,685,3.191,686,3.914,687,3.558,688,3.719,689,2.447,690,2.546,691,2.546,692,2.6,693,3.298]],["title/classes/BoardLessonResponse.html",[31,0.148,656,3.749]],["body/classes/BoardLessonResponse.html",[3,0.069,4,0.058,5,0.042,8,0.18,9,0.698,10,2.034,12,0.987,13,0.302,14,0.004,15,0.191,22,0.109,31,0.237,40,3.296,69,1.782,82,3.674,114,0.75,172,0.003,173,0.003,175,0.956,181,2.871,187,0.701,189,0.649,190,0.61,216,2.352,355,2.123,360,1.544,380,1.711,390,5.044,391,3.092,393,4.94,509,1.998,584,5.902,586,4.308,587,4.236,588,5.142,591,2.867,593,3.118,601,3.782,612,2.729,617,2.877,643,4.96,651,6.02,652,3.746,653,2.601,655,5.547,656,6.581,659,3.746,661,4.27,662,4.398,663,1.583,664,6.325,665,2.177,666,4.607,667,3.746,668,3.56,669,3.118,670,3.175,671,4.444,672,4.444,673,2.961,674,2.729,675,2.729,676,5.086,677,3.406,678,3.273,679,2.877,680,2.961,681,3.273,682,4.607,683,3.746,684,2.177,685,3.054,686,3.746,687,3.406,688,3.56,689,2.342,690,2.437,691,2.437,692,2.488,693,3.157,694,4.764,695,3.979,696,4.764,697,4.764,698,4.764,699,4.764,700,3.979,701,4.764,702,4.764]],["title/injectables/BoardMapper.html",[18,1.009,703,3.919]],["body/injectables/BoardMapper.html",[3,0.083,4,0.069,5,0.051,8,0.216,10,1.57,13,0.253,14,0.004,15,0.232,18,1.457,19,1.039,22,0.073,31,0.16,78,0.784,82,3.586,114,0.65,128,1.697,149,1.706,172,0.003,173,0.003,181,1.94,182,1.339,187,0.422,189,0.775,190,0.447,199,0.996,300,1.965,327,1.312,390,3.956,393,3.874,584,6.229,586,2.911,587,4.134,588,3.771,590,2.486,591,3.639,592,4.708,593,4.22,601,3.402,643,3.181,651,6.946,655,5.414,656,5.414,682,6.234,703,5.66,704,5.69,705,4.338,706,7.573,707,5.69,708,5.125,709,4.753,710,4.753,711,5.69,712,5.69,713,7.573,714,5.69,715,7.573,716,5.69,717,5.69,718,7.573,719,5.69,720,7.573,721,5.69,722,5.69,723,5.69,724,5.69,725,5.69,726,5.69,727,5.69,728,5.69,729,5.69,730,5.69,731,5.69,732,5.69,733,5.69,734,5.69,735,5.69,736,5.69,737,7.573,738,5.69,739,7.573,740,5.69,741,5.69,742,5.69,743,5.69,744,5.69,745,5.69,746,5.69,747,5.69,748,5.69,749,5.955,750,5.69,751,5.69,752,5.69]],["title/classes/BoardResponse.html",[31,0.148,682,3.603]],["body/classes/BoardResponse.html",[3,0.069,4,0.058,5,0.042,8,0.181,9,0.698,10,2.002,12,0.987,13,0.3,14,0.004,15,0.191,22,0.109,31,0.237,40,3.817,69,1.783,82,3.677,114,0.723,172,0.003,173,0.003,175,0.958,181,3.226,187,0.658,189,0.65,190,0.375,216,2.403,355,1.943,360,2.176,380,1.714,390,4.811,391,2.949,393,4.711,509,1.421,584,6.38,586,4.711,587,4.848,588,5.885,591,2.869,593,3.121,601,3.785,612,3.844,617,4.054,643,4.34,651,6.348,652,3.751,653,2.604,655,5.551,656,5.551,657,4.448,659,3.751,661,4.209,662,4.4,663,1.585,664,6.328,665,2.18,666,4.611,667,3.751,668,3.565,669,3.121,670,3.178,671,4.448,672,4.448,673,2.966,674,2.732,675,2.732,676,4.054,677,3.41,678,3.278,679,2.881,680,2.966,681,3.278,682,6.101,683,3.751,684,2.18,685,3.058,686,3.751,687,4.798,688,5.016,689,3.299,690,3.433,691,3.433,692,3.506,693,4.448,753,4.77,754,4.77,755,3.058,756,1.606,757,4.77,758,4.77,759,4.77]],["title/classes/BoardTaskResponse.html",[31,0.148,655,3.749]],["body/classes/BoardTaskResponse.html",[3,0.065,4,0.054,5,0.04,8,0.169,9,0.666,10,2.004,12,0.988,13,0.308,14,0.004,15,0.184,22,0.106,31,0.231,40,3.149,69,1.739,82,4.101,114,0.739,172,0.002,173,0.003,175,0.897,181,2.789,187,0.737,189,0.609,190,0.781,216,2.405,355,2.262,360,1.448,380,1.605,390,4.961,391,3.142,393,4.858,509,1.331,584,5.779,586,4.611,587,4.089,588,4.964,591,2.739,593,2.979,601,3.675,612,2.559,617,2.698,643,4.186,651,5.849,652,3.513,653,2.439,655,6.444,656,5.354,659,3.513,661,4.24,662,4.563,663,1.485,664,6.193,665,2.041,666,5.146,667,3.513,668,3.339,669,2.979,670,3.033,671,4.246,672,4.246,673,2.777,674,4.29,675,4.29,676,4.941,677,3.194,678,3.07,679,2.698,680,2.777,681,3.07,682,4.402,683,3.513,684,2.041,685,2.864,686,3.513,687,3.194,688,3.339,689,2.196,690,2.285,691,2.285,692,2.334,693,2.961,695,5.351,700,3.732,760,4.468,761,4.468,762,4.468,763,4.468,764,4.468,765,4.468,766,4.468,767,4.468,768,4.468,769,4.468,770,4.468]],["title/classes/BoardTaskStatusMapper.html",[31,0.148,710,4.38]],["body/classes/BoardTaskStatusMapper.html",[3,0.109,4,0.091,5,0.067,8,0.284,13,0.223,14,0.004,15,0.221,22,0.097,31,0.211,78,1.033,82,3.549,114,0.572,128,1.217,149,1.354,172,0.003,173,0.003,175,1.505,182,1.594,187,0.556,189,1.021,190,0.589,199,1.311,327,1.728,415,3.34,666,6.646,668,5.602,705,5.165,708,6.75,710,7.532,771,9.017,772,7.495,773,8.122,774,6.652,775,7.495,776,3.795,777,7.495]],["title/classes/BoardTaskStatusResponse.html",[31,0.148,666,3.603]],["body/classes/BoardTaskStatusResponse.html",[3,0.092,4,0.076,5,0.056,8,0.239,9,0.842,13,0.303,14,0.004,15,0.155,22,0.081,31,0.178,37,2.597,69,1.626,114,0.482,172,0.003,173,0.003,175,1.266,187,0.754,189,0.859,190,0.496,355,2.304,509,2.977,653,3.442,661,4.287,663,2.095,666,6.708,778,10.293,779,6.304,780,6.708,781,6.708,782,6.07,783,6.471,784,6.98,785,6.98,786,6.304,787,6.304,788,6.304,789,6.304,790,6.304,791,6.304,792,6.304,793,5.678,794,5.678,795,5.678,796,4.507,797,5.678,798,5.678]],["title/injectables/BsonConverter.html",[18,1.009,799,3.749]],["body/injectables/BsonConverter.html",[3,0.09,4,0.075,5,0.055,8,0.234,13,0.238,14,0.004,15,0.196,18,1.537,19,1.126,22,0.08,31,0.174,78,1.1,114,0.61,128,1.296,172,0.003,173,0.003,182,1.412,187,0.592,189,1.088,190,0.628,199,1.638,216,1.986,300,2.13,329,3.649,799,5.708,800,6.168,801,6.669,802,6.669,803,7.984,804,6.168,805,7.984,806,7.806,807,6.694,808,7.326,809,10.247,810,7.27,811,8.433,812,7.82,813,6.37,814,9.363,815,7.984,816,6.168,817,7.984,818,6.279,819,5.839,820,6.168,821,6.279,822,6.168]],["title/classes/BusinessError.html",[31,0.148,178,3.475]],["body/classes/BusinessError.html",[3,0.08,4,0.067,5,0.049,8,0.209,9,0.771,12,0.916,13,0.312,14,0.004,15,0.206,19,1.006,22,0.071,30,6.114,31,0.236,33,1.504,37,1.926,69,1.488,71,3.265,78,1.021,84,5.006,114,0.421,149,0.995,172,0.003,173,0.003,175,1.106,178,4.911,179,4.796,180,6.114,181,3.281,182,1.31,183,7.043,184,7.043,187,0.741,189,0.751,190,0.433,199,1.296,201,5.206,202,7.043,205,1.808,208,3.238,209,5.986,216,1.37,219,5.264,448,2.12,522,4.374,653,3.008,678,3.785,684,3.386,823,5.509,824,5.092,825,4.751,826,5.538,827,4.476,828,5.092,829,5.298,830,3.871,831,7.48,832,7.043,833,7.41,834,5.509,835,5.509,836,5.509,837,5.509,838,5.509,839,5.509,840,5.509,841,5.509,842,4.332,843,3.651,844,5.509,845,4.962,846,7.41,847,7.41,848,7.41,849,5.509]],["title/modules/ConsoleWriterModule.html",[257,1.425,850,3.919]],["body/modules/ConsoleWriterModule.html",[3,0.109,4,0.091,5,0.067,14,0.004,15,0.222,19,1.374,22,0.097,31,0.212,172,0.003,173,0.003,257,2.457,259,2.982,260,4.061,268,4.532,269,3.564,270,3.168,272,3.865,295,4.532,850,7.89,851,6.78,852,6.78,853,6.78,854,7.198,855,6.78,856,5.626,857,7.527,858,4.312,859,6.287]],["title/injectables/ConsoleWriterService.html",[18,1.009,854,3.475]],["body/injectables/ConsoleWriterService.html",[3,0.137,4,0.085,5,0.063,8,0.267,9,0.904,12,0.896,13,0.259,14,0.004,15,0.231,18,1.672,19,1.287,22,0.091,31,0.199,35,2.618,114,0.539,168,3.493,172,0.003,173,0.003,182,1.536,187,0.644,189,0.961,190,0.554,199,1.234,300,2.435,395,1.895,396,2.052,447,3.401,854,5.758,855,8.482,856,7.038,858,4.977,860,7.051,861,9.829,862,8.688,863,7.051,864,4.845,865,8.688,866,9.417,867,7.051,868,3.466,869,9.417,870,7.051,871,3.849,872,7.051,873,7.051]],["title/modules/CoreModule.html",[257,1.425,874,3.603]],["body/modules/CoreModule.html",[3,0.096,4,0.08,5,0.059,14,0.004,15,0.243,19,1.201,22,0.085,31,0.185,34,4.321,172,0.003,173,0.003,208,3.868,216,1.637,257,2.607,259,2.607,260,3.738,268,4.172,269,3.116,270,2.769,273,3.738,830,4.347,874,7.335,875,5.927,876,5.927,877,7.552,878,7.552,879,6.281,880,7.552,881,6.58,882,5.949,883,8.321,884,5.718,885,6.544,886,6.544,887,8.321,888,5.335,889,6.544,890,5.949,891,8.321,892,5.173,893,6.219,894,7.495,895,8.321,896,6.544,897,3.769,898,4.521]],["title/entities/Course.html",[316,0.927,590,1.721]],["body/entities/Course.html",[0,0.484,3,0.064,4,0.054,5,0.039,8,0.327,9,0.848,12,0.932,13,0.282,14,0.004,15,0.221,22,0.082,31,0.125,33,0.898,37,1.151,69,0.889,78,0.877,114,0.724,128,1.033,145,1.689,149,1.623,172,0.002,173,0.002,187,0.715,190,0.641,205,1.453,216,2.147,316,1.125,322,1.384,355,2.225,360,3.175,361,1.101,362,1.274,370,2.349,380,2.286,391,2.877,395,2.593,396,2.616,428,2.674,509,1.319,511,1.863,512,1.704,515,1.924,519,1.754,525,1.591,527,3.753,529,1.472,555,2.22,590,2.089,670,2.096,692,4.836,756,3.025,782,3.957,888,2.839,899,3.698,900,3.403,901,6.407,902,5.72,903,7.067,904,7.067,905,5.598,906,5.733,907,4.427,908,5.733,909,4.427,910,5.733,911,4.427,912,4.081,913,3.014,914,4.427,915,4.427,916,4.597,917,5.586,918,5.005,919,4.427,920,5.733,921,4.427,922,5.733,923,4.427,924,3.482,925,4.427,926,4.427,927,2.265,928,4.218,929,3.309,930,2.934,931,3.482,932,2.536,933,2.674,934,5.005,935,4.081,936,4.55,937,3.988,938,3.482,939,3.988,940,3.042,941,3.988,942,3.988,943,3.698,944,3.309,945,3.309,946,3.165,947,3.988,948,3.042,949,3.698,950,3.482,951,3.309,952,1.835,953,2.536,954,2.475,955,3.988,956,3.557,957,4.55,958,3.165,959,2.934,960,2.839,961,3.482,962,3.482,963,3.988,964,3.988,965,3.988,966,3.988,967,5.733,968,3.988,969,5.733,970,5.86,971,5.733,972,3.482,973,3.988,974,3.988]],["title/controllers/CourseController.html",[975,2.242,976,4.38]],["body/controllers/CourseController.html",[3,0.094,4,0.078,5,0.057,8,0.245,13,0.192,14,0.004,15,0.254,19,1.179,22,0.083,31,0.182,71,1.994,74,2.544,77,2.26,78,0.89,114,0.493,128,1.546,129,1.902,149,1.166,172,0.003,173,0.003,182,1.454,187,0.479,189,0.88,190,0.508,199,1.13,327,1.489,328,2.635,355,1.489,649,3.893,663,2.146,665,2.951,776,2.717,953,4.71,975,2.761,976,6.868,977,2.951,978,6.457,979,3.9,980,8.148,981,5.816,982,5.2,983,6.695,984,6.457,985,5.753,986,3.46,987,4.279,988,4.14,989,4.279,990,6.762,991,5.816,992,5.078,993,5.393,994,6.457,995,6.457,996,4.279,997,6.457,998,4.206,999,6.457,1000,6.457,1001,6.457,1002,6.457,1003,4.122,1004,3.824,1005,6.457]],["title/classes/CourseFactory.html",[31,0.148,1006,4.124]],["body/classes/CourseFactory.html",[3,0.058,4,0.048,5,0.035,8,0.151,9,0.612,10,1.452,12,0.56,13,0.3,14,0.004,15,0.19,22,0.051,31,0.112,33,1.195,37,2.013,45,2.402,54,1.648,69,0.799,71,1.818,72,2.675,78,0.966,114,0.73,128,1.405,149,1.063,168,1.599,172,0.002,173,0.002,175,0.799,182,1.041,187,0.741,189,1.351,190,0.739,192,4.482,199,1.609,211,1.787,216,2.056,316,1.462,319,2.738,322,1.84,327,0.917,377,3.513,395,2.326,396,2.52,401,6.679,403,6.679,405,2.733,407,5.228,408,5.321,409,4.045,410,5.321,411,5.52,412,4.045,413,4.045,414,3.902,415,2.033,416,4.858,417,4.815,418,6.224,419,5.3,421,3.075,423,4.045,424,2.733,425,4.045,427,4.329,428,4.678,429,4.228,430,4.552,431,3.143,432,4.045,433,2.733,434,2.224,435,2.637,436,4.413,437,2.733,438,2.733,439,2.733,440,4.329,442,4.644,443,2.733,444,6.659,445,5.321,447,3.38,448,2.981,449,2.733,451,2.733,453,2.473,454,2.733,455,5.549,457,2.733,458,4.045,459,4.045,461,2.733,462,2.279,463,2.733,464,2.733,467,2.733,469,2.733,471,2.844,590,2.3,692,2.078,782,4.815,900,3.217,905,5.321,934,3.129,1006,5.511,1007,3.583,1008,7.745,1009,2.844,1010,3.978,1011,3.978,1012,2.844,1013,2.844,1014,2.844,1015,2.844,1016,2.844,1017,2.844,1018,2.844,1019,2.844,1020,2.844,1021,2.844,1022,2.844,1023,3.129,1024,3.323,1025,2.844,1026,6.312,1027,3.583,1028,4.917,1029,3.583,1030,4.63,1031,4.4,1032,3.583,1033,3.583,1034,3.583,1035,3.129,1036,3.583]],["title/entities/CourseGroup.html",[316,0.927,1037,3.475]],["body/entities/CourseGroup.html",[0,0.72,3,0.096,4,0.08,5,0.059,8,0.25,9,0.867,13,0.272,14,0.004,15,0.243,22,0.107,31,0.186,33,1.338,78,0.909,145,1.727,149,1.505,172,0.003,173,0.003,187,0.618,205,2.164,316,1.473,322,2.06,354,4.262,355,1.921,361,2.072,362,1.897,363,2.912,370,3.075,395,1.772,396,1.919,511,2.775,512,2.537,515,2.865,519,2.612,527,3.802,529,2.191,590,3.409,756,2.804,902,6.361,916,4.262,917,5.18,918,6.552,927,3.373,952,2.732,961,5.185,962,5.185,1037,5.522,1038,5.938,1039,4.772,1040,5.032,1041,6.593,1042,6.593,1043,3.444,1044,6.959,1045,5.507,1046,4.369,1047,4.369,1048,5.938,1049,5.938]],["title/injectables/CourseGroupRepo.html",[18,1.009,1050,4.723]],["body/injectables/CourseGroupRepo.html",[3,0.102,4,0.085,5,0.062,8,0.266,13,0.258,14,0.004,15,0.231,18,1.668,19,1.282,22,0.091,31,0.198,69,1.41,71,2.168,74,2.643,77,2.382,78,0.968,114,0.662,128,1.14,129,2.068,172,0.003,173,0.003,182,1.532,187,0.643,189,1.181,190,0.682,199,1.229,300,2.425,308,3.182,327,1.619,328,2.866,361,1.747,363,3.102,552,4.241,553,5.24,555,4.345,590,2.305,1037,4.654,1045,7.239,1050,7.806,1051,7.022,1052,8.666,1053,7.022,1054,8.666,1055,7.022,1056,5.955,1057,3.925,1058,4.626,1059,7.022]],["title/classes/CourseMapper.html",[31,0.148,993,4.38]],["body/classes/CourseMapper.html",[3,0.107,4,0.089,5,0.066,8,0.279,13,0.219,14,0.004,15,0.219,22,0.095,31,0.208,78,1.015,114,0.563,128,1.449,149,1.331,172,0.003,173,0.003,175,1.479,182,1.578,187,0.546,189,1.004,190,0.579,199,1.289,327,1.699,415,3.315,590,3.355,776,3.756,993,7.454,1060,7.367,1061,8.924,1062,8.924,1063,7.367,1064,7.847,1065,4.449,1066,7.367,1067,7.367,1068,7.367,1069,7.367,1070,7.367,1071,7.367,1072,7.367,1073,7.367]],["title/classes/CourseMetadataListResponse.html",[31,0.148,992,4.124]],["body/classes/CourseMetadataListResponse.html",[3,0.079,4,0.066,5,0.048,8,0.206,9,0.765,10,1.848,12,0.934,13,0.286,14,0.004,15,0.205,22,0.095,31,0.207,33,1.492,37,2.744,69,1.477,114,0.416,172,0.003,173,0.003,175,1.094,181,3.174,187,0.69,189,0.742,190,0.732,192,4.074,216,2.386,308,2.384,327,1.256,355,2.056,391,3.072,448,2.831,586,4.26,590,2.733,661,4.009,663,1.811,665,2.489,669,2.534,684,2.489,685,3.493,689,2.678,690,2.787,691,2.787,692,2.846,755,5.716,756,1.834,901,6.548,905,5.721,970,4.284,972,4.284,992,5.784,998,4.763,1003,4.81,1004,4.462,1064,7.712,1074,4.907,1075,5.764,1076,3.858,1077,4.572,1078,5.448,1079,5.448,1080,4.072,1081,4.072,1082,4.072,1083,5.338,1084,4.072,1085,5.107,1086,5.385,1087,4.072,1088,3.493,1089,3.611,1090,4.55,1091,3.895,1092,3.387,1093,3.387]],["title/classes/CourseMetadataResponse.html",[31,0.148,1064,4.124]],["body/classes/CourseMetadataResponse.html",[3,0.075,4,0.062,5,0.046,8,0.194,9,0.735,10,2.038,12,1.006,13,0.293,14,0.004,15,0.198,22,0.091,31,0.199,33,1.041,37,2.098,69,1.418,114,0.392,172,0.003,173,0.003,175,1.03,181,3.477,187,0.716,189,0.699,190,0.717,216,2.344,308,2.819,327,1.183,355,2.173,391,3.336,448,2.718,586,4.939,590,3.093,657,5.398,661,3.954,663,1.706,665,2.345,669,2.387,684,2.345,685,3.29,689,3.471,690,3.612,691,3.612,692,3.689,901,7.592,905,6.633,970,4.036,972,4.036,992,4.036,998,2.625,1003,3.54,1004,3.284,1064,7.171,1074,4.622,1075,4.151,1076,2.926,1077,3.19,1083,6.19,1084,3.836,1085,5.633,1086,5.94,1087,5.278,1088,4.527,1089,4.68,1090,5.898,1091,5.048,1092,3.19,1093,3.19,1094,4.036,1095,5.132,1096,5.132,1097,5.132,1098,5.132,1099,5.132,1100,5.132,1101,5.132]],["title/entities/CourseNews.html",[316,0.927,1102,3.362]],["body/entities/CourseNews.html",[0,0.507,3,0.067,4,0.092,5,0.041,8,0.176,9,0.684,10,0.961,12,0.929,13,0.262,14,0.004,15,0.236,22,0.113,31,0.234,33,1.688,43,3.434,44,3.493,45,3.119,46,3.321,47,3.493,48,3.993,78,0.639,114,0.502,123,1.274,145,1.821,149,1.381,172,0.002,173,0.002,181,2.606,187,0.344,205,1.522,308,2.697,309,4.256,310,3.993,312,2.082,316,1.553,322,1.449,330,3.314,340,2.475,355,1.069,360,3.042,361,1.153,362,1.334,370,2.427,377,3.832,382,3.167,391,2.106,415,1.601,477,2.531,504,3.62,511,1.951,512,1.784,515,2.014,519,2.605,521,2.882,522,3.436,523,4.901,527,3.028,529,1.541,540,2.655,590,2.509,601,3.434,679,2.8,684,2.118,900,3.371,912,4.217,913,2.195,932,2.655,933,2.8,960,2.972,1039,3.767,1043,2.422,1102,4.217,1103,3.465,1104,4.795,1105,4.636,1106,2.768,1107,3.365,1108,3.465,1109,4.901,1110,3.465,1111,5.465,1112,3.591,1113,4.916,1114,3.972,1115,4.217,1116,4.359,1117,5.066,1118,4.637,1119,3.185,1120,3.465,1121,4.217,1122,3.465,1123,3.465,1124,3.185,1125,3.314,1126,2.324,1127,3.185,1128,2.972,1129,2.972,1130,3.436,1131,2.972,1132,3.465,1133,3.072,1134,3.465,1135,3.185,1136,3.465,1137,2.882,1138,3.465,1139,3.465,1140,3.465,1141,3.465,1142,3.185,1143,3.465,1144,3.185,1145,3.465,1146,3.465,1147,4.916,1148,4.493,1149,3.465,1150,4.916,1151,3.465,1152,3.465,1153,3.072,1154,3.072,1155,3.465]],["title/injectables/CourseRepo.html",[18,1.009,594,3.167]],["body/injectables/CourseRepo.html",[3,0.067,4,0.055,5,0.041,8,0.174,10,0.949,13,0.271,14,0.004,15,0.215,18,1.255,19,0.836,22,0.059,31,0.184,33,0.929,69,0.92,71,1.414,72,2.857,74,2.735,76,3.679,77,2.498,78,1.289,114,0.632,128,1.682,129,2.236,149,1.494,172,0.002,173,0.002,182,1.153,187,0.614,189,1.128,190,0.651,199,1.329,300,1.582,308,3.36,327,1.056,328,1.869,361,1.622,362,1.318,363,2.023,391,1.467,421,3.406,448,2.922,509,1.365,525,1.645,552,2.766,553,4.417,555,3.269,590,2.493,594,3.939,606,6.507,625,4.35,783,5.484,902,3.036,903,5.128,904,5.128,905,4.481,950,5.128,951,5.675,953,4.74,1004,2.13,1040,3.939,1057,2.56,1058,4.417,1156,4.125,1157,5.873,1158,4.58,1159,4.125,1160,4.863,1161,4.58,1162,5.873,1163,4.58,1164,5.873,1165,4.58,1166,4.662,1167,4.082,1168,7.984,1169,4.125,1170,5.873,1171,5.915,1172,4.125,1173,4.125,1174,4.181,1175,5.873,1176,2.937,1177,5.873,1178,3.826,1179,4.125,1180,3.826,1181,5.873,1182,4.125,1183,4.125,1184,2.445,1185,3.56,1186,5.447,1187,3.602,1188,3.423,1189,3.423,1190,3.147,1191,5.873,1192,5.675,1193,3.274,1194,4.125,1195,4.125,1196,4.125,1197,4.125]],["title/classes/CourseScope.html",[31,0.148,1168,4.38]],["body/classes/CourseScope.html",[3,0.064,4,0.054,5,0.039,8,0.168,9,0.663,10,0.919,13,0.268,14,0.004,15,0.212,18,1.226,19,0.809,22,0.057,31,0.18,33,1.293,35,2.266,71,1.369,72,2.2,74,2.097,76,3.599,77,2.05,78,1.276,114,0.623,128,1.675,129,2.196,149,1.472,168,1.782,172,0.002,173,0.002,175,0.89,182,1.126,187,0.687,189,1.111,190,0.641,192,3.407,199,1.511,308,3.302,327,1.022,328,1.809,361,1.585,362,1.276,363,1.958,391,1.42,395,1.191,396,1.29,509,1.321,525,1.593,553,3.401,555,2.222,590,2.448,594,2.678,606,6.411,625,2.539,783,5.403,902,2.938,903,5.01,904,5.01,905,4.377,951,3.313,953,4.67,986,1.866,1004,2.062,1040,3.848,1057,2.478,1058,4.352,1156,3.993,1160,3.745,1162,3.993,1164,3.993,1166,4.554,1167,4.4,1168,8.443,1169,5.738,1170,5.738,1171,5.828,1172,5.738,1173,7.342,1174,4.084,1175,5.738,1176,2.842,1177,5.738,1178,3.703,1179,5.738,1180,3.703,1181,5.738,1182,3.993,1183,3.993,1184,2.366,1185,3.478,1186,5.321,1187,3.486,1188,3.313,1189,3.313,1190,3.046,1191,5.738,1192,5.573,1193,3.169,1194,3.993,1195,3.993,1196,3.993,1197,3.993,1198,4.554,1199,4.554,1200,6.371,1201,6.371,1202,6.371,1203,4.554,1204,3.046,1205,3.313,1206,4.636,1207,3.313,1208,4.433,1209,4.433,1210,4.433,1211,4.433,1212,3.169,1213,4.377,1214,3.313]],["title/injectables/CourseUc.html",[18,1.009,990,3.919]],["body/injectables/CourseUc.html",[3,0.101,4,0.084,5,0.062,8,0.263,13,0.256,14,0.004,15,0.24,18,1.655,19,1.266,22,0.089,31,0.196,69,1.393,71,2.142,72,3.375,76,2.492,77,2.364,78,0.956,114,0.657,172,0.003,173,0.003,182,1.521,187,0.638,189,1.172,190,0.676,199,1.214,279,3.549,300,2.396,308,3.169,327,1.6,328,2.831,393,3.549,448,2.67,590,2.277,594,6.184,665,3.17,983,6.266,990,6.429,1057,3.877,1184,3.703,1185,3.788,1215,6.937,1216,8.601,1217,5.795,1218,6.937,1219,8.601,1220,6.937,1221,4.19,1222,6.937,1223,5.185]],["title/classes/CreateNewsParams.html",[31,0.148,1224,3.919]],["body/classes/CreateNewsParams.html",[3,0.082,4,0.069,5,0.05,8,0.215,9,0.786,10,1.566,12,0.958,13,0.281,14,0.004,15,0.209,22,0.073,31,0.213,40,3.715,128,0.921,172,0.003,173,0.003,175,1.139,181,3.218,187,0.7,190,0.594,216,2.503,309,4.347,310,4.439,311,5.283,316,1.82,327,1.308,355,2.176,391,2.42,601,4.239,661,3.794,662,3.514,663,1.885,689,2.788,690,3.865,691,3.865,776,3.18,1104,4.455,1106,2.387,1112,4.639,1118,4.746,1174,4.845,1224,5.647,1225,8.742,1226,4.737,1227,6.311,1228,4.698,1229,6.311,1230,5.108,1231,5.672,1232,5.008,1233,4.845,1234,5.942,1235,5.647,1236,6.311,1237,5.192,1238,5.672,1239,5.672,1240,5.81,1241,5.672,1242,5.672,1243,6.351,1244,5.942,1245,4.845,1246,5.672,1247,5.672,1248,6.806,1249,4.845,1250,6.051,1251,2.638,1252,4.055]],["title/controllers/DashboardController.html",[975,2.242,1253,4.38]],["body/controllers/DashboardController.html",[3,0.077,4,0.064,5,0.047,8,0.2,12,0.905,13,0.244,14,0.004,15,0.243,19,0.966,22,0.068,31,0.149,37,2.472,71,1.633,74,2.825,77,2.614,78,1.13,114,0.626,127,5.258,128,1.544,129,2.415,143,4.808,172,0.003,173,0.003,182,1.275,187,0.608,189,1.118,190,0.645,199,1.435,327,1.22,328,2.159,329,2.417,355,1.891,416,4.768,663,1.758,665,2.417,680,3.288,776,4.096,975,2.261,977,2.417,979,3.195,980,6.493,981,4.764,982,5.546,985,6.193,986,2.226,987,3.506,988,3.391,989,3.506,996,3.506,1253,6.021,1254,5.289,1255,4.701,1256,7.387,1257,8.201,1258,5.289,1259,5.289,1260,6.926,1261,7.209,1262,5.289,1263,8.565,1264,5.289,1265,5.32,1266,7.356,1267,7.209,1268,5.289,1269,4.16,1270,5.258,1271,6.129,1272,4.764,1273,4.418,1274,5.289,1275,5.289,1276,5.289,1277,5.289,1278,5.289,1279,8.201,1280,5.388,1281,5.289,1282,5.289,1283,5.289,1284,5.388,1285,5.289,1286,5.289,1287,5.289,1288,4.764]],["title/classes/DashboardEntity.html",[31,0.148,1289,3.362]],["body/classes/DashboardEntity.html",[0,0.271,3,0.036,4,0.03,5,0.022,8,0.25,9,0.424,10,1.681,12,0.881,13,0.288,14,0.004,15,0.127,19,0.453,22,0.101,31,0.115,35,2.831,37,2.477,69,0.498,76,2.151,78,1.384,114,0.667,128,1.623,143,3.269,148,1.964,149,1.415,168,3.627,172,0.002,173,0.002,175,0.498,181,2.557,182,0.72,187,0.718,189,1.189,190,0.686,199,1.619,308,2.925,337,2.481,396,1.185,415,2.068,477,2.826,509,1.784,529,0.825,586,2.083,587,2.223,649,2.835,669,3.074,684,2.736,687,1.774,756,2.016,928,6.704,929,1.855,930,2.698,954,1.387,1083,2.61,1085,4.069,1086,5.164,1094,3.201,1126,2.595,1133,2.698,1137,1.543,1256,3.667,1265,3.617,1289,2.61,1290,1.855,1291,4.323,1292,4.071,1293,5.001,1294,4.071,1295,4.071,1296,5.001,1297,4.709,1298,5.933,1299,4.071,1300,5.001,1301,4.071,1302,4.071,1303,4.071,1304,4.071,1305,4.071,1306,4.071,1307,4.709,1308,2.482,1309,2.482,1310,3.556,1311,2.482,1312,2.482,1313,2.482,1314,3.4,1315,2.482,1316,2.482,1317,3.4,1318,2.482,1319,3.667,1320,3.4,1321,6.64,1322,2.482,1323,5.188,1324,7.095,1325,2.482,1326,2.482,1327,4.554,1328,2.482,1329,3.4,1330,6.64,1331,2.482,1332,2.482,1333,3.4,1334,2.482,1335,4.709,1336,3.4,1337,2.482,1338,3.4,1339,2.482,1340,3.4,1341,2.482,1342,3.4,1343,2.482,1344,3.4,1345,2.482,1346,2.482,1347,3.4,1348,2.482,1349,1.645,1350,1.855,1351,1.855,1352,3.201,1353,1.705,1354,3.4,1355,2.073,1356,3.201,1357,3.4,1358,3.4,1359,2.073,1360,3.4,1361,2.073,1362,3.4,1363,2.073,1364,3.885,1365,2.91,1366,6.239,1367,2.073,1368,1.705,1369,3.4,1370,2.073,1371,3.4,1372,2.073,1373,2.648,1374,4.665,1375,2.797,1376,3.4,1377,2.073,1378,2.073,1379,2.073,1380,2.073,1381,2.073,1382,3.4,1383,2.073,1384,3.4,1385,1.952,1386,3.4,1387,2.073,1388,1.645,1389,3.4,1390,2.073,1391,2.073,1392,2.073,1393,2.073,1394,1.855,1395,2.073,1396,3.4,1397,5.521,1398,2.073,1399,1.645,1400,2.073,1401,2.073,1402,2.073,1403,2.073,1404,2.073,1405,2.073,1406,2.073,1407,3.043,1408,1.855,1409,2.073,1410,2.073,1411,3.4,1412,3.4,1413,1.952,1414,4.323,1415,2.073,1416,3.4,1417,2.073,1418,2.073,1419,2.073,1420,2.073,1421,2.073,1422,2.073,1423,2.073,1424,2.073,1425,2.073,1426,2.073,1427,2.073,1428,2.073,1429,2.073,1430,2.073,1431,2.073,1432,2.073,1433,2.073,1434,2.073,1435,2.073,1436,2.073,1437,2.073,1438,2.073,1439,2.073,1440,2.073,1441,2.073,1442,3.4,1443,2.073,1444,2.073,1445,2.073,1446,3.4,1447,2.61,1448,3.4,1449,2.073,1450,2.073,1451,2.073,1452,2.073,1453,2.073,1454,2.073,1455,2.073,1456,4.323,1457,2.073,1458,2.073]],["title/entities/DashboardGridElementModel.html",[316,0.927,1459,3.603]],["body/entities/DashboardGridElementModel.html",[0,0.789,3,0.077,4,0.064,5,0.047,8,0.201,9,0.752,10,1.912,12,0.878,13,0.263,14,0.004,15,0.227,22,0.114,31,0.204,33,1.466,37,2.474,69,1.065,76,2.595,123,2.258,145,1.828,149,1.484,172,0.003,173,0.003,181,3.245,187,0.684,190,0.568,205,2.371,316,1.452,322,1.658,354,2.714,355,2.127,360,3.158,361,1.797,362,1.527,363,2.343,366,5.654,370,3.032,395,1.426,396,1.544,511,2.233,515,2.305,519,2.862,527,3.254,529,1.763,590,2.371,669,3.36,684,2.424,756,2.432,916,4.202,927,2.714,952,2.993,1043,2.771,1130,2.771,1255,5.199,1374,5.157,1375,3.645,1459,5.644,1460,4.172,1461,7.114,1462,7.114,1463,5.681,1464,5.872,1465,5.306,1466,5.681,1467,5.681,1468,5.306,1469,5.306,1470,5.306,1471,5.306,1472,3.516,1473,3.516,1474,4.172,1475,5.399,1476,4.632,1477,4.172,1478,5.681,1479,4.172,1480,4.172,1481,4.172,1482,4.172,1483,4.172,1484,3.965,1485,5.399,1486,4.632,1487,4.172,1488,3.793,1489,4.172,1490,4.172,1491,4.172,1492,4.172,1493,4.172]],["title/interfaces/DashboardGridElementModelProperties.html",[0,0.573,1475,3.919]],["body/interfaces/DashboardGridElementModelProperties.html",[0,0.8,2,1.558,3,0.079,4,0.065,5,0.048,8,0.205,9,0.762,10,2.064,12,0.948,13,0.285,14,0.004,15,0.228,22,0.115,31,0.206,33,1.486,37,2.589,69,1.087,76,2.631,123,2.013,145,1.843,149,1.323,172,0.003,173,0.003,181,3.338,190,0.699,205,2.404,316,1.468,354,2.769,360,2.883,361,1.822,362,1.558,363,2.391,366,5.321,370,3.063,511,2.278,515,2.352,519,2.901,527,2.901,529,1.799,590,2.919,669,3.406,684,2.474,756,1.822,916,3.747,927,2.769,952,3.035,1043,2.828,1130,2.828,1255,5.316,1374,5.352,1375,3.72,1459,5.032,1460,4.257,1461,7.318,1462,7.318,1463,4.257,1464,5.236,1466,4.257,1467,4.257,1472,3.588,1473,3.588,1474,4.257,1475,6.203,1476,5.701,1477,4.257,1478,5.759,1479,4.257,1480,4.257,1481,4.257,1482,4.257,1483,4.257,1484,4.046,1485,5.474,1486,4.696,1487,4.257,1488,3.87,1489,4.257,1490,4.257,1491,4.257,1492,4.257,1493,4.257]],["title/classes/DashboardGridElementResponse.html",[31,0.148,1494,3.919]],["body/classes/DashboardGridElementResponse.html",[3,0.065,4,0.054,5,0.04,8,0.17,9,0.668,10,2.153,12,0.978,13,0.296,14,0.004,15,0.11,22,0.097,31,0.212,37,2.13,69,1.645,114,0.343,143,3.507,172,0.002,173,0.002,175,0.9,181,3.479,187,0.718,189,0.611,190,0.761,216,2.555,316,0.793,319,3.49,355,2.192,586,4.863,587,2.449,653,2.449,657,5.324,661,4.13,663,1.491,669,3.49,680,3.994,684,2.935,685,4.119,689,4.437,690,4.617,691,4.617,692,3.921,755,2.876,756,1.51,1083,6.095,1084,4.801,1085,5.919,1086,6.302,1087,5.61,1121,2.876,1255,3.429,1265,3.88,1323,5.095,1364,4.817,1365,6.201,1486,4.812,1494,6.946,1495,3.746,1496,7.245,1497,6.821,1498,6.821,1499,4.485,1500,4.485,1501,6.483,1502,5.366,1503,4.485,1504,4.485,1505,4.485,1506,4.485,1507,4.485,1508,4.485,1509,4.485,1510,3.746,1511,3.746,1512,3.746,1513,3.746,1514,3.746]],["title/classes/DashboardGridSubElementResponse.html",[31,0.148,1501,3.919]],["body/classes/DashboardGridSubElementResponse.html",[3,0.071,4,0.059,5,0.044,8,0.186,9,0.713,10,2.169,12,0.985,13,0.284,14,0.004,15,0.121,22,0.102,31,0.222,37,1.781,69,1.714,114,0.375,143,2.682,172,0.003,173,0.003,175,0.986,181,3.529,187,0.666,189,0.669,190,0.386,216,2.575,316,0.869,319,3.186,355,1.968,586,4.978,587,2.682,653,2.682,657,4.889,661,4.186,663,1.633,669,3.669,680,4.259,684,3.131,685,4.393,689,4.413,690,4.592,691,4.592,692,4.121,1083,6.239,1084,5.121,1085,5.93,1086,6.288,1087,5.896,1121,3.15,1255,3.657,1265,2.967,1323,4.259,1364,4.027,1365,5.64,1486,5.058,1494,6.379,1495,4.103,1496,6.589,1497,6.204,1498,6.204,1501,7.13,1502,4.103,1510,4.103,1511,4.103,1512,4.103,1513,4.103,1514,4.103,1515,4.913,1516,4.913,1517,4.913,1518,4.913,1519,4.913]],["title/classes/DashboardMapper.html",[31,0.148,1273,4.38]],["body/classes/DashboardMapper.html",[3,0.088,4,0.073,5,0.054,8,0.228,10,1.249,13,0.261,14,0.004,15,0.193,22,0.078,31,0.17,35,2.745,78,1.207,114,0.669,128,1.507,149,1.581,172,0.003,173,0.003,175,1.21,181,2.055,182,1.391,187,0.649,189,1.193,190,0.689,199,1.532,327,1.39,415,3.561,586,3.084,680,5.77,705,4.506,776,3.906,930,6.151,1065,3.641,1076,2.498,1083,3.865,1255,4.199,1273,6.57,1289,5.95,1297,4.741,1323,3.748,1327,5.95,1486,3.865,1494,6.937,1497,4.741,1498,4.741,1501,6.544,1520,6.028,1521,7.866,1522,7.866,1523,7.866,1524,6.028,1525,7.866,1526,6.028,1527,4.506,1528,7.866,1529,6.028,1530,6.028,1531,6.028,1532,6.028,1533,6.028,1534,6.028,1535,6.028,1536,6.028,1537,6.028,1538,6.028,1539,6.028,1540,6.028,1541,7.866,1542,5.43,1543,6.028,1544,7.866,1545,6.028,1546,6.028,1547,6.028,1548,6.028,1549,6.028]],["title/entities/DashboardModelEntity.html",[316,0.927,1476,3.362]],["body/entities/DashboardModelEntity.html",[0,0.814,3,0.081,4,0.067,5,0.049,8,0.21,9,0.775,10,1.942,12,0.855,13,0.222,14,0.004,15,0.23,22,0.116,31,0.21,33,1.512,37,2.335,69,1.115,76,3.02,123,2.311,145,2,149,1.519,172,0.003,173,0.003,181,3.063,187,0.552,205,2.445,316,1.487,322,1.735,354,2.841,355,1.718,360,2.913,361,1.853,362,1.598,363,2.453,366,5.761,370,3.103,395,1.492,396,1.616,511,2.337,515,2.413,519,3.33,527,3.33,529,1.846,590,2.445,669,3.465,684,2.538,756,1.869,916,4.301,927,2.841,952,3.087,1043,2.901,1130,3.892,1255,5.15,1374,4.699,1375,3.816,1459,5.119,1460,4.367,1461,6.715,1462,6.715,1463,4.367,1464,6.011,1466,4.367,1467,4.367,1472,3.68,1473,3.68,1474,4.367,1475,5.568,1476,5.39,1477,4.367,1478,5.859,1479,4.367,1480,4.367,1481,4.367,1482,4.367,1483,4.367,1484,4.15,1485,5.568,1486,5.761,1487,4.367,1488,3.97,1489,4.367,1490,4.367,1491,4.367,1492,5.859,1493,4.367,1550,5.553,1551,5.553]],["title/injectables/DashboardModelMapper.html",[18,1.009,1552,3.749]],["body/injectables/DashboardModelMapper.html",[3,0.051,4,0.042,5,0.031,8,0.133,10,1.111,12,0.334,13,0.284,14,0.004,15,0.16,18,1.032,19,0.641,22,0.045,31,0.099,35,2.655,69,0.705,71,1.085,74,2.94,76,1.262,77,2.769,78,1.346,114,0.719,128,1.661,129,2.876,143,1.918,145,1.348,148,1.333,149,1.314,172,0.002,173,0.002,182,0.948,187,0.698,189,1.283,190,0.74,199,1.62,300,1.213,316,0.948,327,0.81,361,0.874,362,1.011,552,2.122,553,3.884,555,2.688,573,2.762,590,2.979,649,2.539,756,1.182,928,4.822,931,2.762,1085,3.071,1126,2.688,1255,5.097,1265,2.122,1289,5.507,1327,6.196,1335,2.762,1366,5.601,1374,4.379,1385,2.762,1459,6.085,1461,2.625,1462,2.625,1473,2.328,1476,6.262,1484,2.625,1486,2.252,1527,2.625,1552,3.833,1553,3.513,1554,6.502,1555,6.502,1556,5.361,1557,5.361,1558,5.361,1559,5.361,1560,6.502,1561,5.361,1562,5.361,1563,6.502,1564,3.513,1565,3.513,1566,3.513,1567,9.664,1568,3.513,1569,3.513,1570,5.361,1571,3.513,1572,5.361,1573,3.513,1574,6.898,1575,5.361,1576,3.513,1577,5.361,1578,3.513,1579,3.513,1580,3.513,1581,5.361,1582,3.513,1583,5.361,1584,3.513,1585,3.513,1586,3.513,1587,7.835,1588,3.164,1589,5.361,1590,3.513,1591,3.513,1592,3.513,1593,3.513,1594,3.513,1595,3.513,1596,3.513,1597,3.513,1598,3.513,1599,3.513,1600,3.513,1601,3.833,1602,3.513,1603,2.625,1604,3.513,1605,3.513,1606,3.513,1607,3.513,1608,3.513,1609,3.513,1610,3.513,1611,5.206,1612,3.513,1613,5.361,1614,3.513,1615,5.361,1616,3.513,1617,3.513,1618,3.513,1619,5.361,1620,3.513,1621,5.361,1622,3.513,1623,5.361,1624,3.513,1625,3.513,1626,3.513,1627,5.361,1628,5.361,1629,3.513,1630,3.513,1631,3.513,1632,3.513,1633,3.513,1634,3.513,1635,3.513,1636,3.513,1637,3.513,1638,3.513,1639,2.934,1640,5.361,1641,3.164,1642,3.513]],["title/injectables/DashboardRepo.html",[18,1.009,1643,3.919]],["body/injectables/DashboardRepo.html",[0,0.568,3,0.075,4,0.063,5,0.046,8,0.197,10,1.476,13,0.273,14,0.004,15,0.215,18,1.37,19,0.948,22,0.092,31,0.201,69,1.043,71,2.198,74,2.898,76,3.14,77,2.81,78,1.303,114,0.699,128,1.624,129,2.852,145,1.076,149,0.938,172,0.003,173,0.003,182,1.259,187,0.679,189,1.248,190,0.72,199,1.529,211,2.333,300,1.794,308,3.282,316,1.259,327,1.198,354,2.657,361,1.292,363,2.294,380,1.866,407,3.137,522,2.713,541,3.442,544,4.426,547,4.892,552,3.137,553,4.666,555,3.569,557,4.892,563,5.582,573,4.084,954,2.903,1085,2.975,1255,5.049,1289,6.323,1327,4.565,1476,3.33,1552,6.249,1574,5.947,1639,4.338,1643,5.321,1644,4.338,1645,6.413,1646,5.947,1647,5.808,1648,5.194,1649,7.317,1650,5.194,1651,6.786,1652,5.194,1653,5.194,1654,5.194,1655,4.678,1656,4.338,1657,5.947,1658,4.338,1659,4.338,1660,5.599,1661,4.678,1662,6.413,1663,4.678,1664,6.413,1665,4.678,1666,7.317,1667,4.678,1668,6.413,1669,4.678,1670,4.678]],["title/classes/DashboardResponse.html",[31,0.148,680,3.26]],["body/classes/DashboardResponse.html",[3,0.074,4,0.062,5,0.045,8,0.193,9,0.73,10,2.179,12,0.969,13,0.271,14,0.004,15,0.125,22,0.104,31,0.226,37,1.824,69,1.739,114,0.389,143,2.777,172,0.003,173,0.003,175,1.021,181,3.437,187,0.596,189,0.693,190,0.4,216,2.602,316,1.241,319,3.737,355,1.618,586,4.808,587,3.832,653,2.777,657,2.914,661,4.206,663,1.691,669,3.737,680,5.651,684,3.207,685,4.5,689,4.469,690,4.65,691,4.65,692,3.666,755,3.261,756,1.712,1083,6.025,1084,5.245,1085,5.775,1086,6.15,1087,5.245,1121,4.5,1255,4.625,1265,3.072,1323,4.363,1364,4.125,1365,5.745,1486,5.828,1494,6.794,1495,4.249,1496,6.712,1497,6.319,1498,6.319,1501,6.475,1502,4.249,1510,4.249,1511,4.249,1512,4.249,1513,4.249,1514,4.249,1671,5.087,1672,5.087,1673,5.087]],["title/injectables/DashboardUc.html",[18,1.009,1271,3.919]],["body/injectables/DashboardUc.html",[3,0.074,4,0.061,5,0.045,8,0.192,12,0.764,13,0.27,14,0.004,15,0.223,17,2.905,18,1.348,19,0.926,22,0.065,31,0.143,35,2.524,69,1.406,71,2.163,74,2.799,76,3.736,77,2.581,78,1.106,114,0.717,123,1.394,128,1.474,129,2.834,148,1.924,149,0.916,168,2.039,172,0.003,173,0.003,182,1.238,187,0.673,189,1.237,190,0.714,199,1.514,211,2.278,279,2.594,300,1.751,308,3.445,327,1.169,416,4.022,594,5.812,953,2.905,1180,4.236,1185,2.769,1221,3.063,1255,5.235,1263,7.793,1271,5.235,1289,5.548,1321,6.467,1323,4.988,1330,7.192,1349,4.642,1366,3.626,1413,3.988,1643,5.235,1646,5.85,1651,5.85,1660,6.805,1674,5.072,1675,8.023,1676,8.023,1677,7.004,1678,5.072,1679,5.072,1680,5.072,1681,5.072,1682,5.072,1683,5.072,1684,5.072,1685,7.004,1686,5.072,1687,4.568,1688,4.568,1689,3.791,1690,5.072,1691,5.072,1692,5.072,1693,3.626,1694,5.072,1695,8.023,1696,7.004,1697,7.004,1698,5.072,1699,5.072,1700,5.072,1701,5.072,1702,3.988,1703,3.252]],["title/classes/DatabaseManagementConsole.html",[31,0.148,1704,4.124]],["body/classes/DatabaseManagementConsole.html",[0,0.563,3,0.075,4,0.062,5,0.046,8,0.195,12,0.491,13,0.241,14,0.004,15,0.199,22,0.122,31,0.145,35,1.433,69,1.035,72,3.579,74,2.654,77,2.395,78,0.976,114,0.618,123,1.417,128,1.569,129,2.086,172,0.003,173,0.003,175,1.035,182,1.252,187,0.6,189,1.103,190,0.685,199,1.239,216,2.449,269,3.354,328,2.104,355,1.633,462,4.057,509,1.536,519,3.206,520,2.637,525,2.907,756,3.074,854,5.774,856,3.853,858,4.991,859,4.306,868,2.534,1076,2.935,1611,3.03,1704,5.57,1705,7.847,1706,4.643,1707,6.38,1708,7.083,1709,4.643,1710,6.406,1711,5.155,1712,5.916,1713,6.38,1714,5.916,1715,4.552,1716,7.142,1717,6.512,1718,5.155,1719,6.38,1720,6.512,1721,5.155,1722,6.746,1723,4.306,1724,4.054,1725,4.054,1726,5.56,1727,4.163,1728,7.288,1729,4.888,1730,4.283,1731,4.057,1732,6.38,1733,6.38,1734,4.643,1735,5.916,1736,6.38,1737,6.38,1738,4.306,1739,3.305,1740,5.57,1741,4.643,1742,4.643]],["title/controllers/DatabaseManagementController.html",[975,2.242,1743,4.38]],["body/controllers/DatabaseManagementController.html",[3,0.092,4,0.077,5,0.056,8,0.24,12,0.952,13,0.242,14,0.004,15,0.199,19,1.155,22,0.082,31,0.178,74,2.986,77,2.831,78,1.303,114,0.62,172,0.003,173,0.003,182,1.435,187,0.701,189,1.106,190,0.638,199,1.654,328,2.582,329,2.891,355,2.179,975,2.705,977,2.891,979,3.821,1707,8.514,1710,5.939,1724,4.975,1725,4.975,1743,6.779,1744,9.774,1745,6.327,1746,6.327,1747,8.116,1748,7.31,1749,9.452,1750,6.327,1751,8.116,1752,6.327,1753,7.065,1754,8.116,1755,6.327,1756,5.698,1757,8.116,1758,6.327,1759,8.116,1760,6.327,1761,4.729,1762,6.327,1763,6.327,1764,6.327,1765,6.327,1766,6.327,1767,6.327,1768,6.327]],["title/modules/DatabaseManagementModule.html",[257,1.425,1769,3.919]],["body/modules/DatabaseManagementModule.html",[3,0.11,4,0.091,5,0.067,14,0.004,15,0.222,19,1.377,22,0.097,31,0.213,172,0.003,173,0.003,257,2.461,259,2.988,260,4.066,268,4.538,269,3.572,270,3.175,273,4.066,295,4.538,1715,3.639,1769,7.894,1770,6.795,1771,6.795,1772,6.795,1773,7.464,1774,6.795,1775,7.544,1776,7.544]],["title/injectables/DatabaseManagementService.html",[18,1.009,1773,3.603]],["body/injectables/DatabaseManagementService.html",[3,0.066,4,0.055,5,0.04,8,0.172,12,1.009,13,0.284,14,0.004,15,0.186,18,1.247,19,0.828,22,0.059,31,0.128,35,2.291,69,0.911,74,2.971,77,2.811,78,1.314,114,0.741,123,2.077,128,1.617,129,2.747,172,0.002,173,0.002,182,1.145,187,0.73,189,1.3,190,0.75,199,1.668,300,1.567,328,1.852,337,3.13,361,1.129,363,2.004,472,2.91,519,3.777,552,2.741,553,4.398,555,3.248,649,3.067,806,4.842,819,4.441,821,5.941,1716,4.631,1748,5.835,1753,6.97,1756,5.835,1773,4.451,1774,8.974,1777,4.538,1778,6.478,1779,5.411,1780,6.478,1781,6.478,1782,6.478,1783,8.239,1784,6.478,1785,4.842,1786,5.586,1787,4.538,1788,6.478,1789,4.538,1790,6.478,1791,4.538,1792,6.478,1793,4.538,1794,6.478,1795,4.538,1796,6.478,1797,4.538,1798,4.538,1799,6.478,1800,4.538,1801,4.538,1802,4.538,1803,4.538,1804,4.538,1805,4.538,1806,7.555,1807,4.538,1808,6.478,1809,4.538,1810,4.538,1811,4.538,1812,4.538,1813,6.478,1814,4.538,1815,4.538,1816,4.538,1817,4.538,1818,6.478,1819,4.538,1820,4.538,1821,4.538,1822,4.538,1823,4.538,1824,4.538]],["title/injectables/DatabaseManagementUc.html",[18,1.009,1710,3.475]],["body/injectables/DatabaseManagementUc.html",[0,0.277,3,0.037,4,0.096,5,0.075,8,0.096,9,0.431,12,0.946,13,0.235,14,0.004,15,0.186,18,0.798,19,0.463,22,0.086,31,0.072,34,1.202,35,2.719,37,1.078,69,0.833,74,2.586,77,2.172,78,1.159,114,0.671,123,0.698,128,1.621,129,2.74,148,0.963,149,0.949,172,0.002,173,0.002,182,0.733,187,0.651,189,1.032,190,0.703,199,1.588,216,1.031,273,1.863,295,2.079,300,0.877,319,2.823,329,3.057,337,1.052,339,1.419,365,2.264,381,1.419,391,1.683,395,0.682,396,0.739,404,4.314,448,2.575,509,2.139,519,3.792,520,4.404,544,1.578,625,2.375,756,0.854,799,5.415,801,2.12,802,2.12,806,5.661,808,4.339,810,1.744,812,3.464,813,1.578,818,5.957,819,2.437,821,4.134,824,2.849,864,4.933,886,4.773,935,2.659,1076,3.388,1089,1.682,1126,2.079,1174,1.628,1176,1.628,1190,1.744,1240,3.891,1373,1.299,1601,2.965,1611,4.805,1710,2.748,1715,4.311,1716,6.723,1717,5.365,1720,5.661,1726,2.849,1727,3.09,1730,3.289,1739,5.241,1740,5.646,1753,5.905,1773,5.204,1779,3.464,1785,3.099,1825,7.755,1826,2.286,1827,4.735,1828,4.147,1829,5.467,1830,4.147,1831,4.147,1832,4.147,1833,4.735,1834,4.147,1835,5.467,1836,2.539,1837,5.132,1838,4.147,1839,3.735,1840,2.539,1841,2.984,1842,5.467,1843,5.07,1844,5.061,1845,5.588,1846,2.539,1847,3.735,1848,3.735,1849,2.539,1850,2.849,1851,3.735,1852,2.539,1853,5.467,1854,3.464,1855,5.365,1856,6.822,1857,3.735,1858,2.539,1859,6.025,1860,2.539,1861,6.025,1862,2.539,1863,3.735,1864,3.464,1865,5.467,1866,3.735,1867,2.539,1868,3.735,1869,3.735,1870,4.023,1871,3.464,1872,2.539,1873,2.539,1874,3.464,1875,1.996,1876,2.12,1877,1.273,1878,1.897,1879,2.12,1880,5.588,1881,5.588,1882,3.464,1883,2.286,1884,2.286,1885,3.735,1886,3.735,1887,3.735,1888,2.286,1889,2.286,1890,2.286,1891,2.286,1892,5.467,1893,2.286,1894,2.286,1895,2.286,1896,2.12,1897,2.286,1898,2.286,1899,2.286,1900,2.12,1901,2.286,1902,5.467,1903,4.134,1904,2.286,1905,2.286,1906,1.533,1907,1.578,1908,2.286,1909,3.735,1910,3.735,1911,2.286,1912,2.286,1913,2.286,1914,3.735,1915,2.286,1916,2.286,1917,2.286,1918,3.261,1919,3.735,1920,2.286,1921,3.735,1922,3.735,1923,2.286,1924,2.286,1925,2.437,1926,2.286,1927,2.286,1928,2.12,1929,2.286,1930,1.815,1931,2.12,1932,1.744,1933,1.533,1934,2.286,1935,2.12,1936,2.286,1937,2.286,1938,2.286,1939,2.286,1940,2.286,1941,2.849,1942,2.286,1943,2.286,1944,2.286,1945,2.286,1946,2.286,1947,3.735,1948,2.286,1949,2.286,1950,2.286,1951,1.996,1952,1.454,1953,2.286,1954,2.286,1955,2.286,1956,2.286,1957,2.965,1958,2.286,1959,3.261,1960,2.286,1961,2.286,1962,2.286,1963,2.286]],["title/controllers/DelayController.html",[975,2.242,1964,4.38]],["body/controllers/DelayController.html",[3,0.099,4,0.083,5,0.061,8,0.259,14,0.004,15,0.228,19,1.246,22,0.088,31,0.192,37,1.775,60,4.76,73,5.295,74,2.61,77,2.551,78,1.174,128,1.383,129,2.011,149,1.233,172,0.003,173,0.003,182,1.506,187,0.506,199,1.194,207,3.493,272,2.919,355,1.574,395,2.289,893,6.365,898,5.852,975,3.641,977,3.892,1964,7.753,1965,7.671,1966,6.149,1967,8.118,1968,6.827,1969,6.365,1970,5.188,1971,6.697,1972,5.703,1973,6.149,1974,4.525,1975,6.149,1976,7.114,1977,6.149,1978,6.149,1979,6.827,1980,5.703,1981,3.493,1982,6.149,1983,5.369,1984,3.566,1985,4.525,1986,5.103]],["title/classes/DeleteFilesConsole.html",[31,0.148,1987,4.38]],["body/classes/DeleteFilesConsole.html",[3,0.09,4,0.075,5,0.071,8,0.235,9,0.835,13,0.265,14,0.004,15,0.218,22,0.08,31,0.175,35,2.47,37,2.309,69,1.247,74,2.498,77,2.205,114,0.613,128,1.009,129,1.83,149,1.449,172,0.003,173,0.003,175,1.247,182,1.418,187,0.659,189,1.093,190,0.631,199,1.087,216,2.21,328,2.535,355,1.433,391,1.99,520,4.803,548,4.85,858,5.378,868,3.054,897,5.702,944,7.017,1714,5.189,1722,6.712,1987,6.7,1988,9.388,1989,6.213,1990,7.225,1991,6.213,1992,7.439,1993,8.022,1994,8.022,1995,8.965,1996,8.001,1997,9.388,1998,8.001,1999,8.884,2000,6.213,2001,8.884,2002,4.118,2003,4.269,2004,5.596,2005,6.213,2006,6.213,2007,5.596,2008,6.213,2009,6.213,2010,6.213,2011,3.862]],["title/injectables/DeleteFilesUc.html",[18,1.009,1992,3.919]],["body/injectables/DeleteFilesUc.html",[3,0.088,4,0.073,5,0.07,8,0.23,12,0.578,13,0.235,14,0.004,15,0.216,18,1.521,19,1.108,22,0.078,31,0.171,35,1.688,43,3.55,44,3.611,45,3.225,46,3.434,69,1.219,74,2.471,77,2.172,114,0.604,128,1.511,129,2.587,145,1.638,172,0.003,173,0.003,182,1.397,187,0.586,189,1.077,190,0.621,199,1.062,270,2.555,279,3.106,300,2.097,328,2.477,329,2.774,337,2.516,391,2.813,520,4.936,897,5.77,1990,7.117,1992,5.906,2007,8.382,2012,8.786,2013,6.071,2014,6.071,2015,7.393,2016,6.071,2017,7.902,2018,6.071,2019,7.902,2020,7.773,2021,7.117,2022,6.071,2023,6.071,2024,7.902,2025,6.071,2026,7.902,2027,6.071,2028,7.902,2029,7.913,2030,7.902,2031,5.468,2032,5.468,2033,4.34,2034,6.071,2035,6.071,2036,4.537,2037,5.071,2038,6.071,2039,6.071,2040,7.902,2041,5.071,2042,6.071,2043,4.34]],["title/entities/Directory.html",[316,0.927,524,3.475]],["body/entities/Directory.html",[0,0.706,3,0.094,4,0.078,5,0.073,12,0.907,13,0.245,14,0.004,15,0.234,22,0.123,31,0.255,33,1.836,123,2.26,145,1.875,172,0.003,173,0.003,205,2.119,316,1.684,322,2.018,360,3.26,361,1.606,362,1.858,370,3.035,391,2.633,502,6.216,503,5.078,504,3.893,505,6.145,506,6.466,509,1.924,511,2.717,512,2.485,513,5.781,514,5.078,515,2.806,516,6.145,517,5.878,518,5.878,519,3.584,520,4.628,521,4.014,522,4.295,523,5.272,524,5.449,525,2.954,526,5.078,527,2.558,528,5.078,529,2.146,530,5.078,531,5.078,532,5.078,533,5.078,534,5.078,535,5.078,536,5.078,537,5.078,538,5.078,539,4.014,540,3.699]],["title/injectables/DurationLoggingInterceptor.html",[18,1.009,2044,4.723]],["body/injectables/DurationLoggingInterceptor.html",[3,0.097,4,0.081,5,0.059,8,0.252,9,0.872,13,0.198,14,0.004,15,0.237,18,1.613,19,1.215,21,4.975,22,0.086,31,0.188,35,2.551,45,3.744,71,2.833,78,0.917,114,0.508,128,1.081,149,1.514,172,0.003,173,0.003,182,1.482,187,0.622,189,0.907,190,0.523,199,1.165,216,1.656,300,2.299,395,1.789,396,1.938,434,4.685,890,5.993,897,5.517,898,5.759,954,3.72,1174,4.268,1971,6.592,2002,4.412,2044,7.55,2045,9.175,2046,6.656,2047,8.382,2048,6.265,2049,7.55,2050,7.55,2051,7.574,2052,8.674,2053,6.656,2054,3.912,2055,8.264,2056,8.382,2057,6.656,2058,5.56,2059,6.656,2060,6.656,2061,8.382,2062,6.656,2063,6.656,2064,6.656]],["title/classes/EncryptedStringType.html",[31,0.148,2065,4.124]],["body/classes/EncryptedStringType.html",[3,0.078,4,0.065,5,0.048,8,0.204,9,0.759,12,1.018,13,0.3,14,0.004,15,0.203,22,0.069,31,0.152,33,1.48,35,2.3,69,1.08,78,1.317,114,0.632,128,1.184,149,1.317,172,0.003,173,0.003,175,1.08,182,1.29,187,0.658,189,1.127,190,0.651,199,1.276,205,1.766,216,1.338,337,3.022,361,1.338,362,1.548,380,1.933,396,2.782,448,2.07,756,3.217,819,4.287,871,2.937,1715,3.518,1941,5.011,2065,5.735,2066,5.38,2067,6.568,2068,6.568,2069,7.452,2070,6.341,2071,8.273,2072,7.293,2073,7.293,2074,7.293,2075,7.293,2076,7.293,2077,6.183,2078,7.293,2079,10.431,2080,5.38,2081,7.293,2082,5.38,2083,3.846,2084,3.566,2085,3.449,2086,4.231,2087,5.38,2088,5.38,2089,7.293,2090,5.38,2091,5.38,2092,7.293,2093,3.118,2094,6.183,2095,5.684,2096,6.506,2097,6.568,2098,7.293,2099,5.38,2100,6.568,2101,7.293,2102,5.38]],["title/modules/EncryptionModule.html",[257,1.425,2103,4.124]],["body/modules/EncryptionModule.html",[0,0.798,3,0.106,4,0.088,5,0.065,12,0.695,13,0.218,14,0.004,15,0.218,19,1.333,22,0.115,31,0.206,72,2.523,78,1.007,114,0.558,172,0.003,173,0.003,182,1.292,187,0.542,189,0.995,190,0.574,199,1.278,257,2.6,259,2.893,272,3.123,295,3.662,415,3.066,1984,3.816,1985,4.841,2077,7.149,2103,7.522,2104,6.579,2105,5.459,2106,5.884,2107,8.311,2108,7.304,2109,6.132,2110,6.579,2111,6.579,2112,6.579,2113,6.579]],["title/interfaces/EncryptionModuleOptions.html",[0,0.573,2107,4.38]],["body/interfaces/EncryptionModuleOptions.html",[0,0.81,2,2.133,3,0.108,4,0.09,5,0.066,8,0.281,9,0.932,12,0.916,13,0.221,14,0.004,15,0.22,19,1.353,22,0.116,31,0.209,78,1.022,172,0.003,173,0.003,257,2.617,272,3.17,295,3.717,415,2.56,1984,3.873,1985,4.914,2077,7.195,2103,7.045,2104,6.678,2106,4.914,2107,8.041,2109,5.744,2110,6.678,2111,9.007,2112,6.678,2113,6.678]],["title/modules/ErrorModule.html",[257,1.425,877,3.919]],["body/modules/ErrorModule.html",[3,0.109,4,0.091,5,0.067,14,0.004,15,0.238,19,1.371,22,0.097,31,0.212,172,0.003,173,0.003,216,1.868,257,2.454,259,2.975,272,3.211,325,5.984,395,2.427,868,4.439,877,6.748,892,5.613,896,7.899,1730,4.439,1974,4.978,1984,3.924,2114,7.511,2115,8.132,2116,5.789,2117,7.101,2118,7.511,2119,7.511,2120,5.907]],["title/classes/ErrorResponse.html",[31,0.148,201,3.26]],["body/classes/ErrorResponse.html",[3,0.1,4,0.083,5,0.061,12,1.005,13,0.298,14,0.004,15,0.168,19,1.251,22,0.088,31,0.193,34,4.403,37,2.417,38,4.46,69,1.714,71,3.005,84,5.197,114,0.524,172,0.003,173,0.003,175,1.376,179,4.608,181,3.17,187,0.508,189,0.934,190,0.539,201,5.308,202,5.391,216,2.124,217,6.389,218,5.658,219,5.018,845,6.174,935,5.474,1841,3.37,2121,6.855,2122,6.855,2123,6.855,2124,6.855,2125,6.174,2126,6.855,2127,4.543,2128,6.174,2129,4.029,2130,3.659,2131,4.261,2132,5.123]],["title/injectables/FeathersAuthProvider.html",[18,1.009,293,3.749]],["body/injectables/FeathersAuthProvider.html",[0,0.513,3,0.068,4,0.057,5,0.042,8,0.178,12,0.84,13,0.273,14,0.004,15,0.205,18,1.277,19,0.857,22,0.061,31,0.132,35,2.139,50,3.69,69,0.942,74,2.908,76,3.383,77,2.726,78,1.262,114,0.7,128,1.61,129,2.599,145,1.994,148,1.781,149,0.848,172,0.003,173,0.003,182,1.173,187,0.679,189,1.248,190,0.72,199,1.544,293,4.743,296,4.226,300,1.62,308,3.456,309,4.686,310,4.919,311,5.2,312,3.964,327,1.082,328,1.915,351,4.253,353,3.008,354,3.937,361,1.167,363,2.073,525,1.686,871,4.201,900,1.686,913,4.179,986,1.975,1349,4.397,1969,4.958,1970,2.623,2093,2.006,2133,9.417,2134,4.226,2135,6.634,2136,6.931,2137,6.634,2138,6.634,2139,6.931,2140,4.692,2141,6.294,2142,4.692,2143,6.634,2144,4.692,2145,4.226,2146,4.692,2147,6.634,2148,4.692,2149,6.634,2150,4.692,2151,5.217,2152,4.692,2153,4.692,2154,6.634,2155,6.634,2156,6.634,2157,4.692,2158,4.692,2159,4.692,2160,6.634,2161,6.634,2162,6.634,2163,4.692,2164,3.507,2165,4.692,2166,4.692,2167,4.692,2168,5.541,2169,4.226,2170,4.692,2171,4.692]],["title/interfaces/FeathersError.html",[0,0.573,2172,3.919]],["body/interfaces/FeathersError.html",[0,0.841,2,2.214,3,0.112,4,0.093,5,0.068,8,0.292,9,0.953,12,0.999,13,0.316,14,0.004,22,0.099,33,1.859,34,4.338,37,2.543,172,0.003,173,0.003,179,4.794,2172,6.847,2173,7.695,2174,7.695,2175,9.119]],["title/modules/FeathersModule.html",[257,1.425,291,3.749]],["body/modules/FeathersModule.html",[3,0.102,4,0.085,5,0.062,14,0.004,15,0.212,19,1.277,22,0.09,31,0.197,60,4.832,172,0.003,173,0.003,216,1.74,257,2.664,259,3.717,260,3.883,268,4.334,269,3.312,270,2.943,272,3.696,291,7.434,295,4.334,298,5.375,404,4.72,447,4.17,871,4.72,2141,7.394,2176,6.299,2177,6.299,2178,6.299,2179,6.994,2180,5.94,2181,4.952,2182,5.081,2183,4.72,2184,6.18,2185,6.461,2186,6.18,2187,6.18,2188,7.221,2189,6.994]],["title/interfaces/FeathersService.html",[0,0.573,2190,4.38]],["body/interfaces/FeathersService.html",[0,0.594,2,1.565,3,0.079,4,0.066,5,0.048,8,0.206,10,1.523,12,0.848,13,0.265,14,0.004,15,0.219,17,3.116,18,1.414,19,0.993,22,0.115,30,4.568,31,0.153,35,1.512,43,3.3,44,3.357,45,2.998,46,3.192,47,3.357,48,3.838,60,5.201,77,2.449,78,0.75,114,0.561,128,1.193,148,2.064,149,0.982,172,0.003,173,0.003,182,1.299,187,0.617,189,1.001,190,0.578,199,1.285,211,2.443,218,3.605,257,1.478,259,2.155,298,4.766,329,3.802,365,2.97,387,3.197,404,2.97,416,4.807,447,2.624,448,2.828,476,5.778,830,3.838,871,5.443,1167,3.3,1974,3.605,2093,2.326,2141,3.737,2180,3.737,2181,5.33,2182,3.197,2183,5.08,2184,3.889,2185,4.065,2186,3.889,2187,3.889,2188,4.543,2190,7.442,2191,6.949,2192,4.278,2193,4.98,2194,8.025,2195,6.122,2196,6.617,2197,8.188,2198,5.439,2199,6.617,2200,5.439,2201,4.899,2202,3.737,2203,4.543,2204,6.137,2205,4.543,2206,3.737,2207,4.899,2208,4.899,2209,4.899,2210,6.617,2211,4.899,2212,4.543,2213,5.048,2214,4.543,2215,3.737,2216,4.899,2217,4.899,2218,4.899,2219,4.543,2220,3.889,2221,4.899]],["title/injectables/FeathersServiceProvider.html",[18,1.009,2141,3.603]],["body/injectables/FeathersServiceProvider.html",[0,0.595,3,0.079,4,0.066,5,0.048,8,0.206,10,1.129,12,0.849,13,0.265,14,0.004,15,0.219,17,3.121,18,1.416,19,0.994,22,0.115,30,4.572,31,0.154,35,1.515,43,3.304,44,3.361,45,3.001,46,3.196,47,3.361,48,3.842,60,4.983,69,1.094,77,2.022,78,0.751,114,0.562,128,1.194,148,2.067,149,0.984,172,0.003,173,0.003,182,1.301,187,0.617,189,1.002,190,0.578,199,0.953,211,2.447,216,1.355,218,3.611,257,1.481,259,2.913,298,5.107,300,1.881,329,3.805,365,2.974,387,3.202,404,4.016,416,4.174,447,3.548,476,5.784,830,3.842,871,5.445,1167,3.304,1870,3.611,1974,3.611,2093,2.329,2141,5.054,2180,5.054,2181,5.107,2182,4.323,2183,5.518,2184,5.258,2185,5.497,2186,5.258,2187,5.258,2188,6.143,2190,7.447,2191,6.955,2192,4.284,2193,3.045,2194,6.624,2195,5.054,2196,4.907,2197,6.955,2199,4.907,2201,4.907,2202,3.743,2203,4.55,2204,6.143,2205,4.55,2206,5.054,2207,4.907,2208,4.907,2209,6.624,2210,6.624,2211,4.907,2212,4.55,2213,5.054,2214,4.55,2215,3.743,2216,4.907,2217,4.907,2218,4.907,2219,4.55,2220,3.895,2221,4.907,2222,7.355,2223,5.448,2224,5.448,2225,5.448]],["title/entities/File.html",[5,0.047,316,0.927]],["body/entities/File.html",[0,0.662,3,0.088,4,0.073,5,0.078,8,0.23,9,0.821,12,0.941,13,0.287,14,0.004,15,0.228,22,0.12,31,0.247,33,1.781,123,2.17,145,1.819,172,0.003,173,0.003,187,0.651,205,1.989,316,1.644,322,1.894,355,2.024,360,3.31,361,1.507,362,1.744,370,2.913,391,2.528,502,6.032,503,4.766,504,3.738,505,5.899,506,6.207,509,1.806,511,2.55,512,2.332,513,6.001,514,4.766,515,2.633,516,5.899,517,6.648,518,6.648,519,3.477,520,4.491,521,3.768,522,4.123,523,5.061,524,4.016,525,2.836,526,6.207,527,3.127,528,6.207,529,2.014,530,4.766,531,4.766,532,4.766,533,4.766,534,4.766,535,4.766,536,4.766,537,4.766,538,4.766,539,3.768,540,3.471,2226,6.06,2227,6.06,2228,6.06]],["title/injectables/FileStorageAdapter.html",[18,1.009,2229,3.919]],["body/injectables/FileStorageAdapter.html",[3,0.098,4,0.082,5,0.092,8,0.257,13,0.202,14,0.004,15,0.227,18,1.631,19,1.237,22,0.087,31,0.191,74,2.601,77,2.33,78,0.933,114,0.517,123,2.33,128,1.502,129,1.995,149,1.531,172,0.003,173,0.003,182,1.499,187,0.502,189,0.923,190,0.533,199,1.185,300,2.339,327,1.562,429,3.698,513,5.436,517,6.059,518,6.612,2229,6.334,2230,6.101,2231,7.633,2232,7.633,2233,6.774,2234,8.33,2235,8.475,2236,6.101,2237,6.774,2238,6.774,2239,7.633,2240,6.101,2241,6.774,2242,6.774,2243,5.658,2244,6.774,2245,6.774,2246,6.774,2247,5.327,2248,6.774,2249,5.327,2250,6.774,2251,6.774,2252,6.774,2253,5.327,2254,6.774]],["title/injectables/FileSystemAdapter.html",[18,1.009,1837,3.749]],["body/injectables/FileSystemAdapter.html",[3,0.053,4,0.044,5,0.087,8,0.138,9,0.575,12,1.009,13,0.267,14,0.004,15,0.196,18,1.063,19,0.667,22,0.047,31,0.103,35,1.852,69,1.337,74,2.85,77,2.648,78,1.156,114,0.665,128,1.361,129,2.348,172,0.002,173,0.002,182,0.977,187,0.694,189,1.187,190,0.685,199,1.637,216,1.847,300,1.262,329,3.979,382,1.514,475,3.542,520,2.826,524,3.661,601,3.335,693,3.661,807,3.949,843,3.661,864,6.53,935,5.748,1176,4.76,1236,4.614,1611,5.27,1717,4.129,1726,3.796,1739,6.176,1785,4.129,1837,3.949,1855,2.731,1870,6.631,1881,6.201,1882,7.489,1896,7.004,1906,5.415,1933,2.207,2095,3.796,2255,7.939,2256,7.939,2257,3.291,2258,7.553,2259,5.524,2260,5.524,2261,5.524,2262,6.66,2263,6.66,2264,5.524,2265,6.66,2266,6.66,2267,5.524,2268,5.524,2269,3.654,2270,5.549,2271,5.524,2272,3.654,2273,3.796,2274,7.424,2275,7.972,2276,5.524,2277,5.524,2278,4.614,2279,3.661,2280,7.424,2281,8.966,2282,5.524,2283,3.654,2284,6.66,2285,3.654,2286,5.524,2287,6.66,2288,3.654,2289,3.337,2290,6.66,2291,6.66,2292,6.687,2293,4.976,2294,5.524,2295,3.654,2296,5.524,2297,4.976,2298,4.344,2299,6.66,2300,3.654,2301,4.129,2302,3.796,2303,5.524,2304,3.654,2305,3.654,2306,3.291,2307,4.976,2308,3.654,2309,3.654,2310,4.976,2311,3.654,2312,3.654,2313,3.654,2314,6.66,2315,3.654,2316,3.654,2317,3.654,2318,3.654,2319,3.654,2320,5.524,2321,3.654,2322,3.654,2323,2.874,2324,3.052,2325,3.654,2326,3.654,2327,3.052,2328,3.654]],["title/modules/FileSystemModule.html",[257,1.425,2329,3.919]],["body/modules/FileSystemModule.html",[3,0.109,4,0.091,5,0.08,14,0.004,15,0.222,19,1.374,22,0.097,31,0.212,172,0.003,173,0.003,257,2.457,259,2.982,260,4.061,268,4.532,269,3.564,270,3.168,272,3.865,295,4.532,1837,7.764,2255,6.287,2256,6.287,2329,7.89,2330,6.78,2331,6.78,2332,6.78,2333,7.527,2334,7.527]],["title/modules/FilesModule.html",[257,1.425,2335,3.475]],["body/modules/FilesModule.html",[3,0.1,4,0.083,5,0.061,14,0.004,15,0.251,19,1.254,22,0.089,31,0.194,172,0.003,173,0.003,257,2.323,259,2.721,260,3.84,268,4.285,269,3.252,270,2.89,272,3.655,273,3.84,279,3.514,879,6.35,1987,7.14,1992,7.634,2002,4.552,2003,4.719,2015,7.634,2229,7.634,2335,7.168,2336,6.186,2337,6.186,2338,6.868,2339,8.032,2340,6.868,2341,6.186,2342,6.868,2343,6.868]],["title/injectables/FilesRepo.html",[18,1.009,2015,3.919]],["body/injectables/FilesRepo.html",[3,0.068,4,0.057,5,0.084,8,0.177,9,0.688,13,0.301,14,0.004,15,0.216,18,1.273,19,0.853,22,0.06,31,0.132,33,1.342,69,0.938,71,1.443,74,2.923,77,2.686,78,0.644,114,0.765,128,1.247,129,2.459,168,2.659,172,0.003,173,0.003,182,1.17,187,0.756,189,1.366,190,0.788,192,4.466,199,1.753,300,1.614,316,1.476,322,2.609,327,1.078,328,1.907,361,1.162,363,2.064,391,2.459,395,1.256,396,1.36,407,2.823,436,5.598,502,5.737,505,3.493,513,3.888,520,3.384,541,6.706,543,5.739,544,4.112,545,4.944,546,4.944,547,4.545,548,3.611,549,4.944,550,4.944,551,4.944,553,4.457,555,3.849,557,3.211,559,3.493,561,3.493,563,3.211,565,3.493,567,3.493,569,3.493,571,3.493,2015,4.944,2229,6.838,2231,5.958,2232,5.958,2341,4.209,2344,4.673,2345,6.916,2346,6.615,2347,4.673,2348,4.673,2349,4.673,2350,6.615,2351,4.673,2352,6.615,2353,3.675,2354,3.675,2355,3.675,2356,3.675,2357,3.675,2358,3.675,2359,3.675,2360,3.675,2361,3.675,2362,4.673,2363,4.209,2364,4.673,2365,6.615,2366,3.903,2367,4.673,2368,4.673,2369,4.673,2370,4.944,2371,4.673,2372,4.209,2373,4.673,2374,4.673]],["title/interfaces/GlobalConstants.html",[0,0.573,2375,4.38]],["body/interfaces/GlobalConstants.html",[0,0.805,2,2.12,3,0.107,4,0.089,5,0.066,8,0.279,9,0.928,12,1.017,13,0.286,14,0.004,15,0.181,22,0.095,128,1.449,172,0.003,173,0.003,190,0.785,1715,3.553,2375,8.019,2376,6.635,2377,8.037,2378,8.037,2379,8.037,2380,8.038,2381,7.367,2382,8.038,2383,5.267]],["title/classes/GlobalErrorFilter.html",[31,0.148,2117,4.124]],["body/classes/GlobalErrorFilter.html",[0,0.401,3,0.053,4,0.044,5,0.033,8,0.139,9,0.576,13,0.25,14,0.004,15,0.22,19,0.669,22,0.047,31,0.156,34,5.086,35,1.855,38,5.035,43,2.487,44,2.53,45,2.26,46,2.406,47,1.675,71,2.061,78,1.369,84,3.095,114,0.51,128,1.69,138,2.429,139,2.279,140,2.429,149,1.516,168,2.683,172,0.002,173,0.002,174,5.316,175,0.736,178,4.928,179,3.521,181,2.275,182,1.18,187,0.495,189,0.755,190,0.435,199,1.301,201,5.913,207,1.875,208,3.255,213,3.062,217,2.519,219,3.255,224,2.35,225,3.302,298,3.823,329,2.53,360,1.188,382,1.519,395,1.488,396,1.067,411,3.255,415,2.305,429,3.643,436,4.482,447,1.768,525,1.317,756,1.234,819,4.693,825,3.55,831,6.211,868,2.722,897,5.141,954,3.095,1588,3.302,1603,2.74,1689,2.74,1875,2.883,1918,2.883,1925,3.923,2002,2.429,2033,2.621,2036,5.967,2116,5.119,2117,4.355,2172,5.558,2175,3.302,2182,2.155,2202,2.519,2270,2.74,2370,6.515,2384,6.211,2385,2.883,2386,6.673,2387,6.011,2388,6.002,2389,5.537,2390,3.666,2391,5.537,2392,6.673,2393,7.436,2394,3.666,2395,6.673,2396,3.666,2397,3.302,2398,3.666,2399,3.666,2400,3.302,2401,3.302,2402,3.302,2403,3.302,2404,2.883,2405,3.302,2406,4.585,2407,2.519,2408,3.302,2409,3.302,2410,4.988,2411,3.302,2412,3.062,2413,3.302,2414,3.302,2415,3.302,2416,3.302,2417,3.302,2418,4.625,2419,3.666,2420,3.666,2421,3.302,2422,3.666,2423,3.666,2424,3.666,2425,4.625,2426,3.666,2427,3.666,2428,5.537,2429,3.666,2430,3.666,2431,4.988,2432,2.883,2433,3.062,2434,2.519,2435,2.519,2436,4.988,2437,3.062,2438,4.988,2439,3.302,2440,4.625,2441,4.355,2442,3.302,2443,3.302,2444,3.302,2445,3.302,2446,3.302,2447,3.302,2448,3.302,2449,3.302,2450,3.302,2451,7.191,2452,3.302,2453,7.191,2454,3.302,2455,3.302,2456,3.302,2457,3.666,2458,3.666,2459,3.666,2460,5.537,2461,3.666,2462,3.666]],["title/classes/GlobalValidationPipe.html",[31,0.148,2463,4.38]],["body/classes/GlobalValidationPipe.html",[3,0.093,4,0.078,5,0.057,9,0.669,13,0.269,14,0.004,15,0.201,19,1.174,22,0.083,31,0.255,33,1.664,69,1.813,78,0.887,123,2.614,146,5.864,149,1.162,172,0.003,173,0.003,174,4.599,175,1.292,186,6.131,187,0.477,205,2.112,208,5.59,216,1.6,219,3.781,224,4.124,355,1.891,382,3.399,395,2.205,416,3.225,427,4.585,525,2.311,548,3.512,661,2.586,776,3.801,824,5.636,892,5.1,986,2.707,1076,2.666,1251,3.815,1727,4.821,1729,3.885,1731,3.685,2130,3.434,2213,4.42,2220,4.599,2463,6.852,2464,8.203,2465,6.433,2466,6.451,2467,7.388,2468,6.852,2469,9.031,2470,6.433,2471,5.864,2472,5.373,2473,6.433,2474,4.599,2475,6.433,2476,6.433,2477,6.433,2478,6.433,2479,5.373,2480,4.599,2481,4.42,2482,6.433,2483,4.808,2484,6.433,2485,5.794,2486,5.794,2487,5.059,2488,6.433,2489,6.433,2490,6.433]],["title/classes/GridElement.html",[31,0.148,1366,3.749]],["body/classes/GridElement.html",[0,0.278,3,0.037,4,0.031,5,0.023,8,0.254,9,0.432,10,1.744,12,0.919,13,0.285,14,0.004,15,0.129,19,0.464,22,0.102,31,0.117,35,2.558,37,2.419,69,0.51,76,1.491,78,1.388,114,0.625,128,1.629,143,3.317,148,1.997,149,1.428,168,3.65,172,0.002,173,0.002,175,0.51,181,2.996,182,0.734,187,0.704,189,1.115,190,0.703,199,1.564,308,3.049,337,2.517,395,0.683,396,1.532,415,3.035,421,2.169,477,2.267,509,2.141,529,1.38,586,2.124,587,2.267,649,2.876,669,3.114,684,2.776,756,2.551,928,6.809,929,1.9,930,2.752,954,2.321,1083,2.662,1085,3.48,1086,5.081,1094,1.999,1126,3.8,1133,2.752,1137,1.58,1265,3.669,1289,1.63,1290,1.9,1291,2.123,1293,2.123,1296,2.123,1297,1.999,1298,6,1300,2.123,1307,3.265,1310,2.853,1314,2.123,1317,2.123,1320,2.123,1321,5.369,1323,4.162,1324,6.616,1327,3.895,1329,2.123,1330,5.004,1333,2.123,1335,4.138,1336,2.123,1338,2.123,1340,2.123,1342,2.123,1344,2.123,1347,2.123,1349,1.685,1350,1.9,1351,1.9,1352,3.265,1353,1.747,1354,5.592,1355,5.074,1356,4.138,1357,5.592,1358,4.395,1359,3.468,1360,5.592,1361,3.468,1362,4.395,1363,2.123,1364,4.455,1365,2.968,1366,6.725,1367,4.395,1368,1.747,1369,3.468,1370,2.123,1371,3.468,1372,2.123,1373,2.692,1374,5.074,1375,2.853,1376,3.468,1377,2.123,1378,3.468,1379,3.468,1380,3.468,1381,3.468,1382,3.468,1383,2.123,1384,3.468,1385,1.999,1386,3.468,1387,2.123,1388,1.685,1389,3.468,1390,2.123,1391,2.123,1392,2.123,1393,3.468,1394,1.9,1395,2.123,1396,3.468,1397,5.592,1398,2.123,1399,1.685,1400,2.123,1401,2.123,1402,2.123,1403,2.123,1404,2.123,1405,2.123,1406,2.123,1407,3.103,1408,1.9,1409,2.123,1410,2.123,1411,3.468,1412,3.468,1413,1.999,1414,4.395,1415,2.123,1416,3.468,1417,2.123,1418,2.123,1419,2.123,1420,2.123,1421,2.123,1422,2.123,1423,2.123,1424,2.123,1425,2.123,1426,2.123,1427,2.123,1428,2.123,1429,2.123,1430,2.123,1431,2.123,1432,2.123,1433,2.123,1434,2.123,1435,2.123,1436,2.123,1437,2.123,1438,2.123,1439,2.123,1440,2.123,1441,2.123,1442,3.468,1443,2.123,1444,2.123,1445,2.123,1446,3.468,1447,2.662,1448,3.468,1449,2.123,1450,2.123,1451,2.123,1452,2.123,1453,2.123,1454,2.123,1455,2.123,1456,4.395,1457,2.123,1458,2.123,2491,3.739,2492,4.152,2493,4.152,2494,4.152,2495,4.152,2496,3.739,2497,3.739,2498,3.739,2499,2.542,2500,2.542,2501,2.542,2502,2.542,2503,2.542,2504,2.542,2505,2.29,2506,2.542,2507,2.542,2508,2.542,2509,2.542,2510,2.542,2511,2.542,2512,2.542,2513,2.542,2514,2.542,2515,2.542,2516,2.542,2517,2.542]],["title/interfaces/HtmlMailContent.html",[0,0.573,251,3.475]],["body/interfaces/HtmlMailContent.html",[0,1.13,2,1.965,3,0.099,4,0.083,5,0.061,8,0.259,9,0.886,12,1.039,13,0.254,14,0.004,22,0.088,33,2.029,114,0.522,172,0.003,173,0.003,190,0.67,235,5.644,236,4.691,237,6.152,238,5.852,239,4.691,240,4.691,241,5.644,242,4.691,243,4.691,244,4.691,245,6.441,246,4.525,247,4.691,248,5.644,249,6.872,250,6.872,251,6.152,252,4.878,253,4.525,254,4.691,255,4.691,256,4.691]],["title/interfaces/ICollectionFilePath.html",[0,0.573,1880,4.38]],["body/interfaces/ICollectionFilePath.html",[0,0.349,2,0.92,3,0.046,4,0.1,5,0.071,8,0.121,9,0.519,12,0.921,13,0.148,14,0.004,15,0.204,18,0.96,19,0.584,22,0.089,31,0.09,34,1.514,35,2.509,37,1.296,69,0.642,74,2.11,77,1.903,78,1.244,114,0.529,123,0.879,128,1.674,129,2.876,148,1.213,149,1.107,172,0.002,173,0.002,187,0.237,190,0.482,199,1.391,273,1.436,295,1.603,319,2.319,329,3.429,337,1.325,339,1.787,365,2.722,381,1.787,391,1.596,404,4.097,509,1.486,519,3.794,520,4.067,544,1.988,625,1.831,756,1.076,799,4.381,801,2.67,802,2.67,806,6.206,808,4.381,810,2.197,812,4.164,813,1.988,818,5.902,819,1.879,821,4.819,824,2.197,864,5.463,886,3.921,935,3.196,1076,3.295,1089,2.119,1126,1.603,1174,2.05,1176,2.05,1190,2.197,1240,3.196,1373,1.635,1601,3.564,1611,4.411,1710,2.119,1715,4.143,1716,6.677,1717,5.173,1720,5.173,1726,2.197,1727,2.93,1730,3.013,1739,4.438,1740,4.819,1753,6.871,1773,4.211,1779,4.164,1825,2.879,1826,2.879,1827,2.879,1829,2.879,1833,2.879,1835,2.879,1837,4.381,1839,2.879,1841,2.451,1842,5.52,1843,4.164,1844,4.673,1845,5.119,1847,2.879,1848,2.879,1850,2.197,1851,2.879,1853,4.49,1854,2.67,1855,4.58,1856,7.161,1857,2.879,1859,5.52,1861,5.52,1863,2.879,1864,2.67,1865,4.49,1866,2.879,1868,2.879,1869,2.879,1870,3.304,1871,2.67,1874,2.67,1875,2.514,1876,2.67,1877,1.603,1878,2.389,1879,2.67,1880,6.641,1881,7.174,1882,4.164,1883,2.879,1884,2.879,1885,4.49,1886,4.49,1887,4.49,1888,2.879,1889,2.879,1890,2.879,1891,2.879,1892,6.234,1893,2.879,1894,2.879,1895,2.879,1896,2.67,1897,2.879,1898,2.879,1899,2.879,1900,2.67,1901,2.879,1902,6.234,1903,4.819,1904,2.879,1905,2.879,1906,1.931,1907,1.988,1908,2.879,1909,4.49,1910,4.49,1911,2.879,1912,2.879,1913,2.879,1914,4.49,1915,2.879,1916,2.879,1917,2.879,1918,3.921,1919,4.49,1920,2.879,1921,4.49,1922,4.49,1923,2.879,1924,2.879,1925,2.93,1926,2.879,1927,2.879,1928,2.67,1929,2.879,1930,2.286,1931,2.67,1932,2.197,1933,1.931,1934,2.879,1935,2.67,1936,2.879,1937,2.879,1938,2.879,1939,2.879,1940,2.879,1941,3.426,1942,2.879,1943,2.879,1944,2.879,1945,2.879,1946,2.879,1947,4.49,1948,2.879,1949,2.879,1950,2.879,1951,2.514,1952,1.831,1953,2.879,1954,2.879,1955,2.879,1956,2.879,1957,3.564,1958,2.879,1959,3.921,1960,2.879,1961,2.879,1962,2.879,1963,2.879]],["title/interfaces/ICourseGroupProperties.html",[0,0.573,1044,4.38]],["body/interfaces/ICourseGroupProperties.html",[0,0.736,2,1.938,3,0.098,4,0.081,5,0.06,8,0.255,9,0.878,13,0.288,14,0.004,15,0.245,22,0.109,31,0.19,33,1.366,78,0.928,145,2.004,149,1.216,172,0.003,173,0.003,190,0.664,205,2.21,316,1.493,354,4.319,361,2.1,362,1.938,363,2.975,370,3.116,511,2.834,512,2.592,515,2.926,519,2.668,527,3.345,529,2.238,590,3.478,756,2.267,902,6.602,916,3.445,917,4.187,918,5.296,927,3.445,952,2.79,961,5.296,962,5.296,1037,4.463,1038,6.065,1039,3.858,1040,4.067,1043,3.518,1044,7.705,1045,5.625,1046,4.463,1047,4.463,1048,6.065,1049,6.065]],["title/interfaces/ICourseProperties.html",[0,0.573,934,4.124]],["body/interfaces/ICourseProperties.html",[0,0.513,2,1.352,3,0.068,4,0.057,5,0.042,8,0.334,9,0.871,12,0.972,13,0.299,14,0.004,15,0.225,22,0.086,31,0.132,33,0.953,37,1.221,69,0.943,78,0.915,114,0.747,128,1.078,145,2.056,149,1.391,172,0.003,173,0.003,190,0.818,205,1.542,216,2.28,316,1.174,360,2.971,361,1.169,362,1.352,370,2.451,380,2.385,391,3.081,395,2.07,428,2.838,509,1.4,511,1.977,512,1.808,515,2.042,519,1.861,525,1.688,527,3.315,529,1.562,555,2.356,590,1.542,670,2.225,692,5.026,756,2.592,782,4.128,888,3.013,899,3.925,900,3.563,901,6.943,902,6.074,903,7.409,904,7.409,905,6.066,906,4.232,908,4.232,910,4.232,912,3.013,913,2.225,916,3.94,917,4.788,918,3.695,920,4.232,922,4.232,927,2.404,928,4.401,929,3.512,930,3.114,931,3.695,932,2.692,933,2.838,934,6.056,935,4.257,936,4.747,937,4.232,938,3.695,939,4.232,940,3.228,941,4.232,942,4.232,943,3.925,944,3.512,945,3.512,946,3.359,947,4.232,948,3.228,949,3.925,950,3.695,951,3.512,952,1.947,953,2.692,954,2.626,955,4.232,956,3.711,957,4.747,958,3.359,959,3.114,960,3.013,961,3.695,962,3.695,963,4.232,964,4.232,965,4.232,966,4.232,967,5.981,968,4.232,969,5.981,970,6.056,971,5.981,972,3.695,973,4.232,974,4.232]],["title/interfaces/ICreateNews.html",[0,0.573,2518,3.919]],["body/interfaces/ICreateNews.html",[0,1.09,2,1.801,3,0.091,4,0.076,5,0.056,8,0.237,9,0.838,10,1.297,12,0.949,13,0.314,14,0.004,15,0.231,22,0.126,172,0.003,173,0.003,181,3.209,190,0.701,216,1.557,308,2.89,309,4.123,310,4.657,311,5.542,316,1.107,391,2.855,421,4.21,440,3.498,509,1.865,590,2.926,601,4.228,900,3.202,953,3.585,1104,4.789,1106,2.634,1107,4.56,1109,4.012,1112,5.14,1118,4.557,2518,6.023,2519,4.921,2520,7.259,2521,5.636,2522,5.636,2523,5.636,2524,4.3,2525,4.474,2526,4.474,2527,4.677,2528,5.636,2529,4.677,2530,4.3]],["title/interfaces/ICurrentUser.html",[0,0.573,982,2.863]],["body/interfaces/ICurrentUser.html",[0,0.983,2,1.834,3,0.093,4,0.077,5,0.057,8,0.241,9,0.848,10,2.077,12,1.046,13,0.303,14,0.004,15,0.157,22,0.122,76,3.405,114,0.487,145,1.965,172,0.003,173,0.003,312,3.663,323,6.413,390,3.329,391,2.611,393,3.26,913,4.824,982,4.452,2531,5.012,2532,6.282,2533,4.579,2534,5.404,2535,5.601,2536,4.053,2537,7.084,2538,6.095,2539,5.012,2540,5.83,2541,2.769,2542,2.769,2543,5.012]],["title/interfaces/IDashboardModelProperties.html",[0,0.573,1485,3.919]],["body/interfaces/IDashboardModelProperties.html",[0,0.82,2,1.616,3,0.082,4,0.068,5,0.05,8,0.213,9,0.781,10,2.081,12,0.921,13,0.252,14,0.004,15,0.231,22,0.116,31,0.212,33,1.523,37,2.346,69,1.128,76,2.697,123,2.064,145,2.108,149,1.356,172,0.003,173,0.003,181,3.077,190,0.59,205,2.464,316,1.495,354,2.873,360,2.926,361,1.867,362,1.616,363,2.481,366,5.421,370,3.121,511,2.364,515,2.44,519,2.974,527,2.974,529,1.867,590,2.464,669,3.491,684,2.566,756,1.89,916,3.84,927,2.873,952,3.111,1043,2.934,1130,2.934,1255,5.021,1374,4.726,1375,3.859,1459,6.202,1460,4.417,1461,6.746,1462,6.746,1463,4.417,1464,5.367,1466,4.417,1467,4.417,1472,3.722,1473,3.722,1474,4.417,1475,5.611,1476,4.813,1477,4.417,1478,5.903,1479,4.417,1480,4.417,1481,4.417,1482,4.417,1483,4.417,1484,4.198,1485,6.32,1486,6.031,1487,4.417,1488,4.015,1489,4.417,1490,4.417,1491,4.417,1492,4.417,1493,4.417]],["title/interfaces/IDashboardRepo.html",[0,0.573,1660,4.124]],["body/interfaces/IDashboardRepo.html",[0,0.604,2,1.59,3,0.08,4,0.067,5,0.049,8,0.209,10,1.539,13,0.25,14,0.004,15,0.22,18,1.429,19,1.009,22,0.096,31,0.209,71,2.293,74,2.522,76,3.221,77,2.816,78,1.328,114,0.641,128,1.646,129,2.899,145,1.145,149,0.998,172,0.003,173,0.003,182,1.313,187,0.622,189,1.143,190,0.66,199,1.467,211,2.482,308,3.321,316,0.977,327,1.274,354,2.827,361,1.375,363,2.441,380,1.985,407,3.338,522,2.887,541,3.663,547,5.102,553,3.964,555,2.771,557,3.797,563,5.763,573,4.346,954,3.089,1085,3.166,1255,5.143,1289,6.177,1327,4.761,1476,3.543,1552,5.309,1574,6.203,1639,4.616,1643,4.13,1644,4.616,1645,6.689,1646,6.203,1647,3.951,1649,7.554,1651,7.006,1655,4.978,1656,4.616,1657,6.203,1658,4.616,1659,4.616,1660,6.596,1661,4.978,1662,6.689,1663,4.978,1664,6.689,1665,4.978,1666,7.554,1667,4.978,1668,6.689,1669,4.978,1670,4.978,2544,5.526,2545,5.526,2546,5.526]],["title/interfaces/IErrorType.html",[0,0.573,832,4.124]],["body/interfaces/IErrorType.html",[0,0.843,2,2.219,3,0.112,4,0.093,5,0.069,8,0.292,9,0.954,12,1.024,13,0.316,14,0.004,22,0.099,71,3.023,172,0.003,173,0.003,181,3.454,209,7.244,832,7.214,2547,7.712,2548,7.712]],["title/interfaces/IFileProperties.html",[0,0.573,516,3.919]],["body/interfaces/IFileProperties.html",[0,0.654,2,1.723,3,0.087,4,0.072,5,0.07,8,0.227,9,0.815,12,0.969,13,0.299,14,0.004,15,0.227,22,0.119,31,0.246,33,1.771,123,2.152,145,1.991,172,0.003,173,0.003,190,0.728,205,1.965,316,1.637,360,3.195,361,1.489,362,1.723,370,2.89,391,2.964,502,5.996,503,4.708,504,4.548,505,7.179,506,6.158,509,1.784,511,2.519,512,2.304,513,6.108,514,4.708,515,2.601,516,6.522,517,6.867,518,6.867,519,3.457,520,4.464,521,3.722,522,4.09,523,5.02,524,3.968,525,2.813,526,4.708,527,2.371,528,4.708,529,1.99,530,4.708,531,4.708,532,4.708,533,4.708,534,4.708,535,4.708,536,4.708,537,4.708,538,4.708,539,3.722,540,3.429]],["title/interfaces/IFindOptions.html",[0,0.573,1160,3.082]],["body/interfaces/IFindOptions.html",[0,0.98,2,2.138,3,0.108,4,0.09,5,0.066,8,0.281,9,0.933,13,0.287,14,0.004,22,0.129,37,2.332,172,0.003,173,0.003,190,0.787,440,4.153,1003,3.725,1004,3.455,1106,3.127,1160,5.273,1184,5.342,1185,5.464,1221,4.488,1957,6.413,2549,5.843,2550,5.843,2551,7.87,2552,7.87,2553,7.054]],["title/interfaces/IGridElement.html",[0,0.573,1324,4.124]],["body/interfaces/IGridElement.html",[0,0.312,2,0.822,3,0.042,4,0.035,5,0.025,8,0.269,9,0.475,10,1.571,12,0.9,13,0.266,14,0.004,15,0.14,19,0.522,22,0.107,31,0.129,35,2.524,37,2.482,76,1.639,78,1.41,114,0.497,128,1.656,143,3.551,148,2.162,149,1.492,168,3.755,172,0.002,173,0.002,181,2.712,182,0.807,187,0.59,189,0.886,190,0.511,199,1.391,308,2.891,337,2.695,396,1.328,415,2.246,429,3.551,477,1.56,509,2.258,529,0.95,586,2.335,587,2.492,649,3.08,669,3.306,684,2.972,756,2.189,928,6.706,929,2.136,930,3.025,954,1.597,1083,2.926,1085,3.726,1086,5.274,1094,2.248,1126,3.261,1133,3.025,1137,1.777,1265,3.928,1289,1.832,1290,2.136,1291,2.387,1293,2.387,1296,2.387,1297,2.248,1298,6.33,1300,2.387,1307,3.589,1310,3.136,1314,2.387,1317,2.387,1320,2.387,1321,5.664,1323,4.419,1324,6.867,1327,4.17,1329,2.387,1330,5.313,1333,2.387,1335,4.48,1336,2.387,1338,2.387,1340,2.387,1342,2.387,1344,2.387,1347,2.387,1349,1.894,1350,2.136,1351,2.136,1352,3.589,1353,1.964,1354,5.938,1355,5.433,1356,3.589,1357,5.938,1358,4.758,1359,3.812,1360,5.938,1361,3.812,1362,4.758,1363,2.387,1364,4.178,1365,3.263,1366,6.49,1367,2.387,1368,1.964,1369,3.812,1370,2.387,1371,3.812,1372,2.387,1373,2.914,1374,4.881,1375,3.136,1376,3.812,1377,2.387,1378,2.387,1379,2.387,1380,2.387,1381,2.387,1382,3.812,1383,2.387,1384,3.812,1385,2.248,1386,3.812,1387,2.387,1388,1.894,1389,3.812,1390,2.387,1391,2.387,1392,2.387,1393,3.812,1394,2.136,1395,2.387,1396,3.812,1397,5.938,1398,2.387,1399,1.894,1400,2.387,1401,2.387,1402,2.387,1403,2.387,1404,2.387,1405,2.387,1406,2.387,1407,3.411,1408,2.136,1409,2.387,1410,2.387,1411,3.812,1412,3.812,1413,2.248,1414,4.758,1415,2.387,1416,3.812,1417,2.387,1418,2.387,1419,2.387,1420,2.387,1421,2.387,1422,2.387,1423,2.387,1424,2.387,1425,2.387,1426,2.387,1427,2.387,1428,2.387,1429,2.387,1430,2.387,1431,2.387,1432,2.387,1433,2.387,1434,2.387,1435,2.387,1436,2.387,1437,2.387,1438,2.387,1439,2.387,1440,2.387,1441,2.387,1442,3.812,1443,2.387,1444,2.387,1445,2.387,1446,3.812,1447,2.926,1448,3.812,1449,2.387,1450,2.387,1451,2.387,1452,2.387,1453,2.387,1454,2.387,1455,2.387,1456,4.758,1457,2.387,1458,2.387,2491,4.11,2496,4.11,2497,4.11,2498,4.11,2505,2.574,2554,2.858,2555,2.858,2556,2.858,2557,2.858,2558,2.858,2559,2.858,2560,2.858]],["title/interfaces/IImportUserProperties.html",[0,0.573,2561,4.124]],["body/interfaces/IImportUserProperties.html",[0,0.432,2,1.137,3,0.057,4,0.048,5,0.035,8,0.264,9,0.726,12,1.005,13,0.302,14,0.004,15,0.202,22,0.1,31,0.111,33,0.802,35,1.098,54,1.637,72,1.364,78,0.807,114,0.447,121,5.075,123,2.577,128,1.133,145,2.07,148,1.499,149,0.714,172,0.002,173,0.002,190,0.75,205,1.297,270,1.663,316,1.036,337,2.892,354,2.021,360,2.975,361,0.983,362,1.137,366,4.475,367,2.953,370,2.162,380,1.419,509,2.3,511,2.937,512,1.521,515,1.717,525,1.419,527,3.058,529,1.313,756,1.971,900,3.476,913,1.871,933,2.386,952,1.637,959,2.619,1106,3.469,1130,2.064,1364,2.322,1373,2.021,1374,3.274,1388,2.619,1464,4.187,1473,2.619,1488,4.187,1841,3.431,1877,4.782,2093,2.504,2127,2.619,2279,2.619,2289,4.215,2533,1.805,2541,3.582,2542,3.582,2561,5.489,2562,3.3,2563,3.3,2564,5.463,2565,4.722,2566,6.161,2567,6.482,2568,6.561,2569,4.979,2570,5.932,2571,5.285,2572,3.559,2573,2.263,2574,3.3,2575,3.3,2576,3.559,2577,3.641,2578,2.456,2579,3.355,2580,3.06,2581,3.274,2582,2.953,2583,2.953,2584,2.386,2585,3.559,2586,3.559,2587,3.559,2588,3.559,2589,3.559,2590,3.559,2591,3.559,2592,2.533,2593,2.619,2594,2.533,2595,2.619,2596,3.107,2597,3.107,2598,3.559,2599,3.559,2600,3.559,2601,3.559,2602,3.559,2603,3.559,2604,3.559,2605,4.606,2606,3.559,2607,4.606,2608,3.107,2609,5.275,2610,3.3,2611,3.755,2612,4.892,2613,3.559,2614,4.102,2615,3.559,2616,3.559,2617,3.3,2618,2.825,2619,2.825,2620,3.559,2621,3.559,2622,3.559,2623,3.559,2624,2.619,2625,3.3,2626,2.619,2627,3.107,2628,3.882,2629,4.606,2630,4.892,2631,5.275,2632,3.559,2633,3.3,2634,3.559,2635,3.559,2636,3.3,2637,3.559,2638,2.386,2639,4.606,2640,3.559]],["title/interfaces/IImportUserScope.html",[0,0.573,2641,3.749]],["body/interfaces/IImportUserScope.html",[0,0.905,2,1.879,3,0.095,4,0.079,5,0.058,8,0.247,9,0.862,12,1.02,13,0.309,14,0.004,15,0.16,22,0.117,114,0.499,172,0.003,173,0.003,175,1.92,190,0.846,509,2.71,515,2.837,1106,2.748,1730,3.21,1841,3.21,2536,4.089,2541,4.288,2542,4.288,2565,5.478,2571,6.132,2577,5.148,2578,4.06,2579,3.741,2614,5.621,2619,6.837,2641,5.921,2642,5.455,2643,7.148,2644,5.882,2645,6.513,2646,4.669]],["title/interfaces/ILearnroom.html",[0,0.573,928,3.475]],["body/interfaces/ILearnroom.html",[0,0.872,2,2.296,3,0.116,4,0.097,5,0.071,8,0.302,9,0.974,13,0.238,14,0.004,15,0.196,22,0.103,172,0.004,173,0.004,429,5.11,928,6.203,930,6.203,1351,5.964,2647,7.98,2648,10.245]],["title/interfaces/ILessonProperties.html",[0,0.573,2649,4.124]],["body/interfaces/ILessonProperties.html",[0,0.737,2,1.942,3,0.098,4,0.082,5,0.06,8,0.35,9,0.879,12,0.921,13,0.288,14,0.004,15,0.227,22,0.109,31,0.19,33,1.369,114,0.777,172,0.003,173,0.003,190,0.665,205,2.215,316,1.495,360,2.993,361,1.678,362,1.942,370,3.12,509,2.751,511,2.84,512,2.597,525,2.424,527,2.673,529,2.243,590,3.479,593,3.138,617,4.075,643,5.57,670,3.195,677,4.824,756,2.271,952,2.796,956,3.771,1039,3.865,1040,4.075,1043,3.525,1046,4.472,1047,4.472,2649,7.26,2650,6.077,2651,5.636,2652,7.614]],["title/interfaces/ILogger.html",[0,0.573,2388,3.749]],["body/interfaces/ILogger.html",[0,0.708,2,1.865,3,0.094,4,0.078,5,0.058,8,0.246,12,1.034,13,0.293,14,0.004,22,0.084,34,3.903,84,5.504,114,0.752,172,0.003,173,0.003,182,1.457,187,0.73,189,1.342,190,0.822,199,1.723,448,3.873,2054,6.336,2388,5.892,2653,6.481,2654,6.16,2655,5.892,2656,8.242,2657,8.242,2658,6.481,2659,6.481,2660,7.423,2661,7.57,2662,6.481,2663,7.423,2664,6.481,2665,6.481,2666,6.481,2667,7.423,2668,6.481,2669,5.838,2670,5.838]],["title/interfaces/INameMatch.html",[0,0.573,2646,3.749]],["body/interfaces/INameMatch.html",[0,0.963,2,2.075,3,0.105,4,0.087,5,0.064,8,0.273,9,0.917,12,0.996,13,0.262,14,0.004,15,0.177,22,0.123,114,0.757,172,0.003,173,0.003,175,1.448,190,0.693,509,2.149,515,3.134,1106,3.035,1730,4.331,1841,4.331,2536,3.084,2541,4.133,2542,4.133,2565,4.132,2571,5.648,2577,5.477,2578,4.484,2579,4.132,2614,4.24,2619,5.157,2641,5.157,2642,6.025,2643,6.585,2644,6.496,2645,6.928,2646,6.298]],["title/interfaces/INewsProperties.html",[0,0.573,1111,3.749]],["body/interfaces/INewsProperties.html",[0,0.455,2,1.199,3,0.061,4,0.106,5,0.037,8,0.158,9,0.634,10,0.863,12,0.978,13,0.3,14,0.004,15,0.229,22,0.109,31,0.223,33,1.607,43,3.233,44,3.289,45,2.937,46,3.127,47,3.289,48,3.76,78,0.574,114,0.465,123,1.145,145,1.97,149,1.3,172,0.002,173,0.002,181,3,190,0.733,205,1.367,308,3.131,309,4.051,310,3.76,312,1.871,316,1.49,330,2.978,340,2.224,360,2.946,361,1.036,362,1.199,370,2.248,377,3.608,382,2.982,391,2.536,415,1.439,477,2.274,504,4.166,511,1.753,512,1.603,515,1.81,519,2.412,521,2.59,522,3.181,523,4.615,527,2.851,529,1.385,540,2.386,590,1.999,601,3.952,679,2.516,684,1.903,900,3.556,912,3.904,913,1.972,932,2.386,933,2.516,960,2.671,1039,2.386,1043,2.176,1102,2.671,1103,3.113,1104,4.748,1106,2.563,1107,3.115,1108,3.113,1109,5.401,1110,3.113,1111,5.661,1112,4.599,1113,6.296,1114,4.782,1115,5.077,1116,5.583,1117,5.831,1118,4.561,1119,2.862,1120,3.113,1121,3.904,1122,3.113,1123,3.113,1124,2.862,1125,2.978,1126,2.088,1127,2.862,1128,2.671,1129,2.671,1130,3.181,1131,2.671,1132,3.113,1133,2.761,1134,3.113,1135,2.862,1136,3.113,1137,2.59,1138,3.113,1139,3.113,1140,3.113,1141,3.113,1142,2.862,1143,3.113,1144,2.862,1145,3.113,1146,3.113,1147,4.551,1148,4.231,1149,3.113,1150,4.551,1151,3.113,1152,3.113,1153,2.761,1154,2.761,1155,3.113]],["title/interfaces/INewsScope.html",[0,0.573,2529,3.919]],["body/interfaces/INewsScope.html",[0,1.096,2,1.837,3,0.093,4,0.077,5,0.057,8,0.242,9,0.849,10,1.323,12,0.777,13,0.31,14,0.004,15,0.233,22,0.126,172,0.003,173,0.003,181,2.177,190,0.788,216,1.588,308,2.918,309,4.176,310,4.701,311,5.897,316,1.129,391,2.045,421,4.265,440,3.569,509,2.682,590,2.954,601,2.868,900,3.233,953,3.658,1104,4.819,1106,2.687,1107,4.604,1109,4.094,1112,3.486,1118,4.503,2518,4.772,2519,5.022,2520,5.751,2521,5.751,2522,5.751,2523,5.751,2524,4.387,2525,4.565,2526,4.565,2527,4.772,2528,7.353,2529,6.102,2530,6.517]],["title/interfaces/IPagination.html",[0,0.573,2552,4.124]],["body/interfaces/IPagination.html",[0,0.98,2,2.138,3,0.108,4,0.09,5,0.066,8,0.281,9,0.933,13,0.287,14,0.004,22,0.129,37,2.705,172,0.003,173,0.003,190,0.787,440,4.153,1003,5.017,1004,4.654,1106,3.127,1160,4.367,1184,3.966,1185,4.057,1221,4.488,1957,6.413,2549,5.843,2550,5.843,2551,7.054,2552,7.578,2553,7.054]],["title/interfaces/IResolvedUser.html",[0,0.573,2537,3.919]],["body/interfaces/IResolvedUser.html",[0,0.976,2,1.807,3,0.091,4,0.076,5,0.056,8,0.238,9,0.84,10,2.104,12,1.044,13,0.312,14,0.004,15,0.154,22,0.122,76,2.256,114,0.48,145,1.302,172,0.003,173,0.003,312,4.381,323,4.939,390,4.924,391,3.197,393,4.822,913,4.727,982,3.429,2531,4.939,2532,4.163,2533,4.561,2534,4.163,2535,4.991,2536,3.818,2537,6.674,2538,4.694,2539,4.939,2540,6.739,2541,4.096,2542,4.096,2543,4.939]],["title/interfaces/IRole.html",[0,0.573,2540,3.749]],["body/interfaces/IRole.html",[0,1.012,2,1.957,3,0.099,4,0.082,5,0.061,8,0.258,9,0.884,10,2.142,12,1.041,13,0.289,14,0.004,15,0.167,22,0.125,76,2.443,114,0.741,145,1.409,172,0.003,173,0.003,312,3.816,323,5.348,390,3.552,391,2.72,393,3.479,913,4.387,982,3.713,2531,5.348,2532,4.507,2533,4.234,2534,4.507,2535,5.179,2536,3.961,2537,6.35,2538,5.083,2539,5.348,2540,6.624,2541,2.955,2542,2.955,2543,5.348]],["title/interfaces/IRoleProperties.html",[0,0.573,2671,4.38]],["body/interfaces/IRoleProperties.html",[0,0.689,2,1.814,3,0.092,4,0.076,5,0.056,8,0.339,9,0.842,12,0.98,13,0.281,14,0.004,15,0.199,22,0.104,31,0.178,33,1.279,72,2.177,114,0.763,123,1.733,149,1.616,172,0.003,173,0.003,190,0.742,205,2.069,312,4.385,316,1.582,340,3.365,360,2.9,361,1.568,362,1.814,370,2.988,380,2.265,429,3.442,462,3.611,512,2.426,519,2.497,527,2.497,529,2.095,670,2.985,693,4.178,916,4.576,927,4.576,952,2.612,956,3.523,1106,3.408,1251,2.932,1368,4.331,2127,4.178,2481,4.331,2533,4.79,2536,4.272,2671,7.472,2672,5.678,2673,5.678,2674,4.178,2675,4.957,2676,7.293,2677,4.957,2678,5.678,2679,4.957]],["title/interfaces/ISchoolProperties.html",[0,0.573,2680,4.38]],["body/interfaces/ISchoolProperties.html",[0,0.815,2,2.147,3,0.108,4,0.09,5,0.066,8,0.283,9,0.936,12,0.954,13,0.222,14,0.004,15,0.221,22,0.116,31,0.21,33,1.514,114,0.783,172,0.003,173,0.003,205,2.449,316,1.59,351,5.766,360,3.13,361,1.856,362,2.147,509,2.224,512,2.872,529,2.48,670,3.533,900,2.681,952,3.092,956,4.171,2524,5.127,2680,8.064,2681,6.721,2682,6.721]],["title/interfaces/IStorageProviderProperties.html",[0,0.573,2683,4.38]],["body/interfaces/IStorageProviderProperties.html",[0,0.73,2,1.923,3,0.097,4,0.081,5,0.059,8,0.253,9,0.874,12,1.032,13,0.296,14,0.004,15,0.226,22,0.108,31,0.188,33,1.356,172,0.003,173,0.003,190,0.661,205,2.193,316,1.486,360,3.222,361,1.662,362,1.923,370,3.101,512,2.572,513,3.928,527,2.647,529,2.221,952,2.769,2065,6.608,2243,8.301,2247,7.815,2249,7.977,2683,7.677,2684,6.018,2685,8.301,2686,6.018,2687,6.018,2688,6.018,2689,6.018,2690,6.018,2691,6.018,2692,6.018,2693,6.018,2694,6.018,2695,6.018]],["title/interfaces/ISubmissionProperties.html",[0,0.573,2696,4.124]],["body/interfaces/ISubmissionProperties.html",[0,0.522,2,1.374,3,0.069,4,0.058,5,0.086,8,0.181,9,0.699,12,0.935,13,0.305,14,0.004,15,0.232,22,0.087,31,0.135,33,0.969,37,2.309,78,0.926,128,1.091,145,2.003,149,1.403,172,0.003,173,0.003,190,0.799,205,1.568,308,2.178,316,1.188,337,3.22,360,2.733,361,1.188,362,1.374,370,2.479,477,2.608,509,1.423,511,2.01,512,1.838,515,2.075,519,1.892,527,3.65,529,1.588,591,4.256,756,2.838,916,3.975,917,2.97,927,2.444,932,2.736,952,1.979,1037,6.732,1130,2.495,1137,2.97,1447,4.307,2093,3.798,2580,4.813,2581,2.67,2696,6.111,2697,4.302,2698,6.64,2699,8.001,2700,7.42,2701,8.525,2702,8.525,2703,8.071,2704,4.302,2705,4.302,2706,4.302,2707,3.166,2708,2.97,2709,4.302,2710,4.302,2711,4.302,2712,4.302,2713,4.302,2714,6.051,2715,6.051,2716,4.302,2717,4.302,2718,4.302,2719,4.302,2720,4.302,2721,4.302,2722,3.415,2723,4.302,2724,6.999,2725,4.302,2726,6.051,2727,4.302,2728,5.555,2729,4.302,2730,4.302,2731,4.302,2732,4.302,2733,4.302]],["title/interfaces/ISystemProperties.html",[0,0.573,2734,4.38]],["body/interfaces/ISystemProperties.html",[0,0.746,2,1.965,3,0.099,4,0.083,5,0.061,8,0.259,9,0.886,12,1.021,13,0.311,14,0.004,15,0.209,22,0.11,31,0.192,33,1.385,172,0.003,173,0.003,190,0.764,205,2.241,211,3.067,316,1.506,360,3.151,361,1.698,362,1.965,370,3.143,512,2.628,529,2.269,678,4.691,952,2.829,1106,2.873,1877,3.423,2070,4.881,2093,3.641,2181,3.911,2273,4.691,2383,7.15,2481,4.691,2734,7.753,2735,6.149,2736,9.008,2737,6.149,2738,7.671,2739,6.149,2740,7.671,2741,6.149]],["title/interfaces/ITaskProperties.html",[0,0.573,2742,3.749]],["body/interfaces/ITaskProperties.html",[0,0.544,2,0.917,3,0.046,4,0.039,5,0.028,8,0.262,9,0.636,10,0.661,12,0.875,13,0.288,14,0.004,15,0.204,22,0.097,31,0.14,33,0.647,35,2.386,37,2.064,54,1.321,78,1.304,82,3.928,114,0.634,123,0.876,128,1.673,145,2.005,148,1.21,149,1.354,172,0.002,173,0.002,187,0.236,190,0.779,205,1.046,216,1.864,308,1.983,316,0.88,337,2.535,360,2.575,361,0.793,362,0.917,370,1.836,380,2.198,382,1.321,387,1.874,391,2.748,404,2.716,504,3.549,509,2.687,511,1.342,512,1.227,515,1.385,519,1.263,525,1.787,527,2.738,529,1.06,539,1.982,540,1.826,590,2.96,591,3.547,592,1.982,593,4.193,670,1.51,673,1.982,674,4.293,675,4.549,676,3.695,692,3.196,756,2.059,774,4.967,780,5.457,781,5.457,782,4.659,783,5.687,784,5.358,785,5.678,796,3.557,916,2.545,917,1.982,927,1.631,936,2.279,946,2.279,948,2.191,952,1.321,956,1.782,957,2.279,958,2.279,1039,1.826,1040,1.926,1043,1.665,1046,4.58,1047,2.113,1058,3.689,1091,2.279,1130,1.665,1232,2.113,1373,3.129,1472,2.113,1715,2.4,2011,5.157,2093,1.363,2302,2.191,2618,3.557,2674,2.113,2707,5.498,2708,4.659,2722,2.279,2728,3.557,2742,4.373,2743,2.383,2744,2.507,2745,2.507,2746,2.507,2747,2.507,2748,4.572,2749,4.811,2750,2.507,2751,2.507,2752,2.383,2753,2.507,2754,2.507,2755,2.507,2756,2.507,2757,2.507,2758,2.507,2759,2.507,2760,2.507,2761,2.507,2762,3.912,2763,3.912,2764,3.912,2765,2.507,2766,2.507,2767,2.507,2768,2.507,2769,2.507,2770,2.507,2771,2.507,2772,2.507,2773,2.507,2774,2.279,2775,2.507,2776,2.507,2777,3.912,2778,2.507,2779,3.912,2780,3.912,2781,2.507,2782,2.507,2783,2.507,2784,2.507,2785,2.507,2786,3.912,2787,2.507,2788,2.507,2789,2.507,2790,2.507,2791,3.912,2792,2.507,2793,2.507,2794,2.507,2795,2.507,2796,2.507,2797,5.165,2798,2.507,2799,2.507,2800,2.507,2801,2.279,2802,2.279,2803,3.912,2804,2.507,2805,2.507,2806,2.507,2807,2.507,2808,2.507,2809,3.912,2810,1.926,2811,2.191,2812,2.507,2813,2.507,2814,2.507,2815,2.507,2816,2.507,2817,3.093,2818,2.507,2819,2.507,2820,2.507,2821,3.912,2822,2.507,2823,2.507,2824,2.507,2825,2.507,2826,1.874,2827,1.702,2828,3.718,2829,2.507,2830,5.435,2831,2.507,2832,2.507,2833,2.507,2834,2.507,2835,2.507,2836,2.507,2837,2.507]],["title/interfaces/ITaskStatus.html",[0,0.573,774,3.475]],["body/interfaces/ITaskStatus.html",[0,0.562,2,0.958,3,0.048,4,0.04,5,0.03,8,0.268,9,0.654,10,0.69,12,0.802,13,0.277,14,0.004,15,0.207,22,0.099,31,0.145,33,0.676,35,2.126,37,2.451,54,1.38,78,1.317,82,3.991,114,0.54,123,0.915,128,1.682,145,1.926,148,1.263,149,1.381,172,0.002,173,0.002,187,0.247,205,1.093,216,1.28,308,2.039,316,0.91,337,2.606,360,2.621,361,0.828,362,0.958,370,1.899,380,2.259,382,1.38,387,1.957,391,2.265,404,2.809,504,2.436,509,2.879,511,1.401,512,1.281,515,1.447,519,1.319,525,1.848,527,2.802,529,1.107,539,2.07,540,1.907,590,2.51,591,3.603,592,2.07,593,3.556,670,1.577,673,2.07,674,2.947,675,3.602,676,3.798,692,3.285,756,2.117,774,5.358,780,6.139,781,6.139,782,5.412,783,6.157,784,6.224,785,6.388,796,3.678,916,2.632,917,2.07,927,1.703,936,2.38,946,2.38,948,2.288,952,1.38,956,1.861,957,2.38,958,2.38,1039,1.907,1040,2.011,1043,1.739,1046,4.688,1047,2.207,1058,3.776,1091,2.38,1130,1.739,1232,2.207,1373,3.217,1472,2.207,1715,2.482,2011,4.398,2093,1.424,2302,2.288,2618,3.678,2674,2.207,2707,4.688,2708,3.909,2722,2.38,2728,3.678,2742,3.678,2743,2.489,2744,2.618,2745,2.618,2746,2.618,2747,2.618,2748,4.7,2749,4.945,2750,2.618,2751,2.618,2752,2.489,2753,2.618,2754,2.618,2755,2.618,2756,2.618,2757,2.618,2758,2.618,2759,2.618,2760,2.618,2761,2.618,2762,4.046,2763,4.046,2764,4.046,2765,2.618,2766,2.618,2767,2.618,2768,2.618,2769,2.618,2770,2.618,2771,2.618,2772,2.618,2773,2.618,2774,2.38,2775,2.618,2776,2.618,2777,4.046,2778,2.618,2779,4.046,2780,4.046,2781,2.618,2782,2.618,2783,2.618,2784,2.618,2785,2.618,2786,4.046,2787,2.618,2788,2.618,2789,2.618,2790,2.618,2791,4.046,2792,2.618,2793,2.618,2794,2.618,2795,2.618,2796,2.618,2797,5.287,2798,2.618,2799,2.618,2800,2.618,2801,2.38,2802,2.38,2803,4.046,2804,2.618,2805,2.618,2806,2.618,2807,2.618,2808,2.618,2809,4.046,2810,2.011,2811,2.288,2812,2.618,2813,2.618,2814,2.618,2815,2.618,2816,2.618,2817,3.199,2818,2.618,2819,2.618,2820,2.618,2821,4.046,2822,2.618,2823,2.618,2824,2.618,2825,2.618,2826,1.957,2827,1.777,2828,3.846,2829,2.618,2830,5.563,2831,2.618,2832,2.618,2833,2.618,2834,2.618,2835,2.618,2836,2.618,2837,2.618]],["title/interfaces/ITeamProperties.html",[0,0.573,2838,4.38]],["body/interfaces/ITeamProperties.html",[0,0.821,2,2.161,3,0.109,4,0.091,5,0.067,8,0.285,9,0.939,12,0.956,13,0.224,14,0.004,15,0.222,22,0.116,31,0.212,33,1.524,114,0.785,172,0.003,173,0.003,205,2.465,316,1.597,351,5.789,360,2.927,361,1.868,362,2.161,512,2.891,529,2.497,670,3.557,952,3.112,956,4.198,1107,3.842,2525,5.37,2838,8.086,2839,6.765]],["title/interfaces/IUserProperties.html",[0,0.573,2840,4.124]],["body/interfaces/IUserProperties.html",[0,0.672,2,1.769,3,0.089,4,0.074,5,0.055,8,0.367,9,0.829,12,1.007,13,0.301,14,0.004,15,0.23,22,0.103,31,0.173,33,1.247,72,2.123,114,0.675,121,5.694,123,1.69,145,1.274,149,1.11,172,0.003,173,0.003,205,2.018,316,1.409,360,3.031,361,1.529,362,1.769,370,2.94,511,2.587,512,2.366,519,2.435,527,3.156,529,2.043,756,2.069,900,3.75,912,3.941,913,2.91,916,3.144,927,3.144,933,3.712,952,2.547,959,4.074,960,3.941,2127,4.074,2533,4.535,2535,3.435,2536,3.998,2541,4.209,2542,4.209,2592,3.941,2593,4.074,2594,3.941,2595,4.074,2596,4.834,2597,4.834,2675,4.834,2679,4.834,2840,6.95,2841,5.536,2842,5.536,2843,5.536,2844,5.536,2845,5.536]],["title/entities/ImportUser.html",[316,0.927,2584,3.167]],["body/entities/ImportUser.html",[0,0.393,3,0.052,4,0.044,5,0.032,8,0.25,9,0.687,12,0.973,13,0.295,14,0.004,15,0.195,22,0.095,31,0.101,33,0.731,35,1.001,54,2.264,72,1.243,78,0.753,114,0.417,121,4.656,123,2.698,128,1.072,145,2.034,148,1.366,149,0.65,172,0.002,173,0.002,187,0.712,190,0.579,205,1.182,270,1.515,316,0.966,322,1.125,337,2.735,354,1.842,355,2.214,360,3.182,361,0.896,362,1.036,366,5.079,367,2.691,370,2.016,380,1.293,395,1.774,396,1.922,509,1.967,511,2.778,512,1.386,515,1.564,525,1.962,527,3.303,529,1.197,756,2.222,900,3.206,913,2.587,933,2.175,952,1.492,959,2.386,1106,3.334,1130,2.854,1364,2.116,1373,1.842,1374,3.69,1388,2.386,1464,5.268,1473,2.386,1488,3.906,1841,3.622,1877,4.343,2093,2.336,2127,2.386,2279,2.386,2289,4.784,2533,2.496,2541,3.202,2542,3.202,2561,4.296,2562,8.114,2563,3.007,2564,4.884,2565,4.221,2566,5.507,2567,5.795,2568,6.381,2569,4.451,2570,5.443,2571,4.724,2572,3.243,2573,2.063,2574,3.007,2575,3.007,2576,3.243,2577,3.396,2578,2.238,2579,3.129,2580,2.854,2581,3.053,2582,2.691,2583,2.691,2584,3.3,2585,3.243,2586,3.243,2587,3.243,2588,3.243,2589,3.243,2590,3.243,2591,3.243,2592,2.308,2593,2.386,2594,2.308,2595,2.386,2596,2.832,2597,2.832,2598,3.243,2599,3.243,2600,3.243,2601,3.243,2602,3.243,2603,3.243,2604,3.243,2605,4.296,2606,3.243,2607,4.296,2608,2.832,2609,6.637,2610,3.007,2611,3.503,2612,4.563,2613,3.243,2614,3.88,2615,3.243,2616,3.243,2617,3.007,2618,2.574,2619,2.574,2620,3.243,2621,3.243,2622,3.243,2623,3.243,2624,2.386,2625,3.007,2626,3.621,2627,4.296,2628,4.884,2629,5.795,2630,5.514,2631,6.637,2632,3.243,2633,4.563,2634,3.243,2635,3.243,2636,3.007,2637,3.243,2638,2.175,2639,4.296,2640,3.243,2846,3.601,2847,3.601,2848,3.601,2849,3.601,2850,3.601,2851,3.601,2852,3.601,2853,3.601,2854,5.463,2855,3.601,2856,3.601,2857,5.463,2858,3.601,2859,3.601,2860,3.601,2861,3.601]],["title/controllers/ImportUserController.html",[975,2.242,2862,4.38]],["body/controllers/ImportUserController.html",[3,0.056,4,0.047,5,0.034,8,0.146,12,0.887,13,0.243,14,0.004,15,0.246,19,0.703,22,0.05,31,0.109,35,1.071,38,4.952,71,1.775,72,2.633,74,2.818,77,2.606,78,1.124,114,0.623,127,4.409,128,1.659,129,2.402,145,1.425,149,1.038,172,0.002,173,0.002,182,1.017,187,0.605,189,1.112,190,0.641,199,1.427,327,0.889,328,1.573,329,1.761,355,1.881,416,4.289,649,3.256,663,1.281,665,1.761,819,2.265,975,1.648,977,1.761,979,2.328,982,5.511,983,6.513,985,6.203,986,3.99,987,2.554,988,2.471,989,2.554,996,2.554,998,2.941,1003,3.823,1004,3.546,1058,3.069,1160,4.042,1167,3.843,1184,3.069,1269,3.031,1270,4.889,1280,5.14,1932,2.648,2584,2.328,2862,4.803,2863,4.469,2864,8.555,2865,3.854,2866,3.854,2867,6.194,2868,6.194,2869,6.194,2870,6.194,2871,6.194,2872,3.854,2873,5.996,2874,5.14,2875,5.996,2876,3.854,2877,3.854,2878,5.996,2879,5.75,2880,3.854,2881,3.854,2882,5.75,2883,3.854,2884,6.96,2885,3.854,2886,6.369,2887,5.75,2888,3.854,2889,3.854,2890,6.369,2891,5.75,2892,3.854,2893,6.877,2894,5.179,2895,3.031,2896,2.88,2897,3.854,2898,5.75,2899,3.854,2900,4.522,2901,5.75,2902,3.854,2903,3.219,2904,3.854,2905,3.854,2906,3.031,2907,3.854,2908,3.219,2909,5.699,2910,3.471,2911,3.471,2912,3.854,2913,3.854,2914,3.854,2915,3.854,2916,3.854,2917,3.471,2918,3.854,2919,3.854,2920,3.854,2921,3.854,2922,4.803,2923,3.854,2924,3.854,2925,3.854,2926,3.854,2927,3.854,2928,6.877,2929,3.854,2930,3.854,2931,3.854,2932,3.854,2933,3.854,2934,3.854,2935,3.854,2936,3.471,2937,3.854]],["title/classes/ImportUserFactory.html",[31,0.148,2938,4.38]],["body/classes/ImportUserFactory.html",[3,0.058,4,0.048,5,0.035,8,0.151,9,0.613,10,1.454,12,0.668,13,0.302,14,0.004,15,0.213,22,0.051,31,0.112,33,1.197,37,2.015,43,1.791,44,1.822,45,2.864,46,1.733,47,1.822,48,2.083,49,2.74,54,1.652,69,0.801,71,1.821,72,2.678,78,0.813,114,0.73,121,2.344,128,0.957,145,1.948,168,1.603,172,0.002,173,0.002,175,0.801,182,1.043,187,0.735,189,1.363,190,0.752,192,4.484,199,1.61,211,1.791,216,1.745,316,1.463,319,2.742,322,1.843,327,0.919,377,3.518,395,2.328,396,2.522,401,6.681,403,6.681,405,2.74,407,5.232,408,5.327,409,4.052,410,5.327,411,5.523,412,4.052,413,4.052,414,3.908,415,2.036,416,4.711,417,4.821,418,5.94,419,5.305,421,3.08,423,4.052,424,2.74,425,4.052,427,4.334,428,4.683,429,4.233,430,4.557,431,3.148,432,4.052,433,2.74,434,3.296,435,2.643,436,4.417,437,2.74,438,2.74,439,2.74,440,4.334,442,4.651,443,2.74,444,6.568,445,5.327,447,3.385,448,2.984,449,2.74,451,2.74,453,2.479,454,2.74,455,5.554,457,2.74,458,4.052,459,4.052,461,2.74,462,2.284,463,2.74,464,2.74,467,2.74,469,2.74,471,2.851,525,1.432,819,2.344,842,4.637,900,1.432,1009,2.851,1012,2.851,1013,2.851,1014,2.851,1015,2.851,1016,2.851,1017,2.851,1018,2.851,1019,2.851,1020,2.851,1021,2.851,1022,2.851,1023,3.136,1024,3.331,1025,2.851,1031,2.98,1035,3.136,1877,1.999,2541,1.733,2542,1.733,2561,3.136,2564,2.643,2565,2.284,2566,2.98,2567,3.136,2568,4.216,2569,2.408,2570,5.327,2571,2.557,2584,2.408,2938,5.861,2939,5.311,2940,3.591,2941,5.897,2942,3.987,2943,3.987,2944,5.311,2945,3.591,2946,3.591,2947,3.987,2948,3.591,2949,3.591,2950,3.591,2951,3.591,2952,3.591,2953,3.331,2954,3.136,2955,3.591]],["title/classes/ImportUserFilterQuery.html",[31,0.148,2873,4.124]],["body/classes/ImportUserFilterQuery.html",[3,0.077,4,0.064,5,0.047,8,0.202,9,0.754,12,0.968,13,0.296,14,0.004,15,0.202,22,0.106,31,0.204,123,1.992,145,2.057,172,0.003,173,0.003,175,1.914,187,0.723,190,0.824,355,2.248,365,3.956,509,2.159,662,4.615,663,1.772,665,2.436,1106,3.718,1249,6.362,1250,5.924,1251,2.479,1730,3.563,1841,4.048,2536,3.52,2541,3.578,2542,3.578,2565,4.716,2577,4.505,2578,3.314,2579,4.716,2580,3.786,2581,4.05,2614,4.84,2645,5.699,2863,5.183,2873,5.699,2956,7.416,2957,3.984,2958,5.33,2959,5.33,2960,4.979,2961,7.416,2962,5.33,2963,5.33,2964,5.33,2965,5.33,2966,4.801,2967,7.718,2968,5.33,2969,8.835,2970,5.33,2971,5.181,2972,5.33,2973,5.33,2974,7.718,2975,5.33,2976,5.33,2977,6.527,2978,5.699,2979,4.452,2980,8.323,2981,5.33,2982,5.33]],["title/classes/ImportUserListResponse.html",[31,0.148,2895,4.124]],["body/classes/ImportUserListResponse.html",[3,0.073,4,0.061,5,0.045,8,0.19,9,0.723,10,1.039,12,0.861,13,0.286,14,0.004,15,0.23,22,0.09,31,0.225,33,1.41,37,2.714,69,1.006,114,0.531,123,1.91,145,1.939,172,0.003,173,0.003,175,1.395,187,0.671,189,0.683,190,0.711,192,3.934,216,2.432,319,2.331,355,1.985,448,2.674,525,1.801,529,1.666,661,3.992,662,3.231,663,1.666,665,2.291,689,2.464,690,2.564,691,2.564,755,5.52,756,1.687,900,1.801,998,4.626,1003,4.69,1004,4.351,1075,5.638,1076,3.747,1077,4.319,1080,3.746,1081,3.746,1082,3.746,1092,3.116,1093,3.116,1106,2.11,1126,2.513,1250,5.52,1251,2.331,1730,2.464,1841,2.464,1844,2.946,1877,4.316,1907,3.116,2093,2.143,2273,4.774,2533,2.291,2534,3.322,2536,2.143,2541,3.019,2542,3.019,2564,3.322,2565,2.871,2569,3.028,2573,5.179,2578,3.116,2579,2.871,2580,2.618,2581,2.802,2592,3.214,2593,3.322,2594,3.214,2595,3.322,2607,3.942,2608,3.942,2611,3.214,2614,2.946,2863,3.629,2884,3.746,2895,5.464,2896,7.309,2956,5.193,2983,4.515,2984,5.013,2985,5.013,2986,4.967,2987,4.967,2988,5.479,2989,3.942,2990,4.515,2991,4.515,2992,3.942,2993,3.942,2994,3.942,2995,3.942,2996,4.515,2997,4.515,2998,6.258,2999,4.515,3000,4.515,3001,4.515,3002,3.322,3003,3.942]],["title/classes/ImportUserMapper.html",[31,0.148,2903,4.38]],["body/classes/ImportUserMapper.html",[3,0.075,4,0.063,5,0.046,8,0.197,13,0.242,14,0.004,15,0.238,19,0.948,22,0.067,31,0.146,78,1.204,114,0.621,123,1.957,128,1.487,145,1.476,148,1.971,149,1.286,172,0.003,173,0.003,175,1.043,182,1.259,187,0.602,189,1.107,190,0.639,199,1.421,224,3.33,327,1.198,395,1.396,415,3.455,649,3.371,705,4.078,756,2.735,776,3.678,986,2.186,1065,3.137,1350,5.321,2093,3.473,2129,4.185,2536,2.221,2541,2.257,2542,2.257,2551,6.873,2564,3.442,2565,2.975,2569,3.137,2584,5.713,2614,3.053,2641,6.249,2863,4.566,2873,6.873,2874,5.321,2875,6.873,2884,3.882,2896,6.532,2903,5.947,2906,4.084,2908,5.947,2936,4.678,3004,8.74,3005,5.194,3006,7.12,3007,7.12,3008,7.12,3009,5.194,3010,7.12,3011,5.194,3012,7.12,3013,5.194,3014,3.713,3015,4.338,3016,4.084,3017,4.338,3018,5.194,3019,6.786,3020,3.882,3021,5.194,3022,5.194,3023,5.194,3024,5.194,3025,4.338,3026,5.194,3027,5.194,3028,5.194,3029,5.194,3030,5.194,3031,5.194,3032,5.194,3033,4.678,3034,4.678,3035,7.12,3036,5.194,3037,5.194,3038,4.678,3039,5.194,3040,5.194,3041,4.678,3042,5.194,3043,5.194,3044,5.194,3045,5.194,3046,5.194,3047,5.194,3048,5.194,3049,5.194,3050,5.194,3051,5.194,3052,5.194,3053,5.194,3054,5.194,3055,5.194,3056,5.194,3057,5.194]],["title/classes/ImportUserMatchMapper.html",[31,0.148,3016,4.124]],["body/classes/ImportUserMatchMapper.html",[3,0.098,4,0.081,5,0.06,8,0.255,13,0.251,14,0.004,15,0.207,22,0.087,31,0.19,78,1.373,114,0.645,148,2.555,172,0.003,173,0.003,175,1.352,182,1.493,187,0.626,189,1.151,190,0.664,199,1.477,327,1.553,395,1.81,415,3.51,986,2.834,1065,4.067,1730,3.311,1841,4.897,2129,4.963,2570,6.983,2643,6.894,2863,4.818,2967,8.078,3016,6.64,3020,5.033,3058,6.734,3059,8.444,3060,8.444,3061,8.444,3062,6.734,3063,8.444,3064,6.734,3065,7.254,3066,6.734,3067,6.065,3068,6.734,3069,6.065,3070,6.734,3071,6.065,3072,4.814,3073,6.065,3074,6.734,3075,6.734,3076,6.734]],["title/modules/ImportUserModule.html",[257,1.425,3077,3.603]],["body/modules/ImportUserModule.html",[3,0.095,4,0.079,5,0.058,14,0.004,15,0.248,19,1.192,22,0.084,31,0.184,145,1.353,172,0.003,173,0.003,257,2.472,259,2.587,260,3.72,267,5.506,268,4.152,269,3.092,270,2.748,272,3.541,273,3.72,279,3.341,295,3.274,327,1.506,879,6.269,977,3.784,1374,3.65,1611,3.838,1984,3.411,2002,4.328,2471,4.669,2535,3.65,2573,3.741,2862,7.596,2863,3.411,2909,7.537,2910,5.882,2911,5.882,3077,7.388,3078,5.882,3079,5.882,3080,6.53,3081,7.537,3082,6.465,3083,5.455,3084,6.53,3085,6.53,3086,6.53,3087,5.882,3088,5.455,3089,5.455,3090,4.669,3091,5.455]],["title/injectables/ImportUserRepo.html",[18,1.009,3081,3.919]],["body/injectables/ImportUserRepo.html",[3,0.056,4,0.047,5,0.034,8,0.146,10,1.424,13,0.29,14,0.004,15,0.21,18,1.105,19,0.702,22,0.05,31,0.108,33,1.165,35,1.91,72,3.144,74,2.924,77,2.706,78,1.05,114,0.744,123,1.057,128,1.511,129,2.517,145,1.887,148,1.459,149,1.24,168,2.308,172,0.002,173,0.002,182,1.015,187,0.73,189,1.327,190,0.766,192,4.253,199,1.722,300,1.328,308,2.469,316,1.347,322,2.38,327,0.887,354,1.967,361,1.428,362,1.106,363,1.698,395,1.033,396,1.119,436,5.452,448,2.209,541,6.455,543,5.133,544,3.569,545,4.29,546,4.29,547,3.944,548,3.134,549,4.29,550,4.29,551,4.29,557,2.642,559,2.874,561,2.874,563,2.642,565,2.874,567,2.874,569,2.874,571,2.874,625,3.934,842,4.514,900,3.071,986,2.89,1004,1.788,1057,2.149,1058,3.064,1129,2.465,1160,5.206,1166,4.104,1167,2.578,1184,2.053,1185,3.134,1186,4.795,1187,3.024,1188,2.874,1189,2.874,1190,2.642,1192,2.874,1206,4.735,1844,2.26,1903,3.024,2093,3.893,2353,3.024,2354,3.024,2355,3.024,2356,3.024,2357,3.024,2358,3.024,2359,3.024,2360,3.024,2361,3.024,2533,2.623,2534,3.804,2535,2.149,2536,1.644,2583,4.29,2584,4.922,2641,5.445,3002,3.804,3034,3.463,3072,2.749,3081,4.29,3092,3.845,3093,4.514,3094,6.868,3095,6.868,3096,5.17,3097,4.514,3098,3.845,3099,3.845,3100,3.845,3101,3.845,3102,3.845,3103,5.74,3104,3.845,3105,4.795,3106,3.463,3107,5.737,3108,3.845,3109,3.845,3110,3.845,3111,3.845,3112,3.845,3113,3.845,3114,3.845,3115,3.845,3116,3.845,3117,3.845,3118,3.845,3119,3.845,3120,3.845,3121,3.845,3122,3.845,3123,3.845,3124,3.845,3125,3.845,3126,3.845,3127,3.845,3128,3.845,3129,5.17,3130,3.845,3131,5.74,3132,3.845,3133,3.845,3134,3.845,3135,3.845,3136,3.845]],["title/classes/ImportUserResponse.html",[31,0.148,2896,3.919]],["body/classes/ImportUserResponse.html",[3,0.066,4,0.055,5,0.04,8,0.172,9,0.675,10,1.345,12,0.938,13,0.293,14,0.004,15,0.229,22,0.084,31,0.213,33,0.923,37,1.967,69,0.914,114,0.578,123,1.784,145,2.087,172,0.002,173,0.002,175,1.519,187,0.72,189,0.62,190,0.595,216,2.416,319,3.018,355,2.2,395,1.223,396,1.325,477,2.484,525,2.332,529,2.157,657,4.334,661,3.904,662,3.018,663,1.512,665,2.079,689,2.237,690,3.32,691,3.32,900,1.635,998,2.328,1003,3.254,1004,3.018,1075,3.815,1076,2.689,1077,2.829,1092,2.829,1093,2.829,1106,2.731,1126,3.254,1229,6.32,1250,5.289,1251,2.116,1730,3.191,1841,3.719,1844,3.815,1877,4.679,1907,4.035,2093,1.945,2273,5.668,2533,2.966,2534,4.302,2536,1.945,2541,3.79,2542,3.79,2564,5.014,2565,4.334,2569,4.57,2573,5.643,2578,4.035,2579,3.718,2580,3.39,2581,3.628,2592,2.917,2593,3.016,2594,2.917,2595,3.016,2607,3.578,2608,3.578,2611,4.161,2614,4.447,2863,5.146,2884,5.655,2895,3.578,2896,7.132,2956,7.363,2983,4.098,2986,4.64,2987,5.409,2988,5.993,2989,3.578,2990,4.098,2991,4.098,2992,3.578,2993,3.578,2994,3.578,2995,3.578,2996,4.098,2997,4.098,2998,5.846,2999,4.098,3000,5.846,3001,5.846,3002,4.302,3003,5.104,3137,4.55,3138,4.55,3139,4.55,3140,4.55,3141,4.55,3142,4.55,3143,4.55,3144,4.55,3145,3.578,3146,4.55,3147,4.55]],["title/classes/ImportUserScope.html",[31,0.148,3107,4.38]],["body/classes/ImportUserScope.html",[3,0.053,4,0.044,5,0.033,8,0.139,9,0.576,10,1.148,12,0.918,13,0.283,14,0.004,15,0.196,22,0.047,31,0.103,33,1.124,35,2.067,72,2.568,76,1.989,78,1.344,114,0.745,123,2.467,128,1.415,145,1.807,148,2.532,149,1.205,168,1.474,172,0.002,173,0.002,175,1.112,182,0.979,187,0.715,189,1.276,190,0.736,192,3.049,199,1.638,224,2.35,308,1.188,327,0.845,337,1.519,354,1.875,361,0.912,363,1.619,380,3.016,395,1.794,396,1.612,525,1.317,625,3.172,900,3.131,913,2.622,986,1.543,1167,3.915,1171,6.8,1176,2.35,1198,3.959,1199,3.959,1203,3.959,1204,2.519,1205,2.74,1206,4.149,1207,2.74,1212,2.621,1213,3.805,1214,2.74,1730,2.722,1786,4.768,1841,3.925,2093,2.368,2129,4.693,2193,3.095,2536,1.567,2541,2.406,2542,2.406,2564,2.429,2565,3.823,2566,2.74,2569,4.031,2571,5.383,2577,2.279,2579,2.1,2580,1.915,2581,2.049,2582,2.74,2584,2.214,2611,3.55,2612,4.625,2614,2.155,2619,3.959,2633,5.574,2643,5.558,2826,3.255,2954,2.883,2960,3.805,3014,2.621,3020,2.74,3025,5.574,3067,3.302,3069,3.302,3071,3.302,3072,3.959,3107,8.361,3148,3.666,3149,5.537,3150,5.537,3151,5.537,3152,5.537,3153,5.537,3154,5.537,3155,5.537,3156,5.537,3157,5.537,3158,5.537,3159,3.666,3160,5.537,3161,3.666,3162,5.537,3163,3.666,3164,5.537,3165,3.666,3166,5.537,3167,5.537,3168,3.666,3169,5.537,3170,3.666,3171,5.537,3172,3.666,3173,5.537,3174,3.666,3175,5.537,3176,3.666,3177,2.883,3178,3.302,3179,3.666,3180,3.302,3181,3.666,3182,3.666,3183,5.537,3184,3.666,3185,6.211,3186,4.928,3187,5.848,3188,3.666,3189,5.558,3190,6.211,3191,5.848,3192,5.537,3193,5.537,3194,5.537,3195,5.537,3196,3.666,3197,3.666,3198,3.666,3199,3.666,3200,3.666,3201,3.666,3202,3.302,3203,3.302,3204,3.666,3205,5.537,3206,3.666,3207,3.666,3208,3.959,3209,3.666,3210,3.666,3211,3.302]],["title/classes/ImportUserSortingQuery.html",[31,0.148,2875,4.124]],["body/classes/ImportUserSortingQuery.html",[3,0.102,4,0.085,5,0.062,8,0.266,9,0.902,13,0.258,14,0.004,15,0.231,22,0.112,31,0.244,33,1.759,145,1.455,172,0.003,173,0.003,175,1.41,187,0.643,190,0.682,192,3.96,355,1.998,395,1.887,396,2.044,662,4.03,663,2.334,665,3.209,1106,3.647,1221,5.928,1249,5.556,1251,3.266,1693,5.02,2541,3.765,2542,3.765,2863,3.668,2874,7.536,2875,6.815,2956,5.248,2979,5.865,3015,8.422,3019,7.851,3212,6.325,3213,7.022,3214,7.022,3215,6.325,3216,7.022,3217,7.022]],["title/interfaces/InlineAttachment.html",[0,0.573,241,3.475]],["body/interfaces/InlineAttachment.html",[0,1.133,2,1.988,3,0.1,4,0.084,5,0.061,8,0.262,9,0.893,12,1.036,13,0.206,14,0.004,22,0.089,33,2.036,114,0.528,172,0.003,173,0.003,235,5.687,236,4.748,237,6.469,238,6.896,239,4.748,240,4.748,241,6.185,242,4.748,243,6.706,244,4.748,245,6.185,246,4.579,247,4.748,248,5.687,249,5.895,250,5.895,251,5.687,252,4.915,253,4.579,254,4.748,255,4.748,256,4.748]],["title/modules/InterceptorModule.html",[257,1.425,878,3.919]],["body/modules/InterceptorModule.html",[3,0.102,4,0.085,5,0.062,14,0.004,15,0.231,19,1.282,22,0.091,31,0.198,54,3.591,172,0.003,173,0.003,216,1.747,224,4.502,257,2.355,259,2.782,272,3.002,379,5.556,380,2.523,447,4.734,548,3.834,878,6.477,892,5.388,893,7.025,898,5.955,1076,3.591,1727,5.094,1907,5.388,1974,4.654,1984,4.527,2120,6.815,3218,7.022,3219,7.239,3220,6.477,3221,5.556,3222,9.815,3223,6.477,3224,7.806,3225,8.199,3226,4.502]],["title/injectables/JwtAuthGuard.html",[18,1.009,3227,4.38]],["body/injectables/JwtAuthGuard.html",[3,0.118,4,0.098,5,0.072,14,0.004,15,0.232,18,1.816,19,1.477,22,0.104,31,0.228,33,1.642,172,0.004,173,0.004,275,6.364,300,2.795,3227,7.882,3228,8.092,3229,8.092,3230,8.092,3231,8.092]],["title/interfaces/JwtConstants.html",[0,0.573,281,3.919]],["body/interfaces/JwtConstants.html",[0,0.76,2,2,3,0.101,4,0.084,5,0.062,8,0.263,9,0.896,12,1.007,13,0.291,14,0.004,15,0.171,22,0.111,76,2.497,123,1.911,128,1.398,172,0.003,173,0.003,281,7.31,298,3.982,380,2.497,421,4.499,1611,4.086,2532,5.708,3232,6.261,3233,9.055,3234,8.397,3235,7.757,3236,6.951,3237,6.951,3238,6.261,3239,7.193,3240,5.806,3241,5.467,3242,4.97,3243,6.951,3244,6.261,3245,6.261,3246,6.261,3247,6.951,3248,6.261,3249,5.467,3250,5.467,3251,6.951,3252,6.261,3253,6.951,3254,6.261,3255,6.261,3256,6.951,3257,6.951,3258,6.261,3259,6.261]],["title/interfaces/JwtPayload.html",[0,0.573,3260,4.38]],["body/interfaces/JwtPayload.html",[0,0.748,2,1.968,3,0.099,4,0.083,5,0.061,8,0.259,9,0.887,12,1.022,13,0.304,14,0.004,15,0.168,22,0.088,33,1.73,37,2.652,172,0.003,173,0.003,327,1.577,380,3.494,982,5.072,3244,8.76,3245,8.76,3246,8.76,3248,8.76,3249,7.648,3250,7.648,3254,7.68,3255,7.68,3260,7.122,3261,6.841,3262,6.841,3263,7.68]],["title/injectables/JwtStrategy.html",[18,1.009,265,4.124]],["body/injectables/JwtStrategy.html",[3,0.089,4,0.074,5,0.055,8,0.233,13,0.237,14,0.004,15,0.248,18,1.533,19,1.122,22,0.079,31,0.173,33,1.247,35,1.709,69,1.234,71,2.46,74,2.485,76,2.208,77,2.19,78,0.847,114,0.608,128,0.998,129,2.346,145,1.274,148,2.332,149,1.11,172,0.003,173,0.003,182,1.409,187,0.591,189,1.086,190,0.626,199,1.075,205,2.018,265,6.265,266,7.55,267,5.419,275,4.834,279,3.144,281,4.594,282,4.834,284,5.536,300,2.123,326,4.594,328,2.508,339,3.435,380,2.208,381,4.94,427,3.435,525,2.208,604,4.594,1176,3.941,2033,4.394,2036,4.594,2037,5.134,2479,5.134,2532,4.074,2536,2.628,3220,5.954,3250,6.265,3260,7.81,3264,6.147,3265,6.147,3266,6.147,3267,7.966,3268,6.147,3269,9.35,3270,6.147,3271,5.134,3272,5.536,3273,6.319,3274,6.147,3275,6.147,3276,6.147,3277,6.147,3278,6.147,3279,6.147,3280,6.147,3281,6.147,3282,6.147,3283,6.147,3284,5.536,3285,6.147,3286,6.147,3287,6.147,3288,6.147]],["title/injectables/JwtValidationAdapter.html",[18,1.009,266,3.919]],["body/injectables/JwtValidationAdapter.html",[3,0.085,4,0.071,5,0.052,8,0.222,10,1.903,12,1,13,0.23,14,0.004,15,0.19,18,1.487,19,1.071,22,0.076,31,0.165,43,3.47,44,3.53,45,3.153,46,3.357,47,3.53,48,4.035,49,5.308,74,2.755,77,2.524,114,0.59,128,1.254,129,2.275,172,0.003,173,0.003,182,1.366,187,0.573,189,1.053,190,0.608,199,1.352,216,1.459,266,5.774,300,2.025,329,3.53,379,5.887,381,4.318,434,5.132,525,2.107,807,5.523,1233,4.953,1729,4.666,1952,4.425,2479,6.453,2532,6.086,2534,5.12,2535,4.318,2574,6.453,3186,5.12,3250,8.066,3263,6.958,3273,7.248,3289,7.781,3290,5.282,3291,7.725,3292,7.725,3293,7.725,3294,5.864,3295,7.725,3296,5.864,3297,7.725,3298,6.453,3299,7.725,3300,6.958,3301,6.958,3302,5.864,3303,7.725,3304,5.864,3305,5.864,3306,5.864,3307,5.864,3308,5.864,3309,5.864]],["title/modules/LearnroomModule.html",[257,1.425,3310,3.603]],["body/modules/LearnroomModule.html",[3,0.088,4,0.074,5,0.054,14,0.004,15,0.254,19,1.112,22,0.079,31,0.172,172,0.003,173,0.003,257,2.153,259,2.413,260,3.558,267,5.406,268,3.971,269,2.885,270,2.564,272,3.386,273,2.737,279,3.117,594,5.98,595,6.562,596,6.562,602,7.078,703,7.4,709,5.089,976,7.351,977,3.619,990,7.4,991,5.487,1253,7.351,1271,7.4,1272,5.487,1552,7.078,1643,5.92,1984,3.182,2120,4.791,3310,7.484,3311,5.487,3312,5.487,3313,6.092,3314,7.351,3315,6.092,3316,6.092,3317,6.092,3318,5.487,3319,6.092]],["title/entities/Lesson.html",[316,0.927,593,2.439]],["body/entities/Lesson.html",[0,0.722,3,0.096,4,0.08,5,0.059,8,0.346,9,0.868,12,0.87,13,0.272,14,0.004,15,0.225,22,0.108,31,0.186,33,1.34,114,0.756,172,0.003,173,0.003,187,0.678,205,2.168,316,1.475,322,2.064,355,2.108,360,3.113,361,1.643,362,1.901,370,3.079,395,1.775,396,1.923,509,1.968,511,2.78,512,2.542,525,2.997,527,3.304,529,2.195,590,3.41,593,3.879,617,3.99,643,5.368,670,3.128,677,4.722,756,2.223,924,5.195,952,2.737,956,3.692,1039,4.778,1040,5.038,1043,3.45,1046,4.378,1047,4.378,2649,6.56,2650,5.949,2651,5.517,2652,7.513,3320,6.605,3321,6.605,3322,6.605,3323,6.605]],["title/classes/LessonFactory.html",[31,0.148,3324,4.38]],["body/classes/LessonFactory.html",[3,0.063,4,0.052,5,0.038,8,0.164,9,0.651,10,1.524,12,0.595,13,0.304,14,0.004,15,0.181,22,0.056,31,0.122,33,1.269,37,2.094,45,2.553,54,1.791,69,0.868,71,1.931,72,2.782,78,0.596,114,0.744,128,0.702,168,1.738,172,0.002,173,0.002,175,0.868,182,1.106,187,0.739,189,1.371,190,0.754,192,4.556,199,1.647,211,1.941,216,1.828,316,1.512,319,2.909,322,1.955,327,0.997,377,3.685,395,2.395,396,2.594,401,6.77,403,6.77,405,2.97,407,5.383,408,5.536,409,4.298,410,5.536,411,5.638,412,4.298,413,4.298,414,4.146,415,2.16,416,4.809,417,5.051,418,6.238,419,5.481,421,3.267,423,4.298,424,2.97,425,4.298,427,4.503,428,4.866,429,4.399,430,4.736,431,3.339,432,4.298,433,2.97,434,2.416,435,2.865,436,4.564,437,2.97,438,2.97,439,2.97,440,4.503,442,4.872,443,2.97,444,6.467,445,5.536,447,3.546,448,3.101,449,2.97,451,2.97,453,2.687,454,2.97,455,5.714,457,2.97,458,4.298,459,4.298,461,2.97,462,2.476,463,2.97,464,2.97,467,2.97,469,2.97,590,3.017,593,2.909,1006,3.399,1009,3.09,1012,3.09,1013,3.09,1014,3.09,1015,3.09,1016,3.09,1017,3.09,1018,3.09,1019,3.09,1020,3.09,1021,3.09,1022,3.09,1025,3.09,2649,3.399,3324,6.14,3325,3.893,3326,4.322,3327,3.893,3328,5.634,3329,3.893]],["title/injectables/LessonRepo.html",[18,1.009,595,3.475]],["body/injectables/LessonRepo.html",[3,0.096,4,0.08,5,0.059,8,0.252,13,0.287,14,0.004,15,0.236,18,1.611,19,1.213,22,0.086,31,0.187,69,1.334,71,2.051,74,2.578,77,2.301,78,0.916,114,0.639,128,1.359,129,2.466,149,1.2,172,0.003,173,0.003,182,1.48,187,0.621,189,1.141,190,0.658,199,1.162,300,2.294,308,3.12,327,1.532,328,2.711,361,1.652,363,2.934,421,4.373,448,2.557,509,1.98,552,4.013,553,5.137,555,4.197,590,2.181,593,3.893,595,5.549,617,5.057,625,5.251,643,3.713,756,2.236,1056,4.565,1057,3.713,1058,4.469,1167,3.76,1192,4.965,2651,6.993,3330,6.643,3331,6.643,3332,8.372,3333,6.643,3334,6.993,3335,6.643,3336,6.643,3337,6.643,3338,6.643,3339,6.643]],["title/classes/LessonScope.html",[31,0.148,3334,4.38]],["body/classes/LessonScope.html",[3,0.093,4,0.077,5,0.057,8,0.241,9,0.848,13,0.292,14,0.004,15,0.2,22,0.082,31,0.18,33,1.655,35,2.635,78,1.124,114,0.687,168,2.562,172,0.003,173,0.003,175,1.28,182,1.442,187,0.726,189,1.225,190,0.707,192,4.109,199,1.573,308,3.073,327,1.47,395,1.713,396,1.855,509,2.679,590,2.092,593,2.964,643,3.562,986,2.682,1056,5.603,1167,4.576,1171,5.83,1198,5.83,1199,5.83,1203,5.83,1204,4.379,1205,4.764,1206,5.59,1207,4.764,1212,4.557,1213,5.603,1214,4.764,3334,8.37,3340,8.992,3341,5.324,3342,7.344,3343,8.154,3344,7.344,3345,6.374,3346,8.154,3347,6.374,3348,8.154,3349,5.741]],["title/injectables/Logger.html",[18,1.009,897,3.004]],["body/injectables/Logger.html",[3,0.101,4,0.084,5,0.062,14,0.004,15,0.212,18,1.66,19,1.271,22,0.09,31,0.196,33,1.75,172,0.003,173,0.003,182,1.232,300,2.405,325,4.616,329,3.94,382,2.886,395,1.872,419,4.466,427,3.893,475,4.466,830,3.638,871,3.803,897,5.762,954,4.82,1076,3.573,1167,3.873,1952,3.99,1981,3.563,2054,5.505,2096,5.478,2131,4.33,2184,4.98,2213,4.786,2323,5.478,2388,6.997,2655,6.696,3350,6.965,3351,9.788,3352,6.965,3353,6.965,3354,5.206,3355,5.818,3356,5.818,3357,4.786,3358,7.767,3359,5.206,3360,6.965,3361,6.965,3362,5.206,3363,6.274,3364,4.786,3365,6.965,3366,6.965,3367,6.965]],["title/modules/LoggerModule.html",[257,1.425,879,3.26]],["body/modules/LoggerModule.html",[3,0.11,4,0.092,5,0.067,14,0.004,15,0.223,19,1.383,22,0.098,31,0.214,172,0.003,173,0.003,257,2.467,259,3.001,260,4.077,268,4.55,269,3.588,270,3.189,272,3.881,295,4.55,879,6.572,897,6.226,3368,6.824,3369,6.824,3370,6.824,3371,7.577,3372,7.577]],["title/interfaces/Mail.html",[0,0.573,252,3.004]],["body/interfaces/Mail.html",[0,1.115,2,1.844,3,0.093,4,0.078,5,0.057,8,0.243,9,0.851,12,1.044,13,0.299,14,0.004,22,0.083,33,1.927,114,0.49,172,0.003,173,0.003,190,0.812,235,5.424,236,4.404,237,5.975,238,5.623,239,4.404,240,4.404,241,5.424,242,4.404,243,4.404,244,4.404,245,5.975,246,4.248,247,4.404,248,6.295,249,5.623,250,5.623,251,6.295,252,5.749,253,6.295,254,6.526,255,6.526,256,6.526]],["title/interfaces/MailAttachment.html",[0,0.573,237,3.475]],["body/interfaces/MailAttachment.html",[0,1.129,2,1.953,3,0.099,4,0.082,5,0.06,8,0.257,9,0.883,12,1.042,13,0.276,14,0.004,22,0.088,33,1.968,114,0.741,172,0.003,173,0.003,235,5.624,236,4.663,237,6.428,238,5.83,239,6.664,240,6.664,241,5.624,242,4.663,243,4.663,244,4.663,245,6.135,246,4.498,247,4.663,248,5.624,249,5.83,250,5.83,251,5.624,252,4.86,253,4.498,254,4.663,255,4.663,256,4.663]],["title/interfaces/MailContent.html",[0,0.573,245,3.475]],["body/interfaces/MailContent.html",[0,1.129,2,1.957,3,0.099,4,0.082,5,0.061,8,0.258,9,0.884,12,1.034,13,0.253,14,0.004,22,0.088,33,1.969,114,0.519,172,0.003,173,0.003,190,0.668,235,6.432,236,4.673,237,6.141,238,5.837,239,4.673,240,4.673,241,6.432,242,4.673,243,4.673,244,4.673,245,6.432,246,6.432,247,6.668,248,5.631,249,5.837,250,5.837,251,5.631,252,4.866,253,4.507,254,4.673,255,4.673,256,4.673]],["title/modules/MailModule.html",[257,1.425,3373,3.749]],["body/modules/MailModule.html",[0,0.726,3,0.096,4,0.08,5,0.059,12,0.873,13,0.273,14,0.004,15,0.225,19,1.213,22,0.086,24,5.368,31,0.187,72,2.891,78,1.154,114,0.639,128,1.359,172,0.003,173,0.003,182,1.175,187,0.493,189,0.905,190,0.522,199,1.162,257,2.492,259,2.632,272,2.84,273,2.984,295,3.331,415,2.891,1984,3.47,1985,4.403,2105,4.965,2106,5.549,2109,5.877,3373,6.554,3374,5.225,3375,8.038,3376,6.643,3377,7.657,3378,4.965,3379,4.403,3380,6.851,3381,5.984,3382,5.752,3383,5.752,3384,6.584,3385,5.549,3386,5.549,3387,5.549,3388,5.549,3389,6.993,3390,5.225,3391,5.549,3392,5.984,3393,5.984,3394,5.984]],["title/interfaces/MailModuleOptions.html",[0,0.573,3375,4.38]],["body/interfaces/MailModuleOptions.html",[0,0.716,2,1.886,3,0.095,4,0.079,5,0.058,8,0.248,9,0.864,12,0.997,13,0.294,14,0.004,15,0.224,19,1.197,22,0.085,24,6.335,31,0.185,72,2.264,78,1.144,114,0.501,128,1.348,172,0.003,173,0.003,257,2.476,272,2.803,273,2.944,295,3.286,415,2.264,1984,3.424,1985,4.345,2106,4.345,2109,5.322,3373,5.935,3374,5.155,3375,7.61,3377,7.61,3378,4.899,3379,4.345,3380,6.809,3381,5.904,3382,6.789,3383,6.789,3384,6.528,3385,5.475,3386,5.475,3387,5.475,3388,5.475,3389,6.934,3390,5.155,3391,5.475,3392,5.904,3393,5.904,3394,5.904]],["title/injectables/MailService.html",[18,1.009,3380,3.919]],["body/injectables/MailService.html",[0,0.746,3,0.099,4,0.083,5,0.061,8,0.259,12,0.811,13,0.254,14,0.004,15,0.228,17,3.911,18,1.639,19,1.246,22,0.088,31,0.192,35,2.368,69,1.71,71,2.63,72,3.205,73,5.77,74,2.61,77,2.341,114,0.651,123,1.877,129,2.011,172,0.003,173,0.003,182,1.506,187,0.632,189,1.161,190,0.67,199,1.194,252,5.567,300,2.358,1076,3.529,3378,5.103,3379,4.525,3380,6.365,3382,4.691,3383,4.691,3395,6.149,3396,7.671,3397,6.827,3398,9.186,3399,8.118,3400,6.827,3401,7.671,3402,6.827,3403,6.149,3404,6.149,3405,6.149,3406,6.149,3407,5.703]],["title/interfaces/MailServiceOptions.html",[0,0.573,3399,4.38]],["body/interfaces/MailServiceOptions.html",[0,0.78,2,2.054,3,0.104,4,0.086,5,0.064,8,0.27,9,0.911,12,0.981,13,0.261,14,0.004,15,0.233,17,4.089,18,1.685,19,1.303,22,0.092,31,0.201,35,2.434,69,1.433,71,2.703,72,2.465,73,4.438,74,2.007,77,1.962,123,1.962,129,2.102,172,0.003,173,0.003,252,5.015,1076,2.958,3378,5.335,3379,4.731,3380,5.335,3382,6.783,3383,6.783,3395,6.429,3398,8.528,3399,7.909,3401,6.429,3403,6.429,3404,6.429,3405,6.429,3406,6.429,3407,5.962]],["title/modules/ManagementModule.html",[257,1.425,3408,3.919]],["body/modules/ManagementModule.html",[3,0.083,4,0.069,5,0.051,12,0.543,13,0.17,14,0.004,15,0.257,19,1.04,22,0.074,31,0.161,43,2.56,44,2.605,45,2.326,46,2.477,47,2.605,78,0.785,118,3.778,138,3.778,139,3.543,140,3.778,145,1.181,149,1.029,172,0.003,173,0.003,257,2.315,259,2.258,260,3.405,268,3.801,269,2.699,270,2.399,272,3.642,273,3.405,322,1.781,327,1.314,361,1.886,362,1.64,380,2.048,799,6.949,813,3.543,854,6.442,858,3.265,977,3.464,1349,3.778,1703,3.654,1704,5.962,1710,6.442,1724,4.482,1725,4.482,1743,7.115,1769,7.265,1773,6.678,1876,4.761,1877,2.858,1878,4.26,1879,4.761,1981,2.916,2182,3.35,2329,7.265,2377,5.962,2378,5.962,2379,5.962,3408,7.967,3409,5.134,3410,5.134,3411,5.7,3412,5.7,3413,4.26,3414,4.26,3415,5.962,3416,5.962,3417,5.666,3418,5.134,3419,5.7,3420,5.7,3421,5.7,3422,5.7,3423,5.7,3424,4.482,3425,5.7,3426,4.482,3427,4.075,3428,4.482,3429,5.962,3430,4.482,3431,4.482,3432,5.7]],["title/modules/MongoMemoryDatabaseModule.html",[257,1.425,3433,3.603]],["body/modules/MongoMemoryDatabaseModule.html",[3,0.076,4,0.063,5,0.047,13,0.213,14,0.004,15,0.238,17,4.099,19,0.955,22,0.113,31,0.147,35,2.268,69,1.051,71,1.616,72,3.028,74,2.582,77,2.242,78,1.208,114,0.4,128,1.539,129,2.704,172,0.003,173,0.003,182,0.925,187,0.531,189,0.713,190,0.412,199,1.252,257,2.383,259,2.073,272,2.237,273,2.351,295,2.624,322,1.635,327,1.207,337,2.168,361,1.78,362,1.506,368,4.115,380,1.88,415,2.471,434,4,448,2.014,472,3.355,813,5.708,892,3.253,932,2.998,954,2.925,1786,3.355,1974,3.468,1981,3.661,1984,3.738,2105,3.911,2106,4.743,2109,5.622,2193,2.925,2434,3.596,3186,3.468,3364,3.596,3413,6.553,3414,3.911,3417,5.349,3427,5.116,3433,5.604,3434,6.812,3435,6.938,3436,7.346,3437,4.713,3438,6.895,3439,5.233,3440,9.181,3441,5.233,3442,6.446,3443,6.446,3444,7.346,3445,8.538,3446,5.233,3447,6.446,3448,4.713,3449,6.446,3450,4.713,3451,4.713,3452,4.713,3453,4.371,3454,3.741,3455,3.911,3456,4.115,3457,4.371,3458,3.911,3459,4.115,3460,4.371,3461,4.371,3462,4.713,3463,4.713,3464,4.713,3465,4.713,3466,4.713,3467,4.713,3468,5.233,3469,3.741,3470,5.233,3471,4.713,3472,7.157,3473,6.446,3474,3.468,3475,4.115,3476,4.713,3477,5.233,3478,5.233]],["title/classes/MongoPatterns.html",[31,0.148,3177,4.124]],["body/classes/MongoPatterns.html",[3,0.106,4,0.088,5,0.065,8,0.277,9,0.924,14,0.004,22,0.094,31,0.206,112,3.988,172,0.003,173,0.003,175,1.467,187,0.542,382,3.679,395,1.963,396,2.126,415,3.303,548,4.847,1148,5.218,1715,4.282,2094,6.635,2096,6.982,2278,7.416,3177,6.982,3191,7.825,3479,7.304,3480,9.565,3481,8.878,3482,8.878,3483,7.304,3484,8.878,3485,6.347,3486,7.416,3487,7.416,3488,7.996,3489,8.878,3490,7.996]],["title/classes/MoveElementParams.html",[31,0.148,1260,4.124]],["body/classes/MoveElementParams.html",[3,0.102,4,0.085,5,0.063,8,0.267,9,0.904,13,0.259,14,0.004,15,0.213,22,0.112,31,0.265,37,2.448,112,3.167,143,3.849,172,0.003,173,0.003,175,1.416,187,0.644,216,1.754,355,2.003,661,4.058,662,4.04,663,2.343,776,2.967,827,4.259,1086,4.259,1249,5.57,1251,3.279,1255,3.764,1260,6.832,1265,4.259,1323,5.401,1364,4.144,1394,5.27,2526,5.041,3491,6.35,3492,8.432,3493,8.688,3494,7.051,3495,7.051,3496,8.482,3497,8.853,3498,5.889,3499,7.866,3500,5.889]],["title/classes/MoveElementPosition.html",[31,0.148,3492,4.38]],["body/classes/MoveElementPosition.html",[3,0.097,4,0.081,5,0.059,8,0.253,9,0.874,13,0.274,14,0.004,15,0.206,22,0.108,31,0.259,37,2.637,112,3.774,143,5.018,172,0.003,173,0.003,175,1.342,187,0.682,190,0.661,216,2.09,355,2.119,661,3.995,662,3.908,663,2.221,776,3.536,827,5.075,1086,5.075,1249,5.387,1251,3.108,1255,4.485,1260,5.255,1265,5.552,1323,5.995,1364,4.939,1394,6.87,2526,6.007,3491,6.018,3492,8.055,3496,8.278,3497,8.686,3498,5.581,3499,7.677,3500,7.018,3501,6.682,3502,6.682,3503,8.402,3504,6.682,3505,6.682]],["title/entities/News.html",[316,0.927,1118,2.355]],["body/entities/News.html",[0,0.422,3,0.056,4,0.099,5,0.034,8,0.146,9,0.599,10,1.194,12,0.947,13,0.301,14,0.004,15,0.224,22,0.105,31,0.215,33,1.549,43,3.093,44,3.147,45,2.81,46,2.992,47,3.147,48,3.597,78,0.532,114,0.583,123,1.062,145,1.839,149,1.244,172,0.002,173,0.002,181,2.919,187,0.723,190,0.717,205,1.268,308,2.475,309,4.38,310,3.987,312,3.093,316,1.444,322,1.207,330,2.761,340,3.074,355,2.187,360,3.194,361,0.961,362,1.111,370,2.126,377,3.452,382,2.854,391,2.205,395,1.038,396,1.124,415,1.334,477,2.109,504,3.866,511,1.626,512,1.487,515,1.678,519,3.024,521,2.401,522,3.008,523,4.415,527,3.392,529,1.284,540,2.213,590,1.89,601,3.846,679,2.333,684,1.765,900,3.408,912,4.415,913,2.727,932,2.213,933,2.333,960,2.476,1039,2.213,1043,2.018,1102,2.476,1103,2.887,1104,4.663,1106,2.898,1107,2.946,1108,2.887,1109,4.894,1110,2.887,1111,4.923,1112,4.168,1113,5.705,1114,4.159,1115,4.415,1116,5.059,1117,5.411,1118,4.636,1119,3.957,1120,4.304,1121,4.894,1122,4.304,1123,4.304,1124,3.957,1125,4.117,1126,2.887,1127,3.957,1128,3.692,1129,3.692,1130,3.987,1131,3.692,1132,4.304,1133,2.56,1134,2.887,1135,2.654,1136,2.887,1137,2.401,1138,2.887,1139,2.887,1140,2.887,1141,2.887,1142,2.654,1143,2.887,1144,2.654,1145,2.887,1146,2.887,1147,4.304,1148,4.048,1149,2.887,1150,4.304,1151,2.887,1152,2.887,1153,2.56,1154,2.56,1155,2.887,3506,3.863,3507,3.863,3508,3.863,3509,3.863,3510,3.863,3511,3.863,3512,3.863,3513,3.863,3514,3.863,3515,3.863,3516,3.863,3517,3.863]],["title/controllers/NewsController.html",[975,2.242,3518,4.38]],["body/controllers/NewsController.html",[3,0.059,4,0.049,5,0.036,8,0.155,9,0.625,10,1.245,12,0.9,13,0.249,14,0.004,15,0.228,19,0.746,22,0.053,31,0.115,38,3.137,40,2.952,71,1.262,74,2.846,77,2.643,78,1.152,114,0.638,127,4.564,128,1.561,129,2.462,145,1.921,146,2.922,149,0.738,172,0.002,173,0.002,182,1.062,187,0.62,189,1.139,190,0.657,199,1.462,316,1.062,327,0.942,328,1.668,329,2.744,340,3.205,355,1.927,416,4.381,663,1.358,665,1.867,776,3.802,900,2.819,975,1.747,977,1.867,979,2.468,982,5.563,983,5.03,985,6.223,986,2.996,987,2.708,988,2.62,989,2.708,996,2.708,1058,3.205,1107,3.072,1118,4.628,1127,4.126,1157,6.411,1167,3.755,1184,4.188,1224,5.864,1269,3.214,1270,5.359,1280,5.32,1284,6.247,1761,5.32,1844,3.53,1906,3.627,1925,4.612,1932,6.005,2180,2.808,2289,4.739,2626,5.54,2811,2.808,2922,3.413,3284,5.408,3518,5.016,3519,4.087,3520,5.32,3521,4.087,3522,4.087,3523,4.087,3524,6.005,3525,4.087,3526,7.871,3527,3.681,3528,5.864,3529,4.087,3530,5.016,3531,4.087,3532,6.005,3533,4.087,3534,5.408,3535,6.005,3536,4.087,3537,6.17,3538,6.005,3539,4.087,3540,4.891,3541,3.681,3542,2.922,3543,3.054,3544,3.214,3545,3.681,3546,3.681,3547,4.087,3548,3.681,3549,3.681,3550,3.681,3551,3.681,3552,6.554,3553,3.413,3554,3.681,3555,3.681,3556,3.681,3557,3.681,3558,3.413,3559,4.087,3560,4.087,3561,4.087,3562,4.087,3563,6.005,3564,4.087]],["title/classes/NewsFilterQuery.html",[31,0.148,3528,3.919]],["body/classes/NewsFilterQuery.html",[3,0.09,4,0.075,5,0.055,8,0.236,9,0.835,10,1.665,12,0.894,13,0.265,14,0.004,15,0.231,22,0.08,31,0.226,40,3.948,128,1.01,172,0.003,173,0.003,175,1.25,187,0.659,190,0.783,216,2.419,309,4.975,310,4.645,311,5.528,327,1.435,355,2.05,509,2.393,625,4.6,662,4.369,663,2.069,689,3.06,690,4.108,691,4.108,1104,4.618,1106,2.619,1118,4.473,1237,5.518,1240,6.023,1243,6.645,1244,6.316,1245,5.149,1249,6.023,1250,5.149,1251,2.895,1252,4.45,2530,6.109,2627,6.316,2957,4.652,2966,5.606,2978,6.316,2986,5.741,3003,6.316,3528,6.002,3565,8.462,3566,6.224,3567,6.002,3568,6.224,3569,6.224,3570,6.224,3571,6.224,3572,6.224,3573,7.233,3574,6.224,3575,6.224]],["title/classes/NewsListResponse.html",[31,0.148,3542,3.749]],["body/classes/NewsListResponse.html",[3,0.063,4,0.108,5,0.039,8,0.164,9,0.652,10,1.849,12,0.897,13,0.286,14,0.004,15,0.219,22,0.081,31,0.177,33,1.272,37,2.656,40,2.13,69,1.258,114,0.562,128,1.195,145,1.672,172,0.002,173,0.002,175,0.87,181,2.75,187,0.635,189,0.59,190,0.673,192,3.686,216,2.557,309,3.766,310,3.273,311,4.576,312,3.623,316,1.745,319,2.015,327,0.999,355,1.86,390,3.845,391,2.357,393,3.766,431,2.313,448,2.412,475,2.778,504,3.486,539,2.694,590,1.422,601,3.623,661,4.08,662,3.751,663,1.44,665,1.98,669,2.015,671,2.872,672,2.872,679,2.617,684,1.98,689,3.081,690,3.206,691,3.206,755,5.172,756,1.458,900,3.204,959,2.872,998,4.378,1003,4.472,1004,4.148,1075,5.407,1076,3.546,1077,3.896,1080,3.238,1081,3.238,1082,3.238,1092,2.694,1093,2.694,1104,4.522,1106,2.637,1107,2.217,1112,4.019,1114,2.617,1115,2.778,1116,4.879,1117,4.879,1118,4.433,1126,3.142,1135,2.977,1142,2.977,1144,2.977,1232,2.872,1233,2.778,1234,3.407,1235,3.238,1240,4.018,1243,4.684,1244,3.407,1245,2.778,1252,3.098,1447,2.778,1850,2.977,2472,3.619,2626,2.872,2677,3.407,3542,4.48,3543,7.039,3576,3.407,3577,4.333,3578,4.333,3579,4.684,3580,6.149,3581,4.684,3582,5.502,3583,5.234,3584,5.234,3585,3.903,3586,3.903,3587,3.903,3588,3.903,3589,3.903,3590,3.619,3591,3.407,3592,5.234]],["title/classes/NewsMapper.html",[31,0.148,3544,4.124]],["body/classes/NewsMapper.html",[3,0.076,4,0.087,5,0.047,8,0.199,10,1.086,13,0.261,14,0.004,15,0.226,22,0.068,31,0.148,78,1.209,114,0.67,128,1.576,145,1.086,149,0.947,172,0.003,173,0.003,175,1.052,181,2.783,182,1.267,187,0.651,189,1.196,190,0.69,199,1.535,309,4.176,310,4.264,311,5.074,312,2.354,327,1.208,390,2.738,393,2.681,415,3.564,416,3.592,504,3.392,601,3.666,705,4.104,776,4.16,900,2.932,986,3.015,1065,3.166,1104,4.313,1112,4.456,1116,3.474,1118,4.126,1224,6.557,1288,6.453,2518,6.1,2527,6.1,2529,6.557,2530,3.601,3528,6.557,3537,6.9,3543,6.557,3544,5.634,3593,5.241,3594,7.164,3595,7.164,3596,7.164,3597,7.164,3598,5.241,3599,7.164,3600,5.241,3601,7.164,3602,5.241,3603,7.164,3604,5.241,3605,4.378,3606,8.162,3607,4.378,3608,4.378,3609,5.241,3610,5.241,3611,5.241,3612,4.721,3613,5.241,3614,5.241,3615,4.721,3616,5.241,3617,5.241,3618,4.721,3619,4.721,3620,5.241,3621,5.241,3622,4.721,3623,5.241,3624,5.241,3625,5.241,3626,7.164,3627,5.241,3628,5.241,3629,5.241,3630,5.241,3631,7.164,3632,7.164,3633,5.241,3634,5.241]],["title/modules/NewsModule.html",[257,1.425,3635,3.603]],["body/modules/NewsModule.html",[3,0.094,4,0.078,5,0.057,14,0.004,15,0.251,19,1.179,22,0.083,31,0.182,172,0.003,173,0.003,257,2.235,259,2.558,260,3.693,268,4.122,269,3.057,270,2.717,272,3.515,273,3.693,279,3.303,286,7.188,295,4.122,375,3.795,879,6.251,977,3.757,1786,4.14,2002,4.279,2471,4.616,2626,4.279,3087,7.406,3518,7.955,3540,7.316,3541,5.816,3635,7.35,3636,5.816,3637,6.457,3638,5.816,3639,5.816,3640,7.188,3641,6.457,3642,7.556,3643,6.457,3644,6.457,3645,6.457,3646,6.457,3647,6.457,3648,4.616,3649,4.437,3650,6.457,3651,6.457,3652,6.457,3653,4.826]],["title/injectables/NewsRepo.html",[18,1.009,3640,3.749]],["body/injectables/NewsRepo.html",[3,0.055,4,0.046,5,0.034,8,0.144,9,0.591,10,1.178,13,0.289,14,0.004,15,0.217,18,1.094,19,0.693,22,0.049,31,0.107,33,1.153,35,1.894,72,3.203,74,2.882,77,2.636,78,0.939,114,0.732,128,1.506,129,2.671,149,0.685,168,2.285,172,0.002,173,0.002,182,1.005,187,0.728,189,1.307,190,0.754,192,4.238,199,1.699,300,1.31,308,2.453,316,1.338,319,3.169,322,2.365,327,0.875,329,3.114,361,1.414,362,1.092,395,1.02,396,1.105,436,5.441,448,2.187,504,2.691,509,2.03,521,4.704,541,6.437,543,5.093,544,3.533,545,4.248,546,4.248,547,3.905,548,3.103,549,4.248,550,4.248,551,4.248,557,2.607,559,2.836,561,2.836,563,2.607,565,2.836,567,2.836,569,2.836,571,2.836,587,4.131,806,4.248,843,5.015,900,3.056,932,2.174,986,2.392,1057,2.121,1058,3.034,1102,4.369,1104,4.559,1117,3.767,1118,4.41,1127,5.199,1153,4.516,1154,4.516,1160,5.184,1166,4.063,1167,2.553,1184,3.034,1185,3.103,1190,2.607,1206,4.704,1228,3.533,1730,1.865,2164,5.093,2193,3.177,2345,6.137,2353,2.984,2354,2.984,2355,2.984,2356,2.984,2357,2.984,2358,2.984,2359,2.984,2360,2.984,2361,2.984,2370,5.093,2372,5.119,2530,5.199,2960,2.607,3105,6.32,3106,3.418,3520,5.093,3567,2.836,3640,4.063,3654,3.795,3655,5.683,3656,5.119,3657,3.795,3658,5.655,3659,3.795,3660,5.683,3661,3.795,3662,7.566,3663,5.119,3664,3.795,3665,3.795,3666,3.795,3667,4.747,3668,3.795,3669,3.795,3670,5.683,3671,3.795,3672,5.683,3673,3.795,3674,3.795,3675,5.683,3676,3.795,3677,3.795,3678,3.17,3679,3.795,3680,2.292,3681,6.814,3682,3.795,3683,3.795,3684,3.795]],["title/classes/NewsResponse.html",[31,0.148,3543,3.919]],["body/classes/NewsResponse.html",[3,0.052,4,0.113,5,0.032,8,0.137,9,0.569,10,1.963,12,0.95,13,0.306,14,0.004,15,0.205,22,0.071,31,0.154,33,0.731,37,1.717,40,2.688,69,1.098,114,0.605,128,1.072,145,1.796,172,0.002,173,0.002,175,0.724,181,2.955,187,0.74,189,0.491,190,0.682,216,2.543,309,4.054,310,3.45,311,4.927,312,3.893,316,1.824,319,2.543,327,0.831,355,2.283,390,4.14,391,2.671,393,4.054,431,2.918,475,3.505,504,3.753,539,2.241,590,1.795,601,3.893,653,1.968,657,5.34,661,3.946,662,3.429,663,1.198,665,1.647,669,1.676,671,2.389,672,2.389,679,2.177,684,1.647,689,3.247,690,3.772,691,3.772,900,3.349,959,2.389,998,1.844,1003,2.741,1004,2.543,1075,3.214,1076,2.265,1077,2.241,1092,2.241,1093,2.241,1104,4.721,1106,2.78,1107,2.797,1112,4.327,1114,2.177,1115,2.311,1116,5.252,1117,5.252,1118,4.632,1126,3.696,1135,2.477,1142,2.477,1144,2.477,1232,3.624,1233,3.505,1234,4.3,1235,4.086,1240,4.727,1243,4.937,1244,4.3,1245,3.505,1252,2.577,1447,2.311,1850,3.757,2472,4.567,2626,3.624,2677,2.835,3145,4.3,3542,2.577,3543,6.673,3576,2.835,3579,4.937,3580,5.517,3581,4.937,3582,5.923,3583,5.517,3584,5.517,3585,3.246,3586,3.246,3587,3.246,3588,3.246,3589,3.246,3590,4.567,3591,4.3,3592,6.158,3685,3.604,3686,3.604,3687,3.604,3688,3.604,3689,3.604,3690,3.604,3691,3.604,3692,3.604,3693,3.604,3694,3.604,3695,3.604,3696,3.604,3697,2.835,3698,3.604,3699,3.604,3700,3.604,3701,3.604,3702,3.604,3703,3.604]],["title/classes/NewsScope.html",[31,0.148,3667,4.38]],["body/classes/NewsScope.html",[3,0.082,4,0.069,5,0.05,8,0.215,9,0.786,13,0.281,14,0.004,15,0.232,22,0.073,31,0.16,33,1.533,35,2.519,78,1.171,114,0.649,128,1.227,149,1.024,168,2.28,172,0.003,173,0.003,175,1.139,182,1.336,187,0.7,189,1.158,190,0.668,192,3.883,199,1.487,309,2.901,314,3.526,327,1.308,337,2.35,361,1.411,362,1.632,391,1.816,395,1.524,396,1.651,509,2.532,649,2.686,986,3.814,1104,2.788,1112,3.097,1118,3.394,1167,4.45,1171,5.402,1174,5.448,1198,5.402,1199,5.402,1203,5.402,1204,3.897,1205,4.239,1206,5.867,1207,4.239,1212,4.055,1213,5.192,1214,4.239,1373,2.901,1730,2.788,2095,3.897,2164,4.239,2169,5.108,2366,4.737,2530,5.192,3208,5.402,3211,6.806,3341,4.737,3658,6.773,3667,8.107,3704,7.653,3705,7.556,3706,7.556,3707,7.556,3708,5.672,3709,7.556,3710,5.672,3711,4.737,3712,5.672,3713,5.672,3714,5.672,3715,5.672,3716,5.672,3717,5.672,3718,5.672,3719,5.672]],["title/interfaces/NewsTargetFilter.html",[0,0.573,3658,3.919]],["body/interfaces/NewsTargetFilter.html",[0,0.852,2,2.244,3,0.113,4,0.094,5,0.069,8,0.295,9,0.961,13,0.275,14,0.004,15,0.192,22,0.101,172,0.003,173,0.003,308,3.297,309,5.203,310,5.312,327,1.798,1104,3.834,2168,8.494,3658,6.902,3704,7.025,3720,7.8]],["title/injectables/NewsUc.html",[18,1.009,3540,3.603]],["body/injectables/NewsUc.html",[3,0.04,4,0.033,5,0.024,8,0.104,9,0.459,10,1.786,12,0.527,13,0.267,14,0.004,15,0.183,18,0.849,19,0.5,22,0.035,31,0.077,35,2.631,40,1.346,43,1.23,44,1.251,45,1.117,46,1.19,54,2.294,69,0.55,72,2.567,74,2.815,76,3.628,77,2.542,78,1.187,114,0.658,128,1.565,129,2.9,145,1.541,149,1,172,0.002,173,0.002,182,0.78,187,0.653,189,1.174,190,0.678,199,1.618,216,0.681,279,1.401,292,5.181,300,0.946,308,3.382,309,4.408,310,3.315,311,4.86,312,4.096,327,0.631,328,1.117,329,4.225,337,1.135,339,1.53,340,4.341,391,2.032,395,1.87,396,1.611,415,1.912,416,4.208,448,1.697,475,1.755,477,2.407,504,1.296,509,1.649,548,1.495,756,1.863,819,1.609,897,3.635,900,0.984,913,3.294,1057,1.53,1104,3.42,1112,4.439,1118,4.654,1124,3.029,1160,3.73,1167,3.652,1184,1.462,1221,1.654,1223,2.046,1237,4.36,1245,1.755,1252,1.957,1351,2.046,1601,3.152,1731,1.568,1925,2.592,1932,3.029,2002,1.815,2004,2.466,2031,2.466,2032,2.466,2093,2.367,2136,3.971,2145,3.971,2164,5.843,2168,3.683,2193,2.464,2253,2.153,2388,3.957,2518,4.743,2527,4.743,2529,5.843,2530,4.78,2535,2.464,2624,3.669,2626,3.669,2917,3.971,3359,3.295,3540,3.029,3553,3.683,3612,2.466,3615,2.466,3618,5.715,3619,5.715,3622,3.971,3640,5.315,3658,3.295,3721,2.466,3722,4.409,3723,4.409,3724,4.409,3725,4.409,3726,5.535,3727,2.738,3728,4.409,3729,4.409,3730,2.738,3731,4.409,3732,2.738,3733,4.409,3734,2.738,3735,4.409,3736,5.535,3737,4.985,3738,4.409,3739,2.738,3740,4.409,3741,2.738,3742,2.738,3743,4.409,3744,2.738,3745,3.295,3746,2.738,3747,5.535,3748,2.738,3749,4.409,3750,2.738,3751,2.738,3752,3.683,3753,5.3,3754,2.738,3755,2.466,3756,2.738,3757,6.346,3758,2.738,3759,4.409,3760,2.738,3761,4.409,3762,2.738,3763,5.715,3764,2.738,3765,2.738,3766,2.738,3767,4.409,3768,2.738,3769,2.738,3770,4.409,3771,2.738,3772,2.738,3773,5.535,3774,2.738,3775,3.971,3776,2.738,3777,2.738,3778,2.738,3779,2.738,3780,2.738,3781,2.738,3782,2.466,3783,4.409,3784,2.738,3785,2.738,3786,2.738,3787,4.409,3788,2.738,3789,2.738,3790,2.738,3791,2.738,3792,2.738]],["title/interfaces/Options.html",[0,0.573,72,1.811]],["body/interfaces/Options.html",[0,0.62,2,1.632,3,0.082,4,0.069,5,0.05,8,0.215,9,0.786,12,0.809,13,0.225,14,0.004,15,0.209,22,0.117,31,0.16,35,1.577,72,3.352,74,2.125,77,2.077,78,1.041,123,1.559,128,1.608,129,2.225,172,0.003,173,0.003,190,0.742,216,2.414,269,2.686,328,2.315,462,4.328,509,2.532,519,3.845,520,2.901,525,3.053,756,2.86,854,5.008,856,4.239,858,5.191,859,4.737,868,2.788,1076,2.35,1611,3.334,1704,4.46,1705,5.108,1706,5.108,1710,5.632,1712,4.737,1713,5.108,1715,4.371,1716,7.083,1717,5.647,1719,5.108,1720,5.647,1722,6.939,1723,4.737,1724,4.46,1725,4.46,1726,6.669,1727,4.441,1728,7.653,1729,5.132,1730,4.455,1731,4.328,1732,6.806,1733,6.806,1734,5.108,1735,6.311,1736,6.806,1737,6.806,1738,4.737,1739,3.636,1740,5.942,1741,5.108,1742,5.108]],["title/classes/PaginationQuery.html",[31,0.148,983,3.362]],["body/classes/PaginationQuery.html",[3,0.099,4,0.083,5,0.061,8,0.259,9,0.887,13,0.254,14,0.004,15,0.209,22,0.088,31,0.24,37,2.652,172,0.003,173,0.003,175,1.374,187,0.632,190,0.765,216,2.121,337,3.533,355,1.966,395,2.292,396,2.482,587,4.655,662,4.321,663,2.274,983,5.467,1003,4.658,1004,4.654,1236,7.122,1251,3.181,1373,4.362,2485,7.68,3498,5.714,3499,5.714,3793,6.841,3794,8.123,3795,6.841,3796,5.012,3797,8.527,3798,8.527,3799,8.527,3800,6.841,3801,6.841,3802,7.68,3803,6.841,3804,9.29,3805,6.841,3806,6.841,3807,6.841]],["title/classes/PaginationResponse.html",[31,0.148,1075,3.082]],["body/classes/PaginationResponse.html",[3,0.094,4,0.078,5,0.058,8,0.246,9,0.857,13,0.308,14,0.004,15,0.159,22,0.084,31,0.183,37,2.84,69,1.301,114,0.495,172,0.003,173,0.003,175,1.301,187,0.73,189,0.883,190,0.774,355,2.199,436,4.4,448,3.172,522,4.982,661,4.046,663,2.154,755,5.81,998,5.037,1003,5.127,1004,4.756,1075,4.844,1076,3.755,3808,6.481,3809,8.242,3810,6.481,3811,6.481,3812,6.481,3813,6.481,3814,6.481,3815,6.481,3816,6.481,3817,6.481]],["title/injectables/ParseObjectIdPipe.html",[18,1.009,1270,3.362]],["body/injectables/ParseObjectIdPipe.html",[3,0.105,4,0.088,5,0.065,8,0.275,12,0.969,13,0.216,14,0.004,15,0.234,18,1.702,19,1.325,22,0.094,31,0.205,78,1,114,0.554,128,1.178,148,2.754,149,1.311,172,0.003,173,0.003,182,1.564,187,0.538,189,0.989,190,0.571,199,1.27,300,2.507,308,2.353,327,1.674,354,4.524,361,1.805,363,3.206,396,2.574,431,4.721,954,4.057,1270,5.67,1350,5.425,2474,6.323,3818,8.844,3819,6.537,3820,8.844,3821,7.258,3822,8.844,3823,8.844,3824,7.258,3825,7.258]],["title/classes/PatchGroupParams.html",[31,0.148,1266,4.38]],["body/classes/PatchGroupParams.html",[3,0.107,4,0.089,5,0.066,8,0.28,9,0.93,12,0.851,13,0.22,14,0.004,15,0.219,22,0.095,31,0.252,114,0.683,172,0.003,173,0.003,175,1.482,181,3.486,187,0.547,216,2.223,355,1.702,661,3.592,663,2.454,776,3.76,1085,5.72,1086,6.031,1229,6.166,1250,5.729,1251,3.433,1266,7.464,1364,5.87,3826,7.382,3827,8.935,3828,7.382]],["title/injectables/PermissionService.html",[18,1.009,3082,3.362]],["body/injectables/PermissionService.html",[3,0.076,4,0.063,5,0.047,8,0.198,12,0.974,13,0.261,14,0.004,15,0.2,18,1.377,19,0.955,22,0.068,31,0.147,35,2.268,78,1.208,114,0.67,123,1.439,128,1.491,145,2.203,148,2.716,149,1.473,168,2.877,172,0.003,173,0.003,182,1.265,187,0.65,189,1.195,190,0.69,199,1.606,257,1.422,300,1.807,312,4.359,326,5.349,329,2.391,337,3.38,344,6.446,380,1.88,509,2.133,525,1.88,597,4.115,1148,4.207,1716,5.116,2195,4.917,2206,4.917,2297,6.446,2433,5.978,2533,4.007,2536,4.053,2539,4.115,2674,3.468,2774,5.831,3082,4.588,3186,4.743,3678,5.978,3775,8.741,3829,5.233,3830,7.157,3831,7.157,3832,7.157,3833,7.157,3834,7.157,3835,5.233,3836,7.157,3837,5.233,3838,7.157,3839,5.233,3840,7.157,3841,6.446,3842,7.157,3843,5.978,3844,6.446,3845,7.157,3846,5.233,3847,5.233,3848,5.233,3849,4.115,3850,5.233,3851,5.233,3852,7.157,3853,5.233,3854,7.157,3855,5.233,3856,5.233,3857,5.233,3858,5.233,3859,5.233,3860,5.233,3861,5.233,3862,5.233,3863,6.446,3864,5.233]],["title/interfaces/PlainTextMailContent.html",[0,0.573,248,3.475]],["body/interfaces/PlainTextMailContent.html",[0,1.13,2,1.965,3,0.099,4,0.083,5,0.061,8,0.259,9,0.886,12,1.039,13,0.254,14,0.004,22,0.088,33,2.029,114,0.522,172,0.003,173,0.003,190,0.67,235,5.644,236,4.691,237,6.152,238,5.852,239,4.691,240,4.691,241,5.644,242,4.691,243,4.691,244,4.691,245,6.441,246,4.525,247,4.691,248,6.152,249,6.872,250,6.872,251,5.644,252,4.878,253,4.525,254,4.691,255,4.691,256,4.691]],["title/classes/ResolvedUser.html",[31,0.148,3865,4.124]],["body/classes/ResolvedUser.html",[3,0.093,4,0.077,5,0.057,8,0.242,9,0.849,10,1.865,12,1,13,0.31,14,0.004,15,0.201,22,0.105,31,0.18,172,0.003,173,0.003,175,1.282,187,0.765,312,4.042,327,1.472,355,2.379,390,4.701,391,3.037,393,4.604,661,4.352,663,2.122,913,4.261,954,4.563,2533,4.112,2536,3.848,2537,6.726,2540,5.837,2541,3.91,2542,3.91,3865,6.42,3866,5.751,3867,6.385,3868,6.385,3869,6.385,3870,6.385,3871,6.385,3872,6.385,3873,6.385,3874,6.385]],["title/classes/ResolvedUserMapper.html",[31,0.148,3875,4.38]],["body/classes/ResolvedUserMapper.html",[3,0.098,4,0.081,5,0.06,8,0.255,10,1.393,12,0.877,13,0.2,14,0.004,15,0.207,22,0.087,31,0.189,78,0.926,114,0.644,128,1.091,145,2.063,149,1.214,172,0.003,173,0.003,175,1.349,182,1.491,187,0.498,189,0.916,190,0.529,199,1.176,312,4.341,327,1.55,395,1.806,396,1.956,415,3.183,705,4.831,776,3.549,1065,4.06,1542,6.054,2533,4.211,2536,4.132,2817,4.178,3038,6.054,3041,6.054,3865,7.6,3875,7.044,3876,6.721,3877,7.044,3878,6.721,3879,5.614,3880,5.614,3881,6.721,3882,6.721,3883,6.721,3884,6.721,3885,6.721,3886,6.721,3887,6.721,3888,6.721,3889,6.054,3890,6.721,3891,6.721]],["title/classes/RocketChatError.html",[31,0.148,32,4.124]],["body/classes/RocketChatError.html",[0,0.524,1,6.407,3,0.044,4,0.037,5,0.027,6,5.475,7,2.39,8,0.115,9,0.498,10,1.518,11,6.119,12,1.019,13,0.232,14,0.004,15,0.118,16,4.955,17,1.741,18,0.922,19,0.555,20,2.39,21,2.272,22,0.077,23,3.581,24,3.072,25,3.426,26,3.426,27,3.426,28,3.426,29,6.407,30,1.889,31,0.135,32,3.768,33,0.972,34,2.809,35,2.733,36,4.955,37,1.245,38,4.066,39,2.173,40,1.494,41,4.955,42,4.002,43,3.995,44,4.064,45,3.63,46,3.864,47,4.064,48,4.738,49,6.232,50,6.121,51,4.955,52,2.272,53,2.539,54,2.458,55,2.539,56,2.39,57,2.539,58,2.539,59,2.539,60,3.315,61,2.539,62,2.539,63,4.955,64,2.539,65,2.539,66,2.539,67,2.539,68,2.39,69,0.962,70,2.539,71,1.48,72,1.05,73,6.064,74,2.832,75,2.539,76,3.556,77,2.768,78,1.401,79,2.539,80,6.805,81,2.539,82,2.269,83,2.539,84,1.699,85,2.539,86,2.539,87,2.539,88,2.539,89,2.539,90,2.539,91,2.539,92,2.539,93,6.805,94,6.805,95,2.539,96,2.539,97,2.539,98,2.539,99,2.539,100,2.539,101,2.539,102,2.539,103,2.539,104,2.539,105,2.539,106,2.539,107,2.539,108,2.539,109,2.539,110,4.002,111,4.002,112,2.152,113,2.539,114,0.514,115,2.539,116,2.539,117,2.539,118,3.931,119,4.665,120,2.539,121,1.786,122,2.39,123,0.835,124,2.539,125,2.539,126,2.539,127,4.316,128,1.323,129,2.158,130,4.002,131,2.539,132,4.002,133,4.002,134,2.539,135,2.539,136,2.539,137,4.955,138,3.931,139,3.688,140,3.931,141,2.539,142,3.768,143,3.676,144,3.768,145,1.229,146,4.241,147,4.955,148,2.78,149,1.323,150,4.955,151,4.955,152,4.955,153,2.539,154,2.539,155,2.539,156,2.539,157,6.119,158,4.955,159,4.955,160,4.955,161,2.539,162,4.002,163,4.002,164,2.539,165,2.539,166,2.539,167,2.539,168,1.222,169,2.539,170,4.002,171,3.768,172,0.002,173,0.002,175,0.61,187,0.499,189,0.414,190,0.239,1603,2.272,3892,4.792,3893,3.039,3894,3.039]],["title/modules/RocketChatModule.html",[257,1.425,3895,3.919]],["body/modules/RocketChatModule.html",[3,0.106,4,0.088,5,0.065,6,6.635,13,0.218,14,0.004,15,0.218,19,1.333,22,0.094,23,7.436,31,0.206,68,7.522,72,3.066,78,1.007,114,0.558,172,0.003,173,0.003,182,1.292,187,0.542,189,0.995,190,0.574,199,1.278,257,2.6,259,2.893,272,3.123,273,3.281,295,3.662,415,3.066,1984,3.816,1985,4.841,2105,5.459,2106,5.884,2109,6.132,3895,7.149,3896,7.304,3897,7.304,3898,8.878,3899,7.304,3900,7.304,3901,7.304]],["title/interfaces/RocketChatOptions.html",[0,0.573,23,3.919]],["body/interfaces/RocketChatOptions.html",[0,0.523,1,6.402,2,0.873,3,0.044,4,0.037,5,0.027,6,2.268,7,2.386,8,0.115,9,0.498,10,1.517,11,6.114,12,1.028,13,0.242,14,0.004,15,0.118,16,4.949,17,1.738,18,0.921,19,0.554,20,2.386,21,2.268,22,0.076,23,4.428,24,4.693,25,5.233,26,5.233,27,5.233,28,5.233,29,6.116,30,1.886,31,0.135,32,2.386,33,0.616,34,2.266,35,2.563,36,2.534,37,0.789,38,3.513,39,2.169,40,1.492,41,2.534,42,2.534,43,3.993,44,4.062,45,3.628,46,3.862,47,4.062,48,4.736,49,6.229,50,6.116,51,4.949,52,2.268,53,2.534,54,2.455,55,2.534,56,2.386,57,2.534,58,2.534,59,2.534,60,3.312,61,2.534,62,2.534,63,4.949,64,2.534,65,2.534,66,2.534,67,2.534,68,2.386,69,0.609,70,2.534,71,1.478,72,1.048,73,6.062,74,2.831,75,2.534,76,3.554,77,2.767,78,1.4,79,2.534,80,6.8,81,2.534,82,2.266,83,2.534,84,1.696,85,2.534,86,2.534,87,2.534,88,2.534,89,2.534,90,2.534,91,2.534,92,2.534,93,6.8,94,6.8,95,2.534,96,2.534,97,2.534,98,2.534,99,2.534,100,2.534,101,2.534,102,2.534,103,2.534,104,2.534,105,2.534,106,2.534,107,2.534,108,2.534,109,2.534,110,3.997,111,3.997,112,2.149,113,2.534,114,0.453,115,2.534,116,2.534,117,2.534,118,3.927,119,4.659,120,2.534,121,1.783,122,2.386,123,0.834,124,2.534,125,2.534,126,2.534,127,4.312,128,1.322,129,2.156,130,3.997,131,2.534,132,3.997,133,3.997,134,2.534,135,2.534,136,2.534,137,4.949,138,3.927,139,3.683,140,3.927,141,2.534,142,3.763,143,3.672,144,3.763,145,1.228,146,4.236,147,4.949,148,2.778,149,1.322,150,4.949,151,4.949,152,4.949,153,2.534,154,2.534,155,2.534,156,2.534,157,6.114,158,4.949,159,4.949,160,4.949,161,2.534,162,3.997,163,3.997,164,2.534,165,2.534,166,2.534,167,2.534,168,1.22,169,2.534,170,3.997,171,3.763,172,0.002,173,0.002,190,0.699]],["title/entities/Role.html",[316,0.927,2536,2.242]],["body/entities/Role.html",[0,0.67,3,0.089,4,0.074,5,0.055,8,0.335,9,0.828,12,0.944,13,0.263,14,0.004,15,0.195,22,0.103,31,0.173,33,1.245,72,2.748,114,0.74,123,1.687,149,1.688,172,0.003,173,0.003,187,0.655,205,2.014,312,4.197,316,1.561,322,1.918,340,3.275,355,2.036,360,3.029,361,1.526,362,1.765,370,2.937,380,2.204,395,2.139,396,2.316,429,3.35,462,3.515,512,2.361,519,2.43,527,2.43,529,2.039,670,2.905,693,4.066,756,2.065,916,4.78,927,4.517,952,2.542,956,3.429,1106,3.349,1251,2.853,1368,4.216,2127,4.066,2481,4.216,2533,4.727,2536,4.241,2671,6.646,2672,5.526,2673,7.167,2674,4.066,2675,4.825,2676,7.167,2677,4.825,2678,5.526,2679,4.825,3902,5.526,3903,6.136,3904,6.136,3905,6.136,3906,6.136]],["title/classes/RoleNameMapper.html",[31,0.148,3017,4.38]],["body/classes/RoleNameMapper.html",[3,0.096,4,0.08,5,0.059,8,0.251,13,0.249,14,0.004,15,0.205,22,0.085,31,0.187,78,1.394,114,0.734,148,3.169,172,0.003,173,0.003,175,1.329,182,1.477,187,0.619,189,1.138,190,0.657,199,1.461,327,1.526,415,3.494,705,4.784,986,2.785,1065,3.997,2536,3.571,2571,6.905,2863,4.78,2954,6.568,2974,8.027,2988,6.287,3017,6.976,3072,5.971,3202,7.522,3203,7.522,3907,9.151,3908,6.618,3909,7.522,3910,8.352,3911,6.618,3912,8.352,3913,6.618,3914,5.961,3915,5.961,3916,5.961,3917,4.731,3918,6.618,3919,6.618,3920,6.618]],["title/injectables/RoleRepo.html",[18,1.009,3921,4.723]],["body/injectables/RoleRepo.html",[3,0.092,4,0.077,5,0.057,8,0.241,9,0.846,10,1.686,12,0.854,13,0.282,14,0.004,15,0.22,18,1.566,19,1.159,22,0.082,31,0.179,37,1.651,69,1.275,71,1.961,74,2.815,77,2.602,78,1.121,114,0.747,128,1.321,129,2.396,172,0.003,173,0.003,182,1.438,187,0.702,189,1.223,190,0.706,199,1.423,300,2.193,308,3.069,327,1.464,328,2.591,361,1.579,363,2.805,395,1.707,396,1.848,552,3.835,553,5.053,555,4.078,2536,4.184,3093,6.398,3097,6.398,3921,7.327,3922,6.35,3923,9.785,3924,8.135,3925,8.135,3926,6.35,3927,8.135,3928,6.35,3929,8.135,3930,8.135,3931,8.135]],["title/controllers/RoomsController.html",[975,2.242,3314,4.38]],["body/controllers/RoomsController.html",[3,0.096,4,0.08,5,0.059,8,0.25,12,0.87,13,0.196,14,0.004,15,0.255,19,1.203,22,0.085,31,0.186,35,1.833,71,2.573,74,2.569,77,2.29,78,0.909,114,0.504,128,1.353,129,1.942,172,0.003,173,0.003,182,1.473,187,0.489,189,0.898,190,0.518,199,1.153,327,1.52,328,2.69,329,3.013,355,1.52,584,4.227,588,5.522,602,6.53,663,2.191,665,3.013,682,4.53,703,6.227,709,5.507,749,6.552,975,2.819,977,3.013,979,3.982,982,5.24,985,5.978,987,4.369,988,4.227,989,4.369,996,4.369,1270,5.342,1280,4.927,1284,4.927,1319,5.938,1647,4.713,3314,6.959,3318,5.938,3932,6.593,3933,9.135,3934,6.593,3935,8.331,3936,6.593,3937,6.593,3938,6.593,3939,6.593,3940,6.593,3941,6.593]],["title/injectables/RoomsUc.html",[18,1.009,602,3.749]],["body/injectables/RoomsUc.html",[0,0.406,3,0.054,4,0.045,5,0.033,8,0.141,12,0.713,13,0.294,14,0.004,15,0.165,18,1.077,19,0.678,22,0.087,31,0.158,35,2.879,69,1.124,71,2.312,74,1.892,76,2.69,77,1.538,78,1.315,82,3.546,114,0.688,123,2.058,128,1.659,129,2.205,145,2.027,149,1.011,172,0.002,173,0.002,181,1.908,182,0.989,187,0.668,189,1.228,190,0.709,199,1.532,267,4.782,279,1.901,300,1.284,308,2.839,327,0.857,380,2.418,421,2.923,509,3.01,525,2.418,584,5.615,585,3.105,586,2.863,587,3.055,588,4.46,589,7.315,590,3.174,591,3.609,592,5.603,593,4.073,594,5.098,595,5.805,596,5.805,597,4.401,598,5.04,599,3.105,600,3.348,601,3.023,602,4.001,603,5.04,604,2.778,605,3.348,606,7.252,607,3.348,608,6.745,609,3.348,610,6.745,611,3.348,612,4.835,613,3.348,614,3.348,615,7.234,616,3.348,617,4.851,618,3.348,619,7.602,620,3.348,621,3.348,622,5.04,623,4.401,624,4.401,625,4.601,626,5.04,627,3.348,628,5.04,629,3.348,630,3.348,631,3.348,632,3.348,633,3.348,634,5.04,635,3.105,636,3.105,637,5.04,638,5.621,639,3.105,640,4.674,641,3.105,642,5.04,643,3.128,644,3.348,645,5.04,646,5.04,647,5.04,648,3.348,649,2.65,650,3.348,687,2.657,1217,3.105,3942,5.596,3943,5.596,3944,5.596,3945,5.596,3946,3.717,3947,3.717,3948,3.717,3949,3.717,3950,3.717,3951,3.717,3952,3.717,3953,3.717]],["title/entities/School.html",[316,0.927,900,1.884]],["body/entities/School.html",[0,0.79,3,0.105,4,0.087,5,0.064,8,0.274,9,0.918,12,0.906,13,0.263,14,0.004,15,0.217,22,0.114,31,0.204,33,1.467,114,0.757,172,0.003,173,0.003,187,0.654,190,0.694,205,2.372,316,1.56,322,2.259,351,5.656,355,2.034,360,3.296,361,1.798,362,2.08,509,2.629,512,2.782,529,2.402,670,3.422,900,3.169,952,2.995,956,4.04,2524,4.966,2680,7.368,2681,6.51,2682,8.575,3954,7.228,3955,7.228]],["title/classes/SchoolInfoMapper.html",[31,0.148,3605,4.38]],["body/classes/SchoolInfoMapper.html",[3,0.108,4,0.09,5,0.066,8,0.281,10,1.54,13,0.221,14,0.004,15,0.22,22,0.096,31,0.209,78,1.024,114,0.685,128,1.206,149,1.342,172,0.003,173,0.003,175,1.492,182,1.586,187,0.551,189,1.013,190,0.584,199,1.3,327,1.713,415,3.328,705,5.138,776,3.775,900,3.595,1065,4.488,3579,7.48,3605,7.493,3956,8.97,3957,6.206,3958,8.97,3959,6.206,3960,7.43,3961,7.43,3962,7.43]],["title/classes/SchoolInfoResponse.html",[31,0.148,3579,3.919]],["body/classes/SchoolInfoResponse.html",[3,0.101,4,0.084,5,0.062,8,0.263,9,0.895,10,2.151,12,0.93,13,0.278,14,0.004,15,0.17,22,0.089,31,0.196,69,1.727,114,0.801,172,0.003,173,0.003,175,1.393,187,0.693,189,0.945,190,0.546,216,2.325,316,1.728,355,1.983,653,3.788,657,3.974,661,3.758,663,2.306,669,3.226,670,3.285,689,3.41,690,4.4,691,4.4,900,3.511,3579,7.51,3697,5.456,3963,9.774,3964,5.795,3965,5.795,3966,6.248,3967,6.248]],["title/entities/SchoolNews.html",[316,0.927,1153,3.475]],["body/entities/SchoolNews.html",[0,0.507,3,0.067,4,0.092,5,0.041,8,0.176,9,0.684,10,0.961,12,0.929,13,0.262,14,0.004,15,0.236,22,0.113,31,0.234,33,1.688,43,3.434,44,3.493,45,3.119,46,3.321,47,3.493,48,3.993,78,0.639,114,0.502,123,1.274,145,1.821,149,1.381,172,0.002,173,0.002,181,2.606,187,0.344,205,1.522,308,2.697,309,4.256,310,3.993,312,2.082,316,1.553,322,1.449,330,3.314,340,2.475,355,1.069,360,3.042,361,1.153,362,1.334,370,2.427,377,3.832,382,3.167,391,2.106,415,1.601,477,2.531,504,3.62,511,1.951,512,1.784,515,2.014,519,2.605,521,2.882,522,3.436,523,4.901,527,3.028,529,1.541,540,2.655,590,2.159,601,3.434,679,2.8,684,2.118,900,3.445,912,4.901,913,2.195,932,2.655,933,2.8,960,2.972,1039,2.655,1043,2.422,1102,2.972,1103,3.465,1104,4.795,1106,2.768,1107,3.365,1108,3.465,1109,4.901,1110,3.465,1111,5.465,1112,3.591,1113,4.916,1114,3.972,1115,4.217,1116,4.359,1117,5.066,1118,4.637,1119,3.185,1120,3.465,1121,4.217,1122,3.465,1123,3.465,1124,3.185,1125,3.314,1126,2.324,1127,3.185,1128,2.972,1129,2.972,1130,3.436,1131,2.972,1132,3.465,1133,3.072,1134,3.465,1135,3.185,1136,3.465,1137,2.882,1138,3.465,1139,3.465,1140,3.465,1141,3.465,1142,3.185,1143,3.465,1144,3.185,1145,3.465,1146,3.465,1147,4.916,1148,4.493,1149,3.465,1150,4.916,1151,3.465,1152,3.465,1153,4.359,1154,3.072,1155,3.465,3968,4.636]],["title/classes/Scope.html",[31,0.148,1167,2.355]],["body/classes/Scope.html",[3,0.091,4,0.076,5,0.056,8,0.237,9,0.837,13,0.297,14,0.004,15,0.198,22,0.081,31,0.176,35,2.771,69,1.254,78,1.109,114,0.615,128,1.014,168,3.236,172,0.003,173,0.003,175,1.254,182,1.423,187,0.722,189,1.097,190,0.633,199,1.093,337,2.588,361,1.554,362,1.797,395,1.679,396,1.818,986,4.195,1167,3.616,1198,6.368,1199,6.368,1203,5.755,1204,6.849,1206,6.453,1212,5.755,1213,6.464,1373,3.196,1447,4.005,1785,6.016,3711,7.439,3969,5.626,3970,8.05,3971,8.05,3972,7.25,3973,6.247,3974,6.247,3975,6.247,3976,6.247,3977,6.247,3978,6.247,3979,8.05,3980,8.05,3981,6.247,3982,6.247,3983,6.247]],["title/classes/ServerConsole.html",[31,0.148,3984,4.38]],["body/classes/ServerConsole.html",[3,0.092,4,0.077,5,0.056,8,0.24,12,0.854,13,0.242,14,0.004,15,0.2,22,0.082,31,0.179,69,1.273,78,1.12,114,0.621,168,3.803,172,0.003,173,0.003,175,1.273,182,1.437,187,0.665,189,1.107,190,0.639,199,1.422,207,3.243,216,2.433,270,3.42,328,2.587,355,1.874,854,6.269,858,5.903,868,3.116,1709,5.709,1712,6.787,1714,6.787,1722,7.154,1967,7.901,1970,5.759,1981,4.588,2195,6.499,2215,6.162,3221,6.065,3418,5.709,3984,6.787,3985,6.338,3986,8.125,3987,6.338,3988,7.07,3989,6.338,3990,8.125,3991,6.39,3992,6.338,3993,7.319,3994,6.338,3995,6.338]],["title/modules/ServerConsoleModule.html",[257,1.425,3996,3.919]],["body/modules/ServerConsoleModule.html",[3,0.101,4,0.084,5,0.062,14,0.004,15,0.252,19,1.274,22,0.09,31,0.197,172,0.003,173,0.003,257,2.347,259,2.765,260,3.878,268,4.328,269,3.305,270,2.937,272,3.691,273,3.878,850,7.664,856,5.216,858,4.946,868,3.431,1723,5.83,2182,4.102,2335,6.796,2827,3.726,3408,7.664,3984,7.211,3996,7.963,3997,6.286,3998,6.979,3999,6.979,4000,8.634,4001,6.979,4002,6.979,4003,6.979,4004,6.979]],["title/controllers/ServerController.html",[975,2.242,4005,4.124]],["body/controllers/ServerController.html",[3,0.111,4,0.092,5,0.068,8,0.289,12,0.867,14,0.004,15,0.187,19,1.392,22,0.098,31,0.215,60,5.093,73,5.665,78,1.051,172,0.003,173,0.003,182,1.611,187,0.566,199,1.334,207,3.902,355,1.759,395,2.449,975,3.896,977,3.485,1967,8.432,1969,6.811,1970,5.093,1980,6.371,1981,3.902,4005,7.166,4006,7.627,4007,7.627]],["title/modules/ServerModule.html",[257,1.425,4008,3.749]],["body/modules/ServerModule.html",[3,0.064,4,0.053,5,0.039,12,0.918,13,0.131,14,0.004,15,0.257,19,0.805,22,0.082,24,4.069,25,3.153,26,3.153,27,3.153,28,3.153,31,0.179,39,3.153,43,1.981,44,2.015,45,1.8,46,1.916,47,2.015,72,2.568,78,0.875,112,3.34,118,2.923,123,1.212,128,1.03,138,2.923,139,2.742,140,2.923,145,0.914,149,0.797,172,0.002,173,0.002,211,1.981,216,1.097,252,2.526,257,2.513,258,6.166,259,3.222,260,2.851,264,5.948,268,3.182,269,2.088,270,1.856,273,3.653,278,3.684,322,1.378,327,1.017,361,1.579,362,1.269,380,2.671,382,2.63,415,1.523,813,3.946,874,6.166,977,3.716,1349,2.923,1703,2.828,1715,2.127,1878,3.296,1933,3.834,1981,3.804,2083,3.153,2084,2.923,2085,2.828,2086,3.468,2106,2.923,2109,4.069,2131,2.742,2335,5.948,2377,4.991,2378,4.991,2379,4.991,2573,2.526,2638,2.664,2654,3.296,2827,3.388,3077,6.166,3083,3.684,3226,2.828,3310,6.166,3373,3.153,3379,2.923,3382,3.03,3383,3.03,3413,3.296,3414,3.296,3415,4.991,3416,4.991,3417,4.744,3424,3.468,3427,3.153,3428,3.468,3429,4.991,3430,3.468,3431,3.468,3433,3.03,3435,4.538,3438,4.991,3459,4.991,3474,2.923,3635,6.166,3680,2.664,3895,3.296,4005,6.777,4008,7.553,4009,3.972,4010,3.972,4011,6.166,4012,3.684,4013,4.991,4014,3.972,4015,3.972,4016,3.972,4017,3.972,4018,3.972,4019,3.972,4020,3.972,4021,3.972,4022,3.972,4023,3.972,4024,3.972,4025,3.296,4026,3.972,4027,3.972,4028,6.793,4029,3.684,4030,3.684,4031,3.684,4032,3.684,4033,3.684,4034,3.684,4035,3.684,4036,3.684,4037,3.684,4038,3.684,4039,6.793,4040,3.153,4041,3.972,4042,3.684,4043,3.468,4044,3.972,4045,3.972,4046,3.972,4047,3.972,4048,5.302,4049,4.744]],["title/modules/ServerTestModule.html",[257,1.425,4049,3.919]],["body/modules/ServerTestModule.html",[3,0.06,4,0.05,5,0.037,12,0.903,13,0.181,14,0.004,15,0.255,19,0.756,22,0.078,24,3.887,25,2.96,26,2.96,27,2.96,28,2.96,31,0.171,39,4.334,43,1.86,44,1.892,45,1.69,46,1.799,47,1.892,72,2.727,78,0.836,112,3.222,114,0.316,118,2.744,123,1.138,128,0.984,138,2.744,139,2.574,140,2.744,145,0.858,149,0.748,172,0.002,173,0.002,182,0.732,187,0.307,189,0.564,190,0.326,199,0.724,211,1.86,216,1.03,252,3.473,257,2.465,258,6.033,259,3.593,260,2.723,264,5.819,268,3.039,269,1.961,270,1.743,273,3.546,278,3.459,322,1.294,327,0.955,361,1.508,362,1.191,380,3.019,382,2.972,415,2.094,448,1.594,813,3.769,874,6.033,977,3.608,1349,2.744,1703,2.655,1715,2.924,1878,3.095,1933,4.769,1981,3.669,2083,2.96,2084,2.744,2085,2.655,2086,3.256,2105,3.095,2106,4.018,2109,4.599,2131,3.769,2335,5.819,2377,4.768,2378,4.768,2379,4.768,2573,3.473,2638,3.662,2654,3.095,2827,3.829,3077,6.033,3083,3.459,3226,3.887,3310,6.033,3373,2.96,3379,4.018,3382,2.845,3383,2.845,3413,3.095,3414,3.095,3415,4.768,3416,4.768,3417,4.531,3424,3.256,3427,2.96,3428,3.256,3429,4.768,3430,3.256,3431,3.256,3433,5.774,3435,5.128,3438,6.209,3459,4.768,3474,4.018,3635,6.033,3680,3.662,3895,3.095,4005,6.609,4008,6.008,4011,6.033,4012,3.459,4013,3.256,4014,3.729,4015,3.729,4016,3.729,4017,3.729,4018,3.729,4019,3.729,4020,3.729,4021,3.729,4022,3.729,4023,3.729,4024,3.729,4025,3.095,4026,3.729,4027,3.729,4028,6.595,4029,3.459,4030,3.459,4031,3.459,4032,3.459,4033,3.459,4034,3.459,4035,3.459,4036,3.459,4037,3.459,4038,3.459,4039,6.595,4040,2.96,4041,3.729,4042,3.459,4043,3.256,4044,3.729,4045,5.461,4046,5.461,4047,5.461,4048,5.064,4049,7.865,4050,3.729,4051,3.729,4052,4.141]],["title/classes/SortingQuery.html",[31,0.148,2874,3.919]],["body/classes/SortingQuery.html",[3,0.102,4,0.085,5,0.062,8,0.266,9,0.902,13,0.292,14,0.004,15,0.213,22,0.091,31,0.244,54,3.591,172,0.003,173,0.003,175,1.887,187,0.643,190,0.682,355,2.167,395,1.887,396,2.044,436,4.626,522,5.127,662,4.03,663,2.334,1106,3.647,1221,6.349,1249,5.556,1251,3.266,1693,6.196,1957,6.196,2553,6.815,2874,6.477,2979,5.865,3019,7.851,3215,6.325,4053,6.325,4054,7.022,4055,7.806,4056,7.022,4057,7.022]],["title/entities/StorageProvider.html",[316,0.927,513,3.082]],["body/entities/StorageProvider.html",[0,0.71,3,0.094,4,0.079,5,0.058,8,0.246,9,0.858,12,1.014,13,0.3,14,0.004,15,0.223,22,0.106,31,0.183,33,1.318,172,0.003,173,0.003,187,0.708,190,0.649,205,2.131,316,1.459,322,2.029,355,2.201,360,3.357,361,1.615,362,1.868,370,3.046,512,2.499,513,4.85,527,2.572,529,2.158,952,2.691,2065,7.133,2243,7.972,2247,7.505,2249,7.919,2683,6.892,2684,5.849,2685,7.972,2686,5.849,2687,5.849,2688,5.849,2689,5.849,2690,5.849,2691,5.849,2692,5.849,2693,5.849,2694,5.849,2695,5.849,4058,6.493,4059,6.493,4060,6.493,4061,6.493,4062,6.493]],["title/injectables/StorageProviderRepo.html",[18,1.009,2339,4.124]],["body/injectables/StorageProviderRepo.html",[3,0.079,4,0.066,5,0.048,8,0.206,10,1.524,13,0.301,14,0.004,15,0.205,18,1.416,19,0.994,22,0.07,31,0.154,33,1.492,74,2.939,77,2.696,78,0.751,114,0.772,128,0.884,129,1.604,168,2.957,172,0.003,173,0.003,182,1.301,187,0.758,189,1.377,190,0.795,192,4.618,199,1.787,300,1.881,308,2.89,316,1.576,322,2.786,327,1.256,436,5.7,513,4.894,541,6.882,543,6.223,544,4.572,545,5.497,546,5.497,547,5.054,548,4.016,549,5.497,550,5.497,551,5.497,557,3.743,559,4.072,561,4.072,563,3.743,565,4.072,567,4.072,569,4.072,571,4.072,2339,5.784,2353,4.284,2354,4.284,2355,4.284,2356,4.284,2357,4.284,2358,4.284,2359,4.284,2360,4.284,2361,4.284,2363,4.907,3656,6.624,3663,6.624,4063,5.448,4064,5.448,4065,5.448]],["title/classes/StringValidator.html",[31,0.148,3014,3.749]],["body/classes/StringValidator.html",[3,0.097,4,0.081,5,0.06,8,0.254,12,1.001,13,0.251,14,0.004,22,0.087,31,0.189,78,1.331,114,0.643,123,2.315,128,1.367,172,0.003,173,0.003,175,1.347,182,1.489,187,0.625,189,1.148,190,0.662,199,1.474,337,3.49,395,1.803,396,2.956,415,3.506,448,3.242,509,2.51,525,3.469,649,4.573,1250,5.4,1447,4.301,2093,2.868,2097,6.042,3014,6.022,3185,8.067,4066,6.708,4067,8.423,4068,8.423,4069,6.708,4070,8.423,4071,6.708,4072,6.708,4073,6.708]],["title/entities/Submission.html",[316,0.927,2708,3.26]],["body/entities/Submission.html",[0,0.492,3,0.065,4,0.054,5,0.073,8,0.171,9,0.67,12,0.886,13,0.293,14,0.004,15,0.229,22,0.083,31,0.127,33,0.914,37,2.134,78,0.888,128,1.046,145,1.8,149,1.632,172,0.002,173,0.002,187,0.718,190,0.507,205,1.478,308,2.088,316,1.139,322,1.407,337,3.117,355,2.234,360,3.016,361,1.12,362,1.296,370,2.378,395,2.022,396,2.19,477,2.458,509,1.342,511,1.895,512,1.733,515,1.956,519,1.784,527,3.981,529,1.497,591,4.069,756,3.132,916,4.623,917,4.005,927,2.303,932,2.579,952,1.866,1037,6.514,1130,3.365,1137,2.799,1447,4.13,2093,4.069,2580,4.538,2581,2.517,2696,5.066,2697,4.055,2698,6.136,2699,7.395,2700,6.858,2701,8.139,2702,8.139,2703,7.948,2704,4.055,2705,4.055,2706,4.055,2707,2.984,2708,4.005,2709,5.802,2710,5.802,2711,5.802,2712,5.802,2713,5.802,2714,5.802,2715,7.395,2716,5.802,2717,5.802,2718,4.055,2719,4.055,2720,4.055,2721,4.055,2722,3.219,2723,4.055,2724,6.775,2725,4.055,2726,5.802,2727,4.055,2728,5.378,2729,4.055,2730,4.055,2731,4.055,2732,4.055,2733,4.055,4074,4.503,4075,4.503,4076,4.503,4077,4.503,4078,4.503,4079,4.503,4080,4.503,4081,4.503,4082,4.503]],["title/classes/SubmissionFactory.html",[31,0.148,4083,4.38]],["body/classes/SubmissionFactory.html",[3,0.061,4,0.051,5,0.038,8,0.16,9,0.64,10,1.504,12,0.586,13,0.303,14,0.004,15,0.208,22,0.055,31,0.119,33,1.249,37,2.072,45,2.512,54,1.751,69,0.849,71,1.9,72,2.753,78,0.848,114,0.729,128,0.999,168,1.699,172,0.002,173,0.002,175,0.849,182,1.088,187,0.743,189,1.366,190,0.75,192,4.537,199,1.637,211,1.899,216,1.805,316,1.498,319,2.862,322,1.923,327,0.975,377,3.639,395,2.377,396,2.574,401,6.746,403,6.746,405,2.904,407,5.342,408,5.478,409,4.229,410,5.478,411,5.607,412,4.229,413,4.229,414,4.079,415,2.125,416,4.782,417,4.987,418,6.2,419,5.433,421,3.215,423,4.229,424,2.904,425,4.229,427,4.456,428,4.816,429,4.353,430,4.686,431,3.285,432,4.229,433,2.904,434,2.362,435,2.801,436,4.523,437,2.904,438,2.904,439,2.904,440,4.456,442,4.81,443,2.904,444,6.658,445,5.478,447,3.501,448,3.068,449,2.904,451,2.904,453,2.628,454,2.904,455,5.67,457,2.904,458,4.229,459,4.229,461,2.904,462,2.421,463,2.904,464,2.904,467,2.904,469,2.904,471,3.022,591,1.807,780,5.822,864,2.904,1009,3.022,1012,3.022,1013,3.022,1014,3.022,1015,3.022,1016,3.022,1017,3.022,1018,3.022,1019,3.022,1020,3.022,1021,3.022,1022,3.022,1025,3.022,1031,3.159,2580,2.208,2696,3.324,2698,4.6,2700,3.531,2708,3.826,4083,6.063,4084,3.807,4085,4.227,4086,3.324,4087,4.227,4088,3.324,4089,4.227,4090,3.807,4091,3.807,4092,3.807]],["title/injectables/SubmissionRepo.html",[18,1.009,4093,4.723]],["body/injectables/SubmissionRepo.html",[3,0.084,4,0.07,5,0.052,8,0.22,13,0.273,14,0.004,15,0.225,18,1.479,19,1.061,22,0.075,31,0.164,35,2.392,69,1.168,71,1.796,74,2.879,76,3.418,77,2.687,78,1.186,114,0.699,128,1.486,129,2.695,172,0.003,173,0.003,182,1.358,187,0.679,189,1.247,190,0.72,199,1.505,300,2.008,308,3.351,327,1.341,328,2.373,361,1.911,362,1.673,363,2.569,380,2.089,552,3.512,553,4.885,555,3.851,591,2.486,649,3.638,902,3.854,951,5.742,986,3.233,1037,5.092,1057,3.25,1058,4.101,1159,6.919,1167,2.612,1206,3.615,2404,4.573,2580,3.038,2703,4.857,2707,5.092,2708,3.615,2827,3.104,4093,6.919,4094,5.815,4095,7.682,4096,7.682,4097,5.815,4098,7.682,4099,5.815,4100,7.682,4101,5.815,4102,7.682,4103,5.815,4104,7.682,4105,5.815,4106,7.682,4107,5.815]],["title/injectables/SymetricKeyEncryptionService.html",[18,1.009,2077,3.919]],["body/injectables/SymetricKeyEncryptionService.html",[3,0.1,4,0.084,5,0.061,8,0.262,12,1.027,13,0.278,14,0.004,15,0.211,17,3.958,18,1.651,19,1.261,22,0.089,31,0.195,35,1.921,69,1.387,71,2.134,73,6.359,78,1.182,114,0.713,172,0.003,173,0.003,182,1.517,187,0.692,189,1.272,190,0.734,199,1.501,300,2.386,940,4.748,1076,3.555,2069,7.728,2077,6.413,2100,7.728,2253,6.747,4108,6.909,4109,6.909,4110,6.909,4111,8.58,4112,6.909,4113,8.58,4114,6.909,4115,6.909,4116,6.223,4117,6.909,4118,6.909,4119,6.909,4120,6.909,4121,6.909]],["title/entities/System.html",[316,0.927,1877,2.629]],["body/entities/System.html",[0,0.733,3,0.097,4,0.081,5,0.06,8,0.254,9,0.876,12,1.001,13,0.307,14,0.004,15,0.207,22,0.109,31,0.189,33,1.361,172,0.003,173,0.003,187,0.683,190,0.759,205,2.202,211,3.013,316,1.489,322,2.096,355,2.123,360,3.341,361,1.669,362,1.93,370,3.109,512,2.582,529,2.23,678,4.609,952,2.78,1106,2.823,1877,4.223,2070,4.796,2093,3.601,2181,3.843,2273,4.609,2383,6.904,2481,4.609,2734,7.035,2735,6.042,2736,8.698,2737,6.042,2738,7.586,2739,6.042,2740,7.586,2741,6.042,4122,6.708,4123,6.708,4124,6.708]],["title/classes/TargetInfoMapper.html",[31,0.148,3607,4.38]],["body/classes/TargetInfoMapper.html",[3,0.108,4,0.09,5,0.066,8,0.281,10,1.537,13,0.221,14,0.004,15,0.22,22,0.096,31,0.209,78,1.022,114,0.684,128,1.204,149,1.339,172,0.003,173,0.003,175,1.489,182,1.584,187,0.55,189,1.01,190,0.583,199,1.297,327,1.71,415,3.325,705,5.132,776,3.77,1104,3.645,1109,6.412,3580,6.193,3581,7.474,3607,7.483,3957,6.193,3959,6.193,4125,8.959,4126,8.959,4127,7.414,4128,7.414,4129,7.414]],["title/classes/TargetInfoResponse.html",[31,0.148,3581,3.919]],["body/classes/TargetInfoResponse.html",[3,0.101,4,0.084,5,0.062,8,0.263,9,0.895,10,2.151,12,0.93,13,0.278,14,0.004,15,0.17,22,0.089,31,0.196,69,1.727,114,0.801,172,0.003,173,0.003,175,1.393,187,0.693,189,0.945,190,0.546,216,2.325,316,1.728,355,1.983,653,3.788,657,3.974,661,3.758,663,2.306,669,3.226,670,3.285,689,3.41,690,4.4,691,4.4,1104,4.805,3581,7.51,3697,5.456,3964,5.795,3965,5.795,3966,6.248,3967,6.248,4130,9.774]],["title/entities/Task.html",[316,0.927,591,2.242]],["body/entities/Task.html",[0,0.529,3,0.045,4,0.037,5,0.027,8,0.257,9,0.622,10,0.638,12,0.83,13,0.276,14,0.004,15,0.201,22,0.095,31,0.136,33,0.625,35,2.276,37,2.035,54,1.276,78,1.293,82,3.877,114,0.598,123,1.331,128,1.666,145,1.918,148,1.169,149,1.479,172,0.002,173,0.002,187,0.675,190,0.702,205,1.011,216,1.687,308,1.94,316,0.856,322,0.963,337,2.479,355,2.059,360,2.951,361,0.766,362,0.886,370,1.787,380,2.149,382,1.276,387,1.81,391,2.507,395,1.608,396,1.742,404,2.644,504,3.211,509,2.527,511,1.296,512,1.185,515,1.338,519,1.22,525,1.739,527,3.36,529,1.024,539,1.915,540,1.764,590,2.784,591,3.73,592,1.915,593,3.944,670,1.458,673,1.915,674,3.885,675,4.223,676,3.614,692,3.125,756,2.283,774,4.887,780,5.378,781,5.378,782,4.584,783,5.621,784,5.271,785,5.596,796,3.462,916,3.47,917,1.915,924,2.422,927,1.576,936,2.202,946,2.202,948,2.116,952,1.276,956,1.722,957,2.202,958,2.202,1039,2.774,1040,2.925,1043,1.609,1046,4.495,1047,2.041,1058,3.62,1091,3.462,1130,2.529,1232,2.041,1373,3.061,1472,2.041,1715,2.336,2011,4.866,2093,1.317,2302,2.116,2618,3.462,2674,2.041,2707,5.188,2708,3.72,2722,2.202,2728,3.462,2742,3.462,2743,2.302,2744,2.422,2745,2.422,2746,2.422,2747,2.422,2748,4.472,2749,4.705,2750,2.422,2751,2.422,2752,3.619,2753,3.808,2754,3.808,2755,3.808,2756,2.422,2757,2.422,2758,2.422,2759,2.422,2760,2.422,2761,2.422,2762,3.808,2763,3.808,2764,3.808,2765,2.422,2766,2.422,2767,2.422,2768,2.422,2769,2.422,2770,2.422,2771,2.422,2772,2.422,2773,2.422,2774,2.202,2775,2.422,2776,2.422,2777,3.808,2778,2.422,2779,3.808,2780,3.808,2781,2.422,2782,2.422,2783,2.422,2784,2.422,2785,2.422,2786,3.808,2787,2.422,2788,2.422,2789,2.422,2790,2.422,2791,3.808,2792,2.422,2793,2.422,2794,2.422,2795,2.422,2796,2.422,2797,5.069,2798,2.422,2799,2.422,2800,2.422,2801,2.202,2802,2.202,2803,3.808,2804,2.422,2805,2.422,2806,2.422,2807,2.422,2808,2.422,2809,3.808,2810,1.86,2811,2.116,2812,2.422,2813,2.422,2814,2.422,2815,2.422,2816,2.422,2817,3.01,2818,2.422,2819,2.422,2820,2.422,2821,3.808,2822,2.422,2823,2.422,2824,2.422,2825,2.422,2826,1.81,2827,1.644,2828,3.619,2829,2.422,2830,5.334,2831,2.422,2832,2.422,2833,2.422,2834,2.422,2835,2.422,2836,2.422,2837,2.422,4131,3.08,4132,3.08,4133,3.08,4134,3.08,4135,3.08,4136,3.08,4137,3.08,4138,3.08,4139,3.08,4140,3.08,4141,3.08]],["title/injectables/TaskAuthorizationService.html",[18,1.009,4142,3.919]],["body/injectables/TaskAuthorizationService.html",[3,0.058,4,0.049,5,0.036,8,0.152,13,0.268,14,0.004,15,0.173,18,1.141,19,0.733,22,0.091,31,0.113,35,2.617,69,1.19,71,2.176,74,2.442,76,1.442,77,2.139,78,1.238,114,0.686,128,1.595,129,2.075,145,2.202,172,0.002,173,0.002,182,1.048,187,0.666,189,1.224,190,0.706,199,1.519,279,2.054,300,1.387,312,1.804,316,0.71,327,0.926,340,4.922,462,2.3,509,2.853,525,2.531,590,3.355,591,3.841,593,1.867,594,5.245,595,5.953,635,4.951,636,4.951,643,3.313,681,2.759,953,4.456,986,1.69,1056,4.073,1106,2.495,1217,3.354,1601,2.871,1730,1.974,1952,2.3,2289,4.256,2301,5.266,2480,2.871,3082,5.759,3220,3.001,3863,8.305,4142,4.43,4143,3.617,4144,5.927,4145,5.927,4146,5.927,4147,5.927,4148,7.046,4149,5.927,4150,4.015,4151,5.927,4152,8.298,4153,7.503,4154,4.015,4155,5.927,4156,4.015,4157,5.927,4158,4.015,4159,5.927,4160,4.015,4161,4.015,4162,7.503,4163,4.015,4164,5.927,4165,4.015,4166,3.617,4167,3.617,4168,3.617,4169,3.617,4170,4.015,4171,5.927,4172,3.158,4173,4.015,4174,4.015,4175,7.78,4176,5.339,4177,4.015,4178,5.339,4179,4.015,4180,4.015,4181,5.339,4182,5.927,4183,4.015,4184,4.015,4185,4.015,4186,4.015,4187,5.339,4188,4.015,4189,4.015,4190,4.015,4191,4.015,4192,4.015,4193,5.927,4194,5.927,4195,4.015,4196,4.015,4197,5.927,4198,4.015,4199,5.927,4200,4.015,4201,7.78,4202,7.78,4203,4.015,4204,3.617,4205,4.015,4206,4.015,4207,4.015,4208,4.015]],["title/controllers/TaskController.html",[975,2.242,4209,4.38]],["body/controllers/TaskController.html",[3,0.07,4,0.058,5,0.043,8,0.181,12,0.878,13,0.251,14,0.004,15,0.241,19,0.874,22,0.062,31,0.135,38,4.409,71,1.479,74,2.858,77,2.658,78,1.271,114,0.645,123,1.317,128,1.65,129,2.486,149,1.216,172,0.003,173,0.003,182,1.19,187,0.626,189,1.15,190,0.664,199,1.477,327,1.104,328,1.955,329,2.189,355,1.946,525,1.721,591,2.878,612,2.744,649,3.997,663,1.592,665,2.189,776,2.016,975,2.048,977,2.189,979,2.893,982,5.592,983,6.717,985,6.266,986,3.275,987,3.175,988,3.071,989,3.175,996,3.175,998,4.318,1003,4.232,1004,3.926,1269,3.767,1270,4.989,1280,5.031,3520,5.816,3527,4.314,4209,5.622,4210,4.79,4211,7.009,4212,7.782,4213,7.782,4214,4.79,4215,4.79,4216,6.731,4217,4.79,4218,4.79,4219,6.731,4220,4.79,4221,8.306,4222,4.79,4223,6.731,4224,4.79,4225,4.79,4226,5.816,4227,4.79,4228,3.767,4229,3.58,4230,4.001,4231,4.79,4232,4.79,4233,4.79,4234,6.731,4235,4.79,4236,6.731,4237,4.79,4238,4.79,4239,6.731,4240,4.79,4241,4.79,4242,7.782,4243,6.731]],["title/classes/TaskFactory.html",[31,0.148,4086,4.124]],["body/classes/TaskFactory.html",[3,0.059,4,0.049,5,0.036,8,0.153,9,0.62,10,1.466,12,0.567,13,0.305,14,0.004,15,0.192,22,0.052,31,0.114,33,1.209,35,2.17,37,2.029,45,2.431,54,1.676,69,1.196,71,1.84,72,2.696,78,0.975,114,0.743,123,1.638,128,1.267,145,1.804,149,0.73,168,1.626,172,0.002,173,0.002,175,0.812,182,1.054,187,0.744,189,1.367,190,0.754,192,4.497,199,1.616,211,1.816,216,1.76,316,1.472,319,2.771,322,1.862,327,0.932,377,3.547,395,2.42,396,2.534,401,6.697,403,6.697,405,2.778,407,5.259,408,5.364,409,4.094,410,5.364,411,5.544,412,4.094,413,4.094,414,3.949,415,2.058,416,4.808,417,4.861,418,6.123,419,5.336,421,3.112,423,4.094,424,2.778,425,4.094,427,4.363,428,4.715,429,4.262,430,4.588,431,3.18,432,4.094,433,2.778,434,2.26,435,2.68,436,4.443,437,2.778,438,2.778,439,2.778,440,4.363,442,4.689,443,2.778,444,6.683,445,5.364,447,3.412,448,3.004,449,2.778,451,2.778,453,2.514,454,2.778,455,5.582,457,2.778,458,4.094,459,4.094,461,2.778,462,2.316,463,2.778,464,2.778,467,2.778,469,2.778,471,2.891,525,2.14,591,2.547,623,6.139,674,2.316,1009,2.891,1012,2.891,1013,2.891,1014,2.891,1015,2.891,1016,2.891,1017,2.891,1018,2.891,1019,2.891,1020,2.891,1021,2.891,1022,2.891,1025,2.891,1030,3.18,1031,4.453,1970,2.26,2011,4.398,2742,2.891,2810,2.442,4086,5.564,4244,3.642,4245,4.044,4246,5.958,4247,4.044,4248,4.044,4249,5.366,4250,3.642,4251,3.642,4252,2.891]],["title/classes/TaskListResponse.html",[31,0.148,4228,4.124]],["body/classes/TaskListResponse.html",[3,0.08,4,0.066,5,0.049,8,0.208,9,0.769,10,1.733,12,0.915,13,0.286,14,0.004,15,0.205,22,0.095,31,0.208,33,1.5,37,2.747,69,1.485,82,3.959,114,0.713,172,0.003,173,0.003,175,1.103,187,0.692,189,0.748,190,0.734,192,4.087,207,2.809,216,1.839,355,2.062,380,1.973,390,4.367,391,2.864,393,4.277,448,2.846,586,2.809,591,3.161,593,2.554,612,3.146,661,4.017,662,4.342,663,1.825,664,6.145,665,2.509,669,2.554,670,2.6,671,3.639,672,3.639,673,3.414,674,3.146,675,3.146,676,5.049,755,5.734,756,1.848,776,2.311,998,4.776,1003,4.821,1004,4.472,1075,5.776,1076,3.868,1077,4.597,1080,4.104,1081,4.104,1082,4.104,1092,3.414,1093,3.414,1228,3.414,4228,5.815,4229,7.467,4253,4.946,4254,5.491,4255,5.491,4256,5.526,4257,4.587,4258,4.946,4259,3.414,4260,4.946,4261,3.926]],["title/classes/TaskMapper.html",[31,0.148,4230,4.38]],["body/classes/TaskMapper.html",[3,0.1,4,0.083,5,0.061,8,0.26,10,1.421,13,0.204,14,0.004,15,0.228,22,0.088,31,0.193,78,0.945,82,4.043,114,0.652,128,1.58,149,1.238,172,0.003,173,0.003,175,1.376,182,1.51,187,0.508,189,0.934,190,0.539,199,1.199,327,1.58,390,3.581,393,3.507,415,3.211,591,3.65,592,6.05,676,4.14,705,4.891,776,3.593,1065,4.14,4229,7.274,4230,7.131,4262,6.855,4263,8.538,4264,6.855,4265,8.538,4266,5.725,4267,6.855,4268,6.855,4269,6.855,4270,8.538,4271,6.855,4272,6.855,4273,6.855,4274,6.855,4275,6.855,4276,6.855,4277,6.855,4278,6.855,4279,6.855,4280,6.855,4281,6.855,4282,6.855,4283,6.855,4284,6.855]],["title/modules/TaskModule.html",[257,1.425,4011,3.603]],["body/modules/TaskModule.html",[3,0.096,4,0.08,5,0.059,14,0.004,15,0.249,19,1.208,22,0.085,31,0.187,172,0.003,173,0.003,257,2.27,259,2.622,260,3.751,267,5.525,268,4.187,269,3.134,270,2.785,272,3.571,273,2.973,279,3.386,327,1.526,594,6.112,595,6.706,596,6.706,977,3.816,2003,4.547,3082,6.488,4011,7.48,4142,7.563,4209,7.643,4226,7.563,4285,5.961,4286,5.961,4287,6.618,4288,6.618,4289,6.618]],["title/injectables/TaskRepo.html",[18,1.009,596,3.475]],["body/injectables/TaskRepo.html",[3,0.047,4,0.04,5,0.029,8,0.192,10,1.452,13,0.289,14,0.004,15,0.186,18,0.976,19,0.597,22,0.042,31,0.092,35,1.728,69,0.656,71,1.01,72,3.414,74,2.799,76,1.175,77,2.581,78,1.045,114,0.64,123,1.926,128,1.636,129,2.617,149,1.696,172,0.002,173,0.002,182,0.897,187,0.621,189,1.141,190,0.658,199,1.465,216,0.813,300,1.129,308,3.248,319,3.258,327,0.754,328,1.334,329,2.841,353,2.096,361,1.262,362,0.941,363,1.444,391,1.625,396,0.952,421,4.521,448,3.088,472,2.096,509,1.852,552,1.975,553,3.74,555,2.543,590,2.3,591,3.883,593,3.732,596,3.362,612,4.013,617,3.064,623,2.571,624,2.571,625,5.09,675,3.561,681,2.247,756,2.358,953,4.013,986,2.135,1004,2.891,1040,3.755,1056,2.247,1057,1.828,1058,3.74,1131,4.492,1160,5.593,1166,3.627,1167,3.147,1184,4.048,1185,3.825,1187,3.99,1188,3.792,1189,3.792,1190,3.486,1192,2.444,1206,4.355,1221,1.975,1223,2.444,1693,2.338,1951,2.571,2011,2.033,2183,1.785,2193,3.475,2302,2.247,2581,3.916,2707,4.12,2797,2.444,2802,3.627,3093,3.99,3097,3.99,4290,3.27,4291,6.217,4292,6.217,4293,6.217,4294,5.073,4295,4.238,4296,3.27,4297,3.27,4298,3.27,4299,4.57,4300,8.373,4301,5.073,4302,3.27,4303,3.27,4304,3.27,4305,3.27,4306,3.27,4307,5.073,4308,3.27,4309,5.073,4310,3.27,4311,7.228,4312,3.27,4313,3.27,4314,3.27,4315,2.945,4316,2.945,4317,2.945,4318,2.945,4319,7.584,4320,3.27,4321,3.27,4322,3.27,4323,3.27,4324,3.27,4325,3.27,4326,3.27,4327,3.27,4328,3.27,4329,3.27,4330,3.27,4331,3.27,4332,3.27,4333,2.945,4334,2.247,4335,3.27,4336,3.27,4337,3.27,4338,3.27,4339,3.27,4340,3.27,4341,3.27,4342,3.27,4343,3.27,4344,3.27,4345,3.27,4346,3.27,4347,3.27,4348,3.27,4349,3.27,4350,3.27,4351,3.27,4352,4.238,4353,3.27,4354,3.27,4355,2.731,4356,2.945,4357,3.27,4358,3.27,4359,2.945,4360,3.27,4361,2.945,4362,2.945,4363,3.27,4364,5.073,4365,3.27,4366,2.731,4367,2.731,4368,2.731,4369,3.27,4370,6.217,4371,3.27,4372,3.27,4373,3.27,4374,3.27,4375,3.27,4376,3.27,4377,3.27,4378,3.27,4379,3.27,4380,3.27,4381,5.073,4382,3.27,4383,3.27,4384,3.27,4385,3.27,4386,3.27,4387,3.27,4388,7.006,4389,5.073,4390,3.27,4391,5.073,4392,3.27,4393,3.27,4394,3.27,4395,5.073,4396,3.27]],["title/classes/TaskResponse.html",[31,0.148,4229,3.919]],["body/classes/TaskResponse.html",[3,0.074,4,0.062,5,0.045,8,0.194,9,0.732,10,1.887,12,0.978,13,0.306,14,0.004,15,0.198,22,0.091,31,0.198,33,1.037,37,2.094,69,1.413,82,4.311,114,0.737,172,0.003,173,0.003,175,1.026,187,0.756,189,0.696,190,0.784,207,3.601,216,2.264,355,2.327,380,1.835,390,4.756,391,3.146,393,4.657,395,1.373,396,1.487,586,4.12,591,3.444,593,2.376,612,2.927,653,2.789,661,4.131,662,4.569,663,1.698,664,5.964,665,2.335,669,2.376,670,2.419,671,3.386,672,3.386,673,3.176,674,4.614,675,4.614,676,5.499,695,4.268,700,5.88,776,2.963,998,2.614,1003,3.529,1004,3.274,1075,4.138,1076,2.917,1077,3.176,1092,3.176,1093,3.176,1228,4.377,4228,4.018,4229,7.343,4253,4.602,4256,6.02,4257,4.268,4258,6.341,4259,4.377,4260,4.602,4261,3.653,4397,5.109,4398,5.109,4399,5.109,4400,5.109,4401,5.109,4402,5.109,4403,5.109,4404,5.109,4405,5.109,4406,5.109,4407,5.109]],["title/classes/TaskScope.html",[31,0.148,4311,4.38]],["body/classes/TaskScope.html",[3,0.053,4,0.044,5,0.032,8,0.138,9,0.572,13,0.295,14,0.004,15,0.163,22,0.047,31,0.102,33,1.116,35,2.674,76,2.383,78,1.341,114,0.743,123,1.824,128,1.201,149,0.656,168,1.46,172,0.002,173,0.002,175,0.729,182,0.972,187,0.741,189,1.326,190,0.765,192,3.032,199,1.72,308,3.382,327,0.837,361,0.903,362,1.045,391,2.934,395,0.976,396,2.435,504,3.765,509,2.73,525,1.304,590,1.805,591,1.552,593,3.086,624,5.82,674,4.554,675,4.239,781,4.559,986,3.657,1030,2.855,1056,3.778,1131,5.737,1167,3.903,1171,6.677,1178,3.033,1198,3.93,1199,3.93,1203,3.93,1204,2.495,1205,2.714,1206,5.563,1207,2.714,1212,2.596,1213,3.778,1214,2.714,2011,3.418,2093,3.164,2366,5.542,2752,4.109,3341,3.033,3342,4.952,3344,4.952,3349,3.27,4311,8.686,4366,4.592,4367,4.592,4368,6.181,4408,9.83,4409,5.498,4410,5.498,4411,5.498,4412,5.498,4413,5.498,4414,5.498,4415,5.498,4416,5.498,4417,5.498,4418,5.498,4419,5.498,4420,3.631,4421,5.498,4422,3.631,4423,3.631,4424,5.498,4425,3.631,4426,5.498,4427,3.631,4428,5.498,4429,3.631,4430,5.498,4431,3.631,4432,5.498,4433,3.631,4434,5.498,4435,3.631,4436,5.498,4437,3.631,4438,5.498,4439,3.631,4440,5.498,4441,3.631,4442,3.631,4443,6.635,4444,3.631,4445,5.498,4446,3.631,4447,3.631,4448,3.631]],["title/classes/TaskStatusMapper.html",[31,0.148,4266,4.38]],["body/classes/TaskStatusMapper.html",[3,0.109,4,0.091,5,0.067,8,0.284,13,0.223,14,0.004,15,0.221,22,0.097,31,0.211,78,1.033,82,3.549,114,0.572,128,1.217,149,1.354,172,0.003,173,0.003,175,1.505,182,1.594,187,0.556,189,1.021,190,0.589,199,1.311,327,1.728,415,3.34,705,5.165,773,8.122,774,6.652,776,3.795,4256,7.229,4257,6.26,4266,7.532,4449,9.017,4450,7.495,4451,7.495,4452,7.495,4453,7.495]],["title/classes/TaskStatusResponse.html",[31,0.148,4256,3.919]],["body/classes/TaskStatusResponse.html",[3,0.092,4,0.076,5,0.056,8,0.239,9,0.842,13,0.303,14,0.004,15,0.155,22,0.081,31,0.178,37,2.597,69,1.626,114,0.482,172,0.003,173,0.003,175,1.266,187,0.754,189,0.859,190,0.496,355,2.304,509,2.977,653,3.442,661,4.287,663,2.095,780,6.708,781,6.708,782,6.07,783,6.471,784,6.98,785,6.98,793,5.678,794,5.678,795,5.678,796,4.507,797,5.678,798,5.678,4256,7.297,4454,10.293,4455,6.304,4456,6.304,4457,6.304,4458,6.304,4459,6.304,4460,6.304,4461,6.304,4462,6.304]],["title/injectables/TaskUC.html",[18,1.009,4226,3.919]],["body/injectables/TaskUC.html",[3,0.048,4,0.04,5,0.03,8,0.126,13,0.24,14,0.004,15,0.173,18,0.987,19,0.605,22,0.043,31,0.093,35,2.62,38,3.688,69,1.03,71,1.937,74,2.741,76,2.9,77,2.506,78,1.23,82,4.395,114,0.617,123,1.724,128,1.696,129,2.871,145,2.021,148,2.38,149,1.647,172,0.002,173,0.002,182,0.907,187,0.624,189,1.1,190,0.635,199,1.412,267,4.595,279,1.697,292,4.158,300,1.145,308,3.094,326,5.276,327,0.765,381,1.854,391,2.445,396,1.493,448,1.276,509,1.869,525,1.843,591,3.018,592,2.062,596,5.35,604,3.834,612,3.593,617,3.789,638,5.24,639,5.24,640,5.897,641,5.24,649,2.429,675,4.044,774,3.4,782,4.389,950,4.034,953,4.044,998,4.129,1056,3.525,1057,2.867,1131,4.022,1184,5.29,1185,2.801,1221,2.003,1223,2.479,1693,2.371,1903,4.034,2011,3.189,2298,4.034,2533,2.344,2552,7.506,2817,4.389,2827,1.771,3520,3.834,4142,5.276,4153,2.77,4162,2.77,4176,4.621,4178,6.358,4181,6.358,4187,6.358,4211,4.621,4221,5.65,4226,3.834,4315,4.621,4316,4.621,4317,4.621,4318,4.621,4366,4.285,4367,2.77,4368,4.285,4463,3.317,4464,5.13,4465,5.13,4466,7.06,4467,3.317,4468,3.317,4469,5.13,4470,3.317,4471,5.13,4472,3.317,4473,5.13,4474,3.317,4475,5.13,4476,3.317,4477,5.13,4478,3.317,4479,3.317,4480,3.317,4481,6.273,4482,6.273,4483,5.13,4484,6.273,4485,6.273,4486,5.13,4487,5.13,4488,5.13,4489,7.06,4490,3.317,4491,8.072,4492,5.13,4493,2.77,4494,2.77,4495,3.317,4496,3.317,4497,3.317,4498,3.317,4499,3.317,4500,3.317,4501,3.317,4502,3.317,4503,7.06,4504,5.13,4505,3.317,4506,7.06,4507,5.13,4508,5.13,4509,5.13,4510,5.13,4511,3.317,4512,2.987]],["title/classes/TaskWithStatusVo.html",[31,0.148,592,3.26]],["body/classes/TaskWithStatusVo.html",[0,0.567,3,0.049,4,0.041,5,0.03,8,0.27,9,0.659,10,0.698,12,0.806,13,0.26,14,0.004,15,0.208,22,0.099,31,0.146,33,0.684,35,2.138,37,2.111,54,1.396,69,0.676,78,1.32,82,4.412,114,0.587,123,0.926,128,1.684,145,1.931,148,1.278,149,1.389,172,0.002,173,0.002,175,0.676,187,0.528,189,0.459,190,0.265,205,1.106,216,1.291,308,2.054,316,0.918,337,2.625,360,2.633,361,0.838,362,0.969,370,1.916,380,2.276,382,1.396,387,1.98,391,2.279,404,2.835,504,2.458,509,2.604,511,1.418,512,1.296,515,1.464,519,1.334,525,1.865,527,2.82,529,1.12,539,2.094,540,1.93,590,2.524,591,4.095,592,3.228,593,3.575,670,1.595,673,2.094,674,2.974,675,3.629,676,3.826,692,3.309,756,2.132,774,5.792,780,5.581,781,5.581,782,4.78,783,5.792,784,5.497,785,5.807,796,3.712,916,2.656,917,2.094,927,1.723,936,2.408,946,2.408,948,2.315,952,1.396,956,1.883,957,2.408,958,2.408,1039,1.93,1040,2.035,1043,1.76,1046,4.717,1047,2.233,1058,3.8,1091,2.408,1130,1.76,1232,2.233,1373,3.241,1472,2.233,1715,2.504,2011,4.425,2093,1.44,2302,2.315,2618,3.712,2674,2.233,2707,4.717,2708,3.938,2722,2.408,2728,3.712,2742,3.712,2743,2.518,2744,2.649,2745,2.649,2746,2.649,2747,4.083,2748,4.734,2749,4.982,2750,2.649,2751,2.649,2752,2.518,2753,2.649,2754,2.649,2755,2.649,2756,2.649,2757,2.649,2758,2.649,2759,2.649,2760,2.649,2761,2.649,2762,4.083,2763,4.083,2764,4.083,2765,2.649,2766,2.649,2767,2.649,2768,2.649,2769,2.649,2770,2.649,2771,2.649,2772,2.649,2773,2.649,2774,2.408,2775,2.649,2776,2.649,2777,4.083,2778,2.649,2779,4.083,2780,4.083,2781,2.649,2782,2.649,2783,2.649,2784,2.649,2785,2.649,2786,4.083,2787,2.649,2788,2.649,2789,2.649,2790,2.649,2791,4.083,2792,2.649,2793,2.649,2794,2.649,2795,2.649,2796,2.649,2797,5.32,2798,2.649,2799,2.649,2800,2.649,2801,2.408,2802,2.408,2803,4.083,2804,2.649,2805,2.649,2806,2.649,2807,2.649,2808,2.649,2809,4.083,2810,2.035,2811,2.315,2812,2.649,2813,2.649,2814,2.649,2815,2.649,2816,2.649,2817,3.228,2818,2.649,2819,2.649,2820,2.649,2821,4.083,2822,2.649,2823,2.649,2824,2.649,2825,2.649,2826,1.98,2827,1.798,2828,3.88,2829,2.649,2830,5.598,2831,2.649,2832,2.649,2833,2.649,2834,2.649,2835,2.649,2836,2.649,2837,2.649,4513,5.192,4514,3.369]],["title/entities/Team.html",[316,0.927,1107,2.682]],["body/entities/Team.html",[0,0.815,3,0.108,4,0.09,5,0.066,8,0.283,9,0.936,12,0.919,13,0.222,14,0.004,15,0.221,22,0.116,31,0.21,33,1.514,114,0.766,172,0.003,173,0.003,187,0.553,205,2.449,316,1.59,322,2.332,351,5.766,355,1.721,360,3.13,361,1.856,362,2.147,512,2.872,529,2.48,670,3.533,952,3.092,956,4.171,1107,4.601,2525,5.335,2838,7.512,2839,6.721,4515,7.462]],["title/entities/TeamNews.html",[316,0.927,1154,3.475]],["body/entities/TeamNews.html",[0,0.507,3,0.067,4,0.092,5,0.041,8,0.176,9,0.684,10,0.961,12,0.929,13,0.262,14,0.004,15,0.236,22,0.113,31,0.234,33,1.688,43,3.434,44,3.493,45,3.119,46,3.321,47,3.493,48,3.993,78,0.639,114,0.502,123,1.274,145,1.821,149,1.381,172,0.002,173,0.002,181,2.606,187,0.344,205,1.522,308,2.697,309,4.256,310,3.993,312,2.082,316,1.553,322,1.449,330,3.314,340,2.475,355,1.069,360,3.042,361,1.153,362,1.334,370,2.427,377,3.832,382,3.167,391,2.106,415,1.601,477,2.531,504,3.62,511,1.951,512,1.784,515,2.014,519,2.605,521,2.882,522,3.436,523,4.901,527,3.028,529,1.541,540,2.655,590,2.159,601,3.434,679,2.8,684,2.118,900,3.371,912,4.217,913,2.195,932,2.655,933,2.8,960,2.972,1039,2.655,1043,2.422,1102,2.972,1103,3.465,1104,4.795,1106,2.768,1107,3.91,1108,3.465,1109,4.901,1110,3.465,1111,5.465,1112,3.591,1113,4.916,1114,3.972,1115,4.217,1116,4.359,1117,5.066,1118,4.637,1119,3.185,1120,3.465,1121,4.217,1122,3.465,1123,3.465,1124,3.185,1125,3.314,1126,2.324,1127,3.185,1128,2.972,1129,2.972,1130,3.436,1131,2.972,1132,3.465,1133,3.072,1134,3.465,1135,3.185,1136,3.465,1137,2.882,1138,3.465,1139,3.465,1140,3.465,1141,3.465,1142,3.185,1143,3.465,1144,3.185,1145,3.465,1146,3.465,1147,4.916,1148,4.493,1149,3.465,1150,4.916,1151,3.465,1152,3.465,1153,3.072,1154,4.359,1155,4.916,4516,4.636]],["title/controllers/TeamNewsController.html",[975,2.242,3642,4.38]],["body/controllers/TeamNewsController.html",[3,0.086,4,0.072,5,0.053,8,0.226,12,0.829,13,0.177,14,0.004,15,0.25,19,1.087,22,0.077,31,0.168,38,4.077,71,1.839,74,2.448,77,2.145,78,0.821,112,2.675,114,0.455,128,1.413,129,1.754,145,1.617,149,1.076,172,0.003,173,0.003,182,1.38,187,0.442,189,0.812,190,0.468,199,1.042,327,1.373,328,2.43,329,2.721,355,1.373,663,1.98,665,2.721,776,2.506,975,2.546,977,2.721,979,3.597,982,5.043,983,5.922,985,5.792,986,3.663,987,3.947,988,3.818,989,3.947,996,3.947,1058,4.166,1107,4.906,1118,3.505,1167,3.91,1184,4.931,1270,5.003,1284,4.451,1730,2.928,1906,5.257,1959,4.684,2003,4.092,2525,4.258,2922,4.975,3528,6.904,3530,6.518,3540,5.981,3542,4.258,3544,4.684,3545,5.364,3546,5.364,3552,4.975,3553,4.975,3554,5.364,3555,5.364,3556,5.364,3557,5.364,3642,6.518,4517,7.804,4518,5.956,4519,8.704,4520,5.956,4521,7.804,4522,5.956,4523,8.704,4524,5.956,4525,5.956,4526,5.364,4527,5.956,4528,5.956]],["title/classes/TestBootstrapConsole.html",[31,0.148,4529,4.723]],["body/classes/TestBootstrapConsole.html",[3,0.104,4,0.087,5,0.064,8,0.272,12,0.682,14,0.004,15,0.216,22,0.113,31,0.202,33,1.781,43,3.22,44,3.275,45,2.925,46,3.114,47,3.275,48,3.744,74,2.016,77,2.608,78,1.209,128,1.425,129,2.111,172,0.003,173,0.003,175,1.439,182,1.552,187,0.532,199,1.254,273,3.22,858,5.027,868,3.524,1925,5.811,1970,4.006,1972,5.987,1973,6.456,1983,5.637,1986,5.357,2327,5.987,3649,4.925,3991,6.902,4529,7.905,4530,6.456,4531,9.486,4532,7.168,4533,7.905,4534,7.168,4535,5.987,4536,6.456,4537,6.456,4538,6.456,4539,6.456]],["title/injectables/TimeoutInterceptor.html",[18,1.009,3225,4.38]],["body/injectables/TimeoutInterceptor.html",[3,0.084,4,0.07,5,0.051,8,0.218,9,0.795,13,0.255,14,0.004,15,0.224,18,1.47,19,1.053,20,4.535,21,4.31,22,0.074,31,0.163,35,2.382,37,2.535,43,2.59,44,2.635,45,3.722,46,2.506,47,2.635,48,3.012,54,2.389,78,1.257,114,0.584,168,2.318,172,0.003,173,0.003,182,1.351,187,0.704,189,1.041,190,0.717,199,1.337,216,1.434,282,4.535,300,1.991,395,1.55,396,1.679,407,5.175,415,2.959,476,4.535,898,5.249,954,3.223,975,3.266,1785,5.71,1906,4.614,1971,6.008,1976,6.381,2037,4.817,2049,6.881,2050,6.881,2051,7.173,2052,8.216,2054,3.389,2055,7.717,2058,4.817,2182,4.491,2183,4.171,2370,4.31,3223,7.288,3225,6.381,3475,6.008,4540,5.766,4541,7.64,4542,6.008,4543,5.462,4544,6.381,4545,8.568,4546,8.568,4547,5.766,4548,5.766,4549,7.717,4550,5.766,4551,5.766,4552,5.766,4553,5.766,4554,5.766,4555,7.64,4556,7.64,4557,5.766,4558,7.64,4559,5.766,4560,5.766,4561,5.766,4562,5.766,4563,5.766,4564,7.64,4565,5.766,4566,5.766]],["title/classes/UpdateFlagParams.html",[31,0.148,2890,4.38]],["body/classes/UpdateFlagParams.html",[3,0.11,4,0.092,5,0.067,8,0.287,9,0.944,13,0.226,14,0.004,15,0.247,22,0.098,31,0.256,145,1.57,172,0.003,173,0.003,175,1.521,187,0.562,216,1.885,355,1.747,509,2.705,657,4.34,661,3.649,663,2.518,1251,3.524,2565,5.566,2863,4.741,2890,7.581,2978,7.138,3003,7.138,4567,8.175,4568,7.577,4569,7.581,4570,7.577,4571,7.577]],["title/classes/UpdateMatchParams.html",[31,0.148,2886,4.38]],["body/classes/UpdateMatchParams.html",[3,0.109,4,0.091,5,0.067,8,0.285,9,0.939,12,0.86,13,0.224,14,0.004,15,0.247,22,0.097,31,0.254,76,3.478,145,2.007,172,0.003,173,0.003,175,1.508,187,0.557,216,1.868,355,1.732,657,4.302,661,3.63,663,2.497,1126,4.527,1251,3.493,2863,4.716,2886,7.542,2986,6.455,3002,5.984,4567,8.132,4569,7.542,4572,7.511,4573,7.511,4574,7.511]],["title/classes/UpdateNewsParams.html",[31,0.148,3537,4.124]],["body/classes/UpdateNewsParams.html",[3,0.093,4,0.077,5,0.057,8,0.242,9,0.987,12,0.904,13,0.268,14,0.004,15,0.201,22,0.083,31,0.267,172,0.003,173,0.003,175,1.284,181,3.344,187,0.668,190,0.643,216,2.361,316,1.774,355,2.077,391,2.617,427,4.568,601,4.405,662,4.414,663,2.126,776,3.44,1112,4.918,1118,4.637,1226,5.343,1228,5.081,1230,5.762,1232,5.417,1233,5.24,1234,6.428,1235,6.109,1248,7.362,1249,6.085,1250,5.775,1251,2.975,1611,4.804,2526,5.843,3537,6.428,4575,9.491,4576,8.174,4577,8.174,4578,6.428,4579,7.362,4580,8.174,4581,6.397,4582,6.397,4583,6.397]],["title/entities/User.html",[145,1.087,316,0.927]],["body/entities/User.html",[0,0.641,3,0.085,4,0.071,5,0.052,8,0.361,9,0.804,12,0.976,13,0.292,14,0.004,15,0.226,22,0.1,31,0.165,33,1.19,72,2.668,114,0.66,121,5.397,123,1.612,145,1.601,149,1.395,172,0.003,173,0.003,187,0.708,205,1.925,316,1.366,322,1.833,355,2.2,360,3.176,361,1.459,362,1.687,370,2.851,395,1.576,396,1.707,511,2.468,512,2.257,519,2.323,527,3.637,529,1.949,756,2.908,900,3.642,912,3.76,913,3.658,916,3.952,924,6.075,927,3,933,3.542,952,2.43,959,3.887,960,3.76,2127,3.887,2533,4.477,2535,3.278,2536,3.303,2541,3.99,2542,3.99,2592,3.76,2593,3.887,2594,3.76,2595,3.887,2596,4.612,2597,4.612,2675,4.612,2679,4.612,2840,6.075,2841,5.282,2842,5.282,2843,6.958,2844,5.282,2845,5.282,3902,5.282,4584,5.864,4585,5.864,4586,5.864,4587,5.864,4588,5.864,4589,5.864,4590,5.864]],["title/classes/UserAlreadyAssignedToImportUserError.html",[31,0.148,4591,4.38]],["body/classes/UserAlreadyAssignedToImportUserError.html",[3,0.093,4,0.078,5,0.057,8,0.244,9,0.853,12,0.86,13,0.308,14,0.004,15,0.234,22,0.083,30,5.1,31,0.181,33,1.664,37,1.672,69,1.813,71,3.248,84,4.585,145,1.7,172,0.003,173,0.003,175,1.292,178,6.971,179,3.884,180,5.1,181,3.079,182,1.45,183,7.102,184,7.102,187,0.766,192,4.665,193,5.373,194,5.373,195,5.373,196,5.373,197,5.373,198,5.373,199,1.435,200,5.373,201,3.999,203,5.373,205,2.112,209,4.599,339,3.596,843,5.985,1126,3.225,1129,4.124,3680,3.885,4591,6.852,4592,8.203,4593,7.388,4594,8.203,4595,6.433,4596,6.433,4597,8.203,4598,5.794,4599,4.599]],["title/controllers/UserController.html",[975,2.242,4600,4.38]],["body/controllers/UserController.html",[3,0.097,4,0.081,5,0.059,8,0.253,13,0.199,14,0.004,15,0.253,19,1.217,22,0.086,31,0.188,35,1.854,71,2.591,74,2.582,77,2.307,78,0.919,114,0.509,123,1.833,128,1.491,129,1.964,145,1.903,172,0.003,173,0.003,182,1.484,187,0.495,189,0.909,190,0.524,199,1.167,267,5.014,279,3.412,312,3.77,327,1.538,328,2.722,355,1.538,378,5.245,663,2.217,975,2.851,977,3.048,979,4.028,982,5.262,985,5.547,987,4.42,988,4.276,989,4.42,996,4.42,1237,4.582,1647,4.768,2533,3.048,3082,5.888,3865,7.222,3875,5.571,4204,6.007,4600,7.01,4601,6.669,4602,6.669,4603,8.392,4604,6.669,4605,6.669,4606,6.669,4607,6.669,4608,6.669,4609,6.669,4610,6.669,4611,6.669]],["title/classes/UserFactory.html",[31,0.148,4088,4.124]],["body/classes/UserFactory.html",[3,0.06,4,0.05,5,0.037,8,0.157,9,0.632,10,1.489,12,0.801,13,0.304,14,0.004,15,0.207,22,0.054,31,0.117,33,1.232,37,2.055,45,2.479,54,1.72,69,0.833,71,1.875,72,2.73,78,0.837,114,0.756,121,2.44,128,0.986,145,1.259,168,1.669,172,0.002,173,0.002,175,0.833,182,1.074,187,0.741,189,1.373,190,0.759,192,4.521,199,1.628,211,1.864,216,1.787,316,1.487,319,2.824,322,1.898,327,0.957,377,3.601,395,2.362,396,2.558,401,6.726,403,6.726,405,2.852,407,5.308,408,5.431,409,4.173,410,5.431,411,5.581,412,4.173,413,4.173,414,4.025,415,2.097,416,4.76,417,4.935,418,6.169,419,5.393,421,3.173,423,4.173,424,2.852,425,4.173,427,4.418,428,4.774,429,4.316,430,4.646,431,3.242,432,4.173,433,2.852,434,2.32,435,2.751,436,4.49,437,2.852,438,2.852,439,2.852,440,4.418,442,4.76,443,2.852,444,6.631,445,5.431,447,3.465,448,3.042,449,2.852,451,2.852,453,2.58,454,2.852,455,5.634,457,2.852,458,4.173,459,4.173,461,2.852,462,2.378,463,2.852,464,2.852,467,2.852,469,2.852,471,2.967,900,1.491,1009,2.967,1012,2.967,1013,2.967,1014,2.967,1015,2.967,1016,2.967,1017,2.967,1018,2.967,1019,2.967,1020,2.967,1021,2.967,1022,2.967,1023,3.264,1024,3.467,1025,2.967,1031,3.102,1035,3.264,2533,2.775,2541,1.803,2542,1.803,2840,3.264,2953,3.467,4088,5.649,4612,3.738,4613,6.073,4614,6.073,4615,4.151,4616,3.738,4617,4.151,4618,4.151,4619,3.738,4620,3.738,4621,3.738]],["title/classes/UserFilterQuery.html",[31,0.148,2878,4.124]],["body/classes/UserFilterQuery.html",[3,0.108,4,0.09,5,0.066,8,0.281,9,0.933,12,0.854,13,0.221,14,0.004,15,0.22,22,0.096,31,0.253,114,0.736,172,0.003,173,0.003,175,1.492,187,0.551,190,0.705,355,1.713,396,2.611,662,4.172,663,2.47,1249,5.751,1250,5.751,1251,3.455,1730,4.41,1906,5.418,2541,3.898,2542,3.898,2863,4.686,2878,7.054,2957,5.553,2961,6.692,2980,8.079,4622,7.493,4623,7.43]],["title/injectables/UserImportUc.html",[18,1.009,2909,3.919]],["body/injectables/UserImportUc.html",[3,0.051,4,0.043,5,0.031,8,0.133,13,0.246,14,0.004,15,0.193,18,1.033,19,0.643,22,0.045,31,0.099,35,1.81,69,1.078,71,2.01,72,3.199,74,2.773,76,2.339,77,2.002,78,1.081,114,0.631,123,2.363,128,1.625,129,2.904,145,1.837,148,2.764,149,1.315,172,0.002,173,0.002,182,0.949,187,0.613,189,1.126,190,0.65,199,1.621,216,0.875,224,2.257,267,4.693,279,1.801,282,2.768,300,1.216,308,3.4,312,4.161,319,2.497,327,0.812,329,4.15,340,2.866,381,4.071,395,1.443,448,2.066,509,1.94,604,2.631,625,3.076,649,2.542,819,3.826,842,5.727,843,2.333,900,3.184,985,4.737,986,3.899,1057,1.967,1126,2.692,1160,5.053,1730,2.64,1841,2.64,1850,5.004,2093,1.505,2289,3.243,2524,5.004,2535,5.178,2565,4.172,2570,2.418,2583,6.177,2584,5.689,2626,3.559,2638,4.992,2641,5.207,2646,5.207,2863,4.49,2867,5.863,2868,5.863,2869,4.836,2870,4.836,2871,4.836,2884,6.924,2909,4.013,3033,3.17,3073,3.17,3081,6.177,3082,5.511,3096,4.836,3105,4.485,3129,4.836,3745,4.013,4591,4.485,4593,5.863,4624,8.596,4625,3.52,4626,3.52,4627,3.52,4628,3.52,4629,3.52,4630,3.52,4631,3.52,4632,5.369,4633,5.369,4634,8.596,4635,5.369,4636,3.52,4637,5.369,4638,7.283,4639,3.52,4640,5.369,4641,3.52,4642,3.52,4643,3.17,4644,5.369,4645,7.842,4646,3.52,4647,7.283,4648,6.51,4649,3.52,4650,3.52,4651,6.51,4652,7.842,4653,3.52,4654,6.51,4655,6.51,4656,3.52,4657,3.52,4658,6.51,4659,3.52,4660,5.369,4661,3.52]],["title/classes/UserInfoMapper.html",[31,0.148,3608,4.38]],["body/classes/UserInfoMapper.html",[3,0.107,4,0.089,5,0.066,8,0.28,10,1.533,13,0.22,14,0.004,15,0.22,22,0.095,31,0.209,78,1.02,114,0.565,128,1.201,145,2.121,149,1.336,172,0.003,173,0.003,175,1.485,182,1.582,187,0.549,189,1.008,190,0.582,199,1.294,327,1.706,415,3.322,705,5.125,776,3.765,1065,4.469,2541,3.215,2542,3.215,2817,4.599,3582,7.469,3608,7.473,3877,7.473,3879,6.18,3880,6.18,3957,6.18,3959,6.18,4662,8.947]],["title/classes/UserInfoResponse.html",[31,0.148,3582,3.919]],["body/classes/UserInfoResponse.html",[3,0.095,4,0.079,5,0.058,8,0.247,9,0.862,10,2.123,12,0.96,13,0.285,14,0.004,15,0.16,22,0.084,31,0.184,69,1.663,114,0.754,145,2.09,172,0.003,173,0.003,175,1.311,187,0.709,189,0.89,190,0.776,216,2.379,316,1.464,355,2.097,653,3.565,661,3.329,662,4.229,663,2.171,669,3.037,689,3.21,690,4.237,691,4.237,2541,4.288,2542,4.288,2592,4.187,2594,4.187,2624,5.489,3145,6.513,3582,7.376,3697,5.136,3964,5.455,3965,5.455,4663,9.869,4664,6.53,4665,6.53,4666,8.281,4667,6.53]],["title/classes/UserMatchListResponse.html",[31,0.148,2900,4.124]],["body/classes/UserMatchListResponse.html",[3,0.077,4,0.064,5,0.047,8,0.2,9,0.748,10,1.093,12,0.837,13,0.29,14,0.004,15,0.226,22,0.093,31,0.231,33,1.46,37,2.733,54,2.185,69,1.059,76,1.894,114,0.55,145,1.969,172,0.003,173,0.003,175,1.059,187,0.683,189,0.719,190,0.724,192,4.019,216,2.363,319,2.452,355,2.028,448,2.769,529,1.753,661,3.909,662,3.346,663,1.753,665,2.41,755,5.639,756,1.775,998,4.709,1003,4.763,1004,4.419,1075,5.716,1076,3.815,1077,4.472,1080,3.941,1081,3.941,1082,3.941,1092,3.278,1093,3.278,1106,3.028,1251,2.452,1407,3.941,1408,3.941,1731,3.021,1841,4.025,1844,3.099,1877,2.644,2093,2.255,2533,2.41,2536,2.255,2541,3.126,2542,3.126,2568,3.77,2569,3.185,2573,3.021,2577,3.278,2578,3.278,2579,4.121,2580,2.755,2581,2.947,2592,3.381,2593,3.495,2594,3.381,2595,3.495,2605,5.657,2611,3.381,2614,3.099,2639,4.147,2863,3.758,2900,5.657,2986,5.143,2987,7.076,2988,5.626,2989,4.147,2992,4.147,2993,4.147,2994,4.147,2995,4.147,3002,5.83,3065,6.439,4622,6.009,4668,4.749,4669,5.273,4670,5.273,4671,4.749,4672,4.749]],["title/classes/UserMatchMapper.html",[31,0.148,2906,4.124]],["body/classes/UserMatchMapper.html",[3,0.083,4,0.069,5,0.051,8,0.217,13,0.227,14,0.004,15,0.233,22,0.074,31,0.161,76,2.058,78,1.341,114,0.652,123,1.575,128,1.58,145,1.962,148,2.174,149,1.035,172,0.003,173,0.003,175,1.15,182,1.345,187,0.564,189,1.037,190,0.598,199,1.331,224,3.673,327,1.321,395,1.54,415,3.361,448,2.205,705,4.357,776,3.201,986,3.201,1065,3.46,1167,3.417,2093,3.651,2129,5.019,2541,2.489,2542,2.489,2568,5.438,2569,4.594,2570,6.93,2571,4.877,2580,2.992,2581,3.202,2582,4.281,2614,3.367,2646,6.504,2817,3.561,2863,4.461,2878,7.154,2894,5.159,2906,5.982,2908,4.785,2987,6.504,2988,5.867,3014,4.095,3016,4.505,3020,4.281,3072,4.095,3877,6.353,3879,4.785,3880,4.785,3889,5.159,3909,6.851,3914,5.159,3915,5.159,3916,5.159,4673,8.539,4674,5.728,4675,7.606,4676,5.728,4677,5.728,4678,5.728,4679,7.606,4680,5.728,4681,5.728,4682,5.728,4683,5.728,4684,7.606,4685,5.728,4686,5.728,4687,5.728,4688,5.728,4689,5.728,4690,5.728]],["title/classes/UserMatchResponse.html",[31,0.148,2987,3.749]],["body/classes/UserMatchResponse.html",[3,0.072,4,0.06,5,0.044,8,0.189,9,0.72,10,1.434,12,0.93,13,0.299,14,0.004,15,0.222,22,0.089,31,0.224,33,1.011,37,2.066,54,2.867,69,1.001,76,2.856,114,0.607,145,2.121,172,0.003,173,0.003,175,1.001,187,0.71,189,0.679,190,0.625,216,2.323,319,3.218,355,2.153,477,2.721,529,2.3,657,4.919,661,3.85,662,3.218,663,1.656,665,2.277,998,2.55,1003,3.469,1004,3.218,1075,4.067,1076,2.867,1077,3.098,1092,3.098,1093,3.098,1106,3.614,1251,2.318,1407,3.725,1408,3.725,1731,3.964,1841,4.436,1844,4.067,1877,3.469,2093,2.131,2533,3.162,2536,2.131,2541,3.92,2542,3.92,2568,5.683,2569,4.801,2573,3.964,2577,4.302,2578,4.302,2579,4.919,2580,3.615,2581,3.868,2592,3.195,2593,3.303,2594,3.195,2595,3.303,2605,5.442,2611,4.437,2614,4.672,2639,3.919,2863,5.101,2900,3.919,2986,4.947,2987,6.981,2988,6.2,2989,3.919,2992,3.919,2993,3.919,2994,3.919,2995,3.919,3002,6.472,3065,7.096,3145,3.919,4622,8.156,4668,4.489,4671,4.489,4672,6.233,4691,4.984,4692,4.984,4693,4.984,4694,4.984,4695,4.984,4696,4.984,4697,4.984,4698,4.984]],["title/modules/UserModule.html",[257,1.425,264,3.475]],["body/modules/UserModule.html",[3,0.107,4,0.089,5,0.066,14,0.004,15,0.245,19,1.35,22,0.095,31,0.209,172,0.003,173,0.003,257,2.432,259,2.931,260,4.019,264,7.034,267,5.677,268,4.485,269,3.503,270,3.114,272,3.825,279,3.785,327,1.706,975,3.163,977,4.088,3082,6.667,4600,8.034,4699,7.398,4700,7.398,4701,7.398]],["title/injectables/UserRepo.html",[18,1.009,267,2.863]],["body/injectables/UserRepo.html",[3,0.057,4,0.047,5,0.035,8,0.148,10,1.439,13,0.229,14,0.004,15,0.211,18,1.12,19,0.715,22,0.051,31,0.11,35,1.93,37,1.018,43,3.118,44,3.172,45,2.833,46,3.016,47,3.172,48,2.045,49,2.69,52,2.926,69,0.786,71,1.209,72,2.972,74,2.63,77,2.365,78,0.802,112,2.613,114,0.587,123,1.599,128,1.604,129,2.534,145,1.439,148,1.486,149,0.707,172,0.002,173,0.002,182,1.029,187,0.57,189,1.047,190,0.604,199,1.214,224,2.51,257,1.581,267,3.176,300,1.352,308,2.491,327,0.903,328,1.598,337,3.403,353,4.451,354,2.003,361,1.447,362,1.127,363,1.729,380,1.406,395,1.866,396,1.14,448,2.239,525,2.09,552,2.365,553,4.102,555,2.916,625,3.976,819,3.419,900,3.288,913,2.755,998,2.003,1003,1.963,1004,1.821,1057,2.188,1058,4.102,1129,3.73,1160,4.517,1166,4.159,1184,2.09,1185,3.176,1188,4.348,1189,4.348,1221,2.365,1223,4.348,1364,2.301,1373,2.003,1641,3.526,1693,4.159,1786,2.51,1841,3.413,1951,3.079,2093,1.674,2129,4.517,2183,3.176,2533,3.172,2535,4.295,2536,3.286,2541,1.701,2542,1.701,2583,6.841,2630,3.27,2646,5.494,2698,4.348,3014,2.799,3020,4.348,3025,6.419,3072,2.799,3093,4.575,3097,4.575,3177,3.079,3178,3.526,3180,3.526,3185,3.27,3186,2.595,3187,3.079,3189,5.743,3190,4.859,3191,4.575,4702,3.915,4703,6.942,4704,8.605,4705,3.915,4706,3.915,4707,3.915,4708,3.915,4709,5.817,4710,3.915,4711,3.915,4712,3.915,4713,3.915,4714,3.915,4715,5.817,4716,5.817,4717,3.915,4718,3.915,4719,6.942,4720,3.915,4721,3.915,4722,3.915,4723,5.817,4724,6.942,4725,3.915,4726,3.915,4727,3.915,4728,3.915,4729,3.27,4730,5.817,4731,3.915,4732,3.915,4733,5.817,4734,3.915,4735,3.915,4736,5.817,4737,5.817,4738,5.817,4739,5.817,4740,5.817,4741,5.817,4742,5.817,4743,6.942,4744,3.915,4745,3.915,4746,3.915,4747,3.915,4748,3.915]],["title/classes/ValidationError.html",[31,0.148,186,3.919]],["body/classes/ValidationError.html",[3,0.092,4,0.077,5,0.056,8,0.24,9,0.845,12,0.953,13,0.31,14,0.004,15,0.2,19,1.157,22,0.082,30,6.08,31,0.179,33,1.649,34,3.001,37,1.648,69,1.273,71,3.24,84,5.466,114,0.484,172,0.003,173,0.003,175,1.273,178,6.954,179,3.848,180,6.221,181,3.058,182,1.437,183,7.053,184,7.053,186,6.073,187,0.764,189,0.864,190,0.498,192,4.649,193,5.294,194,5.294,195,5.294,196,5.294,197,5.294,198,5.294,199,1.422,200,5.294,201,3.94,202,4.985,203,5.294,204,5.294,205,2.081,208,3.726,209,4.531,212,5.709,448,2.439,4749,6.338,4750,6.338,4751,6.338,4752,6.338]],["title/classes/ValidationErrorDetailResponse.html",[31,0.148,222,4.38]],["body/classes/ValidationErrorDetailResponse.html",[3,0.114,4,0.095,5,0.07,12,1.003,13,0.233,14,0.004,22,0.101,31,0.221,34,4.384,69,1.573,71,2.419,114,0.598,172,0.004,173,0.004,175,1.573,187,0.581,189,1.068,190,0.616,204,6.544,219,5.793,222,7.734,2629,7.281,4753,9.259,4754,7.835,4755,7.835,4756,7.835]],["title/modules/ValidationModule.html",[257,1.425,880,3.919]],["body/modules/ValidationModule.html",[3,0.114,4,0.095,5,0.07,14,0.004,15,0.242,19,1.433,22,0.101,31,0.221,172,0.004,173,0.004,257,2.52,259,3.111,272,3.358,880,6.93,894,8.351,1974,5.205,1984,4.102,2120,6.176,2463,7.744,4757,7.853,4758,7.853,4759,7.853]],["title/dependencies.html",[260,2.834,4760,3.94]],["body/dependencies.html",[4,0.053,5,0.056,10,0.901,13,0.13,14,0.004,19,0.794,24,2.789,31,0.177,43,2.822,74,1.767,77,2.221,121,2.556,127,2.789,172,0.002,173,0.002,207,2.225,260,1.954,275,3.42,277,3.917,298,4.226,322,1.359,361,1.835,362,1.251,363,1.921,472,2.789,663,1.446,818,3.42,828,5.069,858,2.491,868,2.138,871,2.375,882,3.109,884,2.988,940,2.988,1115,2.789,1119,4.317,1251,3.431,1310,2.988,1527,3.251,1688,3.917,1875,3.42,1932,2.988,1974,2.883,2058,3.633,2084,2.883,2085,4.029,2086,3.42,2183,3.431,2202,5.552,2203,3.633,2236,3.917,2289,2.627,2310,3.917,2945,3.917,3002,4.165,3242,3.109,3272,6.644,3273,3.109,3300,3.917,3378,3.251,3379,2.883,3414,3.251,3474,2.883,3737,3.917,3991,3.42,4040,6.868,4116,3.917,4761,6.284,4762,9.209,4763,4.349,4764,4.349,4765,4.349,4766,4.349,4767,4.349,4768,6.284,4769,4.349,4770,8.08,4771,4.349,4772,4.349,4773,4.349,4774,4.349,4775,4.349,4776,4.349,4777,4.349,4778,4.349,4779,4.349,4780,4.349,4781,3.633,4782,6.284,4783,4.349,4784,6.284,4785,4.349,4786,6.284,4787,4.349,4788,4.349,4789,4.349,4790,4.349,4791,4.349,4792,4.349,4793,6.284,4794,4.349,4795,6.284,4796,4.349,4797,4.349,4798,4.349,4799,4.349,4800,4.349,4801,4.349,4802,4.349,4803,4.349,4804,3.917,4805,4.349,4806,4.349,4807,4.349,4808,4.349,4809,6.284,4810,4.349,4811,4.349,4812,4.349,4813,7.377,4814,8.08,4815,4.349,4816,4.349,4817,4.349,4818,6.284,4819,4.349,4820,6.284,4821,6.284,4822,4.349,4823,4.941,4824,4.349,4825,4.349,4826,3.251,4827,4.349,4828,3.251,4829,4.349,4830,4.349,4831,5.66,4832,4.349,4833,4.349,4834,4.349,4835,4.349,4836,6.284,4837,4.349,4838,4.349,4839,4.349,4840,4.349,4841,4.349,4842,4.349,4843,4.349,4844,4.349,4845,4.349,4846,4.349,4847,4.349,4848,4.349,4849,4.349,4850,4.349,4851,4.349,4852,4.349,4853,4.349,4854,6.284,4855,5.66,4856,4.349,4857,4.349,4858,4.349,4859,4.349,4860,3.917,4861,4.349,4862,4.349,4863,6.284,4864,4.349,4865,4.349,4866,4.349,4867,4.349,4868,4.349,4869,4.349,4870,4.349,4871,4.349,4872,4.349,4873,4.349,4874,4.349,4875,4.349,4876,4.349,4877,6.284,4878,4.349,4879,4.349,4880,4.349,4881,4.349,4882,4.349,4883,4.349,4884,4.349,4885,4.349,4886,6.284,4887,3.917,4888,4.349,4889,4.349,4890,4.349,4891,4.349,4892,4.349,4893,4.349,4894,4.349,4895,4.349,4896,4.349,4897,3.917,4898,4.349,4899,4.349,4900,4.349,4901,4.349,4902,4.349,4903,4.349,4904,4.349,4905,4.349,4906,3.633,4907,4.349,4908,4.349,4909,4.349,4910,4.349,4911,4.349,4912,4.349,4913,4.349,4914,4.349,4915,4.349,4916,4.349,4917,4.349,4918,4.349,4919,4.349,4920,4.349]],["title/miscellaneous/enumerations.html",[4921,2.899,4922,5.683]],["body/miscellaneous/enumerations.html",[8,0.206,14,0.004,60,3.045,112,2.447,145,1.93,172,0.003,173,0.003,310,3.842,396,3.19,590,2.733,900,2.991,931,5.784,953,3.121,1107,2.787,1221,5.385,1850,3.743,1957,6.374,2289,4.442,2301,4.072,2519,4.284,2524,3.743,2525,3.895,2535,4.111,2541,3.196,2542,3.196,2549,4.284,2550,5.784,2553,7.011,2562,4.55,2563,6.955,2570,5.054,2571,4.716,2577,6.2,2578,5.542,2579,5.789,2580,5.011,2581,5.362,2582,4.072,2584,3.291,2638,3.291,2642,4.55,2643,5.497,2645,7.011,2863,4.863,2956,5.497,2957,6.223,2967,6.143,2974,6.143,2988,5.054,3015,6.143,3065,5.784,3212,6.624,4053,4.907,4143,4.907,4153,6.143,4162,6.143,4166,4.907,4167,4.907,4168,4.907,4169,4.907,4643,7.499,4921,3.611,4922,4.907,4923,8.386,4924,4.907,4925,5.448,4926,7.355,4927,5.448,4928,4.907,4929,5.448,4930,7.355,4931,5.448,4932,4.907,4933,7.355,4934,4.907,4935,4.907,4936,5.448,4937,5.448,4938,5.448,4939,4.55,4940,5.448,4941,5.448,4942,5.448,4943,5.448,4944,5.448]],["title/miscellaneous/functions.html",[4921,2.899,4945,4.715]],["body/miscellaneous/functions.html",[8,0.202,12,0.842,13,0.263,14,0.004,34,3.902,38,2.789,54,2.212,112,2.398,114,0.675,123,1.467,139,5.123,143,4.827,172,0.003,173,0.003,178,4.808,189,1.205,190,0.695,199,1.668,201,4.51,207,2.731,314,3.319,316,0.944,322,2.575,337,2.212,339,2.984,374,3.668,382,2.212,386,3.816,396,2.84,435,3.538,448,2.054,509,1.591,513,4.844,525,1.918,664,5.662,693,5.461,756,1.797,776,2.247,864,6.353,1119,6.703,1128,3.423,1265,5.34,1373,2.731,1689,5.422,1906,4.382,1981,3.711,2020,4.459,2048,3.99,2093,2.282,2096,4.198,2172,5.422,2181,4.155,2206,3.668,2230,4.808,2234,4.808,2239,4.808,2258,6.534,2273,3.668,2278,4.459,2293,4.808,2384,4.459,2385,6.953,2418,4.459,2421,4.808,2425,4.459,2440,6.059,2474,5.891,2810,3.224,2811,3.668,2977,7.422,2978,4.198,3221,3.423,3356,4.459,3567,3.99,3573,7.422,3988,6.159,4259,3.319,4494,4.459,4535,7.965,4828,3.99,4921,3.538,4945,3.99,4946,5.338,4947,5.338,4948,7.254,4949,7.422,4950,7.254,4951,7.254,4952,5.338,4953,5.338,4954,7.254,4955,5.338,4956,7.254,4957,5.338,4958,7.254,4959,5.338,4960,5.338,4961,5.338,4962,7.965,4963,4.808,4964,7.254,4965,4.808,4966,5.338,4967,5.338,4968,4.808,4969,4.459,4970,7.254,4971,7.254,4972,7.254,4973,4.808,4974,5.338,4975,4.808,4976,7.422,4977,4.808,4978,5.338,4979,5.338,4980,4.459,4981,4.808,4982,4.808,4983,5.338,4984,5.338,4985,8.24,4986,5.338,4987,4.459,4988,5.338,4989,5.338]],["title/index.html",[8,0.166,4990,3.653,4991,3.269]],["body/index.html",[10,0.979,14,0.004,34,3.156,37,2.008,54,1.958,84,2.641,114,0.509,149,0.853,172,0.003,173,0.003,179,3.657,180,2.937,181,1.611,207,3.41,211,2.994,216,1.175,218,3.131,260,2.122,298,5.068,325,3.131,368,3.715,374,5.765,375,3.918,378,5.242,379,3.029,381,2.641,382,1.958,386,3.378,395,1.27,404,3.639,414,3.131,430,2.777,548,2.579,829,4.766,830,5.338,868,4.349,888,3.029,890,3.378,945,3.531,979,4.665,1088,3.029,1114,2.854,1118,2.994,1125,3.378,1148,3.918,1185,2.579,1228,2.937,1233,3.029,1353,3.246,1703,3.029,1727,5.397,1739,3.029,1841,2.323,1855,6.27,1870,6.386,1877,2.369,1925,4.54,1930,3.378,1941,4.58,1952,3.818,1969,3.531,1970,2.641,1981,3.41,2054,2.777,2083,3.378,2084,3.131,2085,4.274,2132,5.773,2181,2.706,2183,3.639,2193,2.641,2202,5.765,2204,3.946,2213,4.58,2289,2.854,2435,4.58,2441,3.715,2480,3.378,2573,3.818,2624,3.131,2628,5.119,2826,2.777,2960,4.58,2971,5.998,3090,3.378,3226,3.029,3238,4.255,3460,3.946,3567,3.531,3680,2.854,3802,4.255,4334,3.246,4729,3.946,4828,3.531,4987,3.946,4992,3.715,4993,7.669,4994,6.004,4995,4.724,4996,4.982,4997,3.715,4998,3.378,4999,3.946,5000,3.715,5001,4.255,5002,3.946,5003,3.715,5004,5.568,5005,4.58,5006,4.255,5007,4.724,5008,6.004,5009,4.255,5010,3.946,5011,6.004,5012,5.568,5013,4.724,5014,4.724,5015,4.724,5016,3.715,5017,5.522,5018,3.946,5019,3.946,5020,6.666,5021,4.255,5022,3.946,5023,6.666,5024,4.255,5025,4.255,5026,3.531,5027,3.946,5028,7.724,5029,4.255,5030,4.724,5031,4.255,5032,6.957,5033,5.242,5034,4.724,5035,3.946,5036,3.715,5037,4.255,5038,4.724,5039,4.724,5040,3.946,5041,5.242,5042,4.724,5043,5.307,5044,4.724,5045,4.255,5046,3.531,5047,3.715,5048,4.724,5049,4.255,5050,6.666,5051,6.666,5052,3.531,5053,9.435,5054,6.957,5055,8.847,5056,8.39,5057,4.724,5058,4.724,5059,4.724,5060,4.724,5061,6.666,5062,5.568,5063,4.255,5064,4.724,5065,3.946,5066,4.724,5067,6.666,5068,4.724,5069,4.255,5070,4.255,5071,6.666,5072,6.666,5073,3.531,5074,3.531,5075,3.946,5076,4.724,5077,5.568,5078,4.724,5079,3.715,5080,4.724,5081,3.715,5082,4.724,5083,4.255,5084,4.255,5085,3.946,5086,5.242,5087,6.004,5088,4.724,5089,4.724,5090,4.255,5091,4.724,5092,3.946,5093,3.531]],["title/license.html",[4990,3.653,4991,3.269,5094,3.94]],["body/license.html",[0,0.51,2,0.753,4,0.115,5,0.017,14,0.001,15,0.025,31,0.029,35,0.287,37,0.491,40,1.593,45,0.421,46,0.448,56,1.487,60,2.816,72,0.356,73,5.28,78,0.142,82,0.488,112,2.776,118,0.684,127,0.661,145,1.409,149,0.91,168,0.415,172,0.001,173,0.001,179,4.245,180,0.641,182,0.182,187,0.076,211,1.455,218,1.253,246,0.684,252,0.591,253,2.818,270,0.434,312,2.545,314,2.014,316,0.334,319,0.879,324,2.358,325,4.245,339,2.376,340,3.025,360,0.334,365,3.241,369,3.899,382,3.179,387,6.026,391,0.33,404,2.321,427,0.577,430,1.904,431,4.096,447,1.563,453,0.641,455,0.661,462,2.165,473,1.703,474,1.579,496,7.286,520,1.658,548,1.032,599,0.862,601,0.463,649,0.895,681,1.798,807,0.737,825,0.661,827,1.142,830,0.539,843,0.684,871,1.032,884,0.709,889,0.811,900,0.371,935,0.661,938,2.058,943,0.862,1004,0.879,1028,0.862,1076,1.085,1088,0.661,1089,0.684,1121,0.661,1124,0.709,1128,2.423,1167,0.463,1185,1.032,1228,1.627,1233,2.077,1235,0.771,1237,2.226,1245,0.661,1353,1.798,1368,2.921,1373,1.934,1388,2.505,1399,0.684,1603,1.413,1702,5.836,1703,0.661,1729,1.957,1731,1.083,1844,1.111,1874,0.862,1877,1.895,1906,1.581,1907,3.843,1935,0.862,1941,1.798,1952,1.499,1981,3.037,1984,2.221,1996,0.929,1998,1.703,2021,2.358,2043,2.316,2054,0.606,2094,3.765,2129,1.904,2130,3.528,2132,3.765,2180,1.798,2193,1.057,2202,1.299,2220,0.737,2253,0.811,2279,0.684,2298,3.962,2407,1.299,2471,0.737,2481,2.226,2483,1.413,2535,3.318,2624,0.684,2628,0.684,2638,1.957,2801,0.737,2810,1.957,2826,3.331,2827,1.73,2828,0.771,2960,1.299,2971,4.051,3002,1.253,3088,1.579,3186,4.096,3239,0.862,3242,1.871,3354,0.771,3357,0.709,3359,0.771,3426,0.811,3454,0.737,3455,3.489,3457,0.862,3458,3.178,3461,2.186,3474,2.147,3485,1.352,3486,1.579,3487,2.706,3558,0.862,3567,4.62,3649,0.709,3680,2.568,3745,0.771,3794,2.186,3844,2.358,3849,0.811,3972,0.929,3988,1.413,3993,0.929,4252,1.871,4261,2.316,4334,3.461,4352,2.186,4356,0.929,4362,0.929,4493,1.579,4494,3.157,4512,2.358,4526,1.703,4543,2.316,4569,0.862,4579,4.836,4599,1.871,4828,0.771,4965,2.918,4968,0.929,4973,0.929,4975,0.929,4976,0.929,4981,0.929,4987,1.579,4993,0.862,5002,0.862,5009,0.929,5012,7.706,5017,3.337,5026,5.547,5027,7.152,5029,2.358,5035,3.899,5036,0.811,5043,2.921,5046,1.956,5062,0.862,5070,0.929,5073,1.956,5077,2.706,5079,1.487,5086,2.058,5094,9.301,5095,7.133,5096,6.972,5097,6.208,5098,7.933,5099,3.899,5100,1.032,5101,1.032,5102,2.617,5103,8.421,5104,5.823,5105,6.287,5106,3.78,5107,1.032,5108,1.032,5109,1.891,5110,3.78,5111,2.617,5112,2.617,5113,6.181,5114,0.929,5115,1.032,5116,1.032,5117,1.703,5118,3.78,5119,3.899,5120,1.891,5121,1.891,5122,5.953,5123,5.038,5124,1.032,5125,1.032,5126,4.251,5127,1.703,5128,0.929,5129,0.929,5130,5.346,5131,9.186,5132,2.358,5133,1.032,5134,1.032,5135,3.24,5136,5.369,5137,1.032,5138,5.369,5139,1.487,5140,1.032,5141,3.78,5142,0.771,5143,1.032,5144,3.24,5145,0.862,5146,6.123,5147,0.862,5148,0.929,5149,0.929,5150,5.667,5151,5.936,5152,3.78,5153,6.181,5154,1.032,5155,1.891,5156,1.032,5157,1.032,5158,2.358,5159,1.032,5160,1.032,5161,1.032,5162,1.703,5163,1.032,5164,1.032,5165,3.24,5166,1.032,5167,0.929,5168,2.617,5169,7.133,5170,1.032,5171,1.032,5172,1.032,5173,2.186,5174,2.617,5175,1.703,5176,1.032,5177,1.032,5178,0.811,5179,1.891,5180,1.891,5181,2.617,5182,1.032,5183,5.349,5184,3.78,5185,3.78,5186,4.251,5187,2.186,5188,2.617,5189,1.891,5190,1.032,5191,1.032,5192,1.032,5193,2.617,5194,1.032,5195,1.032,5196,1.891,5197,1.032,5198,1.891,5199,1.032,5200,1.032,5201,3.24,5202,0.929,5203,1.891,5204,9.145,5205,2.617,5206,5.369,5207,2.918,5208,1.487,5209,1.032,5210,1.891,5211,2.617,5212,5.369,5213,5.667,5214,3.24,5215,1.891,5216,3.24,5217,2.918,5218,1.032,5219,2.617,5220,0.811,5221,8.179,5222,1.703,5223,1.032,5224,5.038,5225,1.032,5226,2.358,5227,3.039,5228,1.032,5229,6.798,5230,2.358,5231,1.891,5232,5.936,5233,4.251,5234,1.032,5235,1.891,5236,4.668,5237,1.032,5238,6.404,5239,1.891,5240,1.032,5241,0.862,5242,1.032,5243,2.617,5244,1.032,5245,1.032,5246,1.032,5247,0.862,5248,5.346,5249,2.617,5250,2.918,5251,1.032,5252,1.032,5253,1.032,5254,1.703,5255,5.667,5256,0.929,5257,0.862,5258,0.862,5259,2.358,5260,2.617,5261,2.617,5262,0.862,5263,1.032,5264,3.404,5265,3.157,5266,0.929,5267,1.352,5268,2.358,5269,1.032,5270,0.929,5271,1.032,5272,1.032,5273,1.703,5274,1.032,5275,7.444,5276,2.358,5277,0.771,5278,3.829,5279,4.958,5280,1.891,5281,1.891,5282,3.157,5283,1.032,5284,0.771,5285,1.032,5286,1.032,5287,1.891,5288,3.157,5289,1.032,5290,1.579,5291,1.032,5292,0.811,5293,3.157,5294,1.032,5295,0.862,5296,4.668,5297,2.706,5298,1.032,5299,3.404,5300,1.032,5301,1.032,5302,1.032,5303,1.032,5304,1.032,5305,1.032,5306,2.617,5307,1.032,5308,1.032,5309,1.703,5310,1.891,5311,1.891,5312,1.032,5313,6.404,5314,1.703,5315,1.032,5316,1.032,5317,0.929,5318,1.032,5319,1.032,5320,2.617,5321,0.929,5322,1.032,5323,6.123,5324,0.811,5325,1.032,5326,1.032,5327,1.032,5328,3.78,5329,3.829,5330,1.032,5331,1.032,5332,2.617,5333,1.032,5334,1.032,5335,3.24,5336,1.032,5337,1.703,5338,1.032,5339,1.032,5340,1.032,5341,1.032,5342,1.032,5343,1.032,5344,1.891,5345,1.032,5346,1.032,5347,1.032,5348,1.891,5349,1.032,5350,1.032,5351,1.032,5352,1.032,5353,1.032,5354,1.891,5355,1.891,5356,4.836,5357,1.032,5358,4.251,5359,1.032,5360,1.032,5361,1.703,5362,2.617,5363,3.24,5364,3.24,5365,3.24,5366,1.032,5367,3.404,5368,3.404,5369,1.032,5370,2.617,5371,1.032,5372,1.891,5373,1.032,5374,1.703,5375,3.78,5376,1.891,5377,3.24,5378,3.24,5379,1.032,5380,2.617,5381,3.404,5382,1.032,5383,1.032,5384,2.186,5385,3.899,5386,2.617,5387,1.891,5388,0.771,5389,1.032,5390,0.929,5391,1.032,5392,1.032,5393,1.032,5394,2.358,5395,1.032,5396,1.032,5397,1.703,5398,1.032,5399,1.032,5400,1.891,5401,1.032,5402,2.617,5403,0.929,5404,1.032,5405,0.929,5406,2.186,5407,1.891,5408,4.251,5409,6.911,5410,2.617,5411,1.891,5412,1.891,5413,1.891,5414,1.891,5415,3.24,5416,1.703,5417,0.929,5418,1.032,5419,1.032,5420,1.032,5421,3.829,5422,1.891,5423,1.032,5424,1.032,5425,1.032,5426,1.032,5427,1.891,5428,1.032,5429,1.891,5430,1.032,5431,1.032,5432,3.765,5433,1.032,5434,5.346,5435,0.929,5436,1.032,5437,1.032,5438,1.032,5439,1.891,5440,1.032,5441,2.825,5442,3.24,5443,1.891,5444,0.929,5445,1.032,5446,1.032,5447,1.032,5448,1.032,5449,1.891,5450,1.032,5451,1.032,5452,0.862,5453,2.918,5454,1.032,5455,1.891,5456,1.891,5457,1.032,5458,1.032,5459,2.358,5460,1.032,5461,1.032,5462,1.032,5463,1.032,5464,3.24,5465,1.032,5466,1.032,5467,1.032,5468,0.929,5469,0.929,5470,2.186,5471,1.032,5472,0.929,5473,1.032,5474,1.032,5475,1.032,5476,3.78,5477,1.032,5478,1.032,5479,0.929,5480,3.24,5481,1.032,5482,1.032,5483,1.032,5484,1.032,5485,1.032,5486,1.032,5487,0.929,5488,3.899,5489,2.617,5490,1.032,5491,3.24,5492,1.032,5493,1.032,5494,2.617,5495,1.032,5496,0.862,5497,2.617,5498,1.032,5499,1.891,5500,1.032,5501,1.032,5502,1.032,5503,1.032,5504,1.032,5505,1.032,5506,0.811,5507,0.929,5508,1.032,5509,1.703,5510,1.032,5511,0.771,5512,1.891,5513,0.929,5514,1.032,5515,3.24,5516,1.032,5517,1.032,5518,1.891,5519,2.617,5520,2.617,5521,0.862,5522,1.891,5523,1.032,5524,2.617,5525,4.668,5526,1.032,5527,1.891,5528,1.703,5529,1.032,5530,1.891,5531,1.032,5532,1.032,5533,1.032,5534,1.891,5535,1.032,5536,3.24,5537,2.617,5538,1.032,5539,3.78,5540,1.032,5541,1.032,5542,1.032,5543,1.032,5544,1.032,5545,1.891,5546,1.891,5547,1.703,5548,2.617,5549,0.929,5550,1.891,5551,1.032,5552,2.617,5553,1.032,5554,1.579,5555,1.032,5556,1.891,5557,1.032,5558,1.032,5559,1.891,5560,7.894,5561,2.617,5562,1.032,5563,3.78,5564,5.667,5565,2.617,5566,1.032,5567,1.032,5568,1.032,5569,3.24,5570,0.862,5571,1.032,5572,1.032,5573,1.032,5574,1.032,5575,1.032,5576,1.032,5577,1.032,5578,1.032,5579,1.032,5580,3.24,5581,1.891,5582,1.032,5583,1.032,5584,2.617,5585,1.032,5586,1.891,5587,2.617,5588,0.929,5589,1.891,5590,1.032,5591,1.032,5592,1.032,5593,1.032,5594,1.891,5595,2.617,5596,0.929,5597,1.032,5598,1.032,5599,1.891,5600,1.032,5601,0.929,5602,1.032,5603,1.032,5604,1.032,5605,2.617,5606,1.891,5607,0.929,5608,1.032,5609,1.032,5610,3.24,5611,1.032,5612,2.617,5613,1.032,5614,1.032,5615,1.891,5616,1.032,5617,1.032,5618,1.032,5619,2.617,5620,1.891,5621,1.891,5622,1.032,5623,1.891,5624,4.668,5625,1.703,5626,2.617,5627,3.24,5628,0.929,5629,1.032,5630,1.891,5631,1.032,5632,2.617,5633,1.032,5634,1.703,5635,1.032,5636,1.032,5637,1.032,5638,1.032,5639,1.032,5640,2.617,5641,1.891,5642,1.032,5643,0.929,5644,1.032,5645,1.032,5646,1.891,5647,1.891,5648,1.032,5649,1.703,5650,1.032,5651,1.032,5652,0.862,5653,1.032,5654,2.617,5655,1.032,5656,1.032,5657,1.032,5658,1.032,5659,1.891,5660,2.617,5661,1.032,5662,1.032,5663,1.032,5664,1.032,5665,1.891,5666,1.032,5667,1.032,5668,1.032,5669,1.032,5670,1.032,5671,1.032,5672,1.032,5673,1.032,5674,0.811,5675,1.032,5676,1.032,5677,1.032,5678,1.032,5679,1.032,5680,3.24,5681,1.032,5682,1.032,5683,1.891,5684,1.032,5685,1.032,5686,1.032,5687,1.032,5688,1.032,5689,1.032,5690,1.032,5691,0.862,5692,1.032,5693,1.032,5694,1.032,5695,0.929,5696,1.891,5697,1.032,5698,1.032,5699,1.032,5700,1.032,5701,0.929,5702,1.891,5703,1.032,5704,0.862,5705,1.032,5706,0.929,5707,0.929,5708,0.862,5709,0.737,5710,1.032,5711,1.891,5712,1.891,5713,1.032,5714,1.703,5715,1.032,5716,0.929,5717,1.032,5718,1.032,5719,2.617,5720,1.579,5721,1.032,5722,1.703,5723,1.891,5724,1.891,5725,1.032,5726,0.862,5727,0.929,5728,1.032,5729,0.929,5730,1.579,5731,1.032,5732,1.032,5733,1.032,5734,1.891,5735,1.032,5736,1.032,5737,2.617,5738,1.032,5739,1.032,5740,1.032,5741,1.032,5742,1.032,5743,1.032,5744,1.032,5745,1.032,5746,1.032,5747,0.929,5748,1.032,5749,0.862,5750,1.032,5751,1.032,5752,0.929,5753,1.032,5754,1.032,5755,1.032,5756,1.032,5757,1.032,5758,1.032,5759,1.032,5760,1.032,5761,1.032,5762,0.811,5763,0.929,5764,1.891,5765,1.703,5766,1.032,5767,1.032,5768,0.862,5769,1.032,5770,1.032,5771,1.032,5772,1.032,5773,1.032,5774,1.032,5775,1.032,5776,0.929,5777,0.811,5778,1.032,5779,0.862,5780,1.032,5781,1.032,5782,1.032,5783,1.032,5784,1.032,5785,1.032]],["title/modules.html",[259,2.839]],["body/modules.html",[14,0.003,172,0.003,173,0.003,258,4.547,259,2.622,264,4.386,286,4.731,291,4.731,365,5.609,850,4.946,874,4.547,877,4.946,878,4.946,879,4.114,880,4.946,1769,4.946,2103,5.204,2329,4.946,2335,4.386,3077,4.547,3242,7.783,3310,4.547,3373,4.731,3408,4.946,3433,4.547,3635,4.547,3895,4.946,3996,4.946,4008,4.731,4011,4.547,4049,4.946,5786,10.887,5787,10.887,5788,9.911,5789,10.274]],["title/overview.html",[5790,5.636]],["body/overview.html",[2,1.094,14,0.004,172,0.002,173,0.002,175,0.764,258,6.676,259,1.506,260,2.557,261,3.425,262,3.425,263,3.425,264,6.15,265,5.366,266,5.099,267,4.818,268,2.854,269,1.801,270,1.6,286,6.755,287,3.425,288,3.425,289,3.425,290,3.425,291,6.086,292,5.849,293,4.878,300,1.313,322,1.189,594,4.575,595,5.02,596,5.02,602,4.878,703,5.099,799,4.878,850,6.363,851,3.425,852,3.425,853,3.425,854,6.015,874,6.676,875,3.425,876,3.425,877,5.099,878,5.099,879,5.769,880,5.099,897,5.055,977,1.738,990,5.099,1271,5.099,1552,4.878,1710,4.522,1769,6.363,1770,3.425,1771,3.425,1772,3.425,1773,6.235,1837,6.309,1992,5.099,2015,5.099,2141,6.064,2176,3.425,2177,3.425,2178,3.425,2229,5.099,2329,6.363,2330,3.425,2331,3.425,2332,3.425,2335,6.627,2336,3.425,2337,3.425,2339,5.366,2909,5.099,3077,6.814,3078,3.425,3079,3.425,3081,5.099,3082,5.2,3310,7.135,3311,3.425,3312,3.425,3368,3.425,3369,3.425,3370,3.425,3408,7.473,3409,3.425,3410,3.425,3433,4.688,3540,6.064,3635,6.749,3636,3.425,3638,3.425,3639,3.425,3640,4.878,3996,6.783,3997,3.425,4008,7.29,4009,3.425,4010,3.425,4011,7.006,4049,7.697,4050,3.425,4051,3.425,4142,5.099,4226,5.099,4285,3.425,4286,3.425,5337,3.425,5790,2.991,5791,3.803,5792,3.803,5793,3.803,5794,3.803,5795,3.803]],["title/todo.html",[380,1.571,4990,3.653,4991,3.269]],["body/todo.html",[2,1.299,5,0.04,9,0.47,10,1.338,12,0.43,13,0.192,14,0.004,17,2.586,31,0.127,34,3.056,40,2.219,44,2.949,69,0.906,72,2.601,74,2.118,77,1.241,112,2.028,114,0.493,144,3.55,145,1.338,172,0.002,173,0.002,179,2.138,207,3.854,208,2.653,210,3.55,211,3.906,219,2.653,257,2.363,270,2.716,273,2.028,295,2.263,298,3.697,316,1.684,322,1.411,327,1.041,339,2.523,371,6.292,374,4.434,375,5.597,380,1.622,381,4.21,382,3.406,395,2.209,411,2.653,427,2.523,431,2.41,447,2.177,504,2.138,520,4.448,524,2.992,548,5.434,555,3.236,649,2.138,776,2.716,808,4.614,813,2.806,824,4.434,882,4.614,888,4.138,892,2.806,893,3.374,896,3.55,897,2.586,944,5.63,975,1.93,979,2.727,1088,2.894,1118,2.028,1148,2.653,1228,4.012,1527,3.374,1715,2.177,1727,2.653,1729,2.727,1730,2.219,1731,2.586,1786,4.83,1844,2.653,1870,4.992,1907,2.806,1933,2.727,1941,4.434,1970,5.205,1981,2.309,2003,3.102,2054,3.794,2067,4.066,2083,3.227,2085,4.138,2094,3.374,2116,2.894,2131,4.012,2181,4.315,2183,3.524,2193,4.21,2214,5.391,2324,3.771,2383,3.227,2385,3.55,2406,3.102,2434,5.975,2435,4.434,2466,6.838,2471,3.227,2487,3.55,2655,4.614,3089,3.771,3091,3.771,3189,3.374,3223,3.374,3240,3.771,3242,3.227,3271,3.771,3273,3.227,3354,3.374,3364,3.102,3442,6.785,3454,3.227,3455,3.374,3469,3.227,3474,2.992,3487,3.771,3591,3.55,3648,3.227,3649,3.102,3680,2.727,3917,5.877,4013,3.55,4040,5.385,4261,3.227,4359,4.066,4598,4.066,4760,4.066,4855,4.066,4887,4.066,4997,5.075,4998,3.227,5018,3.771,5019,3.771,5022,3.771,5065,3.771,5074,3.374,5081,3.55,5092,3.771,5139,3.55,5142,3.374,5258,3.771,5270,4.066,5277,3.374,5284,5.63,5317,4.066,5361,4.066,5452,3.771,5570,3.771,5716,5.813,5762,5.075,5796,3.771,5797,4.514,5798,4.066,5799,4.066,5800,3.55,5801,3.771,5802,4.514,5803,4.514,5804,4.066,5805,5.813,5806,4.824,5807,4.066,5808,4.514,5809,7.832,5810,4.514,5811,4.514,5812,3.55,5813,4.514,5814,4.514,5815,4.514,5816,3.374,5817,4.514,5818,4.514,5819,4.066,5820,4.514,5821,4.514,5822,4.514,5823,4.514,5824,4.514,5825,4.514,5826,4.514,5827,4.514,5828,4.514,5829,4.514,5830,4.514,5831,4.514,5832,4.514,5833,4.066,5834,4.514,5835,3.771,5836,4.514,5837,4.514,5838,4.514,5839,4.514,5840,4.514,5841,4.514,5842,3.374,5843,4.066,5844,4.066,5845,4.514,5846,4.514,5847,4.066,5848,4.066,5849,4.066,5850,4.514,5851,4.066,5852,3.771,5853,4.514,5854,4.514,5855,4.514,5856,4.514,5857,4.514,5858,3.771,5859,4.514,5860,6.785,5861,4.514,5862,4.514,5863,4.514,5864,4.514,5865,4.514,5866,4.514,5867,3.771,5868,3.771,5869,4.514,5870,6.454,5871,4.066,5872,4.514]],["title/miscellaneous/typealiases.html",[4921,2.899,5873,6.309]],["body/miscellaneous/typealiases.html",[0,0.615,6,4.204,7,5.91,8,0.213,9,0.585,10,1.558,12,0.536,13,0.313,14,0.004,29,5.91,30,5.261,37,1.462,72,2.595,112,3.376,118,3.728,145,1.166,172,0.003,173,0.003,257,2.043,308,2.436,316,0.995,322,1.758,340,4.012,352,4.699,353,3.607,364,4.699,365,3.071,366,3.607,367,5.617,421,5.314,436,4.517,440,4.2,585,4.699,589,6.277,590,1.847,900,2.021,930,4.981,998,2.878,1057,4.73,1090,4.699,1107,2.878,1109,4.818,1118,3.376,1204,5.164,1213,5.164,1290,4.204,1307,5.91,1321,5.617,1327,4.818,1330,5.617,1356,5.91,1786,3.607,2070,4.022,2191,4.699,2192,6.655,2197,6.277,2205,6.277,2519,4.424,2526,4.022,2527,5.617,2531,4.424,2536,3.213,2540,4.022,2543,5.91,2549,4.424,2550,5.91,2551,5.91,2674,3.728,2743,4.204,2748,5.617,3374,4.424,3384,5.91,3385,6.277,3427,4.022,3434,4.699,3435,5.373,3438,5.91,3474,4.981,3488,5.067,3576,4.424,3584,6.277,3721,5.067,3752,4.699,3753,4.699,3866,5.067,3969,5.067,4921,3.728,4924,5.067,4928,6.769,4932,5.067,4935,5.067,5444,5.067,5874,5.625,5875,5.625,5876,5.625,5877,7.515,5878,7.515,5879,5.625,5880,8.477,5881,7.515,5882,5.625,5883,7.515,5884,7.515,5885,5.625,5886,5.625,5887,5.625,5888,5.067,5889,5.625,5890,5.067,5891,6.769,5892,5.067,5893,5.625,5894,7.515,5895,5.625,5896,7.515,5897,5.625,5898,5.067,5899,5.625,5900,5.067,5901,5.625,5902,4.022,5903,5.067,5904,5.625,5905,5.067,5906,5.625,5907,5.625,5908,5.625]],["title/miscellaneous/variables.html",[4921,2.899,5909,4.962]],["body/miscellaneous/variables.html",[5,0.024,8,0.058,9,0.159,12,0.722,13,0.255,14,0.004,17,0.875,22,0.047,24,2.314,25,1.092,26,1.092,27,1.092,28,1.092,34,4.585,35,1.003,37,0.938,38,2.272,43,1.954,44,1.988,45,1.775,46,1.89,47,1.988,48,1.406,49,1.05,54,0.633,69,0.307,72,1.246,74,1.539,76,1.297,77,1.364,78,1.339,114,0.48,121,1.583,123,1.196,128,1.437,129,1.947,138,1.784,139,1.674,140,1.784,143,0.834,145,1.529,148,1.022,149,1.369,168,1.082,172,0.001,173,0.001,174,1.925,178,1.784,179,1.275,181,1.866,182,0.27,199,0.267,201,2.244,207,1.377,208,0.898,209,1.092,216,0.898,217,1.85,219,1.583,257,0.415,258,1.05,264,1.013,270,0.643,272,1.151,281,2.698,298,2.068,308,0.495,314,0.95,322,0.841,326,1.142,337,0.633,353,0.98,355,0.352,360,0.495,365,0.834,375,1.583,379,0.98,380,0.967,382,0.633,387,0.898,391,1.156,395,2.79,396,2.999,411,2.122,416,1.35,418,6.249,421,0.798,428,0.923,431,1.437,434,0.854,440,1.505,442,1.013,447,0.737,502,1.05,504,2.349,513,2.557,517,1.925,518,3.11,520,0.782,524,1.784,525,1.782,553,0.816,555,0.766,590,2.264,591,1.543,593,1.252,601,2.458,649,0.724,661,0.614,674,0.875,692,1.406,756,0.514,808,1.092,813,3.084,819,3.217,825,1.726,827,0.923,830,0.798,831,3.015,832,1.202,858,2.068,868,1.324,874,1.05,892,0.95,893,1.142,897,2.492,898,1.85,899,1.276,900,2.723,913,0.724,940,1.05,948,1.05,949,1.276,975,0.653,977,0.698,982,1.971,985,2.996,986,1.133,988,1.726,1006,2.117,1007,1.376,1023,2.117,1026,2.425,1027,1.376,1028,2.249,1029,1.376,1030,1.202,1032,1.376,1033,1.376,1034,1.376,1035,4.647,1036,1.376,1037,1.013,1085,0.875,1102,0.98,1104,1.774,1107,1.377,1112,1.971,1114,0.923,1115,0.98,1118,2.654,1153,1.013,1154,1.013,1225,1.376,1226,2.249,1228,1.674,1243,4.091,1252,2.58,1255,1.437,1290,1.142,1327,0.98,1352,2.117,1353,1.05,1388,1.013,1459,1.05,1476,0.98,1601,1.092,1603,1.142,1611,0.898,1644,1.276,1656,2.249,1657,2.249,1658,1.276,1659,1.276,1689,1.142,1703,2.314,1715,1.299,1726,1.05,1727,1.583,1729,0.923,1731,0.875,1753,1.142,1850,2.48,1855,1.142,1870,1.784,1877,1.35,1907,0.95,1918,1.202,1925,2.122,1952,0.875,1964,1.276,1965,1.376,1966,3.251,1969,1.142,1970,3.059,1971,1.202,1975,2.425,1976,2.249,1977,1.376,1978,1.376,1981,1.846,1982,2.425,1983,1.202,1984,1.885,1985,1.013,1986,1.142,2033,1.925,2036,1.142,2051,1.202,2054,1.583,2084,1.013,2085,1.726,2095,1.05,2109,0.98,2116,2.789,2131,0.95,2172,2.012,2181,0.875,2182,0.898,2183,1.47,2193,0.854,2212,1.276,2219,1.276,2220,1.092,2247,2.117,2249,1.202,2255,1.276,2256,1.276,2257,2.425,2270,1.142,2307,1.376,2324,1.276,2327,1.276,2335,1.013,2370,4.091,2375,1.276,2376,1.376,2380,1.376,2382,3.251,2383,1.092,2384,1.276,2385,4.942,2387,2.425,2388,2.58,2400,2.425,2401,1.376,2402,2.425,2403,1.376,2404,1.202,2405,2.425,2406,2.48,2407,1.05,2408,2.425,2409,1.376,2410,2.425,2411,1.376,2412,1.276,2413,1.376,2414,1.376,2415,1.376,2416,1.376,2417,1.376,2418,1.276,2425,1.276,2431,2.425,2432,1.202,2433,1.276,2434,1.05,2435,2.48,2436,2.425,2437,1.276,2438,2.425,2439,1.376,2440,2.249,2441,2.117,2442,1.376,2443,1.376,2444,2.425,2445,1.376,2446,1.376,2447,1.376,2448,1.376,2449,1.376,2450,1.376,2451,4.468,2452,2.425,2453,4.468,2454,1.376,2455,1.376,2456,1.376,2468,2.249,2474,1.092,2532,1.013,2533,1.23,2536,1.151,2538,1.142,2541,1.17,2542,1.17,2564,1.013,2565,0.875,2566,1.142,2567,1.202,2569,0.923,2580,0.798,2584,0.923,2636,1.276,2685,1.276,2698,2.012,2708,1.674,2810,0.923,2817,0.95,2827,2.322,2938,2.249,2939,1.376,2940,2.425,2944,1.376,2946,2.425,2948,1.376,2949,1.376,2950,1.376,2951,1.376,2952,1.376,2953,2.249,2954,1.202,2955,1.376,2957,2.012,3077,1.05,3089,1.276,3090,3.913,3186,1.013,3189,2.698,3190,1.276,3191,2.117,3232,1.376,3233,1.376,3234,2.249,3235,1.376,3252,1.376,3258,1.376,3259,1.376,3271,1.276,3273,3.547,3289,1.376,3290,2.425,3301,1.376,3310,1.05,3324,2.249,3325,1.376,3327,1.376,3328,2.425,3329,3.251,3357,1.05,3364,1.85,3374,1.202,3377,2.249,3382,1.05,3383,1.05,3384,1.202,3386,2.249,3387,1.276,3388,1.276,3389,1.276,3390,1.202,3391,1.276,3413,2.012,3415,1.202,3416,1.202,3417,2.698,3427,1.925,3428,1.202,3429,2.117,3430,1.202,3431,2.117,3434,1.276,3435,2.58,3436,1.376,3437,2.425,3443,1.376,3445,3.918,3447,2.425,3448,1.376,3449,2.425,3450,1.376,3451,1.376,3452,1.376,3453,1.276,3454,1.092,3455,1.142,3456,1.202,3457,1.276,3458,1.142,3459,2.117,3460,1.276,3461,1.276,3462,1.376,3463,1.376,3464,1.376,3465,1.376,3466,1.376,3467,1.376,3469,1.925,3474,1.013,3565,1.376,3576,1.202,3583,2.249,3635,1.05,3648,1.092,3649,2.48,3711,2.249,3794,1.276,3991,2.117,3996,1.142,4011,1.05,4012,1.276,4025,4.416,4028,2.249,4029,1.276,4030,1.276,4031,1.276,4032,1.276,4033,1.276,4034,1.276,4035,1.276,4036,1.276,4037,1.276,4038,1.276,4039,2.249,4055,1.376,4083,2.249,4084,1.376,4086,2.117,4088,2.117,4090,1.376,4091,1.376,4092,4.929,4244,1.376,4249,3.251,4250,1.376,4251,1.376,4252,1.092,4259,1.674,4334,1.05,4530,1.376,4533,2.425,4535,3.015,4536,1.376,4537,1.376,4538,1.376,4539,1.376,4542,1.202,4549,2.425,4578,1.202,4612,1.376,4616,2.425,4619,1.376,4620,1.376,4621,1.376,4804,1.376,4826,2.698,4921,1.013,4923,1.376,4934,3.918,4945,2.012,4949,5.322,4962,1.276,4992,2.117,4999,1.276,5001,1.376,5017,2.58,5022,2.249,5032,1.376,5033,1.202,5052,1.142,5079,1.202,5084,1.376,5241,1.276,5277,1.142,5284,1.142,5288,1.276,5704,1.276,5722,1.376,5801,1.276,5812,3.421,5835,1.276,5842,1.142,5847,2.425,5860,1.376,5880,1.376,5888,1.376,5890,2.425,5891,3.918,5892,3.251,5900,1.376,5905,1.376,5909,1.202,5910,1.528,5911,4.35,5912,1.528,5913,2.693,5914,1.528,5915,2.693,5916,3.918,5917,2.693,5918,2.693,5919,2.693,5920,1.528,5921,2.693,5922,3.609,5923,1.528,5924,3.609,5925,1.528,5926,2.693,5927,2.693,5928,2.693,5929,1.528,5930,2.693,5931,2.693,5932,1.528,5933,2.693,5934,1.528,5935,1.528,5936,2.693,5937,1.528,5938,2.693,5939,2.693,5940,3.609,5941,4.35,5942,1.528,5943,1.528,5944,2.693,5945,3.609,5946,2.693,5947,1.528,5948,2.693,5949,1.528,5950,1.528,5951,1.528,5952,1.528,5953,2.693,5954,2.693,5955,1.528,5956,2.693,5957,2.693,5958,1.528,5959,1.528,5960,1.528,5961,1.528,5962,1.528,5963,1.528,5964,2.693,5965,1.528,5966,1.528,5967,1.528,5968,2.693,5969,1.142,5970,1.376,5971,1.528,5972,1.528,5973,1.376,5974,1.528,5975,1.528,5976,1.376,5977,1.528,5978,1.528,5979,1.528,5980,1.528,5981,1.528,5982,1.528,5983,1.528,5984,1.528,5985,1.528,5986,1.528,5987,2.249,5988,1.376,5989,1.376,5990,1.376,5991,1.528,5992,1.528,5993,1.376,5994,1.528,5995,2.425,5996,1.528,5997,1.528,5998,1.528,5999,1.528,6000,1.528,6001,1.376,6002,1.528,6003,2.693,6004,3.251,6005,1.528,6006,1.376,6007,1.528,6008,1.528,6009,1.528,6010,1.528,6011,1.528,6012,1.528,6013,1.528,6014,1.528,6015,1.528,6016,1.528,6017,1.528,6018,1.528,6019,1.528,6020,1.528,6021,1.528,6022,1.528,6023,1.528,6024,1.528,6025,1.142,6026,1.528,6027,1.528,6028,1.528,6029,1.528,6030,1.528,6031,1.528,6032,1.528,6033,1.528,6034,1.528,6035,1.528,6036,1.528,6037,1.528,6038,1.528,6039,1.528,6040,1.528,6041,1.528,6042,1.528,6043,1.528,6044,1.528,6045,1.528,6046,1.528,6047,1.528,6048,2.693,6049,1.528,6050,1.528,6051,1.528,6052,1.528,6053,1.528,6054,1.376,6055,1.528,6056,1.528,6057,1.528,6058,1.528,6059,1.528,6060,1.528,6061,1.528,6062,1.528,6063,1.528,6064,1.528,6065,1.528,6066,1.528,6067,1.528,6068,1.376,6069,1.376,6070,1.528,6071,1.528,6072,1.528,6073,1.528,6074,1.528,6075,1.528,6076,1.528]],["title/additional-documentation/nestjs-application.html",[830,1.96,868,1.844,2130,2.003,3796,2.205]],["body/additional-documentation/nestjs-application.html",[2,1.116,14,0.003,33,0.787,40,1.907,43,3.436,47,2.641,112,1.743,114,0.296,172,0.002,173,0.002,179,4.061,180,3.592,211,3.436,257,1.571,259,1.537,269,1.837,298,3.31,314,3.592,325,2.571,365,2.118,375,5.85,381,3.23,382,3.783,395,1.043,404,2.118,411,4.497,415,2.385,416,1.945,447,2.787,472,3.705,520,1.985,548,2.118,601,1.743,808,4.131,826,2.9,827,2.343,828,2.666,830,5.034,858,4.686,868,4.586,871,2.118,885,3.051,938,3.051,940,2.666,1076,2.861,1088,4.905,1089,3.83,1193,2.774,1237,3.97,1240,2.488,1611,4.497,1703,3.705,1720,4.319,1722,4.131,1727,2.281,1729,2.343,1731,3.31,1735,4.827,1739,4.905,1786,2.488,1841,1.907,1900,3.241,1907,4.293,1933,2.343,1952,2.223,1970,4.794,1981,3.914,1986,2.9,2033,2.774,2043,4.131,2084,2.571,2085,2.488,2130,2.071,2131,2.412,2132,4.319,2181,3.31,2183,2.118,2193,3.23,2202,2.666,2220,2.774,2279,2.571,2323,3.051,2434,5.257,2441,3.051,2480,4.131,2577,2.412,2579,2.223,2611,2.488,2654,2.9,2826,2.281,3219,3.241,3226,3.705,3355,3.241,3357,2.666,3379,5.07,3396,3.495,3456,3.051,3471,3.495,3485,2.774,3591,3.051,3648,5.848,3649,5.257,3653,2.9,3796,3.397,4013,4.544,4042,3.241,4043,4.544,4259,2.412,4295,3.241,4334,3.97,4543,4.131,4826,2.9,4831,3.495,4897,3.495,4906,3.241,4977,3.495,4991,4.319,4992,3.051,4993,3.241,4996,2.9,4997,7.756,4999,4.827,5000,3.051,5003,3.051,5006,3.495,5016,5.43,5017,7.27,5033,3.051,5046,2.9,5054,3.495,5065,3.241,5074,2.9,5079,6.433,5093,2.9,5098,3.495,5104,3.241,5114,3.495,5241,3.241,5266,5.205,5267,2.774,5276,3.495,5277,5.161,5323,3.495,5432,2.9,5441,4.319,5479,6.219,5511,2.9,5554,3.241,5601,3.495,5607,3.495,5726,4.827,5749,3.241,5777,3.051,5788,3.495,5790,3.051,5809,3.495,5812,7.179,5842,5.718,5843,5.205,5848,6.219,5849,6.219,5902,4.131,5916,3.495,5987,4.827,5988,5.205,5989,3.495,5990,3.495,5993,5.205,6004,3.495,6077,3.88,6078,3.241,6079,3.88,6080,5.621,6081,3.88,6082,3.88,6083,3.88,6084,3.88,6085,3.88,6086,3.88,6087,3.88,6088,3.88,6089,5.779,6090,3.88,6091,3.88,6092,3.88,6093,5.205,6094,5.779,6095,7.65,6096,3.88,6097,3.88,6098,3.88,6099,3.241,6100,3.88,6101,7.65,6102,3.88,6103,3.495,6104,3.88,6105,3.88,6106,3.88,6107,8.576,6108,3.88,6109,3.88,6110,3.88,6111,3.88,6112,3.88,6113,5.779,6114,3.88,6115,3.88,6116,3.88,6117,3.88,6118,5.779,6119,3.88,6120,3.88,6121,5.205,6122,4.827,6123,5.779,6124,3.88,6125,3.88,6126,3.88,6127,3.88,6128,5.779,6129,3.88,6130,3.88,6131,3.88,6132,3.88,6133,4.827,6134,3.88,6135,3.88,6136,3.88,6137,3.88,6138,3.88,6139,3.88,6140,5.205,6141,6.905,6142,3.88,6143,3.88,6144,6.905,6145,5.205,6146,3.88,6147,3.88,6148,3.88,6149,3.88,6150,3.88,6151,3.88,6152,3.88,6153,5.779,6154,3.88,6155,5.779,6156,4.827,6157,3.495,6158,3.88,6159,6.905,6160,5.779,6161,3.88,6162,3.88,6163,3.88,6164,3.495,6165,3.88,6166,3.495,6167,3.88,6168,3.88,6169,3.88,6170,3.88,6171,3.88,6172,3.88,6173,3.88,6174,3.88]],["title/additional-documentation/nestjs-application/software-architecture.html",[2130,2.003,3796,2.205,5005,2.578,5105,2.95]],["body/additional-documentation/nestjs-application/software-architecture.html",[0,0.731,2,0.73,4,0.031,5,0.03,10,1.179,14,0.002,34,3.288,37,0.371,38,1.324,39,1.813,40,4.393,46,0.62,54,1.716,60,4.756,73,0.887,78,0.197,84,0.798,112,2.724,114,0.194,123,0.392,142,1.123,145,1.604,148,0.542,149,0.618,171,1.994,172,0.001,173,0.001,175,0.687,179,3.807,180,2.126,187,0.389,189,0.466,205,0.832,207,4.113,208,2.788,210,1.123,211,1.536,217,1.742,219,2.435,260,2.131,270,1.067,273,0.641,295,0.716,312,1.139,314,2.126,316,0.605,322,0.446,325,2.745,333,1.192,339,0.798,340,1.353,341,1.286,365,1.384,374,6.034,375,0.839,377,0.716,380,0.513,381,1.417,382,3.436,386,1.021,387,2.01,395,0.384,396,0.995,404,2.59,428,0.862,430,2.01,431,0.762,434,3.39,447,1.998,455,0.915,472,0.915,475,0.915,522,0.746,548,0.779,590,0.469,601,1.139,612,1.959,643,0.798,649,0.676,688,1.067,689,0.702,749,1.123,825,6.402,826,1.067,827,2.502,828,5.072,830,4.268,843,0.946,858,0.818,871,4.646,884,4.167,885,1.994,888,3.647,889,1.123,890,4.779,892,0.887,902,1.68,932,0.818,953,1.959,986,1.743,1003,0.716,1076,3.875,1104,1.246,1107,0.73,1114,2.066,1126,0.716,1148,1.49,1167,0.641,1174,0.915,1184,0.762,1185,0.779,1193,1.021,1227,1.192,1233,1.625,1240,3.367,1245,1.625,1310,2.35,1368,2.35,1399,0.946,1687,1.286,1702,1.994,1715,3.084,1727,1.49,1729,1.531,1731,1.452,1738,1.192,1739,0.915,1786,3.041,1854,2.856,1877,3.881,1925,2.435,1930,2.962,1933,2.502,1952,0.818,1970,1.911,1984,3.34,1995,4.273,2043,4.066,2048,4.997,2054,4.803,2083,1.021,2084,2.267,2085,2.193,2094,2.556,2095,0.981,2116,0.915,2129,3.343,2130,1.826,2132,4.997,2151,1.123,2181,1.959,2182,3.343,2183,5.05,2185,1.895,2195,2.35,2206,2.35,2270,1.067,2273,2.846,2279,0.946,2289,0.862,2301,1.067,2323,1.123,2406,4.771,2407,0.981,2412,1.192,2432,1.123,2435,0.981,2474,1.021,2487,4.769,2524,0.981,2533,1.158,2535,3.179,2536,0.61,2538,1.067,2573,5.03,2575,1.192,2579,0.818,2580,0.746,2581,1.417,2610,1.192,2617,2.856,2628,0.946,2638,2.865,2655,2.445,2661,4.387,2801,1.021,2802,1.021,2810,3.435,2826,2.788,2827,1.353,2960,4.394,2971,3.755,3088,1.192,3090,1.021,3186,3.144,3187,1.123,3208,1.021,3220,1.067,3221,2.656,3223,1.067,3224,5.759,3226,0.915,3234,1.192,3239,1.192,3241,4.13,3249,1.123,3298,1.192,3354,2.556,3357,1.742,3359,3.096,3362,1.895,3390,1.123,3407,1.192,3453,1.192,3454,1.021,3455,3.546,3458,2.556,3475,1.123,3485,1.021,3486,1.192,3534,2.283,3653,1.067,3680,3.172,3745,1.067,3796,0.839,3843,2.118,3849,2.689,3988,1.067,4252,3.755,4259,3.265,4261,2.445,4334,1.742,4352,2.118,4355,2.856,4493,1.192,4542,1.123,4543,1.021,4544,1.192,4578,1.994,4599,2.962,4729,2.118,4823,1.123,4906,2.118,4939,1.192,4963,2.283,4969,2.118,4982,1.286,4992,2.689,4994,1.286,4996,1.895,4997,1.994,4998,1.813,5005,6.14,5016,1.123,5019,4.751,5021,2.283,5026,3.096,5035,2.118,5036,2.689,5037,1.286,5041,3.731,5043,2.846,5047,7.429,5052,1.895,5073,1.067,5074,1.067,5081,1.123,5083,1.286,5086,1.994,5087,1.286,5093,1.895,5097,4.13,5104,2.118,5105,1.123,5117,2.283,5119,1.192,5122,1.286,5127,1.286,5130,1.286,5132,1.286,5142,1.067,5146,1.286,5147,2.856,5158,1.286,5162,2.283,5173,4.387,5175,1.286,5178,1.994,5187,1.192,5202,1.286,5207,1.286,5208,5.257,5220,3.258,5227,1.021,5230,1.286,5247,1.192,5248,2.283,5250,3.08,5254,1.286,5256,1.286,5262,2.118,5264,1.286,5265,8.281,5267,2.445,5275,1.286,5278,1.286,5279,2.118,5282,6.166,5284,1.067,5290,1.192,5292,3.731,5293,1.192,5295,2.118,5297,1.192,5299,1.286,5324,3.258,5329,1.286,5356,1.286,5374,1.286,5384,1.192,5385,1.192,5388,1.067,5406,1.192,5409,1.286,5417,1.286,5421,2.283,5432,1.067,5434,1.286,5435,1.286,5441,2.556,5453,1.286,5468,2.283,5469,4.273,5470,2.118,5488,3.46,5496,1.192,5506,3.258,5507,3.731,5509,1.286,5511,1.067,5513,1.286,5521,1.192,5528,1.286,5547,1.286,5549,1.286,5554,1.192,5596,4.731,5625,1.286,5634,1.286,5643,1.286,5652,4.751,5674,5.642,5691,1.192,5706,1.286,5707,1.286,5708,2.118,5709,4.779,5720,1.192,5730,3.46,5752,2.283,5763,1.286,5779,1.192,5790,1.123,5796,2.118,5799,1.286,5800,4.13,5805,1.286,5806,1.067,5807,1.286,5816,1.067,5844,1.286,5851,2.283,5871,1.286,5903,2.283,5909,1.123,6025,1.067,6069,3.731,6080,0.981,6093,1.286,6099,1.192,6122,1.192,6133,1.192,6175,1.428,6176,1.428,6177,7.777,6178,6.254,6179,6.394,6180,2.535,6181,3.42,6182,3.08,6183,5.066,6184,2.535,6185,3.08,6186,5.688,6187,1.428,6188,1.428,6189,3.258,6190,3.731,6191,1.428,6192,1.428,6193,1.428,6194,1.428,6195,2.535,6196,2.535,6197,1.428,6198,4.744,6199,1.428,6200,2.535,6201,1.428,6202,3.42,6203,2.535,6204,1.428,6205,1.428,6206,1.428,6207,1.428,6208,1.428,6209,1.428,6210,1.428,6211,1.286,6212,2.535,6213,2.535,6214,5.252,6215,1.428,6216,1.428,6217,2.535,6218,2.535,6219,4.142,6220,3.42,6221,4.142,6222,1.428,6223,3.731,6224,3.731,6225,1.428,6226,2.283,6227,1.428,6228,1.428,6229,1.428,6230,1.428,6231,1.428,6232,1.192,6233,2.856,6234,1.428,6235,1.286,6236,1.428,6237,1.428,6238,8.04,6239,2.535,6240,1.428,6241,8.042,6242,1.428,6243,2.283,6244,1.428,6245,1.428,6246,2.535,6247,1.192,6248,4.779,6249,6.394,6250,6.685,6251,1.428,6252,3.08,6253,2.283,6254,2.535,6255,1.428,6256,1.428,6257,4.273,6258,1.428,6259,1.428,6260,1.428,6261,3.08,6262,3.46,6263,2.535,6264,1.428,6265,1.123,6266,4.744,6267,1.428,6268,1.428,6269,3.42,6270,1.428,6271,1.286,6272,1.428,6273,2.856,6274,1.428,6275,1.428,6276,1.428,6277,3.08,6278,1.428,6279,1.428,6280,1.428,6281,1.286,6282,2.535,6283,1.428,6284,3.42,6285,1.428,6286,1.428,6287,1.286,6288,1.428,6289,3.258,6290,2.535,6291,1.428,6292,2.535,6293,3.42,6294,1.428,6295,1.428,6296,1.428,6297,2.118,6298,2.535,6299,3.42,6300,1.428,6301,1.428,6302,1.428,6303,1.428,6304,1.428,6305,1.428,6306,1.428,6307,1.428,6308,1.286,6309,1.428,6310,2.535,6311,1.428,6312,6.394,6313,1.428,6314,2.535,6315,1.286,6316,1.192,6317,1.428,6318,1.428,6319,1.428,6320,1.428,6321,1.428,6322,1.428,6323,1.428,6324,1.428,6325,1.428,6326,1.428,6327,1.428,6328,2.535,6329,3.42,6330,1.428,6331,1.428,6332,1.428,6333,1.428,6334,2.535,6335,1.428,6336,1.428,6337,1.428,6338,1.428,6339,1.286,6340,1.428,6341,1.428,6342,2.535,6343,1.428,6344,1.286,6345,1.428,6346,1.428,6347,2.535,6348,1.428,6349,1.428,6350,1.286,6351,2.283,6352,1.428,6353,1.428,6354,1.286,6355,1.428,6356,1.428,6357,2.535,6358,1.428,6359,1.428,6360,1.428,6361,1.428,6362,1.428,6363,1.428,6364,1.286,6365,1.428,6366,1.428,6367,1.428,6368,1.286,6369,1.286,6370,3.42,6371,1.428,6372,1.428,6373,1.428,6374,1.428,6375,1.428,6376,1.428,6377,2.535,6378,1.428,6379,3.42,6380,1.428,6381,1.428,6382,1.428,6383,2.535,6384,1.428,6385,1.286,6386,1.428,6387,3.42,6388,2.535,6389,1.428,6390,1.428,6391,1.428,6392,1.428,6393,1.428,6394,1.428,6395,1.428,6396,1.428,6397,1.286,6398,2.535,6399,1.428,6400,1.428,6401,1.428,6402,1.286,6403,1.428,6404,1.428,6405,1.428,6406,1.428,6407,1.428,6408,8.697,6409,1.428,6410,1.428,6411,1.428,6412,1.286,6413,1.428,6414,1.428,6415,2.535,6416,1.428,6417,3.42,6418,1.428,6419,1.428,6420,1.428,6421,1.428,6422,1.428,6423,1.428,6424,1.428,6425,1.286,6426,1.286,6427,1.428,6428,1.428,6429,1.428,6430,1.428,6431,1.286,6432,1.428,6433,1.428,6434,1.428,6435,1.428,6436,2.535,6437,4.744,6438,1.428,6439,1.192,6440,1.428,6441,2.689,6442,1.428,6443,2.283,6444,1.428,6445,1.192,6446,1.428,6447,1.428,6448,1.428,6449,4.744,6450,1.428,6451,1.428,6452,1.428,6453,1.428,6454,1.428,6455,1.428,6456,1.428,6457,1.428,6458,1.428,6459,1.428,6460,1.428,6461,1.428,6462,1.428,6463,2.535,6464,1.428,6465,1.428,6466,1.428,6467,2.535,6468,1.428,6469,1.428,6470,1.428,6471,2.535,6472,1.428,6473,1.428,6474,1.428,6475,1.428,6476,2.535,6477,1.428,6478,2.535,6479,1.428,6480,1.428,6481,1.428,6482,1.286,6483,2.535]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[179,1.555,2130,1.753,3796,1.931,5005,2.257,6248,2.455]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.284,2,1.216,3,0.038,4,0.031,5,0.077,9,0.556,10,0.538,13,0.126,14,0.004,15,0.104,17,2.42,18,0.5,22,0.094,31,0.244,38,1.357,40,3.025,47,1.187,60,4.275,69,0.522,74,1.188,77,1.162,78,0.736,112,3.26,114,0.609,127,1.666,128,0.999,129,1.244,145,1.403,146,3.818,149,0.763,172,0.002,173,0.002,175,0.522,179,2.001,187,0.591,207,3.712,208,3.139,211,1.898,218,4.078,219,1.527,257,2.614,259,3.435,260,1.167,267,1.418,272,1.807,273,1.898,286,1.857,291,3.818,292,2.801,293,4.399,295,3.638,298,3.879,314,1.615,316,1.352,322,2.576,328,1.06,339,2.362,355,1.561,360,0.842,365,1.418,375,3.139,377,3.638,379,3.945,382,4.043,388,2.043,389,2.17,395,0.698,411,1.527,416,1.302,431,2.256,440,1.452,447,2.968,520,2.732,522,2.207,544,1.615,576,2.17,591,1.111,597,2.043,601,1.898,643,2.362,649,2.529,749,3.323,776,3.219,807,3.021,810,1.785,811,2.34,824,1.785,825,3.945,827,3.226,829,3.021,830,1.357,864,1.785,868,3.329,871,4.828,882,3.818,892,2.627,898,1.785,900,1.919,932,3.059,945,3.158,975,3.408,977,3.094,982,2.307,983,1.666,985,2.552,986,1.093,1076,3.415,1088,1.666,1089,2.801,1114,2.552,1118,2.399,1148,1.527,1224,1.942,1228,1.615,1237,3.67,1240,2.709,1245,1.666,1251,2.484,1270,1.666,1284,1.942,1310,2.903,1374,1.452,1399,1.722,1647,4.841,1715,1.253,1729,1.569,1731,2.42,1739,3.945,1761,1.942,1841,1.277,1843,2.17,1844,3.98,1845,4.461,1871,2.17,1877,1.302,1906,1.569,1925,3.617,1933,1.569,1952,3.059,1970,2.362,1981,1.329,2003,1.785,2048,3.992,2068,2.34,2116,1.666,2129,3.98,2130,2.851,2131,1.615,2134,2.34,2139,2.34,2141,4.986,2151,2.043,2180,1.785,2181,3.879,2182,4.265,2184,3.818,2185,1.942,2186,1.857,2187,1.857,2192,2.043,2193,1.452,2195,1.785,2206,1.785,2215,1.785,2302,1.785,2397,2.34,2406,1.785,2435,3.67,2466,3.323,2474,1.857,2480,1.857,2483,1.942,2487,4.2,2573,1.488,2611,1.666,2624,1.722,2625,3.529,2628,1.722,2638,1.569,2810,1.569,2826,3.98,2827,1.387,2960,2.903,2971,1.857,3090,3.021,3189,3.992,3208,1.857,3220,1.942,3221,2.709,3227,2.17,3241,2.043,3249,2.043,3273,1.857,3298,2.17,3362,3.158,3364,1.785,3426,4.2,3454,3.021,3485,3.021,3490,2.34,3548,2.34,3549,2.34,3550,2.34,3551,2.34,3552,2.17,3558,2.17,3590,2.17,3648,1.857,3680,1.569,3819,2.34,3917,5.893,4025,1.942,4040,1.857,4259,1.615,4299,2.34,4334,2.903,4599,1.857,4826,5.061,4962,2.17,4969,2.17,4998,5.893,5002,2.17,5005,3.67,5016,2.043,5018,2.17,5026,1.942,5040,2.17,5043,2.903,5045,2.34,5046,1.942,5047,4.2,5063,2.34,5073,1.942,5075,2.17,5077,2.17,5085,2.17,5086,4.839,5090,2.34,5092,2.17,5129,2.34,5145,2.17,5148,2.34,5178,2.043,5208,2.043,5222,2.34,5227,1.857,5247,2.17,5257,2.17,5259,2.34,5267,1.857,5284,5.424,5288,2.17,5290,2.17,5292,4.2,5297,2.17,5324,2.043,5367,2.34,5384,2.17,5388,1.942,5432,1.942,5488,2.17,5496,2.17,5506,3.323,5511,1.942,5628,4.811,5674,3.323,5701,2.34,5709,1.857,5729,2.34,5779,2.17,5800,4.839,5801,4.461,5806,1.942,5816,3.158,5852,2.17,5867,4.461,5868,4.461,5902,3.818,5909,2.043,5969,3.158,5973,2.34,5995,2.34,6001,2.34,6025,1.942,6080,2.903,6099,2.17,6103,2.34,6156,3.529,6177,6.269,6178,2.34,6189,2.043,6224,2.34,6241,7.846,6243,2.34,6247,3.529,6248,5.061,6261,2.34,6265,2.043,6271,2.34,6273,2.17,6281,2.34,6287,2.34,6289,2.043,6297,2.17,6308,3.806,6315,4.811,6351,4.811,6354,3.806,6369,4.811,6425,3.806,6431,2.34,6439,2.17,6441,2.043,6443,5.542,6484,2.17,6485,2.34,6486,2.598,6487,5.341,6488,2.598,6489,6.889,6490,3.529,6491,2.598,6492,2.598,6493,4.225,6494,6.153,6495,2.598,6496,2.598,6497,2.598,6498,2.598,6499,2.598,6500,2.598,6501,2.598,6502,4.225,6503,2.598,6504,2.598,6505,2.598,6506,2.598,6507,2.34,6508,4.225,6509,2.598,6510,2.598,6511,2.598,6512,2.598,6513,2.34,6514,2.598,6515,2.598,6516,2.34,6517,4.225,6518,2.598,6519,2.598,6520,2.598,6521,2.598,6522,2.17,6523,2.598,6524,2.598,6525,2.598,6526,2.598,6527,2.598,6528,2.598,6529,2.598,6530,2.598,6531,4.225,6532,2.598,6533,2.34,6534,3.529,6535,3.806,6536,2.598,6537,2.598,6538,2.598,6539,2.598,6540,2.598,6541,2.598,6542,2.598,6543,2.598,6544,2.598,6545,2.598,6546,2.598,6547,2.598,6548,2.598,6549,2.598,6550,2.598,6551,2.598,6552,2.598,6553,2.598,6554,2.598,6555,2.598,6556,2.598,6557,2.598,6558,2.598,6559,2.598,6560,2.598,6561,2.17,6562,2.598,6563,2.598,6564,2.598,6565,2.598,6566,2.598,6567,2.598,6568,2.598,6569,2.598,6570,2.34,6571,2.598,6572,2.598,6573,2.34,6574,2.598,6575,2.34,6576,2.598,6577,2.598,6578,2.598,6579,2.34,6580,2.598,6581,2.598,6582,2.598,6583,2.598,6584,2.598,6585,2.34,6586,2.34]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[2130,1.753,3796,1.931,3917,2.348,6189,2.583,6587,2.958]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[0,0.454,12,0.396,14,0.004,34,1.968,54,1.722,60,2.323,74,1.169,77,1.142,78,0.838,112,3.229,121,3.573,128,0.987,129,2.479,145,2.001,148,1.577,149,1.428,172,0.002,173,0.002,179,2.878,180,3.779,187,0.308,206,3.471,211,3.229,218,2.754,270,1.749,308,1.971,316,1.075,322,2.747,333,5.077,337,1.722,340,2.218,355,0.958,377,3.047,380,1.493,381,3.398,382,4.054,429,2.269,430,3.573,434,2.323,447,2.932,475,4.608,477,2.269,504,1.968,544,2.583,576,5.077,591,1.777,612,2.38,810,2.855,825,5.822,826,5.372,827,2.51,828,2.855,829,2.971,830,4.592,868,2.988,871,2.269,882,2.971,885,4.78,888,2.664,889,3.268,890,2.971,900,2.582,913,2.878,945,4.543,986,2.558,1076,3.487,1131,3.897,1174,2.664,1176,2.664,1193,2.971,1227,6.004,1245,5.071,1399,4.029,1611,2.443,1722,2.971,1761,3.106,1907,2.583,1925,3.573,1930,2.971,1933,3.672,1941,2.855,1952,3.482,2033,2.971,2054,2.443,2095,2.855,2116,2.664,2129,5.473,2182,5.583,2186,2.971,2187,2.971,2215,2.855,2270,3.106,2406,2.855,2480,2.971,2483,3.106,2628,2.754,2638,2.51,2774,2.971,2810,2.51,2817,2.583,2826,3.573,3469,2.971,3653,3.106,3745,3.106,3755,3.743,3782,3.743,3917,7.256,4040,2.971,4172,3.268,4252,6.285,4599,2.971,4781,3.471,4823,3.268,4828,3.106,4945,3.106,4998,2.971,5000,3.268,5005,5.434,5017,2.971,5026,3.106,5027,5.077,5041,3.268,5043,2.855,5093,3.106,5097,3.268,5099,3.471,5139,3.268,5145,5.077,5178,3.268,5183,3.471,5187,3.471,5220,4.78,5227,2.971,5262,3.471,5267,4.346,5279,3.471,5388,3.106,5432,4.543,5441,4.543,5487,3.743,5506,5.652,5511,3.106,5652,3.471,5674,3.268,5695,3.743,5709,2.971,5730,3.471,5749,3.471,5762,3.268,5776,5.475,5777,3.268,5796,3.471,5806,4.543,5816,4.543,5858,3.471,5902,2.971,5969,3.106,6078,3.471,6156,3.471,6177,3.268,6185,3.743,6189,4.78,6190,3.743,6232,3.471,6241,6.618,6265,6.618,6289,3.268,6339,3.743,6344,3.743,6368,3.743,6397,3.743,6412,3.743,6426,3.743,6445,3.471,6484,3.471,6489,5.475,6507,5.475,6534,3.471,6570,3.743,6573,3.743,6587,3.743,6588,4.156,6589,4.156,6590,4.156,6591,4.156,6592,4.156,6593,4.156,6594,4.156,6595,4.156,6596,6.079,6597,4.156,6598,4.156,6599,4.156,6600,4.156,6601,4.156,6602,4.156,6603,4.156,6604,4.156,6605,4.156,6606,4.156,6607,4.156,6608,4.156,6609,4.156,6610,4.156,6611,3.743,6612,4.156,6613,4.156,6614,3.743,6615,4.156,6616,3.743,6617,4.156,6618,4.156,6619,4.156,6620,4.156,6621,4.156,6622,4.156,6623,4.156,6624,5.475,6625,4.156,6626,4.156,6627,4.156,6628,4.156,6629,4.156,6630,3.743,6631,4.156,6632,4.156,6633,4.156,6634,4.156,6635,4.156,6636,4.156,6637,4.156,6638,4.156,6639,4.156,6640,4.156,6641,4.156,6642,4.156,6643,4.156,6644,4.156,6645,4.156,6646,4.156,6647,4.156,6648,4.156,6649,4.156,6650,4.156,6651,4.156,6652,4.156,6653,4.156,6654,6.079,6655,4.156,6656,3.471,6657,4.156,6658,7.188,6659,3.743,6660,4.156,6661,4.156,6662,4.156,6663,4.156,6664,3.471]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[884,2.257,2130,1.753,3796,1.931,5709,2.348,6183,2.743]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.761,12,0.946,13,0.257,14,0.004,15,0.196,18,0.968,22,0.065,31,0.196,34,4.286,35,1.398,37,1.81,38,2.626,54,2.885,69,1.009,74,1.414,84,2.81,112,3.127,114,0.384,172,0.003,173,0.003,179,3.781,180,3.125,181,1.714,186,5.203,206,4.199,207,3.561,208,4.694,217,3.454,219,5.32,257,2.46,273,3.127,314,3.125,325,5.293,339,2.81,372,4.199,375,2.955,377,4.004,379,3.223,382,3.572,395,2.433,403,3.332,419,3.223,522,2.626,807,3.594,810,3.454,825,5.803,826,3.757,827,4.205,828,3.454,830,2.626,868,3.422,871,3.801,879,4.328,882,3.594,884,4.783,888,3.223,890,6.163,896,3.954,897,5.606,935,4.463,1076,2.083,1088,3.223,1128,3.223,1233,4.463,1715,2.425,1730,2.471,1731,3.988,1864,4.199,1981,2.572,2002,4.614,2011,3.125,2041,5.815,2054,5.84,2115,4.528,2116,4.463,2117,3.954,2125,4.528,2129,2.955,2130,3.716,2131,4.965,2183,2.745,2184,3.594,2215,3.454,2406,5.487,2407,6.724,2434,4.783,2437,4.199,2629,3.954,2655,4.977,2660,4.528,2661,4.199,2663,4.528,2667,4.528,2669,4.528,2670,4.528,2811,4.783,2827,2.684,3221,3.223,3241,3.954,3354,3.757,3357,3.454,3362,5.203,3364,4.783,3763,4.528,3988,3.757,4996,3.757,5040,4.199,5043,3.454,5052,3.757,5062,4.199,5273,4.528,5405,4.528,5709,3.594,6025,3.757,6080,3.454,6145,4.528,6183,5.815,6316,4.199,6364,4.528,6439,4.199,6490,4.199,6516,4.528,6522,4.199,6585,4.528,6664,4.199,6665,5.027,6666,8.62,6667,5.027,6668,5.027,6669,8.62,6670,4.528,6671,5.027,6672,5.027,6673,7.986,6674,5.027,6675,5.027,6676,5.027,6677,6.962,6678,5.027,6679,5.027,6680,5.027,6681,4.528,6682,5.027,6683,6.962,6684,5.027,6685,5.027,6686,5.027,6687,5.027,6688,5.027,6689,5.027,6690,5.027,6691,5.027,6692,5.027,6693,5.027,6694,5.027]],["title/additional-documentation/nestjs-application/testing.html",[2130,2.335,3226,2.804,3796,2.571]],["body/additional-documentation/nestjs-application/testing.html",[13,0.151,14,0.004,15,0.08,31,0.092,34,3.961,38,2.973,40,0.937,45,0.777,46,0.828,52,1.424,54,2.098,60,3.182,74,2.466,76,0.684,77,1.706,78,0.784,82,0.902,112,2.557,114,0.327,119,1.498,122,1.498,123,0.524,128,1.331,129,2.615,145,0.886,148,1.622,149,0.589,172,0.002,173,0.001,175,0.383,179,3.141,187,0.375,189,0.26,199,0.333,207,0.975,217,2.938,219,1.12,257,2.123,259,1.292,260,1.921,270,0.802,272,1.828,273,1.921,292,2.161,302,1.716,303,1.716,309,0.975,312,0.856,314,4.709,316,0.337,320,1.716,322,1.336,339,1.065,361,0.474,365,1.78,375,5.868,377,1.635,379,1.221,381,2.39,382,3.721,386,2.331,388,1.498,395,1.361,396,1.474,429,4.648,430,3.346,431,1.017,434,2.83,447,3.2,453,1.184,472,1.221,474,1.591,475,1.221,525,0.684,553,1.741,555,2.144,590,0.625,649,2.695,689,0.937,776,0.802,810,3.911,824,1.309,825,2.741,827,1.97,829,2.331,830,2.973,868,0.937,871,2.764,879,1.184,886,1.498,888,2.091,913,0.902,935,1.221,940,2.241,944,1.424,975,2.165,977,0.871,998,0.975,1076,3.236,1089,4.113,1102,1.221,1118,2.788,1128,1.221,1129,1.221,1148,2.513,1167,1.465,1176,1.221,1184,1.741,1185,1.04,1193,5.002,1353,2.241,1373,2.912,1374,1.065,1388,3.356,1399,1.263,1473,1.263,1527,1.424,1647,1.362,1689,2.437,1702,1.498,1703,2.741,1715,3.767,1726,2.938,1727,1.12,1761,2.437,1844,1.12,1870,1.263,1877,1.635,1906,1.151,1925,3.648,1928,1.591,1930,1.362,1931,1.591,1932,1.309,1933,3.438,1970,5.58,1972,5.184,1981,0.975,1983,4.476,1984,2.973,1985,3.356,1986,4.254,2003,1.309,2029,1.716,2036,2.437,2041,1.591,2048,1.424,2051,1.498,2054,1.917,2070,2.331,2095,2.938,2116,2.741,2127,2.161,2128,2.937,2129,3.9,2131,1.184,2151,2.565,2164,1.424,2180,1.309,2182,1.12,2183,2.334,2195,2.241,2206,1.309,2213,2.241,2215,4.807,2240,1.716,2279,1.263,2289,1.151,2298,2.565,2301,1.424,2306,4.56,2383,1.362,2404,1.498,2407,1.309,2432,1.498,2434,4.264,2435,3.479,2467,1.716,2471,1.362,2483,1.424,2486,1.716,2532,1.263,2533,0.871,2534,1.263,2573,1.091,2580,0.995,2619,1.362,2624,1.263,2627,1.498,2628,1.263,2654,1.424,2655,1.362,2826,1.12,2827,1.017,2971,4.437,3090,2.331,3091,1.591,3208,3.62,3219,1.591,3221,2.091,3223,2.437,3226,5.874,3240,1.591,3355,1.591,3356,1.591,3357,1.309,3358,1.716,3359,3.784,3362,1.424,3364,2.938,3424,1.498,3433,2.241,3435,2.331,3444,1.716,3456,1.498,3458,1.424,3469,4.437,3473,2.937,3475,1.498,3476,1.716,3485,1.362,3500,1.591,3520,2.437,3526,1.716,3530,1.591,3540,1.309,3542,1.362,3592,1.591,3640,3.057,3648,4.069,3649,2.938,3653,4.254,3680,1.151,3752,1.591,3753,1.591,3849,1.498,3917,1.362,4008,2.331,4043,1.498,4048,1.591,4172,1.498,4252,3.057,4259,2.027,4261,1.362,4295,1.591,4333,2.937,4542,4.881,4543,1.362,4544,1.591,4599,1.362,4781,1.591,4823,1.498,4860,1.716,4939,4.229,4945,4.958,4980,1.591,4991,1.424,4998,3.62,5000,4.476,5008,1.716,5010,1.591,5011,1.716,5012,2.724,5017,1.362,5025,1.716,5031,1.716,5036,3.362,5041,2.565,5043,1.309,5046,2.437,5047,1.498,5052,2.437,5069,1.716,5073,2.437,5074,2.437,5081,5.745,5085,1.591,5097,1.498,5099,3.571,5105,1.498,5119,1.591,5128,1.716,5139,2.565,5142,1.424,5147,1.591,5149,1.716,5167,1.716,5173,1.591,5183,3.571,5208,1.498,5217,1.716,5220,2.565,5226,1.716,5227,1.362,5257,1.591,5265,1.591,5267,3.62,5268,1.716,5282,2.724,5292,3.982,5293,1.591,5295,1.591,5314,1.716,5321,1.716,5324,1.498,5368,1.716,5381,1.716,5385,1.591,5388,1.424,5394,1.716,5397,1.716,5403,1.716,5416,1.716,5441,2.437,5452,1.591,5459,1.716,5470,2.724,5472,6.822,5521,1.591,5570,1.591,5649,1.716,5714,1.716,5720,1.591,5726,1.591,5727,1.716,5747,4.56,5762,1.498,5768,3.571,5800,3.362,5804,1.716,5806,1.424,5816,3.784,5833,3.851,5835,1.591,5842,2.437,5852,1.591,5858,1.591,5867,6.987,5868,1.591,5898,1.716,5902,1.362,5969,2.437,5976,1.716,6006,1.716,6025,4.639,6054,2.937,6068,1.716,6078,1.591,6080,5.747,6121,1.716,6133,1.591,6157,1.716,6177,5.745,6182,1.716,6211,1.716,6223,1.716,6233,2.724,6235,1.716,6241,5.957,6247,1.591,6248,4.254,6252,1.716,6253,1.716,6257,1.716,6262,1.591,6265,2.565,6273,1.591,6277,1.716,6289,1.498,6297,1.591,6316,1.591,6385,1.716,6402,1.716,6441,1.498,6445,3.571,6482,2.937,6484,4.229,6485,1.716,6490,1.591,6513,1.716,6522,1.591,6533,1.716,6534,1.591,6535,1.716,6575,1.716,6579,1.716,6611,1.716,6614,2.937,6616,1.716,6624,1.716,6659,1.716,6664,2.724,6670,1.716,6681,1.716,6695,3.261,6696,1.905,6697,1.905,6698,5.975,6699,1.905,6700,1.905,6701,6.634,6702,1.905,6703,1.905,6704,4.276,6705,1.905,6706,1.905,6707,2.937,6708,1.905,6709,1.905,6710,1.905,6711,1.905,6712,1.905,6713,1.905,6714,1.716,6715,3.261,6716,1.905,6717,1.905,6718,1.905,6719,1.905,6720,1.905,6721,1.905,6722,1.905,6723,1.905,6724,1.905,6725,1.905,6726,1.905,6727,1.905,6728,1.905,6729,1.905,6730,1.905,6731,1.905,6732,1.905,6733,1.905,6734,1.905,6735,1.905,6736,1.905,6737,1.905,6738,1.905,6739,1.905,6740,1.905,6741,1.905,6742,1.905,6743,4.276,6744,1.905,6745,4.276,6746,3.261,6747,5.692,6748,3.261,6749,4.276,6750,1.905,6751,1.905,6752,1.905,6753,3.261,6754,1.905,6755,1.905,6756,1.905,6757,1.905,6758,1.905,6759,1.905,6760,1.905,6761,1.905,6762,1.905,6763,6.206,6764,1.905,6765,1.905,6766,1.905,6767,1.905,6768,1.905,6769,1.905,6770,1.905,6771,1.905,6772,1.905,6773,1.905,6774,1.905,6775,1.905,6776,1.905,6777,5.692,6778,3.261,6779,1.905,6780,3.261,6781,1.905,6782,1.905,6783,1.905,6784,3.261,6785,1.905,6786,1.905,6787,4.276,6788,3.261,6789,3.261,6790,1.905,6791,1.905,6792,5.063,6793,1.905,6794,1.905,6795,1.905,6796,1.905,6797,1.905,6798,1.905,6799,1.905,6800,1.905,6801,1.905,6802,3.261,6803,3.261,6804,1.905,6805,3.261,6806,1.905,6807,1.905,6808,1.905,6809,1.905,6810,3.261,6811,3.261,6812,1.905,6813,3.261,6814,1.905,6815,1.905,6816,1.905,6817,1.905,6818,3.261,6819,1.905,6820,1.905,6821,1.905,6822,1.905,6823,1.905,6824,1.905,6825,3.261,6826,5.063,6827,1.905,6828,1.905,6829,1.905,6830,1.905,6831,1.905,6832,1.905,6833,3.261,6834,1.905,6835,1.905,6836,1.905,6837,1.905,6838,1.905,6839,1.905,6840,1.905,6841,1.905,6842,1.905,6843,1.716,6844,1.905,6845,3.261,6846,1.905,6847,1.905,6848,1.905,6849,1.905,6850,1.905,6851,1.905,6852,1.905,6853,1.905,6854,1.905,6855,1.905,6856,1.905,6857,1.905,6858,1.905,6859,1.905,6860,1.905,6861,1.905,6862,1.905,6863,1.905,6864,1.905,6865,1.905,6866,1.905,6867,1.905,6868,1.905,6869,1.905,6870,1.905,6871,1.905,6872,1.905,6873,1.905,6874,1.905,6875,1.905,6876,1.905,6877,1.905]],["title/additional-documentation/nestjs-application/decisions.html",[2130,2.335,3796,2.571,6656,3.653]],["body/additional-documentation/nestjs-application/decisions.html",[9,0.949,10,1.583,14,0.004,31,0.163,47,3.491,112,2.59,172,0.003,173,0.003,175,1.72,179,2.731,187,0.567,207,2.95,272,2.465,316,1.515,322,2.851,339,3.223,353,3.697,355,1.762,360,2.477,361,1.434,374,3.962,382,4.122,387,3.389,395,1.55,404,3.148,427,3.223,453,3.585,472,5.493,519,2.284,813,3.585,828,3.962,830,3.991,868,2.835,977,2.635,1076,3.166,1167,2.59,1251,2.682,1310,3.962,1374,3.223,1715,2.781,1729,3.483,1841,2.835,1952,5.225,1980,4.817,1981,2.95,1984,3.012,2020,4.817,2043,4.123,2070,4.123,2181,3.303,2183,4.171,2186,5.462,2187,4.123,2213,3.962,2279,3.822,2292,5.194,2407,3.962,2466,6.008,2468,4.817,2481,3.962,2638,3.483,3187,4.535,3208,5.462,3221,3.697,3226,3.697,3242,6.125,3363,5.194,3469,4.123,3678,6.381,3680,4.614,3841,5.194,4259,5.326,4355,6.381,4826,4.31,4980,4.817,4996,4.31,5005,3.962,5010,6.381,5033,6.008,5075,4.817,5093,4.31,5142,4.31,5227,4.123,5309,5.194,5406,4.817,5691,4.817,5704,4.817,5768,4.817,5777,4.535,5970,5.194,6080,3.962,6122,7.156,6140,5.194,6226,5.194,6232,6.381,6233,4.817,6248,4.31,6262,4.817,6350,5.194,6441,4.535,6561,6.381,6586,5.194,6630,5.194,6656,6.381,6698,5.194,6707,5.194,6714,5.194,6843,5.194,6878,5.766,6879,8.568,6880,7.64,6881,5.766,6882,5.766,6883,9.489,6884,5.766,6885,5.766,6886,5.766,6887,5.766,6888,5.766,6889,5.766,6890,5.766,6891,5.766,6892,5.766,6893,5.766,6894,7.64,6895,5.766,6896,5.766,6897,5.766,6898,5.766,6899,5.766,6900,5.766,6901,5.766,6902,5.766,6903,5.766,6904,5.766,6905,5.766,6906,5.766,6907,5.766,6908,5.766,6909,5.766,6910,5.766]],["title/additional-documentation/nestjs-application/vscode.html",[2130,2.335,3796,2.571,5003,3.44]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.08,14,0.004,112,3.352,172,0.003,173,0.003,211,4.04,375,5.286,520,4.601,829,5.335,830,4.698,843,4.946,868,4.421,884,5.127,1088,4.784,1959,5.868,1970,4.171,2043,5.335,2193,5.027,3426,5.868,4172,5.868,4259,4.639,4361,6.721,4543,5.335,4578,5.868,5003,7.073,5049,8.101,5277,5.577,5390,6.721,5588,6.721,5708,6.233,5765,8.695,5798,6.721,5812,5.868,5842,6.722,5902,5.335,5969,5.577,5987,6.233,6080,5.127,6164,6.721,6166,6.721,6561,7.512,6911,7.462,6912,7.462,6913,7.462,6914,7.462,6915,7.462,6916,7.462,6917,7.462,6918,7.462]],["title/additional-documentation/nestjs-application/git.html",[2130,2.335,3796,2.571,5004,3.653]],["body/additional-documentation/nestjs-application/git.html",[14,0.004,46,3.566,54,3.401,172,0.004,173,0.004,892,5.103,2827,4.381,3221,5.262,3843,6.856,4025,6.134,5004,8.392,5024,7.393,5258,6.856,5819,8.57,6919,8.208,6920,8.208,6921,8.208,6922,8.208]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":337,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"classes/DashboardEntity.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"classes/EncryptedStringType.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"classes/ImportUserScope.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/PermissionService.html":{},"classes/Scope.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"injectables/UserRepo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":4848,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":4888,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":4899,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":4801,"title":{},"body":{"dependencies.html":{}}}],["0.24.0",{"_index":4791,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":4800,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":4876,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":4912,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":4903,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":4868,"title":{},"body":{"dependencies.html":{}}}],["0.5.4",{"_index":4853,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4859,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4902,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":4784,"title":{},"body":{"dependencies.html":{}}}],["0.8.1",{"_index":4862,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":4851,"title":{},"body":{"dependencies.html":{}}}],["0000d224816abba584714c9c",{"_index":6852,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":6854,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1",{"_index":1373,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/Scope.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"injectables/UserRepo.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":4877,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4891,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":4835,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":4817,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":4872,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":6802,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":4832,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4920,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":4889,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":4796,"title":{},"body":{"dependencies.html":{}}}],["1.18.1",{"_index":4766,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":6803,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":4793,"title":{},"body":{"dependencies.html":{}}}],["1.28.1",{"_index":4838,"title":{},"body":{"dependencies.html":{}}}],["1.3.4",{"_index":4767,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":4807,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3794,"title":{},"body":{"classes/PaginationQuery.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":1029,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":5337,"title":{},"body":{"license.html":{},"overview.html":{}}}],["13",{"_index":5780,"title":{},"body":{"license.html":{}}}],["13.1.0",{"_index":4879,"title":{},"body":{"dependencies.html":{}}}],["14.14",{"_index":2325,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["15",{"_index":5527,"title":{},"body":{"license.html":{}}}],["15672:15672",{"_index":6091,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["16",{"_index":5528,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":4833,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":5100,"title":{},"body":{"license.html":{}}}],["1996",{"_index":5343,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":6902,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":6901,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":1388,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":4896,"title":{},"body":{"dependencies.html":{}}}],["2.1041.0",{"_index":4789,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":4850,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":4873,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":4836,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":4811,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":5341,"title":{},"body":{"license.html":{}}}],["2007",{"_index":5102,"title":{},"body":{"license.html":{}}}],["23",{"_index":5792,"title":{},"body":{"overview.html":{}}}],["24",{"_index":1027,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":5791,"title":{},"body":{"overview.html":{}}}],["28",{"_index":5676,"title":{},"body":{"license.html":{}}}],["2auth",{"_index":5837,"title":{},"body":{"todo.html":{}}}],["3",{"_index":5099,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":4886,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":4892,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":6845,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":4882,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":4870,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":4918,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4782,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":4893,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":5576,"title":{},"body":{"license.html":{}}}],["3030/docs",{"_index":6154,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["3030/v3/docs",{"_index":6148,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["4",{"_index":1353,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":4814,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":4907,"title":{},"body":{"dependencies.html":{}}}],["4.13.2",{"_index":4827,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":4825,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":4845,"title":{},"body":{"dependencies.html":{}}}],["4.2",{"_index":3446,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["4.2.0",{"_index":4824,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":4803,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":4769,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":4762,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":4768,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":4797,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":6083,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["404",{"_index":5851,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["409/bad",{"_index":6693,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":2437,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["43",{"_index":5793,"title":{},"body":{"overview.html":{}}}],["5",{"_index":5403,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":4786,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":4787,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":4829,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":4775,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":4875,"title":{},"body":{"dependencies.html":{}}}],["5.13.9",{"_index":4852,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":6684,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["53",{"_index":5795,"title":{},"body":{"overview.html":{}}}],["5672",{"_index":6096,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5672:5672",{"_index":6090,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":6853,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":6859,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":4809,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":4777,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":4830,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":4884,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1028,"title":{},"body":{"classes/CourseFactory.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["60000",{"_index":3929,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["699615164",{"_index":5829,"title":{},"body":{"todo.html":{}}}],["6b",{"_index":5428,"title":{},"body":{"license.html":{}}}],["6d",{"_index":5447,"title":{},"body":{"license.html":{}}}],["7",{"_index":4512,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{}}}],["7.0.0",{"_index":4813,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":4822,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":4894,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":2291,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["8.0.0",{"_index":4771,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":4773,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":4805,"title":{},"body":{"dependencies.html":{}}}],["8.2.3",{"_index":4770,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":4915,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":4840,"title":{},"body":{"dependencies.html":{}}}],["8.8.2",{"_index":4779,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":6004,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["8080",{"_index":6124,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["86",{"_index":5794,"title":{},"body":{"overview.html":{}}}],["86400000",{"_index":4250,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["9229",{"_index":6116,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["99",{"_index":3799,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":5061,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":691,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":2397,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_${now.getdate()}_${now.gethours()}_${now.getminutes()}_${now.getseconds",{"_index":1890,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":2415,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":2427,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":6486,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":2416,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":2429,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":6130,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_\\w\\d",{"_index":3481,"title":{},"body":{"classes/MongoPatterns.html":{}}}],["_id",{"_index":353,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["_id.$oid",{"_index":1955,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_operator",{"_index":1198,"title":{},"body":{"classes/CourseScope.html":{},"classes/ImportUserScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_queries",{"_index":1199,"title":{},"body":{"classes/CourseScope.html":{},"classes/ImportUserScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_timeout",{"_index":4545,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.getmetadata().title",{"_index":1370,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["a.m",{"_index":5089,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":6739,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":5496,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":5086,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":5366,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1874,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["abstract",{"_index":522,"title":{},"body":{"entities/BaseFile.html":{},"classes/BusinessError.html":{},"entities/CourseNews.html":{},"injectables/DashboardRepo.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/PaginationResponse.html":{},"entities/SchoolNews.html":{},"classes/SortingQuery.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstractbootstrapconsole",{"_index":4531,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["abstraction",{"_index":6398,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":948,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":5581,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":5580,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":5815,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":435,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":60,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/ServerController.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["access,@typescript",{"_index":51,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["accessable",{"_index":6474,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":1125,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"index.html":{}}}],["accessible",{"_index":5175,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":6266,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accesskeyid",{"_index":2247,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":1785,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":5410,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":5760,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":5177,"title":{},"body":{"license.html":{}}}],["accord",{"_index":5365,"title":{},"body":{"license.html":{}}}],["according",{"_index":5752,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":2534,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ImportUserListResponse.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":2532,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["achieve",{"_index":5763,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":5304,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":5630,"title":{},"body":{"license.html":{}}}],["act",{"_index":6738,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":2219,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":5588,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["active",{"_index":3288,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activecourses",{"_index":955,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["activecourses'})@property",{"_index":925,"title":{},"body":{"entities/Course.html":{}}}],["activities",{"_index":5219,"title":{},"body":{"license.html":{}}}],["activity",{"_index":5670,"title":{},"body":{"license.html":{}}}],["actors",{"_index":6596,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":5652,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":5469,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":5199,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":6238,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":2827,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":6031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1952,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"injectables/TaskAuthorizationService.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["addgroupmoderator(groupname",{"_index":101,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adding",{"_index":428,"title":{},"body":{"classes/BaseFactory.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"interfaces/ICourseProperties.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":2130,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":5040,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":6108,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":1203,"title":{},"body":{"classes/CourseScope.html":{},"classes/ImportUserScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addquery(query",{"_index":1212,"title":{},"body":{"classes/CourseScope.html":{},"classes/ImportUserScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addreferences",{"_index":2491,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["addreferences(anotherreference",{"_index":1361,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["address",{"_index":5707,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addressed",{"_index":5195,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":6314,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addroom",{"_index":1292,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["addroom(room",{"_index":1314,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["adds",{"_index":1854,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addserver('/api/v3",{"_index":6024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["addstatustotasks",{"_index":3942,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["addstatustotasks(isteacher",{"_index":637,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["addtokentowhitelist",{"_index":3304,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtokentowhitelist(redisidentifier",{"_index":3309,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist",{"_index":3291,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist(accountid",{"_index":3293,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["adhere",{"_index":6621,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["admin",{"_index":2579,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adminid",{"_index":27,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["adminidandtoken",{"_index":1,"title":{"interfaces/AdminIdAndToken.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adminidandtoken.id",{"_index":133,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["adminidandtoken.token",{"_index":132,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["administrator",{"_index":2582,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserScope.html":{},"classes/UserMatchMapper.html":{},"miscellaneous/enumerations.html":{}}}],["adminpassword",{"_index":26,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["admintoken",{"_index":28,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["adminuser",{"_index":25,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["adopted",{"_index":5340,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":5503,"title":{},"body":{"license.html":{}}}],["advised",{"_index":5748,"title":{},"body":{"license.html":{}}}],["affects",{"_index":5504,"title":{},"body":{"license.html":{}}}],["affero",{"_index":5096,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":5611,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":5301,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":6809,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":6813,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterbuild",{"_index":409,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["afterbuild(afterbuildfn",{"_index":424,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["afterbuildfn",{"_index":433,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["afterduedateornone",{"_index":4367,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["afterduedateornone(duedate",{"_index":4419,"title":{},"body":{"classes/TaskScope.html":{}}}],["aftereach",{"_index":6733,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":6861,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":6731,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":4977,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":3485,"title":{},"body":{"classes/MongoPatterns.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":6373,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":5394,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregates",{"_index":6260,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agile",{"_index":6234,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":3187,"title":{},"body":{"classes/ImportUserScope.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["ago",{"_index":1999,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["agpl",{"_index":5784,"title":{},"body":{"license.html":{}}}],["agree",{"_index":5689,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":5736,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":6593,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":5640,"title":{},"body":{"license.html":{}}}],["aims",{"_index":6175,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":4778,"title":{},"body":{"dependencies.html":{}}}],["ald",{"_index":6026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algorithm",{"_index":3256,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["alias",{"_index":2736,"title":{},"body":{"interfaces/ISystemProperties.html":{},"entities/System.html":{}}}],["aliases",{"_index":5874,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":6229,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["all('seed",{"_index":1759,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["all_entities",{"_index":3417,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["allcollections",{"_index":5978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allcollections.map(async",{"_index":5980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allcollectionswithfilepaths",{"_index":1902,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.filter",{"_index":1911,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.map((file",{"_index":1916,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["alleging",{"_index":5618,"title":{},"body":{"license.html":{}}}],["allforcreator",{"_index":4345,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforcreator.addquery(allforfinishedcoursesandlessonsforcreator.query",{"_index":4348,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforcreator.addquery(closeddraftsforcreator.query",{"_index":4347,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforcreator.addquery(closedwithoutparentforcreator.query",{"_index":4346,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessons",{"_index":4330,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessons.addquery(parentsfinished.query",{"_index":4331,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessons.bydraft(false",{"_index":4332,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessonsforcreator",{"_index":4342,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessonsforcreator.addquery(parentsfinished.query",{"_index":4343,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allforfinishedcoursesandlessonsforcreator.bycreatorid(parentids.creatorid",{"_index":4344,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["allow",{"_index":4172,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":4599,"title":{},"body":{"classes/UserAlreadyAssignedToImportUserError.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":4578,"title":{},"body":{"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allrooms",{"_index":1293,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["alone",{"_index":6729,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":5368,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":843,"title":{},"body":{"classes/BusinessError.html":{},"injectables/FileSystemAdapter.html":{},"injectables/NewsRepo.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"injectables/UserImportUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":5159,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":5424,"title":{},"body":{"license.html":{}}}],["always",{"_index":6262,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":5903,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amp",{"_index":4979,"title":{},"body":{"miscellaneous/functions.html":{}}}],["amqp",{"_index":4780,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":3398,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["amqplib",{"_index":4783,"title":{},"body":{"dependencies.html":{}}}],["analysis",{"_index":6145,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":4911,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":5582,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":6752,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":5152,"title":{},"body":{"license.html":{}}}],["ang",{"_index":6884,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["annotations",{"_index":6496,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":6478,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":6224,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":6835,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["anotherreference",{"_index":2505,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["anti",{"_index":5327,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":5378,"title":{},"body":{"license.html":{}}}],["anything",{"_index":5207,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":6548,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":207,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api/v1",{"_index":5013,"title":{},"body":{"index.html":{}}}],["api/v3",{"_index":5014,"title":{},"body":{"index.html":{}}}],["api/v3/news",{"_index":5023,"title":{},"body":{"index.html":{}}}],["api_validation_error",{"_index":206,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":5965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":661,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty()@decodehtmlentities",{"_index":700,"title":{},"body":{"classes/BoardLessonResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/TaskResponse.html":{}}}],["apiproperty({description",{"_index":657,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatchResponse.html":{}}}],["apiproperty({enum",{"_index":3699,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":3697,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({type",{"_index":755,"title":{},"body":{"classes/BoardResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/NewsListResponse.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{},"classes/UserMatchListResponse.html":{}}}],["apipropertyoptional",{"_index":662,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CreateNewsParams.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserSortingQuery.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/SortingQuery.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserFilterQuery.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["apipropertyoptional()@decodehtmlentities",{"_index":695,"title":{},"body":{"classes/BoardLessonResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/TaskResponse.html":{}}}],["apipropertyoptional()@isoptional()@isboolean",{"_index":2963,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["apipropertyoptional()@isoptional()@isstring()@isnotempty",{"_index":2961,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/UserFilterQuery.html":{}}}],["apipropertyoptional({description",{"_index":3145,"title":{},"body":{"classes/ImportUserResponse.html":{},"classes/NewsResponse.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchResponse.html":{}}}],["apipropertyoptional({enum",{"_index":2968,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["apipropertyoptional({type",{"_index":3693,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":6198,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":987,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["apitags('courses",{"_index":995,"title":{},"body":{"controllers/CourseController.html":{}}}],["apitags('dashboard",{"_index":1275,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apitags('news",{"_index":3546,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["apitags('rooms",{"_index":3938,"title":{},"body":{"controllers/RoomsController.html":{}}}],["apitags('task",{"_index":4232,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":4606,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('userimport",{"_index":2914,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["apivalidationerror",{"_index":174,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":2490,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":229,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":213,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["apivalidationerrorresponse(error",{"_index":2419,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["app",{"_index":2435,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":6863,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":6857,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":896,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":895,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":893,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":894,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["append",{"_index":5872,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":235,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["applicable",{"_index":5212,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":6118,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":830,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["applications",{"_index":4996,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":1843,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":5713,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1907,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"modules/InterceptorModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":5966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":6865,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":6214,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":5035,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":5360,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":5756,"title":{},"body":{"license.html":{}}}],["apps",{"_index":6012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":5998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../all",{"_index":5910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":5892,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../base.entity.ts",{"_index":5875,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../bootstrap.console.ts",{"_index":5932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../cleanup",{"_index":5914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../console.ts",{"_index":5912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":4934,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":5879,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course.entity.ts",{"_index":5925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../course.factory.ts",{"_index":5918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../coursegroup.factory.ts",{"_index":5920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":5924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../dashboard.entity.ts",{"_index":5880,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../dashboard.repo.ts",{"_index":5934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":5957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../decode",{"_index":4953,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../empty",{"_index":5929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":5882,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":5884,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../file",{"_index":5959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file.factory.ts",{"_index":5928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../filestorage.adapter.ts",{"_index":4952,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../find",{"_index":4932,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":4949,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../import",{"_index":4923,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["apps/.../importuser.types.ts",{"_index":4927,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../jwt",{"_index":5958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../learnroom.types.ts",{"_index":4924,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../lesson.factory.ts",{"_index":5935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.module.ts",{"_index":5888,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":4946,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../management.ts",{"_index":4947,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../map",{"_index":5937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../match",{"_index":4925,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../mongo",{"_index":5923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":5952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.factory.ts",{"_index":5922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":5890,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":4928,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":5887,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":5889,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../rocket",{"_index":5885,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../role",{"_index":4929,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../role.factory.ts",{"_index":5942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../rooms.uc.ts",{"_index":5876,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../school.factory.ts",{"_index":5943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../scope.ts",{"_index":5881,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":5940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../server.module.ts",{"_index":5926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../setup",{"_index":5947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../single",{"_index":4955,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../sorting.query.ts",{"_index":4931,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../storageprovider.factory.ts",{"_index":5949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":4957,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../submission.factory.ts",{"_index":5950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../swagger.ts",{"_index":5917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../system.factory.ts",{"_index":5951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.authorization.service.ts",{"_index":4933,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../task.entity.ts",{"_index":5893,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../task.factory.ts",{"_index":5953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../team.factory.ts",{"_index":5955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../types.ts",{"_index":5878,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../user.factory.ts",{"_index":5960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user.ts",{"_index":5886,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../value",{"_index":5895,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":6103,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":6158,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":6007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":6163,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":6016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":2376,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/console.module.ts",{"_index":3999,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["apps/server/src/console/console.ts",{"_index":5974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/console/server.console.ts",{"_index":3985,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:11",{"_index":3989,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:17",{"_index":3992,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:6",{"_index":3987,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts",{"_index":4530,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts:5",{"_index":4532,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":881,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":214,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":2121,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":2123,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":4753,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":2114,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":2384,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":2547,"title":{},"body":{"interfaces/IErrorType.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":2173,"title":{},"body":{"interfaces/FeathersError.html":{}}}],["apps/server/src/core/error/server",{"_index":6055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":3218,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":2653,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":2664,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":2662,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":2668,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":2659,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":2666,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":3371,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":3350,"title":{},"body":{"injectables/Logger.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":2464,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":4757,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":4959,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/management.ts",{"_index":4960,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":3232,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":5905,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":3228,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":3261,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt",{"_index":3289,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":3264,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10",{"_index":3266,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20",{"_index":3268,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":294,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":301,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:16",{"_index":318,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:32",{"_index":313,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:54",{"_index":321,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:6",{"_index":306,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":2133,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["apps/server/src/modules/files/files.module.ts",{"_index":2340,"title":{},"body":{"modules/FilesModule.html":{}}}],["apps/server/src/modules/files/job/delete",{"_index":1988,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["apps/server/src/modules/files/uc/delete",{"_index":2012,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["apps/server/src/modules/learnroom/controller/course.controller.ts",{"_index":978,"title":{},"body":{"controllers/CourseController.html":{}}}],["apps/server/src/modules/learnroom/controller/course.controller.ts:17",{"_index":984,"title":{},"body":{"controllers/CourseController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts",{"_index":1254,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:17",{"_index":1258,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:24",{"_index":1262,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:40",{"_index":1268,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts",{"_index":1074,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:26",{"_index":1097,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:31",{"_index":1100,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:36",{"_index":1098,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:41",{"_index":1096,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:46",{"_index":1099,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:5",{"_index":1095,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:51",{"_index":1101,"title":{},"body":{"classes/CourseMetadataResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/coursemetadata.response.ts:54",{"_index":1078,"title":{},"body":{"classes/CourseMetadataListResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts",{"_index":1495,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:108",{"_index":1673,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:114",{"_index":1672,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:15",{"_index":1517,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:20",{"_index":1519,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:25",{"_index":1518,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:3",{"_index":1515,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:30",{"_index":1516,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:33",{"_index":1499,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:58",{"_index":1505,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:63",{"_index":1507,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:68",{"_index":1506,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:73",{"_index":1500,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:78",{"_index":1508,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:83",{"_index":1509,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:89",{"_index":1504,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:95",{"_index":1503,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:98",{"_index":1671,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts",{"_index":3491,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:12",{"_index":3504,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:17",{"_index":3505,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:23",{"_index":3502,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:29",{"_index":3494,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:33",{"_index":3495,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/patchgroup.params.ts",{"_index":3826,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/patchgroup.params.ts:12",{"_index":3828,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse",{"_index":778,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts",{"_index":652,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:108",{"_index":758,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:113",{"_index":759,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:118",{"_index":754,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:124",{"_index":757,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:15",{"_index":767,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:19",{"_index":768,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:22",{"_index":761,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:25",{"_index":766,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:29",{"_index":762,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:33",{"_index":764,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:36",{"_index":765,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:39",{"_index":763,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:42",{"_index":770,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:45",{"_index":769,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:48",{"_index":694,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:5",{"_index":760,"title":{},"body":{"classes/BoardTaskResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:58",{"_index":699,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:62",{"_index":701,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:66",{"_index":696,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:69",{"_index":697,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:72",{"_index":702,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:75",{"_index":698,"title":{},"body":{"classes/BoardLessonResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:78",{"_index":654,"title":{},"body":{"classes/BoardElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:87",{"_index":660,"title":{},"body":{"classes/BoardElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:92",{"_index":658,"title":{},"body":{"classes/BoardElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/roomboardresponse.ts:96",{"_index":753,"title":{},"body":{"classes/BoardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/rooms.controller.ts",{"_index":3932,"title":{},"body":{"controllers/RoomsController.html":{}}}],["apps/server/src/modules/learnroom/controller/rooms.controller.ts:17",{"_index":3936,"title":{},"body":{"controllers/RoomsController.html":{}}}],["apps/server/src/modules/learnroom/learnroom.module.ts",{"_index":3313,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["apps/server/src/modules/learnroom/mapper/board",{"_index":771,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/board.mapper.ts",{"_index":704,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/board.mapper.ts:14",{"_index":707,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/course.mapper.ts",{"_index":1060,"title":{},"body":{"classes/CourseMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/course.mapper.ts:5",{"_index":1063,"title":{},"body":{"classes/CourseMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts",{"_index":1520,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:15",{"_index":1524,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:35",{"_index":1526,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5",{"_index":1529,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts",{"_index":1215,"title":{},"body":{"injectables/CourseUc.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts:10",{"_index":1220,"title":{},"body":{"injectables/CourseUc.html":{}}}],["apps/server/src/modules/learnroom/uc/course.uc.ts:7",{"_index":1218,"title":{},"body":{"injectables/CourseUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts",{"_index":1674,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:13",{"_index":1680,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:25",{"_index":1682,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:40",{"_index":1684,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:56",{"_index":1686,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:7",{"_index":1679,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts",{"_index":585,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:20",{"_index":3946,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:28",{"_index":3950,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:44",{"_index":3953,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:56",{"_index":3948,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:67",{"_index":3951,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:74",{"_index":3947,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:90",{"_index":3952,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/learnroom/uc/rooms.uc.ts:98",{"_index":3949,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["apps/server/src/modules/management/console/database",{"_index":1705,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["apps/server/src/modules/management/controller/database",{"_index":1744,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts",{"_index":800,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:11",{"_index":816,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:21",{"_index":804,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/management.module.ts",{"_index":3412,"title":{},"body":{"modules/ManagementModule.html":{}}}],["apps/server/src/modules/management/uc/database",{"_index":1825,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":1225,"title":{},"body":{"classes/CreateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":3565,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":3576,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:101",{"_index":3692,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:106",{"_index":3688,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:111",{"_index":3703,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:116",{"_index":3687,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:12",{"_index":3685,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:121",{"_index":3702,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:126",{"_index":3691,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:129",{"_index":3577,"title":{},"body":{"classes/NewsListResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:51",{"_index":3690,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:56",{"_index":3701,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:61",{"_index":3686,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:66",{"_index":3689,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:73",{"_index":3694,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:78",{"_index":3695,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:85",{"_index":3700,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:91",{"_index":3698,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:96",{"_index":3696,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":3963,"title":{},"body":{"classes/SchoolInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/target",{"_index":4130,"title":{},"body":{"classes/TargetInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":4575,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":4663,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":3519,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:21",{"_index":3522,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:35",{"_index":3529,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:56",{"_index":3533,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:70",{"_index":3539,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:84",{"_index":3525,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/team",{"_index":4517,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":3593,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:37",{"_index":3600,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:51",{"_index":3598,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:64",{"_index":3604,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:8",{"_index":3602,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":3956,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["apps/server/src/modules/news/mapper/target",{"_index":4125,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":4662,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":3641,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":3721,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:119",{"_index":3750,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:143",{"_index":3732,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:154",{"_index":3742,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:174",{"_index":3748,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:192",{"_index":3741,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:202",{"_index":3744,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:21",{"_index":3728,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:34",{"_index":3730,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:64",{"_index":3734,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:95",{"_index":3739,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/rocketchat/rocket",{"_index":6,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/task/controller/dto/task",{"_index":4454,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":4253,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:19",{"_index":4404,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:23",{"_index":4405,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:26",{"_index":4398,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:29",{"_index":4403,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:33",{"_index":4399,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:37",{"_index":4401,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:40",{"_index":4402,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:43",{"_index":4400,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:46",{"_index":4407,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:49",{"_index":4406,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:52",{"_index":4254,"title":{},"body":{"classes/TaskListResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:8",{"_index":4397,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":4210,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:20",{"_index":4214,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:34",{"_index":4217,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:50",{"_index":4220,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:62",{"_index":4224,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/mapper/task",{"_index":4449,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":4262,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:6",{"_index":4264,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":4287,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts",{"_index":4143,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:16",{"_index":4150,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:25",{"_index":4154,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:37",{"_index":4156,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:56",{"_index":4160,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:62",{"_index":4158,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:69",{"_index":4165,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:84",{"_index":4163,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":4463,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:109",{"_index":4476,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:138",{"_index":4478,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:16",{"_index":4474,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:166",{"_index":4479,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:63",{"_index":4472,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:82",{"_index":4470,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:9",{"_index":4468,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user",{"_index":2863,"title":{},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserSortingQuery.html":{},"classes/RoleNameMapper.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":3866,"title":{},"body":{"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:11",{"_index":3870,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:14",{"_index":3869,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:17",{"_index":3867,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:20",{"_index":3874,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:23",{"_index":3872,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:26",{"_index":3871,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:29",{"_index":3873,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:8",{"_index":3868,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":4601,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:18",{"_index":4604,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":3876,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":3878,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":4701,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/server.controller.ts",{"_index":4006,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":4007,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":4012,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/server.module.ts:86",{"_index":4052,"title":{},"body":{"modules/ServerTestModule.html":{}}}],["apps/server/src/shared/$1",{"_index":6015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":176,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":823,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":834,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":837,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":836,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":835,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:19",{"_index":833,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:34",{"_index":838,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:38",{"_index":839,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/user",{"_index":4592,"title":{},"body":{"classes/UserAlreadyAssignedToImportUserError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts",{"_index":4749,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts:4",{"_index":4751,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":6059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":2045,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":1965,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":4540,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":4550,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":4548,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":4547,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":4552,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":4554,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/validator/string.validator.ts",{"_index":4066,"title":{},"body":{"classes/StringValidator.html":{}}}],["apps/server/src/shared/common/validator/string.validator.ts:10",{"_index":4069,"title":{},"body":{"classes/StringValidator.html":{}}}],["apps/server/src/shared/common/validator/string.validator.ts:2",{"_index":4071,"title":{},"body":{"classes/StringValidator.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":3793,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":3800,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":3803,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":3808,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:11",{"_index":3811,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:14",{"_index":3814,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:17",{"_index":3813,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:20",{"_index":3812,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":3810,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/sorting.query.ts",{"_index":4053,"title":{},"body":{"classes/SortingQuery.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/shared/controller/dto/sorting.query.ts:13",{"_index":4054,"title":{},"body":{"classes/SortingQuery.html":{}}}],["apps/server/src/shared/controller/dto/sorting.query.ts:18",{"_index":4056,"title":{},"body":{"classes/SortingQuery.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":3818,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":6022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/decode",{"_index":4961,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/shared/controller/transformer/single",{"_index":4986,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":4988,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/all",{"_index":5961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":352,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":359,"title":{},"body":{"entities/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:24",{"_index":394,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:27",{"_index":398,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:30",{"_index":397,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:33",{"_index":400,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":357,"title":{},"body":{"entities/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts",{"_index":899,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:36",{"_index":911,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:39",{"_index":909,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:42",{"_index":914,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:45",{"_index":919,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:48",{"_index":923,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:51",{"_index":921,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:55",{"_index":907,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:58",{"_index":915,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:62",{"_index":926,"title":{},"body":{"entities/Course.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts",{"_index":1038,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:15",{"_index":1042,"title":{},"body":{"entities/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:18",{"_index":1041,"title":{},"body":{"entities/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts",{"_index":1290,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:107",{"_index":2504,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:116",{"_index":2510,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:137",{"_index":2514,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:14",{"_index":2557,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:141",{"_index":2517,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:16",{"_index":2559,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:160",{"_index":1312,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:162",{"_index":1309,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:164",{"_index":1311,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:166",{"_index":1313,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:168",{"_index":1334,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:175",{"_index":1341,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:179",{"_index":1308,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:18",{"_index":2558,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:192",{"_index":1328,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:196",{"_index":1332,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:20",{"_index":2555,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:200",{"_index":1326,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:212",{"_index":1322,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:22",{"_index":2554,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:220",{"_index":1339,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:230",{"_index":1348,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:239",{"_index":1345,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:24",{"_index":2560,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:254",{"_index":1318,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:265",{"_index":1316,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:275",{"_index":1315,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:281",{"_index":1325,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:289",{"_index":1331,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:301",{"_index":1343,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:310",{"_index":1337,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:37",{"_index":2500,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:39",{"_index":2503,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:41",{"_index":2502,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:51",{"_index":2499,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:59",{"_index":2508,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:63",{"_index":2507,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:67",{"_index":2509,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:71",{"_index":2506,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:75",{"_index":2501,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:77",{"_index":2513,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:8",{"_index":2556,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:81",{"_index":2511,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:85",{"_index":2512,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:89",{"_index":2516,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:99",{"_index":2515,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts",{"_index":1460,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:41",{"_index":1469,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:44",{"_index":1470,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:47",{"_index":1471,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:50",{"_index":1468,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:53",{"_index":1465,"title":{},"body":{"entities/DashboardGridElementModel.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:73",{"_index":1550,"title":{},"body":{"entities/DashboardModelEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.model.entity.ts:77",{"_index":1551,"title":{},"body":{"entities/DashboardModelEntity.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts",{"_index":503,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:17",{"_index":508,"title":{},"body":{"entities/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:20",{"_index":510,"title":{},"body":{"entities/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:23",{"_index":507,"title":{},"body":{"entities/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:32",{"_index":2227,"title":{},"body":{"entities/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:35",{"_index":2226,"title":{},"body":{"entities/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:38",{"_index":2228,"title":{},"body":{"entities/File.html":{}}}],["apps/server/src/shared/domain/entity/import",{"_index":2562,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts",{"_index":2650,"title":{},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:14",{"_index":3323,"title":{},"body":{"entities/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:18",{"_index":3322,"title":{},"body":{"entities/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:21",{"_index":3320,"title":{},"body":{"entities/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts",{"_index":1103,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:104",{"_index":1105,"title":{},"body":{"entities/CourseNews.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:110",{"_index":4516,"title":{},"body":{"entities/TeamNews.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:31",{"_index":3516,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:35",{"_index":3506,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:39",{"_index":3508,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:42",{"_index":3509,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:45",{"_index":3512,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:48",{"_index":3513,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:51",{"_index":3514,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:55",{"_index":3515,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:58",{"_index":3511,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:61",{"_index":3507,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:64",{"_index":3517,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:66",{"_index":3510,"title":{},"body":{"entities/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:98",{"_index":3968,"title":{},"body":{"entities/SchoolNews.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts",{"_index":2672,"title":{},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:14",{"_index":3903,"title":{},"body":{"entities/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:18",{"_index":3904,"title":{},"body":{"entities/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:28",{"_index":3906,"title":{},"body":{"entities/Role.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts",{"_index":2681,"title":{},"body":{"interfaces/ISchoolProperties.html":{},"entities/School.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts:15",{"_index":3955,"title":{},"body":{"entities/School.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts:18",{"_index":3954,"title":{},"body":{"entities/School.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts",{"_index":2684,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:15",{"_index":4059,"title":{},"body":{"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:18",{"_index":4058,"title":{},"body":{"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:21",{"_index":4062,"title":{},"body":{"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:24",{"_index":4060,"title":{},"body":{"entities/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts",{"_index":2697,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:26",{"_index":4081,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:29",{"_index":4079,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:32",{"_index":4075,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:35",{"_index":4082,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:39",{"_index":4074,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:42",{"_index":4080,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:46",{"_index":4076,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:49",{"_index":4077,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:52",{"_index":4078,"title":{},"body":{"entities/Submission.html":{}}}],["apps/server/src/shared/domain/entity/system.entity.ts",{"_index":2735,"title":{},"body":{"interfaces/ISystemProperties.html":{},"entities/System.html":{}}}],["apps/server/src/shared/domain/entity/system.entity.ts:20",{"_index":4123,"title":{},"body":{"entities/System.html":{}}}],["apps/server/src/shared/domain/entity/system.entity.ts:23",{"_index":4124,"title":{},"body":{"entities/System.html":{}}}],["apps/server/src/shared/domain/entity/system.entity.ts:26",{"_index":4122,"title":{},"body":{"entities/System.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts",{"_index":2743,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:33",{"_index":4514,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:35",{"_index":4513,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:49",{"_index":4139,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:52",{"_index":4134,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:55",{"_index":4131,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:58",{"_index":4135,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:61",{"_index":4140,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:64",{"_index":4133,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:67",{"_index":4132,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:70",{"_index":4138,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:73",{"_index":4141,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:78",{"_index":4137,"title":{},"body":{"entities/Task.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts",{"_index":2839,"title":{},"body":{"interfaces/ITeamProperties.html":{},"entities/Team.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts:10",{"_index":4515,"title":{},"body":{"entities/Team.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts",{"_index":2841,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:18",{"_index":4584,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:21",{"_index":4585,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:24",{"_index":4586,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:28",{"_index":4588,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:32",{"_index":4590,"title":{},"body":{"entities/User.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":2549,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/interface/learnroom.ts",{"_index":2647,"title":{},"body":{"interfaces/ILearnroom.html":{}}}],["apps/server/src/shared/domain/interface/user.ts",{"_index":2531,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/service/permission.service.ts",{"_index":3829,"title":{},"body":{"injectables/PermissionService.html":{}}}],["apps/server/src/shared/domain/service/permission.service.ts:16",{"_index":3839,"title":{},"body":{"injectables/PermissionService.html":{}}}],["apps/server/src/shared/domain/service/permission.service.ts:25",{"_index":3846,"title":{},"body":{"injectables/PermissionService.html":{}}}],["apps/server/src/shared/domain/service/permission.service.ts:47",{"_index":3837,"title":{},"body":{"injectables/PermissionService.html":{}}}],["apps/server/src/shared/domain/service/permission.service.ts:56",{"_index":3835,"title":{},"body":{"injectables/PermissionService.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":5901,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":5904,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/importuser.types.ts",{"_index":2642,"title":{},"body":{"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/shared/domain/types/learnroom.types.ts",{"_index":4935,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/news.types.ts",{"_index":2519,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":5906,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/infra/console/console",{"_index":855,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{}}}],["apps/server/src/shared/infra/database/management/database",{"_index":1774,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{}}}],["apps/server/src/shared/infra/database/mongo",{"_index":3434,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.module.ts",{"_index":2104,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.module.ts:10",{"_index":2108,"title":{},"body":{"modules/EncryptionModule.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts",{"_index":4108,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:13",{"_index":4112,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:6",{"_index":4110,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:9",{"_index":4114,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/feathers/feathers",{"_index":2191,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/infra/feathers/feathers.module.ts",{"_index":2179,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/shared/infra/file",{"_index":2255,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/filestorage/filestorage.adapter.ts",{"_index":2230,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/infra/filestorage/filestorage.adapter.ts:21",{"_index":2233,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["apps/server/src/shared/infra/mail/mail.interface.ts",{"_index":236,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["apps/server/src/shared/infra/mail/mail.module.ts",{"_index":3374,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/mail/mail.module.ts:28",{"_index":3376,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts",{"_index":3395,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts:12",{"_index":3400,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/shared/infra/mail/mail.service.ts:18",{"_index":3402,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":542,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:14",{"_index":564,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:19",{"_index":560,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:27",{"_index":562,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:36",{"_index":566,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:40",{"_index":572,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:44",{"_index":568,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:48",{"_index":570,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:53",{"_index":556,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":554,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:9",{"_index":558,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts",{"_index":1156,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:21",{"_index":1211,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:32",{"_index":1208,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:42",{"_index":1210,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:49",{"_index":1158,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:52",{"_index":1161,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:77",{"_index":1163,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:86",{"_index":1165,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/shared/repo/course/course.repo.ts:9",{"_index":1209,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts",{"_index":1051,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:10",{"_index":1055,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:7",{"_index":1053,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts",{"_index":1553,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:116",{"_index":1576,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:132",{"_index":1571,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:16",{"_index":1564,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:19",{"_index":1582,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:24",{"_index":1578,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:34",{"_index":1573,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:46",{"_index":1584,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:55",{"_index":1580,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:68",{"_index":1569,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:79",{"_index":1586,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:99",{"_index":1566,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts",{"_index":1644,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:14",{"_index":2545,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:15",{"_index":2544,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:16",{"_index":2546,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:20",{"_index":1648,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:24",{"_index":1653,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:30",{"_index":1654,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:36",{"_index":1650,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/dashboard/dashboard.repo.ts:42",{"_index":1652,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts",{"_index":2344,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:13",{"_index":2362,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:15",{"_index":2351,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:23",{"_index":2349,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/files/files.repo.ts:8",{"_index":2348,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.repo.ts",{"_index":3092,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.repo.ts:11",{"_index":3098,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.repo.ts:23",{"_index":3104,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.repo.ts:30",{"_index":3100,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.repo.ts:48",{"_index":3102,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.scope.ts",{"_index":3148,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.scope.ts:112",{"_index":3176,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.scope.ts:16",{"_index":3174,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.scope.ts:23",{"_index":3161,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.scope.ts:37",{"_index":3163,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.scope.ts:53",{"_index":3165,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.scope.ts:68",{"_index":3170,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.scope.ts:85",{"_index":3159,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.scope.ts:9",{"_index":3172,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["apps/server/src/shared/repo/importuser/importuser.scope.ts:99",{"_index":3168,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["apps/server/src/shared/repo/lesson/lesson",{"_index":3340,"title":{},"body":{"classes/LessonScope.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts",{"_index":3330,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:12",{"_index":3333,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:9",{"_index":3331,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/mongo.patterns.ts",{"_index":3479,"title":{},"body":{"classes/MongoPatterns.html":{}}}],["apps/server/src/shared/repo/mongo.patterns.ts:6",{"_index":3483,"title":{},"body":{"classes/MongoPatterns.html":{}}}],["apps/server/src/shared/repo/news/news",{"_index":3704,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts",{"_index":3654,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:11",{"_index":3665,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:19",{"_index":3659,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:32",{"_index":3664,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/news/news.repo.ts:39",{"_index":3661,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":6050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts",{"_index":3922,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts:11",{"_index":3928,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts:16",{"_index":3926,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/role/role.repo.ts:7",{"_index":3925,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/shared/repo/scope.ts",{"_index":3969,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/scope.ts:11",{"_index":3971,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:17",{"_index":3976,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:25",{"_index":3974,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:9",{"_index":3973,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts",{"_index":4063,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts:7",{"_index":4064,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts",{"_index":4094,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:10",{"_index":4097,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:13",{"_index":4101,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:21",{"_index":4103,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/submission/submission.repo.ts:26",{"_index":4099,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/shared/repo/task/task",{"_index":4408,"title":{},"body":{"classes/TaskScope.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts",{"_index":4290,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:10",{"_index":4296,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:104",{"_index":4298,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:13",{"_index":4304,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:162",{"_index":4306,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:188",{"_index":4308,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:19",{"_index":4310,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/task/task.repo.ts:23",{"_index":4303,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts",{"_index":2066,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:10",{"_index":2075,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:21",{"_index":2080,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:36",{"_index":2082,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts",{"_index":4702,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts:12",{"_index":4706,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts:134",{"_index":4710,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts:26",{"_index":4708,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/repo/user/user.repo.ts:9",{"_index":4705,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/shared/testing/cleanup",{"_index":5977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts",{"_index":402,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:111",{"_index":465,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:123",{"_index":470,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:133",{"_index":466,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:137",{"_index":456,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:149",{"_index":468,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:15",{"_index":422,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:32",{"_index":460,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:47",{"_index":446,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:60",{"_index":452,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:73",{"_index":450,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:87",{"_index":426,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/base.factory.ts:99",{"_index":441,"title":{},"body":{"classes/BaseFactory.html":{}}}],["apps/server/src/shared/testing/factory/course.factory.ts",{"_index":1007,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/course.factory.ts:11",{"_index":1010,"title":{},"body":{"classes/CourseFactory.html":{}}}],["apps/server/src/shared/testing/factory/course.factory.ts:18",{"_index":1011,"title":{},"body":{"classes/CourseFactory.html":{}}}],["apps/server/src/shared/testing/factory/coursegroup.factory.ts",{"_index":6039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/file.factory.ts",{"_index":6046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/import",{"_index":2939,"title":{},"body":{"classes/ImportUserFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/lesson.factory.ts",{"_index":3325,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/news.factory.ts",{"_index":6041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/role.factory.ts",{"_index":6061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/school.factory.ts",{"_index":6063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/storageprovider.factory.ts",{"_index":6070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/submission.factory.ts",{"_index":4084,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/submission.factory.ts:8",{"_index":4085,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["apps/server/src/shared/testing/factory/system.factory.ts",{"_index":6073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts",{"_index":4244,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts:11",{"_index":4245,"title":{},"body":{"classes/TaskFactory.html":{}}}],["apps/server/src/shared/testing/factory/task.factory.ts:16",{"_index":4247,"title":{},"body":{"classes/TaskFactory.html":{}}}],["apps/server/src/shared/testing/factory/team.factory.ts",{"_index":6075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/user.factory.ts",{"_index":4612,"title":{},"body":{"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/factory/user.factory.ts:8",{"_index":4615,"title":{},"body":{"classes/UserFactory.html":{}}}],["apps/server/src/shared/testing/map",{"_index":6051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/testing/setup",{"_index":6065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appthis",{"_index":5015,"title":{},"body":{"index.html":{}}}],["architecture",{"_index":5005,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":6559,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":5778,"title":{},"body":{"license.html":{}}}],["archived",{"_index":1091,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["archivegroup(groupname",{"_index":95,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["archives",{"_index":6610,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":6735,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":6623,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":4785,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":3991,"title":{},"body":{"classes/ServerConsole.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":52,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":2393,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":6207,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":5740,"title":{},"body":{"license.html":{}}}],["around",{"_index":5796,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":5649,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":5660,"title":{},"body":{"license.html":{}}}],["array",{"_index":693,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/IRoleProperties.html":{},"entities/Role.html":{},"miscellaneous/functions.html":{}}}],["array.from(modelentity.gridelements).foreach((el",{"_index":1635,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["array.from(modelentity.gridelements).map(async",{"_index":1602,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["array.isarray(collectionnamefilter",{"_index":1908,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["array.isarray(constraint",{"_index":232,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(matches",{"_index":2621,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["array.isarray(permission",{"_index":4205,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["array.isarray(permissions",{"_index":335,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["array.isarray(props.classnames",{"_index":2601,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["array.isarray(props.rolenames",{"_index":2598,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["array.isarray(requiredpermissions",{"_index":3857,"title":{},"body":{"injectables/PermissionService.html":{}}}],["array.isarray(user.permissions",{"_index":2157,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["array.transformer.ts",{"_index":4956,"title":{},"body":{"miscellaneous/functions.html":{}}}],["article",{"_index":5336,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1957,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/SortingQuery.html":{},"miscellaneous/enumerations.html":{}}}],["aspect",{"_index":6365,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":6221,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":5149,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":6834,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":5601,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":4593,"title":{},"body":{"classes/UserAlreadyAssignedToImportUserError.html":{},"injectables/UserImportUc.html":{}}}],["assignemnt",{"_index":3001,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["assigning",{"_index":6533,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":63,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["assignment,@typescript",{"_index":59,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["associated",{"_index":5283,"title":{},"body":{"license.html":{}}}],["associations",{"_index":410,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["associations(associations",{"_index":439,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["assume",{"_index":5729,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":6572,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":5759,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":5547,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":74,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"controllers/ImportUserController.html":{},"injectables/ImportUserRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":6751,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":6457,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":6337,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":5765,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":244,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":247,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":5558,"title":{},"body":{"license.html":{}}}],["attends",{"_index":3000,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["attention",{"_index":2796,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["attributions",{"_index":5531,"title":{},"body":{"license.html":{}}}],["aud",{"_index":3246,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":3254,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audit",{"_index":6449,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":144,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"todo.html":{}}}],["auth.guard.ts",{"_index":3229,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.provider",{"_index":299,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":2134,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:13",{"_index":2142,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:16",{"_index":2150,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:26",{"_index":2153,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:38",{"_index":2146,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:55",{"_index":2144,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:60",{"_index":2148,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":3237,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":3259,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":3258,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":988,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":996,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":2538,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":6461,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":3090,"title":{},"body":{"modules/ImportUserModule.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authguard",{"_index":3230,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":3231,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":258,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":5530,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":3849,"title":{},"body":{"injectables/PermissionService.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":297,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorizationmodule",{"_index":286,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":292,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":5521,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":5625,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":5664,"title":{},"body":{"license.html":{}}}],["authors",{"_index":5537,"title":{},"body":{"license.html":{}}}],["authtoken",{"_index":80,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["auto",{"_index":2577,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserScope.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application.html":{}}}],["automated",{"_index":6695,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":5592,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":5077,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["availability",{"_index":6703,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":365,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"classes/ImportUserFilterQuery.html":{},"license.html":{},"modules.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["availabledate",{"_index":674,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["availableon",{"_index":4368,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["avoid",{"_index":6707,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["avoiding",{"_index":6192,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":129,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"controllers/ImportUserController.html":{},"injectables/ImportUserRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":6753,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":5125,"title":{},"body":{"license.html":{}}}],["aws",{"_index":2236,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"dependencies.html":{}}}],["axios",{"_index":4790,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":1368,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IRoleProperties.html":{},"entities/Role.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["b.getmetadata().title",{"_index":1372,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["back",{"_index":467,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["background",{"_index":6237,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backuop",{"_index":1938,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup",{"_index":1859,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup/setup/news.json",{"_index":3652,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":6633,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badrequestexception",{"_index":1350,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/ImportUserMapper.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('dashboard",{"_index":1398,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["badrequestexception('invalid",{"_index":3825,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('this",{"_index":1383,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["base",{"_index":824,"title":{},"body":{"classes/BusinessError.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base.entity",{"_index":512,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{}}}],["base.factory",{"_index":1025,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["base.repo",{"_index":2363,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["base64",{"_index":4914,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":239,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":404,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/DatabaseManagementUc.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["basedir",{"_index":1835,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baseentity",{"_index":351,"title":{"entities/BaseEntity.html":{}},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITeamProperties.html":{},"entities/School.html":{},"entities/Team.html":{}}}],["baseentityreference",{"_index":367,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"miscellaneous/typealiases.html":{}}}],["baseentitywithtimestamps",{"_index":370,"title":{"entities/BaseEntityWithTimestamps.html":{}},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"entities/User.html":{}}}],["basefactory",{"_index":401,"title":{"classes/BaseFactory.html":{}},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["basefactory.define",{"_index":6071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(coursegroup",{"_index":6040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(coursenews",{"_index":6042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(directory",{"_index":6047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(file",{"_index":6049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(role",{"_index":6062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(school",{"_index":6064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(schoolnews",{"_index":6043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(system",{"_index":6074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(team",{"_index":6076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory.define(teamnews",{"_index":6044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basefactory:111",{"_index":1019,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["basefactory:123",{"_index":1022,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["basefactory:133",{"_index":1020,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["basefactory:137",{"_index":1017,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["basefactory:149",{"_index":1021,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["basefactory:15",{"_index":1009,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["basefactory:32",{"_index":1018,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["basefactory:47",{"_index":1014,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["basefactory:60",{"_index":1016,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["basefactory:73",{"_index":1015,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["basefactory:87",{"_index":1012,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["basefactory:99",{"_index":1013,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["basefile",{"_index":502,"title":{"entities/BaseFile.html":{}},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["basepath",{"_index":1827,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baserepo",{"_index":541,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:14",{"_index":2357,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:19",{"_index":2355,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:27",{"_index":2356,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:36",{"_index":2358,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:40",{"_index":2361,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:44",{"_index":2359,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:48",{"_index":2360,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:53",{"_index":2353,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:9",{"_index":2354,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["basic",{"_index":5295,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":6409,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":6408,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":6415,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":4792,"title":{},"body":{"dependencies.html":{}}}],["bcc",{"_index":255,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":4794,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":6033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":6034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":599,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"license.html":{}}}],["becomes",{"_index":5172,"title":{},"body":{"license.html":{}}}],["before",{"_index":1148,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/MongoPatterns.html":{},"entities/News.html":{},"injectables/PermissionService.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":6801,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":6787,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":6119,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":5063,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":5315,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":6842,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":886,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":4544,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":474,"title":{},"body":{"classes/BaseFactory.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":5658,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":6217,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":688,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":5321,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":5155,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":6395,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":5902,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":5762,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":3454,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["between",{"_index":5292,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":5396,"title":{},"body":{"license.html":{}}}],["bit",{"_index":6419,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["blackbox",{"_index":6709,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":6717,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["board",{"_index":584,"title":{"interfaces/Board.html":{}},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{}}}],["board.displaycolor",{"_index":752,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["board.elements.foreach((element",{"_index":712,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["board.roomid",{"_index":750,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["board.title",{"_index":751,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardelement",{"_index":589,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"miscellaneous/typealiases.html":{}}}],["boardelementresponse",{"_index":651,"title":{"classes/BoardElementResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["boardelements",{"_index":619,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["boardlesson",{"_index":738,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlesson.course",{"_index":746,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlesson.createdat",{"_index":743,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlesson.hidden",{"_index":742,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlesson.id",{"_index":740,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlesson.name",{"_index":741,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlesson.updatedat",{"_index":744,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardlessonresponse",{"_index":656,"title":{"classes/BoardLessonResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["boardlessons",{"_index":647,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["boardmapper",{"_index":703,"title":{"injectables/BoardMapper.html":{}},"body":{"injectables/BoardMapper.html":{},"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{},"overview.html":{}}}],["boardresponse",{"_index":682,"title":{"classes/BoardResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/RoomsController.html":{}}}],["boardtask",{"_index":714,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.availabledate",{"_index":730,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.course",{"_index":726,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.createdat",{"_index":723,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.description",{"_index":736,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.duedate",{"_index":732,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.getparentdata",{"_index":717,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.id",{"_index":721,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.name",{"_index":722,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtask.updatedat",{"_index":724,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskdesc",{"_index":716,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskdesc.color",{"_index":734,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskresponse",{"_index":655,"title":{"classes/BoardTaskResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["boardtasks",{"_index":646,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["boardtaskstatus",{"_index":718,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskstatusmapper",{"_index":710,"title":{"classes/BoardTaskStatusMapper.html":{}},"body":{"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{}}}],["boardtaskstatusmapper.maptoresponse(status",{"_index":719,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["boardtaskstatusresponse",{"_index":666,"title":{"classes/BoardTaskStatusResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{}}}],["boardtaskstatusresponse(status",{"_index":777,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{}}}],["bob",{"_index":6609,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":127,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":4905,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":509,"title":{},"body":{"entities/BaseFile.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsScope.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/PermissionService.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/UpdateFlagParams.html":{},"injectables/UserImportUc.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":4958,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolish",{"_index":4989,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boost",{"_index":4363,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["bootstrap",{"_index":4535,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.boot([process.argv0",{"_index":4539,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstrapconsole",{"_index":4533,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstraps",{"_index":6785,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["both",{"_index":4981,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["box",{"_index":6779,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":5053,"title":{},"body":{"index.html":{}}}],["branches",{"_index":6003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":3025,"title":{},"body":{"classes/ImportUserMapper.html":{},"classes/ImportUserScope.html":{},"injectables/UserRepo.html":{}}}],["breathing",{"_index":6604,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":6393,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["browse",{"_index":5788,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":5786,"title":{},"body":{"modules.html":{}}}],["bson",{"_index":818,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["bson.ejson.deserialize(bsondocuments",{"_index":822,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson.ejson.serialize(documents",{"_index":820,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson/ejson",{"_index":814,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bsonconverter",{"_index":799,"title":{"injectables/BsonConverter.html":{}},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["bsondocuments",{"_index":812,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["btw",{"_index":389,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":6433,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":518,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["bufferencoding",{"_index":2303,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["buffers",{"_index":6292,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["build",{"_index":411,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/GlobalErrorFilter.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["build(params",{"_index":443,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["buildboard",{"_index":3943,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["buildboard(room",{"_index":628,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["buildboardelements",{"_index":3944,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["buildboardelements(tasks",{"_index":645,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["buildlist",{"_index":412,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["buildlist(number",{"_index":449,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["buildoptions",{"_index":445,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["builds",{"_index":6121,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["buildwithid",{"_index":413,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["buildwithid(params",{"_index":451,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["built",{"_index":432,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["bulk",{"_index":6410,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundesland=x",{"_index":6323,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":5802,"title":{},"body":{"todo.html":{}}}],["business",{"_index":825,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":203,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{}}}],["businesserror",{"_index":178,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":193,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{}}}],["businesserror:12",{"_index":197,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{}}}],["businesserror:14",{"_index":196,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{}}}],["businesserror:16",{"_index":195,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{}}}],["businesserror:19",{"_index":194,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{}}}],["businesserror:34",{"_index":198,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{}}}],["businesserror:38",{"_index":200,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{}}}],["businessexception",{"_index":6683,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["byavailable",{"_index":4409,"title":{},"body":{"classes/TaskScope.html":{}}}],["byavailable(availabledate",{"_index":4421,"title":{},"body":{"classes/TaskScope.html":{}}}],["byclasses",{"_index":3149,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["byclasses(classes",{"_index":3158,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["bycourseids",{"_index":3342,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bycourseids(courseids",{"_index":3344,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bycreatorid",{"_index":4410,"title":{},"body":{"classes/TaskScope.html":{}}}],["bycreatorid(creatorid",{"_index":4424,"title":{},"body":{"classes/TaskScope.html":{}}}],["bydraft",{"_index":4411,"title":{},"body":{"classes/TaskScope.html":{}}}],["bydraft(isdraft",{"_index":4426,"title":{},"body":{"classes/TaskScope.html":{}}}],["byfinished",{"_index":4412,"title":{},"body":{"classes/TaskScope.html":{}}}],["byfinished(userid",{"_index":4428,"title":{},"body":{"classes/TaskScope.html":{}}}],["byfirstname",{"_index":3150,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["byfirstname(firstname",{"_index":3160,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["byhidden",{"_index":3343,"title":{},"body":{"classes/LessonScope.html":{}}}],["byhidden(ishidden",{"_index":3346,"title":{},"body":{"classes/LessonScope.html":{}}}],["bylastname",{"_index":3151,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["bylastname(lastname",{"_index":3162,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["bylessonids",{"_index":4413,"title":{},"body":{"classes/TaskScope.html":{}}}],["bylessonids(lessonids",{"_index":4430,"title":{},"body":{"classes/TaskScope.html":{}}}],["byloginname",{"_index":3152,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["byloginname(loginname",{"_index":3164,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["bymatches",{"_index":3153,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["bymatches(matches",{"_index":3167,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["byonlycreatorid",{"_index":4414,"title":{},"body":{"classes/TaskScope.html":{}}}],["byonlycreatorid(teacherid",{"_index":4432,"title":{},"body":{"classes/TaskScope.html":{}}}],["bypassdocumentvalidation",{"_index":1811,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["byrole",{"_index":3154,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["byrole(rolename",{"_index":3169,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["byschool",{"_index":3155,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["byschool(school",{"_index":3171,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["bytargets",{"_index":3705,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":3707,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished",{"_index":3706,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":3709,"title":{},"body":{"classes/NewsScope.html":{}}}],["byuseridquery",{"_index":4095,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["byuseridquery(userid",{"_index":4098,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["byusermatch",{"_index":3156,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["byusermatch(user",{"_index":3173,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["c",{"_index":462,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/IRoleProperties.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"interfaces/Options.html":{},"entities/Role.html":{},"classes/SubmissionFactory.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"license.html":{}}}],["c.id",{"_index":4187,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["c.isfinished",{"_index":4504,"title":{},"body":{"injectables/TaskUC.html":{}}}],["c.isfinished()).map((c",{"_index":4486,"title":{},"body":{"injectables/TaskUC.html":{}}}],["cache",{"_index":3923,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":6290,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":6896,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["caf",{"_index":3192,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["cafe",{"_index":3194,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["calendar",{"_index":6468,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":434,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ImportUserFactory.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":3476,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":430,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":6377,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":2052,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":2433,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/PermissionService.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":5041,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":6532,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":6276,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":6848,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["capabilities",{"_index":6126,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["capture",{"_index":6358,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":5969,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":6424,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":6659,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":6688,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":5372,"title":{},"body":{"license.html":{}}}],["case",{"_index":2129,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"classes/ImportUserScope.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":4252,"title":{},"body":{"classes/TaskFactory.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":2036,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"classes/GlobalErrorFilter.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":2391,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":6435,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":20,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TimeoutInterceptor.html":{}}}],["catcherror((e",{"_index":147,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["catcherror((err",{"_index":4561,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":6438,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":6215,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":6242,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":5400,"title":{},"body":{"license.html":{}}}],["caution",{"_index":3360,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":254,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":5562,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":2520,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["certain",{"_index":5518,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":5572,"title":{},"body":{"license.html":{}}}],["chains",{"_index":5833,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":4798,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":6405,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":4261,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":2323,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changefinishedforuser",{"_index":4464,"title":{},"body":{"injectables/TaskUC.html":{}}}],["changefinishedforuser(userid",{"_index":4469,"title":{},"body":{"injectables/TaskUC.html":{}}}],["changes",{"_index":5093,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":5114,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":6465,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characteristics",{"_index":6472,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":5493,"title":{},"body":{"license.html":{}}}],["characters",{"_index":2278,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/MongoPatterns.html":{},"miscellaneous/functions.html":{}}}],["charge",{"_index":5136,"title":{},"body":{"license.html":{}}}],["chat",{"_index":171,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chat.module.ts",{"_index":3896,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.module.ts:6",{"_index":3897,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.service",{"_index":3900,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["chat.service.ts",{"_index":7,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["chat.service.ts:16",{"_index":3894,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chat.service.ts:18",{"_index":3893,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chat.service.ts:21",{"_index":3892,"title":{},"body":{"classes/RocketChatError.html":{}}}],["chatadapter",{"_index":6301,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":381,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/TaskUC.html":{},"injectables/UserImportUc.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checked",{"_index":341,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":302,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":307,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":2467,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":5076,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":5084,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":6133,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkshorttitle",{"_index":1386,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["checkuserhasallschoolpermissions",{"_index":3830,"title":{},"body":{"injectables/PermissionService.html":{}}}],["checkuserhasallschoolpermissions(user",{"_index":3834,"title":{},"body":{"injectables/PermissionService.html":{}}}],["checkusernotexistbyemail(email",{"_index":6649,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["child",{"_index":5028,"title":{},"body":{"index.html":{}}}],["choose",{"_index":5714,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":5718,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":6374,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":4885,"title":{},"body":{"dependencies.html":{}}}],["circumstances",{"_index":5319,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":5328,"title":{},"body":{"license.html":{}}}],["civil",{"_index":5758,"title":{},"body":{"license.html":{}}}],["claim",{"_index":5615,"title":{},"body":{"license.html":{}}}],["claims",{"_index":5627,"title":{},"body":{"license.html":{}}}],["class",{"_index":31,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseFactory.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"classes/CourseFactory.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"classes/RoleNameMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/SortingQuery.html":{},"classes/StringValidator.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classes",{"_index":175,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseFactory.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"classes/CourseFactory.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"classes/RoleNameMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/SortingQuery.html":{},"classes/StringValidator.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classes.replace(mongopatterns.regex_mongo_language_pattern_whitelist",{"_index":3206,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["classname",{"_index":2175,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classnames",{"_index":2564,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"miscellaneous/variables.html":{}}}],["classserializerinterceptor",{"_index":3222,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":6265,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":944,"title":{},"body":{"entities/Course.html":{},"classes/DeleteFilesConsole.html":{},"interfaces/ICourseProperties.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanupcollections",{"_index":5913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cleanupthreshold",{"_index":2352,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["clear",{"_index":1935,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["clearcollection",{"_index":1778,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearcollection(collectionname",{"_index":1788,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearly",{"_index":6664,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":6159,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["client",{"_index":828,"title":{},"body":{"classes/BusinessError.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":6316,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":3427,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clone",{"_index":414,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"index.html":{}}}],["clone(this",{"_index":454,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["clone>(this",{"_index":495,"title":{},"body":{"classes/BaseFactory.html":{}}}],["close",{"_index":3473,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":4333,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closeddraftsforcreator",{"_index":4338,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closeddraftsforcreator.addquery(parentsopen.query",{"_index":4339,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closeddraftsforcreator.bycreatorid(parentids.creatorid",{"_index":4341,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closeddraftsforcreator.byfinished(parentids.creatorid",{"_index":4340,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons",{"_index":4326,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons.addquery(parentsopen.query",{"_index":4327,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons.bydraft(false",{"_index":4328,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedforopencoursesandlessons.byfinished(parentids.creatorid",{"_index":4329,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedwithoutparentforcreator",{"_index":4335,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedwithoutparentforcreator.byfinished(parentids.creatorid",{"_index":4336,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closedwithoutparentforcreator.byonlycreatorid(parentids.creatorid",{"_index":4337,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["closely",{"_index":5755,"title":{},"body":{"license.html":{}}}],["closing",{"_index":6812,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":4992,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":5855,"title":{},"body":{"todo.html":{}}}],["cloud.org",{"_index":5059,"title":{},"body":{"index.html":{}}}],["cloud/commons",{"_index":2086,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":4857,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":4843,"title":{},"body":{"dependencies.html":{}}}],["cloud/schulcloud",{"_index":5827,"title":{},"body":{"todo.html":{}}}],["cluster_authmodule",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":287,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":289,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":290,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":288,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule",{"_index":851,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_exports",{"_index":852,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_providers",{"_index":853,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":875,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":876,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule",{"_index":1770,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_exports",{"_index":1771,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_imports",{"_index":1772,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":2176,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":2178,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":2177,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":2336,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":2338,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_providers",{"_index":2337,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule",{"_index":2330,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_exports",{"_index":2331,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_providers",{"_index":2332,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_importusermodule",{"_index":3078,"title":{},"body":{"modules/ImportUserModule.html":{},"overview.html":{}}}],["cluster_importusermodule_imports",{"_index":3080,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["cluster_importusermodule_providers",{"_index":3079,"title":{},"body":{"modules/ImportUserModule.html":{},"overview.html":{}}}],["cluster_learnroommodule",{"_index":3311,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_providers",{"_index":3312,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":3368,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":3370,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":3369,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":3409,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":3411,"title":{},"body":{"modules/ManagementModule.html":{}}}],["cluster_managementmodule_providers",{"_index":3410,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":3636,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":3638,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":3637,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":3639,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule",{"_index":3997,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_imports",{"_index":3998,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["cluster_servermodule",{"_index":4009,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":4010,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servertestmodule",{"_index":4050,"title":{},"body":{"modules/ServerTestModule.html":{},"overview.html":{}}}],["cluster_servertestmodule_imports",{"_index":4051,"title":{},"body":{"modules/ServerTestModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":4285,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":4286,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":4699,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":4700,"title":{},"body":{"modules/UserModule.html":{}}}],["cluttered",{"_index":6427,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["codacy",{"_index":4995,"title":{},"body":{"index.html":{}}}],["code",{"_index":179,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["codes",{"_index":6704,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":2476,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":6203,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collect",{"_index":5691,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":5997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":519,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/News.html":{},"interfaces/Options.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(this",{"_index":916,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/User.html":{}}}],["collection.deletemany",{"_index":1814,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.find({}).toarray",{"_index":1812,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.insertmany(jsondocuments",{"_index":1809,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.name",{"_index":1820,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionexists",{"_index":1779,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionexists(collectionname",{"_index":1790,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname",{"_index":1753,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"miscellaneous/variables.html":{}}}],["collectionnamefilter",{"_index":1861,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter.length",{"_index":1909,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter?.includes(collectionname",{"_index":1912,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnames",{"_index":1818,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname}.json",{"_index":1895,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collections",{"_index":1716,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"injectables/PermissionService.html":{}}}],["collections.includes(collectionname",{"_index":1822,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collection",{"_index":1819,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collectionname",{"_index":1893,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collections.ts",{"_index":5915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collectionstoexport",{"_index":1946,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoexport.map(async",{"_index":1948,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed",{"_index":1920,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed.map(async",{"_index":1923,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionswithfilepaths",{"_index":1892,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["color",{"_index":692,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["columns",{"_index":1291,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["colums",{"_index":1395,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["combine",{"_index":5701,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":681,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"license.html":{}}}],["come",{"_index":4968,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["comes",{"_index":5379,"title":{},"body":{"license.html":{}}}],["command",{"_index":1722,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["command({command",{"_index":1714,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/ServerConsole.html":{}}}],["commander",{"_index":4804,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["commandresponse",{"_index":4538,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["commands",{"_index":5241,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["comment",{"_index":2698,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{}}}],["commercial",{"_index":5474,"title":{},"body":{"license.html":{}}}],["commit",{"_index":5087,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":5641,"title":{},"body":{"license.html":{}}}],["committing",{"_index":5082,"title":{},"body":{"index.html":{}}}],["common",{"_index":4828,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["communicate",{"_index":6251,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":5290,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":5121,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":6536,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":2403,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":6414,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":6897,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":5387,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":5395,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":5673,"title":{},"body":{"license.html":{}}}],["compile",{"_index":1986,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":5272,"title":{},"body":{"license.html":{}}}],["complete",{"_index":5075,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["completely",{"_index":6342,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":3362,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":5597,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":6225,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":5312,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":6155,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":5265,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":6296,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":5047,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compression",{"_index":4806,"title":{},"body":{"dependencies.html":{}}}],["computer",{"_index":5214,"title":{},"body":{"license.html":{}}}],["concept",{"_index":6443,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":6489,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":5709,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":6556,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrently",{"_index":4808,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":6720,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":5667,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":5183,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":6305,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":4025,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":5982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":2083,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":4031,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('mail_send_routing_key",{"_index":4032,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":4030,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('request_timeout",{"_index":6060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_id",{"_index":4035,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_password",{"_index":4038,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_token",{"_index":4036,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_admin_user",{"_index":4037,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configuration.get('rocket_chat_uri",{"_index":4034,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":6165,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configure",{"_index":6084,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configures",{"_index":883,"title":{},"body":{"modules/CoreModule.html":{}}}],["conflicts",{"_index":6488,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":6239,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connected",{"_index":5048,"title":{},"body":{"index.html":{}}}],["connection",{"_index":3474,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["connectionoptions",{"_index":5877,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connections",{"_index":6384,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector/framework",{"_index":6400,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":6372,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consequence",{"_index":5584,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":5739,"title":{},"body":{"license.html":{}}}],["considered",{"_index":5549,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":6655,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistent",{"_index":5634,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":6578,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":858,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["console/database",{"_index":3422,"title":{},"body":{"modules/ManagementModule.html":{}}}],["consolelogger",{"_index":3351,"title":{},"body":{"injectables/Logger.html":{}}}],["consolemodule",{"_index":4000,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolewriter",{"_index":1712,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{}}}],["consolewritermodule",{"_index":850,"title":{"modules/ConsoleWriterModule.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["consolewriterservice",{"_index":854,"title":{"injectables/ConsoleWriterService.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"overview.html":{}}}],["conspicuously",{"_index":5359,"title":{},"body":{"license.html":{}}}],["const",{"_index":128,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"injectables/BsonConverter.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserImportUc.html":{}}}],["constitutes",{"_index":5303,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":230,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":6294,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":69,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoResponse.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject('symmetric_cipher_key",{"_index":4117,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["constructor(@inject(request",{"_index":2208,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":3397,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":220,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(consolewriter",{"_index":1709,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/ServerConsole.html":{}}}],["constructor(courserepo",{"_index":1217,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{}}}],["constructor(customkey",{"_index":2074,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["constructor(dashboardrepo",{"_index":1678,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(data",{"_index":1077,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["constructor(deletefilesuc",{"_index":1991,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["constructor(e",{"_index":42,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["constructor(em",{"_index":552,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(entityclass",{"_index":420,"title":{},"body":{"classes/BaseFactory.html":{}}}],["constructor(feathersauthprovider",{"_index":305,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":2140,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":4755,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(filesrepo",{"_index":2014,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["constructor(filestorageadapter",{"_index":2347,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["constructor(filesystemadapter",{"_index":1836,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["constructor(id",{"_index":1094,"title":{},"body":{"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["constructor(importuserrepo",{"_index":4626,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["constructor(key",{"_index":4109,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["constructor(message",{"_index":4750,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(newsrepo",{"_index":3727,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(operator",{"_index":3970,"title":{},"body":{"classes/Scope.html":{}}}],["constructor(private",{"_index":328,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FilesRepo.html":{},"controllers/ImportUserController.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"classes/ServerConsole.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":529,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"classes/GridElement.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["constructor(protected",{"_index":573,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["constructor(readonly",{"_index":204,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":2223,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(task",{"_index":2747,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["constructor(taskrepo",{"_index":4467,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(total",{"_index":3809,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(type",{"_index":2122,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":653,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"classes/UserInfoResponse.html":{}}}],["constructor(userrepo",{"_index":3265,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(validationerrors",{"_index":185,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["constructors",{"_index":6883,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["construed",{"_index":5678,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":5453,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":6340,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contact",{"_index":5773,"title":{},"body":{"license.html":{}}}],["contain",{"_index":5674,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":4963,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["containing",{"_index":5070,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":2960,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/ImportUserScope.html":{},"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":601,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":238,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":243,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":5638,"title":{},"body":{"license.html":{}}}],["context",{"_index":2054,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":6850,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":5499,"title":{},"body":{"license.html":{}}}],["continued",{"_index":5483,"title":{},"body":{"license.html":{}}}],["contract",{"_index":6195,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":5546,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":5685,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":5128,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":5624,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":5626,"title":{},"body":{"license.html":{}}}],["control",{"_index":5278,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":5629,"title":{},"body":{"license.html":{}}}],["controller",{"_index":975,"title":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('courses",{"_index":997,"title":{},"body":{"controllers/CourseController.html":{}}}],["controller('dashboard",{"_index":1276,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller('management/database",{"_index":1762,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["controller('news",{"_index":3547,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('rooms",{"_index":3939,"title":{},"body":{"controllers/RoomsController.html":{}}}],["controller('tasks",{"_index":4233,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('team",{"_index":4524,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["controller('user",{"_index":4607,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('user/import",{"_index":2915,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["controller.ts",{"_index":6502,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/course.controller",{"_index":3316,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/dashboard.controller",{"_index":3315,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/database",{"_index":3420,"title":{},"body":{"modules/ManagementModule.html":{}}}],["controller/dto",{"_index":1065,"title":{},"body":{"classes/CourseMapper.html":{},"classes/DashboardMapper.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/RoleNameMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{}}}],["controller/dto/roomboardresponse",{"_index":708,"title":{},"body":{"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{}}}],["controller/dto/target",{"_index":4127,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["controller/dto/task",{"_index":4452,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["controller/dto/user",{"_index":4678,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["controller/import",{"_index":3085,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["controller/news.controller",{"_index":3644,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/rooms.controller",{"_index":3317,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/task.controller",{"_index":4288,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/team",{"_index":3645,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":977,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/ImportUserController.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/ManagementModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/RoomsController.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["convenient",{"_index":5234,"title":{},"body":{"license.html":{}}}],["convention",{"_index":6713,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":6247,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convert",{"_index":1958,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["converter/bson.converter",{"_index":1879,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["converttodatabasevalue",{"_index":2072,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttodatabasevalue(value",{"_index":2078,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttojsvalue",{"_index":2073,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttojsvalue(value",{"_index":2081,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["convey",{"_index":5221,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":5662,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":5494,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":5229,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":5545,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":5120,"title":{},"body":{"license.html":{}}}],["copies",{"_index":5113,"title":{},"body":{"license.html":{}}}],["copy",{"_index":496,"title":{},"body":{"classes/BaseFactory.html":{},"license.html":{}}}],["copying",{"_index":5184,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":5116,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":5103,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":5192,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":5318,"title":{},"body":{"license.html":{}}}],["core",{"_index":882,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":6922,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/error",{"_index":6689,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":874,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["correct",{"_index":6025,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":5733,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":6698,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["corresponding",{"_index":5275,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":4810,"title":{},"body":{"dependencies.html":{}}}],["cost",{"_index":5422,"title":{},"body":{"license.html":{}}}],["count",{"_index":1058,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"controllers/ImportUserController.html":{},"injectables/ImportUserRepo.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{},"injectables/UserRepo.html":{}}}],["counted",{"_index":1057,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/ImportUserRepo.html":{},"injectables/LessonRepo.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{}}}],["countedimportusers",{"_index":3129,"title":{},"body":{"injectables/ImportUserRepo.html":{},"injectables/UserImportUc.html":{}}}],["countednewslist",{"_index":3670,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["countedtasklist",{"_index":4388,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["counterclaim",{"_index":5616,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":5907,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["countpipeline",{"_index":4730,"title":{},"body":{"injectables/UserRepo.html":{}}}],["countpipeline.push",{"_index":4731,"title":{},"body":{"injectables/UserRepo.html":{}}}],["countries",{"_index":5218,"title":{},"body":{"license.html":{}}}],["country",{"_index":5654,"title":{},"body":{"license.html":{}}}],["counts",{"_index":1090,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["couple",{"_index":6394,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":6205,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":590,"title":{"entities/Course.html":{}},"body":{"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course.entity",{"_index":1043,"title":{},"body":{"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{}}}],["course.factory",{"_index":3326,"title":{},"body":{"classes/LessonFactory.html":{}}}],["course.getmetadata",{"_index":1067,"title":{},"body":{"classes/CourseMapper.html":{}}}],["course.id",{"_index":614,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["course.students.contains(user",{"_index":4198,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["course.substitutionteachers.contains(user",{"_index":636,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{}}}],["course.teachers.contains(user",{"_index":635,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{}}}],["coursecontroller",{"_index":976,"title":{"controllers/CourseController.html":{}},"body":{"controllers/CourseController.html":{},"modules/LearnroomModule.html":{}}}],["coursefactory",{"_index":1006,"title":{"classes/CourseFactory.html":{}},"body":{"classes/CourseFactory.html":{},"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["coursefactory.build",{"_index":3329,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["coursefactory.define(course",{"_index":1032,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["coursegroup",{"_index":1037,"title":{"entities/CourseGroup.html":{}},"body":{"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"miscellaneous/variables.html":{}}}],["coursegroup.entity",{"_index":2704,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["coursegroupfactory",{"_index":5919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursegroupid",{"_index":2713,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["coursegrouprepo",{"_index":1050,"title":{"injectables/CourseGroupRepo.html":{}},"body":{"injectables/CourseGroupRepo.html":{}}}],["coursegroups",{"_index":1045,"title":{},"body":{"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["coursegroupsofuser",{"_index":4106,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["courseid",{"_index":1040,"title":{},"body":{"entities/CourseGroup.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{}}}],["courseids",{"_index":1056,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["coursemapper",{"_index":993,"title":{"classes/CourseMapper.html":{}},"body":{"controllers/CourseController.html":{},"classes/CourseMapper.html":{}}}],["coursemapper.maptometadataresponse(course",{"_index":1002,"title":{},"body":{"controllers/CourseController.html":{}}}],["coursemetadata",{"_index":1066,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.displaycolor",{"_index":1071,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.id",{"_index":1068,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.shorttitle",{"_index":1070,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.startdate",{"_index":1072,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.title",{"_index":1069,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadata.untildate",{"_index":1073,"title":{},"body":{"classes/CourseMapper.html":{}}}],["coursemetadatalistresponse",{"_index":992,"title":{"classes/CourseMetadataListResponse.html":{}},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["coursemetadatalistresponse(courseresponses",{"_index":1005,"title":{},"body":{"controllers/CourseController.html":{}}}],["coursemetadataresponse",{"_index":1064,"title":{"classes/CourseMetadataResponse.html":{}},"body":{"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{}}}],["coursename",{"_index":676,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["coursenews",{"_index":1102,"title":{"entities/CourseNews.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":1149,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["coursenewsfactory",{"_index":5921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["courserepo",{"_index":594,"title":{"injectables/CourseRepo.html":{}},"body":{"interfaces/Board.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["courseresponses",{"_index":1000,"title":{},"body":{"controllers/CourseController.html":{}}}],["courses",{"_index":953,"title":{},"body":{"entities/Course.html":{},"controllers/CourseController.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardUc.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["courses.filter((c",{"_index":4181,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["courses.map((course",{"_index":1001,"title":{},"body":{"controllers/CourseController.html":{}}}],["coursescope",{"_index":1168,"title":{"classes/CourseScope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["courseuc",{"_index":990,"title":{"injectables/CourseUc.html":{}},"body":{"controllers/CourseController.html":{},"injectables/CourseUc.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["court",{"_index":5684,"title":{},"body":{"license.html":{}}}],["courts",{"_index":5754,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":5644,"title":{},"body":{"license.html":{}}}],["cover",{"_index":6614,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":5079,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":5999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":6000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":6002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":5204,"title":{},"body":{"license.html":{}}}],["covers",{"_index":6840,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["create",{"_index":1925,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/TestBootstrapConsole.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":3548,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":3521,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":3729,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createcollection",{"_index":1780,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["createcollection(collectionname",{"_index":1792,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["created",{"_index":475,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":390,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["createdat.$date",{"_index":1956,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["createdir",{"_index":2259,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createdir(folderpath",{"_index":2268,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createdmodel",{"_index":1615,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["createerrorresponse",{"_index":2387,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":2395,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":4948,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":2418,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":4950,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":2425,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":2408,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":2439,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":2424,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":2440,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":2421,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{}}}],["creategridelement",{"_index":1554,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["creategridelement(elementwithposition",{"_index":1565,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["creategroup(name",{"_index":109,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["createinstance(targetmodel",{"_index":1146,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["createmikroormmodule",{"_index":3447,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["createnestapplication",{"_index":6846,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":6565,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":1224,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":5971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrabbitmqmodule",{"_index":3386,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["createrabbitmqmodule(options",{"_index":3392,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["createredisidentifierfromjwtdata",{"_index":3305,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["createredisidentifierfromjwtdata(accountid",{"_index":3308,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["creates",{"_index":2270,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createspinner",{"_index":866,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["createstorageproviderclient",{"_index":4951,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstorageproviderclient(storageprovider",{"_index":2239,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["createstudentstatusforuser(user",{"_index":2820,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["createteacherstatusforuser(user",{"_index":2805,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["createtestmodule",{"_index":1982,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["createtmpdir",{"_index":2260,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createtmpdir(dirnameprefix",{"_index":2271,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createuser(email",{"_index":117,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["createusertoken(userid",{"_index":85,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["creating",{"_index":1227,"title":{},"body":{"classes/CreateNewsParams.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creation",{"_index":2472,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["creator",{"_index":504,"title":{},"body":{"entities/BaseFile.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creator.response",{"_index":4671,"title":{},"body":{"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["creator.response.ts",{"_index":4926,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["creatorid",{"_index":1131,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["credentials",{"_index":2246,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["criteria",{"_index":6403,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":5246,"title":{},"body":{"license.html":{}}}],["critical",{"_index":6355,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cross",{"_index":884,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":6447,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":6557,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":6626,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":4116,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":4115,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["cryptojs.aes.decrypt(data",{"_index":4120,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["cryptojs.aes.encrypt(data",{"_index":4118,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["csv",{"_index":6417,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ctx",{"_index":2456,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":2458,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":5972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":373,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":5575,"title":{},"body":{"license.html":{}}}],["curernt",{"_index":4633,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["current",{"_index":1850,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/UserImportUc.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["currentdatetime",{"_index":1887,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["currently",{"_index":3456,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentrooms",{"_index":1425,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["currentrooms.foreach((room",{"_index":1427,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["currentuser",{"_index":985,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserImportUc.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.school.id",{"_index":4652,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["currentuser.schoolid",{"_index":3550,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.userid",{"_index":1284,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuserid",{"_index":4634,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["custom",{"_index":2131,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":6685,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":5413,"title":{},"body":{"license.html":{}}}],["customary",{"_index":5698,"title":{},"body":{"license.html":{}}}],["customer",{"_index":5419,"title":{},"body":{"license.html":{}}}],["customizations",{"_index":4046,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["customizing",{"_index":887,"title":{},"body":{"modules/CoreModule.html":{}}}],["customkey",{"_index":2076,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["customproviderclass.name",{"_index":3366,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":6183,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycles",{"_index":6222,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":938,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["damages",{"_index":5737,"title":{},"body":{"license.html":{}}}],["dash",{"_index":5066,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":1255,"title":{},"body":{"controllers/DashboardController.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/variables.html":{}}}],["dashboard.getelement(position",{"_index":1699,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.getid",{"_index":1530,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.getuserid",{"_index":1701,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.model.mapper",{"_index":1655,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.moveelement(from",{"_index":1698,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.setlearnrooms(courses",{"_index":1694,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard_repo",{"_index":3319,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["dashboardcontroller",{"_index":1253,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["dashboardelement",{"_index":1477,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["dashboardentity",{"_index":1289,"title":{"classes/DashboardEntity.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{}}}],["dashboardentity(modelentity.id",{"_index":1605,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["dashboardentity(new",{"_index":1658,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodel",{"_index":1459,"title":{"entities/DashboardGridElementModel.html":{}},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodelproperties",{"_index":1475,"title":{"interfaces/DashboardGridElementModelProperties.html":{}},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["dashboardgridelementresponse",{"_index":1494,"title":{"classes/DashboardGridElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboardgridsubelementresponse",{"_index":1501,"title":{"classes/DashboardGridSubElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboardgridsubelementresponse(metadata",{"_index":1549,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboardid",{"_index":1263,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{}}}],["dashboardmapper",{"_index":1273,"title":{"classes/DashboardMapper.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{}}}],["dashboardmapper.mapgridelement(elementwithposition",{"_index":1532,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboardmapper.maplearnroom(groupmetadata",{"_index":1548,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboardmapper.maptoresponse(dashboard",{"_index":1279,"title":{},"body":{"controllers/DashboardController.html":{}}}],["dashboardmodel",{"_index":1666,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelentity",{"_index":1476,"title":{"entities/DashboardModelEntity.html":{}},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboardmodelmapper",{"_index":1552,"title":{"injectables/DashboardModelMapper.html":{}},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["dashboardprops",{"_index":1307,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["dashboardrepo",{"_index":1643,"title":{"injectables/DashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{}}}],["dashboardresponse",{"_index":680,"title":{"classes/DashboardResponse.html":{}},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboarduc",{"_index":1271,"title":{"injectables/DashboardUc.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["data",{"_index":1076,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"interfaces/Options.html":{},"classes/PaginationResponse.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data.gridelement.getcontent",{"_index":1534,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.pos",{"_index":1535,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data/rules",{"_index":6320,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":6312,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":1715,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/MongoPatterns.html":{},"interfaces/Options.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":4041,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["database.module.ts",{"_index":3437,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:51",{"_index":3439,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:64",{"_index":3441,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":3436,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database/types",{"_index":4022,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["database/types.ts",{"_index":5897,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasemanagementconsole",{"_index":1704,"title":{"classes/DatabaseManagementConsole.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["databasemanagementcontroller",{"_index":1743,"title":{"controllers/DatabaseManagementController.html":{}},"body":{"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{}}}],["databasemanagementmodule",{"_index":1769,"title":{"modules/DatabaseManagementModule.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemanagementservice",{"_index":1773,"title":{"injectables/DatabaseManagementService.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["databasemanagementuc",{"_index":1710,"title":{"injectables/DatabaseManagementUc.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"overview.html":{}}}],["databases",{"_index":6898,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":6267,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":6282,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datase",{"_index":6087,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["date",{"_index":391,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["date(date.now",{"_index":1030,"title":{},"body":{"classes/CourseFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"miscellaneous/variables.html":{}}}],["date.now",{"_index":2061,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["dated",{"_index":6423,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1998,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"license.html":{}}}],["db",{"_index":1786,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"classes/ImportUserScope.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"injectables/UserRepo.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":6399,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":2377,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["db_url",{"_index":2378,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["db_username",{"_index":2379,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["dbname",{"_index":5900,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dbs",{"_index":6382,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ddd",{"_index":6588,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["debug",{"_index":2654,"title":{},"body":{"interfaces/ILogger.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":2658,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":2669,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":5049,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":4043,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":5342,"title":{},"body":{"license.html":{}}}],["decide",{"_index":5716,"title":{},"body":{"license.html":{},"todo.html":{}}}],["decision",{"_index":6429,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":6656,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declared",{"_index":844,"title":{},"body":{"classes/BusinessError.html":{}}}],["declining",{"_index":5538,"title":{},"body":{"license.html":{}}}],["decoded",{"_index":4964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decodehtmlentities",{"_index":664,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"miscellaneous/functions.html":{}}}],["decorated",{"_index":2482,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":4962,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":355,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"entities/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"entities/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"entities/File.html":{},"classes/GlobalValidationPipe.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserSortingQuery.html":{},"entities/Lesson.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"entities/Role.html":{},"controllers/RoomsController.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserFilterQuery.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":6176,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":6331,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":6341,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decrypt",{"_index":2100,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["decrypt(data",{"_index":4111,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["decryptedstring",{"_index":2101,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["dedicated",{"_index":6275,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":5330,"title":{},"body":{"license.html":{}}}],["deeppartial",{"_index":444,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["default",{"_index":395,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"entities/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"classes/MongoPatterns.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"classes/SortingQuery.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TimeoutInterceptor.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["default...what",{"_index":941,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.color",{"_index":906,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.description",{"_index":908,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.name",{"_index":910,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.schema.json",{"_index":6086,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["defaultcolumns",{"_index":1352,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":209,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["defaultmikroormoptions",{"_index":4039,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["defaultoptions",{"_index":3472,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["defaults",{"_index":1236,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"classes/PaginationQuery.html":{}}}],["defaulttimeout",{"_index":4546,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":5728,"title":{},"body":{"license.html":{}}}],["defending",{"_index":5156,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":5681,"title":{},"body":{"license.html":{}}}],["define",{"_index":377,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"entities/TeamNews.html":{},"classes/UserFactory.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["define(this",{"_index":457,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["defined",{"_index":187,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerTestModule.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["defines",{"_index":6099,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":388,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":218,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":3426,"title":{},"body":{"modules/ManagementModule.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":1975,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":1979,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":1964,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1932,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":3524,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(':id/match",{"_index":2882,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["delete(id",{"_index":3731,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":3523,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":2029,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedat",{"_index":505,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{}}}],["deletedcount",{"_index":1813,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["deletedid",{"_index":3563,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletefile",{"_index":2231,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{}}}],["deletefile(file",{"_index":2232,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{}}}],["deletefilesconsole",{"_index":1987,"title":{"classes/DeleteFilesConsole.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"modules/FilesModule.html":{}}}],["deletefilesuc",{"_index":1992,"title":{"injectables/DeleteFilesUc.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"overview.html":{}}}],["deletegroup(groupname",{"_index":115,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["deleteobjectcommand",{"_index":2235,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["deletes",{"_index":6421,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleteuser(username",{"_index":124,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["deleting",{"_index":6422,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1997,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["deletioncommand",{"_index":2252,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["delivered",{"_index":6702,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":6371,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":5500,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":5642,"title":{},"body":{"license.html":{}}}],["depend",{"_index":6624,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependencies",{"_index":260,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":6078,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["depending",{"_index":2292,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["depends",{"_index":2280,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["deprecated",{"_index":2204,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{}}}],["deprive",{"_index":5650,"title":{},"body":{"license.html":{}}}],["desc",{"_index":2553,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/SortingQuery.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":6445,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":6724,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":6725,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":6867,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":6216,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["describes",{"_index":364,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"miscellaneous/typealiases.html":{}}}],["description",{"_index":216,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BaseFactory.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PatchGroupParams.html":{},"classes/SchoolInfoResponse.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptions",{"_index":2830,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["descriptive",{"_index":2575,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deserialize",{"_index":801,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["deserialize(bsondocuments",{"_index":803,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["deserializes",{"_index":805,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["design",{"_index":6189,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":5430,"title":{},"body":{"license.html":{}}}],["designed",{"_index":5119,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":6430,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":6187,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":6471,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":5706,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":226,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":4754,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detail.response.ts:1",{"_index":4756,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":5044,"title":{},"body":{"index.html":{}}}],["details",{"_index":180,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":1918,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"miscellaneous/variables.html":{}}}],["detectleaks",{"_index":6010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":6009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":6322,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determinenewroomsin",{"_index":1294,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["determinenewroomsin(rooms",{"_index":1317,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["determining",{"_index":5463,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":6911,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":6113,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":4993,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":6714,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["developers",{"_index":5144,"title":{},"body":{"license.html":{}}}],["development",{"_index":5074,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dfsdfsf",{"_index":5091,"title":{},"body":{"index.html":{}}}],["di",{"_index":6514,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":3415,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["die",{"_index":6375,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":4854,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":5862,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":5705,"title":{},"body":{"license.html":{}}}],["different",{"_index":3680,"title":{},"body":{"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":5526,"title":{},"body":{"license.html":{}}}],["dir",{"_index":1847,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["direct",{"_index":3390,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":5316,"title":{},"body":{"license.html":{}}}],["directions",{"_index":5436,"title":{},"body":{"license.html":{}}}],["directly",{"_index":5208,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["directory",{"_index":524,"title":{"entities/Directory.html":{}},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/IFileProperties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["directoryfactory",{"_index":5927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dirnameprefix",{"_index":2275,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["dirpath",{"_index":2318,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["disable",{"_index":44,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/ImportUserFactory.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepo.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disclaim",{"_index":5352,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":5719,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":5523,"title":{},"body":{"license.html":{}}}],["discover",{"_index":6591,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":6599,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":371,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":521,"title":{},"body":{"entities/BaseFile.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["discriminatorvalue",{"_index":523,"title":{},"body":{"entities/BaseFile.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["discriminatory",{"_index":5665,"title":{},"body":{"license.html":{}}}],["display",{"_index":5386,"title":{},"body":{"license.html":{}}}],["displayat",{"_index":1112,"title":{},"body":{"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["displaycolor",{"_index":586,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"injectables/RoomsUc.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["displayed",{"_index":1235,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":5231,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":4815,"title":{},"body":{"dependencies.html":{}}}],["dist",{"_index":6104,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":6736,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":5710,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":5111,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":5771,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":5668,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":5185,"title":{},"body":{"license.html":{}}}],["divide",{"_index":6246,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":6218,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":2612,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserScope.html":{}}}],["docker",{"_index":6088,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["docs",{"_index":5847,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":1228,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/NewsRepo.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":4997,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":6023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":5508,"title":{},"body":{"license.html":{}}}],["documents",{"_index":806,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{}}}],["doe",{"_index":4621,"title":{},"body":{"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["doe${sequence",{"_index":2952,"title":{},"body":{"classes/ImportUserFactory.html":{},"miscellaneous/variables.html":{}}}],["doesn't",{"_index":3460,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":6876,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":6284,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["domain",{"_index":3917,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"classes/RoleNameMapper.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domainentity",{"_index":1589,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["domainrolenames",{"_index":4684,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["domainroles",{"_index":4682,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["domainroles.map((role",{"_index":4685,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["domains",{"_index":4816,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":386,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":5081,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy",{"_index":6743,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":6748,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":6765,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":6758,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":6768,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":5465,"title":{},"body":{"license.html":{}}}],["down",{"_index":6706,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":5594,"title":{},"body":{"license.html":{}}}],["draft",{"_index":623,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{}}}],["driven",{"_index":6587,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":5899,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["drop/create",{"_index":1929,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["dropcollection",{"_index":1781,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dropcollection(collectionname",{"_index":1794,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dry",{"_index":6616,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":776,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{},"controllers/CourseController.html":{},"classes/CourseMapper.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"classes/ImportUserMapper.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{},"miscellaneous/functions.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":6494,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.availabledate",{"_index":4277,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.classes",{"_index":3050,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["dto.createdat",{"_index":3881,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.description",{"_index":4283,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.displaycolor",{"_index":4281,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":4279,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":3038,"title":{},"body":{"classes/ImportUserMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.flagged",{"_index":3057,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["dto.groupelements",{"_index":1546,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.groupid",{"_index":1545,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.id",{"_index":1542,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.lastname",{"_index":3041,"title":{},"body":{"classes/ImportUserMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.loginname",{"_index":3044,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["dto.match",{"_index":3036,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["dto.matchedby",{"_index":4690,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["dto.matches",{"_index":3053,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["dto.permissions",{"_index":3891,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.role",{"_index":3047,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["dto.roles",{"_index":3887,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.schoolid",{"_index":3885,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.target",{"_index":3627,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":3629,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":3883,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.updater",{"_index":3624,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/api",{"_index":2399,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/error.response",{"_index":2398,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/import",{"_index":2893,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["dto/resolveduser.dto",{"_index":4605,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/roomboardresponse",{"_index":3937,"title":{},"body":{"controllers/RoomsController.html":{}}}],["dto/update",{"_index":2898,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["dto/user",{"_index":2901,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["dtolist",{"_index":2922,"title":{},"body":{"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["dtos",{"_index":2466,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["dtos/entities",{"_index":6035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":6881,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["duedate",{"_index":675,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["duedates",{"_index":4358,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["dummy",{"_index":6067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplicate",{"_index":6712,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["duplication",{"_index":385,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["durable",{"_index":5412,"title":{},"body":{"license.html":{}}}],["duration",{"_index":2047,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":2044,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["during",{"_index":5807,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":5462,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":5285,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":2109,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":1603,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{},"classes/RocketChatError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":374,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":2447,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.response.data",{"_index":65,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.response.data.errortype",{"_index":67,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.response.statuscode",{"_index":62,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["e.value",{"_index":2448,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":3648,"title":{},"body":{"modules/NewsModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":2971,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["eager",{"_index":2609,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["earlier",{"_index":5203,"title":{},"body":{"license.html":{}}}],["easier",{"_index":6181,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":2194,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":1123,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["effect",{"_index":5751,"title":{},"body":{"license.html":{}}}],["effected",{"_index":5349,"title":{},"body":{"license.html":{}}}],["effective",{"_index":5331,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":5767,"title":{},"body":{"license.html":{}}}],["effects",{"_index":6286,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":6705,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":5609,"title":{},"body":{"license.html":{}}}],["el.getreferences",{"_index":1439,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["electronic",{"_index":5774,"title":{},"body":{"license.html":{}}}],["element",{"_index":1086,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PatchGroupParams.html":{}}}],["element.content",{"_index":715,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["element.getreferences",{"_index":1426,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.getreferences().length",{"_index":1430,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.gridelement",{"_index":1406,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.removereference(room",{"_index":1429,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.removereferencebyindex(position.groupindex",{"_index":1454,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["element.type",{"_index":713,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["elementdata",{"_index":1533,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.displaycolor",{"_index":1538,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.group",{"_index":1543,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.group.map((groupmetadata",{"_index":1547,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.groupid",{"_index":1544,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.referencedid",{"_index":1541,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.shorttitle",{"_index":1537,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdata.title",{"_index":1536,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementmodel",{"_index":1587,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.dashboard",{"_index":1630,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.references.set(references",{"_index":1629,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.title",{"_index":1625,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.xpos",{"_index":1620,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementmodel.ypos",{"_index":1622,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elements",{"_index":587,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{},"injectables/RoomsUc.html":{}}}],["elements.push(boardelementresponse",{"_index":737,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["elementtomove",{"_index":1414,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementtomove.getreferences",{"_index":1450,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementtomove.isgroup",{"_index":1449,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["elementtype",{"_index":659,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["elementwithposition",{"_index":1567,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementwithposition.pos.x",{"_index":1621,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["elementwithposition.pos.y",{"_index":1623,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["em",{"_index":555,"title":{},"body":{"injectables/BaseRepo.html":{},"entities/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.flush",{"_index":6893,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.getconnection('write').listcollections",{"_index":5979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["em.getconnection().deletemany(collectionname",{"_index":5981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["em.nativedelete(news",{"_index":6862,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":121,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embed",{"_index":6600,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":6905,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":5407,"title":{},"body":{"license.html":{}}}],["employer",{"_index":5781,"title":{},"body":{"license.html":{}}}],["empty",{"_index":2095,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/FileSystemAdapter.html":{},"classes/NewsScope.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":3711,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"miscellaneous/variables.html":{}}}],["emptyresultquerytype",{"_index":1213,"title":{},"body":{"classes/CourseScope.html":{},"classes/ImportUserScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":6617,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":2471,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/ImportUserModule.html":{},"modules/NewsModule.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":2468,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["enableimplicitconversion",{"_index":2478,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":5931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enables",{"_index":5223,"title":{},"body":{"license.html":{}}}],["encapsulate",{"_index":6254,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":6298,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":6220,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":6270,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encoded",{"_index":2293,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encoding",{"_index":2258,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encodings",{"_index":4967,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encouraged",{"_index":5164,"title":{},"body":{"license.html":{}}}],["encrypt",{"_index":2069,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["encrypt(data",{"_index":4113,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["encryptedstring",{"_index":2098,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["encryptedstringtype",{"_index":2065,"title":{"classes/EncryptedStringType.html":{}},"body":{"classes/EncryptedStringType.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["encryption.service",{"_index":2110,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["encryptionmodule",{"_index":2103,"title":{"modules/EncryptionModule.html":{}},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules.html":{}}}],["encryptionmoduleoptions",{"_index":2107,"title":{"interfaces/EncryptionModuleOptions.html":{}},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["encryptionservice",{"_index":2071,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["end",{"_index":1089,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":6916,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":6921,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":2240,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":6277,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpointurl",{"_index":2685,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["enforce",{"_index":4526,"title":{},"body":{"controllers/TeamNewsController.html":{},"license.html":{}}}],["enforced",{"_index":6589,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":5355,"title":{},"body":{"license.html":{}}}],["enough",{"_index":6318,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enrichment",{"_index":6321,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":314,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":5016,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ensuretokeniswhitelisted",{"_index":3303,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["entered",{"_index":5675,"title":{},"body":{"license.html":{}}}],["entire",{"_index":5377,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":5693,"title":{},"body":{"license.html":{}}}],["entites",{"_index":6319,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":322,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"injectables/ImportUserRepo.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entities.foreach((entity",{"_index":583,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.map((n",{"_index":577,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.transformer.ts",{"_index":4954,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":5911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitiyids",{"_index":348,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":316,"title":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"injectables/ImportUserRepo.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"entities/Role.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.getgrid().map((elementwithposition",{"_index":1633,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.getid",{"_index":1640,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.getuserid",{"_index":1642,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["entity.ts",{"_index":6493,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/course.entity",{"_index":2521,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/import",{"_index":2644,"title":{},"body":{"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{}}}],["entity/role.entity",{"_index":2539,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/PermissionService.html":{}}}],["entity/school.entity",{"_index":2522,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/team.entity",{"_index":2523,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/user.entity",{"_index":3848,"title":{},"body":{"injectables/PermissionService.html":{}}}],["entityclass",{"_index":423,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["entityid",{"_index":308,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/Board.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entitymanager",{"_index":553,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":3429,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["entitypermissions",{"_index":342,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":346,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":383,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["entitywithid",{"_index":484,"title":{},"body":{"classes/BaseFactory.html":{}}}],["entries",{"_index":6450,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":3284,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{}}}],["enum",{"_index":1106,"title":{},"body":{"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISystemProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserSortingQuery.html":{},"entities/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"classes/SortingQuery.html":{},"entities/System.html":{},"injectables/TaskAuthorizationService.html":{},"entities/TeamNews.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["enum({fieldname",{"_index":2854,"title":{},"body":{"entities/ImportUser.html":{}}}],["enumerations",{"_index":4922,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":1244,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":4812,"title":{},"body":{"dependencies.html":{}}}],["env/config",{"_index":5818,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":6235,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["eol",{"_index":2266,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["eq",{"_index":3349,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["equivalent",{"_index":5306,"title":{},"body":{"license.html":{}}}],["err",{"_index":2037,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":6766,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":34,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ILogger.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error('invalid",{"_index":3072,"title":{},"body":{"classes/ImportUserMatchMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"classes/RoleNameMapper.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{}}}],["error('not",{"_index":2637,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["error('rocket",{"_index":170,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["error('roles",{"_index":3851,"title":{},"body":{"injectables/PermissionService.html":{}}}],["error('submissions",{"_index":2773,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["error('unexpected",{"_index":3204,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["error(message",{"_index":2660,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":2119,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":2385,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:119",{"_index":2390,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:122",{"_index":2394,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:130",{"_index":2396,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":2420,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":2174,"title":{},"body":{"interfaces/FeathersError.html":{}}}],["error.response",{"_index":225,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["error.response.ts",{"_index":215,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:23",{"_index":223,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":221,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":2451,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.ts",{"_index":4595,"title":{},"body":{"classes/UserAlreadyAssignedToImportUserError.html":{}}}],["error.ts:3",{"_index":4596,"title":{},"body":{"classes/UserAlreadyAssignedToImportUserError.html":{}}}],["error.validationerrors.map",{"_index":2446,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorhandler",{"_index":6378,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":877,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":2445,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":201,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":2430,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":849,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":2417,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":219,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errortype",{"_index":41,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["es6",{"_index":4818,"title":{},"body":{"dependencies.html":{}}}],["escape",{"_index":3484,"title":{},"body":{"classes/MongoPatterns.html":{}}}],["escaped",{"_index":4974,"title":{},"body":{"miscellaneous/functions.html":{}}}],["escapedclasses",{"_index":3205,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["escapedfirstname",{"_index":3183,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["escapedlastname",{"_index":3195,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["escapedloginname",{"_index":3198,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["escapedname",{"_index":4719,"title":{},"body":{"injectables/UserRepo.html":{}}}],["eslint",{"_index":43,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/ImportUserFactory.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/ban",{"_index":4723,"title":{},"body":{"injectables/UserRepo.html":{}}}],["eslint/dot",{"_index":499,"title":{},"body":{"classes/BaseFactory.html":{}}}],["eslint/no",{"_index":48,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"classes/ImportUserFactory.html":{},"injectables/JwtValidationAdapter.html":{},"entities/News.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{}}}],["eslint/restrict",{"_index":138,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.js",{"_index":6147,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["especially",{"_index":6233,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["essential",{"_index":5268,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":6209,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["etc",{"_index":5019,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":6690,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":6691,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":4987,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":5735,"title":{},"body":{"license.html":{}}}],["events",{"_index":6658,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["everyone",{"_index":5109,"title":{},"body":{"license.html":{}}}],["everything",{"_index":6575,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":6448,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":5202,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exactly",{"_index":4672,"title":{},"body":{"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["example",{"_index":5282,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["examplecolor",{"_index":1391,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["examples",{"_index":4978,"title":{},"body":{"miscellaneous/functions.html":{}}}],["except",{"_index":3487,"title":{},"body":{"classes/MongoPatterns.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":2116,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":2414,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":2409,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":2411,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":2442,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":2489,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":2386,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":2413,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":2407,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["exchange",{"_index":3382,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["exchangeable",{"_index":6194,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":3388,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":5451,"title":{},"body":{"license.html":{}}}],["excludedraftsofothers",{"_index":4415,"title":{},"body":{"classes/TaskScope.html":{}}}],["excludedraftsofothers(creatorid",{"_index":4434,"title":{},"body":{"classes/TaskScope.html":{}}}],["excludeunavailableofothers",{"_index":4416,"title":{},"body":{"classes/TaskScope.html":{}}}],["excludeunavailableofothers(creatorid",{"_index":4436,"title":{},"body":{"classes/TaskScope.html":{}}}],["excluding",{"_index":5679,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":5769,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":5635,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":5310,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":5686,"title":{},"body":{"license.html":{}}}],["executable",{"_index":5260,"title":{},"body":{"license.html":{}}}],["execute",{"_index":3649,"title":{},"body":{"modules/NewsModule.html":{},"classes/TestBootstrapConsole.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":6444,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":3653,"title":{},"body":{"modules/NewsModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":6107,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":4356,"title":{},"body":{"injectables/TaskRepo.html":{},"license.html":{}}}],["execution",{"_index":4542,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":2051,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":5610,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":5350,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2302,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":1611,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ImportUserModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/Options.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existingrooms",{"_index":1432,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["existingrooms.includes(room",{"_index":1435,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["existinguser",{"_index":6650,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":1176,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"classes/ImportUserScope.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["existssync",{"_index":2308,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["existssync(folderpath",{"_index":2316,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["exp",{"_index":3245,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":4939,"title":{},"body":{"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":6767,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":6871,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":6746,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":6770,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":6831,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":6749,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":6836,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":6870,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":6740,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":5472,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":6830,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":6763,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":5471,"title":{},"body":{"license.html":{}}}],["expensive",{"_index":4360,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["experts",{"_index":6592,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":6754,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":3263,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{}}}],["expiresin",{"_index":3257,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":476,"title":{},"body":{"classes/BaseFactory.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":56,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{}}}],["export",{"_index":22,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exportcollection",{"_index":1747,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(@param('collectionname",{"_index":1767,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(collectionname",{"_index":1750,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollections",{"_index":1707,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{}}}],["exportcollections(options",{"_index":1713,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["exportcollectionstofilesystem",{"_index":1828,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["exportcollectionstofilesystem(collections",{"_index":1839,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exported",{"_index":1845,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exportedcollections",{"_index":1947,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exportedcollections.push(`${collectionname}:${sortedbsondocuments.length",{"_index":1963,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exporting",{"_index":6568,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":295,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ImportUserModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":5805,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":6263,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":6338,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":2202,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":5721,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":140,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":5557,"title":{},"body":{"license.html":{}}}],["extend",{"_index":427,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/GlobalValidationPipe.html":{},"classes/ImportUserFactory.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/Logger.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UpdateNewsParams.html":{},"classes/UserFactory.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":807,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/JwtValidationAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":4055,"title":{},"body":{"classes/SortingQuery.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":33,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"entities/BaseFile.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"interfaces/FeathersError.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/PlainTextMailContent.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/UserFactory.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":5390,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":5233,"title":{},"body":{"license.html":{}}}],["external",{"_index":2573,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"modules/ImportUserModule.html":{},"classes/ImportUserResponse.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":3235,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":1113,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["externaluseridentifier",{"_index":2843,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["extract",{"_index":2617,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":2486,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":3270,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":3278,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":2610,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f",{"_index":455,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":690,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["facade",{"_index":6250,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":6722,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":5699,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":5311,"title":{},"body":{"license.html":{}}}],["factory",{"_index":403,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["factory.define",{"_index":463,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["factory.define(generator",{"_index":479,"title":{},"body":{"classes/BaseFactory.html":{}}}],["fail",{"_index":5167,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":210,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":6917,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["failingfileids",{"_index":2030,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["failingfileids.length",{"_index":2040,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["failingfileids.push(file.id",{"_index":2038,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["fails",{"_index":5570,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":5746,"title":{},"body":{"license.html":{}}}],["fair",{"_index":5305,"title":{},"body":{"license.html":{}}}],["false",{"_index":525,"title":{},"body":{"entities/BaseFile.html":{},"interfaces/Board.html":{},"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DatabaseManagementConsole.html":{},"entities/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"entities/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"interfaces/Options.html":{},"injectables/PermissionService.html":{},"injectables/RoomsUc.html":{},"classes/StringValidator.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"injectables/UserRepo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":5457,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":5068,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":5200,"title":{},"body":{"license.html":{}}}],["fast",{"_index":6611,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":4898,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":5467,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":298,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":6348,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathersapp",{"_index":2210,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersapp.service(path",{"_index":2221,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersauthprovider",{"_index":293,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":2172,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":2401,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersexpress",{"_index":2217,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersjs/authentication",{"_index":4761,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":4763,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":1688,"title":{},"body":{"injectables/DashboardUc.html":{},"dependencies.html":{}}}],["feathersjs/express",{"_index":2203,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":4764,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":4765,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":291,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":2190,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersserviceparams",{"_index":2197,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":2141,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":2205,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":5062,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":5067,"title":{},"body":{"index.html":{}}}],["features",{"_index":6156,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fee",{"_index":5370,"title":{},"body":{"license.html":{}}}],["feel",{"_index":6168,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":6625,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ffffff",{"_index":1036,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":2629,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ValidationErrorDetailResponse.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":527,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"entities/User.html":{}}}],["fields",{"_index":5804,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":6212,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{"entities/File.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["file.collectionname",{"_index":1917,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["file.entity",{"_index":2705,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["filefactory",{"_index":5933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileids",{"_index":2716,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["filename",{"_index":1900,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application.html":{}}}],["filename.split('.')[0",{"_index":1901,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filenames",{"_index":1896,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filenames.map((filename",{"_index":1898,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filepath",{"_index":1881,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["files",{"_index":520,"title":{},"body":{"entities/BaseFile.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFileProperties.html":{},"interfaces/Options.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["files.console",{"_index":2343,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.console.ts",{"_index":1989,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.console.ts:17",{"_index":2000,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.console.ts:7",{"_index":1993,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.filter((file",{"_index":2369,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["files.uc.ts",{"_index":2013,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["files.uc.ts:15",{"_index":2018,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["files.uc.ts:6",{"_index":2016,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesforcleanupquery",{"_index":2365,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["filesfordeletion",{"_index":2024,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesfordeletion.length",{"_index":2027,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesmodule",{"_index":2335,"title":{"modules/FilesModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["filesrepo",{"_index":2015,"title":{"injectables/FilesRepo.html":{}},"body":{"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"overview.html":{}}}],["filestorageadapter",{"_index":2229,"title":{"injectables/FileStorageAdapter.html":{}},"body":{"injectables/FileStorageAdapter.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"overview.html":{}}}],["filesystem",{"_index":1717,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["filesystemadapter",{"_index":1837,"title":{"injectables/FileSystemAdapter.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"overview.html":{}}}],["filesystemmodule",{"_index":2329,"title":{"modules/FileSystemModule.html":{}},"body":{"modules/FileSystemModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["filter",{"_index":1730,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"modules/ErrorModule.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMatchMapper.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/Options.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TeamNewsController.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter((match",{"_index":3210,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["filter((rolename",{"_index":4687,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["filter((submission",{"_index":2788,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["filter.query",{"_index":2894,"title":{},"body":{"controllers/ImportUserController.html":{},"classes/UserMatchMapper.html":{}}}],["filter.query.ts",{"_index":2957,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/NewsFilterQuery.html":{},"classes/UserFilterQuery.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:12",{"_index":4623,"title":{},"body":{"classes/UserFilterQuery.html":{}}}],["filter.query.ts:17",{"_index":3570,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:21",{"_index":2962,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":3568,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:27",{"_index":2965,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":2966,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:40",{"_index":2973,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.query.ts:45",{"_index":2964,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.query.ts:54",{"_index":2959,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.query.ts:59",{"_index":2976,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["filter.ts",{"_index":3720,"title":{},"body":{"interfaces/NewsTargetFilter.html":{}}}],["filter/global",{"_index":2118,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":1865,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filteredcollectionswithfilepaths",{"_index":1910,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filteredcollectionswithfilepaths.length",{"_index":1913,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filterquery",{"_index":1206,"title":{},"body":{"classes/CourseScope.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["filters",{"_index":625,"title":{},"body":{"interfaces/Board.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"injectables/LessonRepo.html":{},"classes/NewsFilterQuery.html":{},"injectables/RoomsUc.html":{},"injectables/TaskRepo.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{}}}],["filters.availableon",{"_index":4386,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters.classes",{"_index":3123,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["filters.draft",{"_index":626,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["filters.finished.value",{"_index":4379,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters.firstname",{"_index":3115,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["filters.flagged",{"_index":3127,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["filters.hidden",{"_index":644,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["filters.lastname",{"_index":3117,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["filters.loginname",{"_index":3119,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["filters.matches",{"_index":3125,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["filters.name.replace(mongopatterns.regex_mongo_language_pattern_whitelist",{"_index":4720,"title":{},"body":{"injectables/UserRepo.html":{}}}],["filters.nofutureavailabledate",{"_index":627,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["filters.role",{"_index":3121,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["filters?.afterduedateornone",{"_index":4382,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.availableon",{"_index":4384,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.draft",{"_index":4391,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.finished",{"_index":4377,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.hidden",{"_index":3336,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["filters?.name",{"_index":4717,"title":{},"body":{"injectables/UserRepo.html":{}}}],["filters?.nofutureavailabledate",{"_index":4393,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.onlyactivecourses",{"_index":1182,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["final",{"_index":6657,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":5567,"title":{},"body":{"license.html":{}}}],["find",{"_index":2193,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ImportUserScope.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":2196,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":3520,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":3527,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["findall(targets",{"_index":3657,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findall(userid",{"_index":4471,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallbycourseids",{"_index":2651,"title":{},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{}}}],["findallbycourseids'})@property",{"_index":3321,"title":{},"body":{"entities/Lesson.html":{}}}],["findallbycourseids(courseids",{"_index":3332,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["findallbyparentids",{"_index":4291,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyparentids(parentids",{"_index":4297,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyparentids_findallforstudent",{"_index":2751,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["findallbyparentids_findallforteacher",{"_index":2757,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["findallbyparentids_findallforteacher'})@manytomany('user",{"_index":4136,"title":{},"body":{"entities/Task.html":{}}}],["findallbytaskids",{"_index":4096,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbytaskids(taskids",{"_index":4100,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbyuser",{"_index":1216,"title":{},"body":{"injectables/CourseUc.html":{}}}],["findallbyuser(userid",{"_index":1219,"title":{},"body":{"injectables/CourseUc.html":{}}}],["findallbyuserid",{"_index":951,"title":{},"body":{"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"injectables/SubmissionRepo.html":{}}}],["findallbyuserid(userid",{"_index":1159,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/SubmissionRepo.html":{}}}],["findallfilesforcleanup",{"_index":2346,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["findallfilesforcleanup(cleanupthreshold",{"_index":2350,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["findallfinished",{"_index":4211,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findallfinished(currentuser",{"_index":4215,"title":{},"body":{"controllers/TaskController.html":{}}}],["findallfinished(userid",{"_index":4473,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallfinishedbyparentids",{"_index":4292,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallfinishedbyparentids(parentids",{"_index":4302,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallforstudent",{"_index":4465,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallforstudent(user",{"_index":4475,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallforteacher",{"_index":950,"title":{},"body":{"entities/Course.html":{},"injectables/CourseRepo.html":{},"interfaces/ICourseProperties.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher(user",{"_index":4477,"title":{},"body":{"injectables/TaskUC.html":{}}}],["findallforteacher(userid",{"_index":1162,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["findallforteam",{"_index":4519,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforteam(teamid",{"_index":4520,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforuser",{"_index":3722,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":3733,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallimportusers",{"_index":2867,"title":{},"body":{"controllers/ImportUserController.html":{},"injectables/UserImportUc.html":{}}}],["findallimportusers(currentuser",{"_index":2872,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["findallimportusers(userid",{"_index":4628,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["findallspy",{"_index":6827,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findallunmatchedusers",{"_index":2868,"title":{},"body":{"controllers/ImportUserController.html":{},"injectables/UserImportUc.html":{}}}],["findallunmatchedusers(currentuser",{"_index":2877,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["findallunmatchedusers(currentuserid",{"_index":4630,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["findbycourseids",{"_index":1052,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbycourseids(courseids",{"_index":1054,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbyid",{"_index":3093,"title":{},"body":{"injectables/ImportUserRepo.html":{},"injectables/RoleRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":3097,"title":{},"body":{"injectables/ImportUserRepo.html":{},"injectables/RoleRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":3924,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":3927,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbysingleparent",{"_index":4293,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findbysingleparent(creatorid",{"_index":4305,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finddocumentsofcollection",{"_index":1782,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["finddocumentsofcollection(collectionname",{"_index":1796,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["findexistinggridelement",{"_index":1555,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["findexistinggridelement(elementwithposition",{"_index":1568,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["findforuser",{"_index":980,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{}}}],["findforuser(@currentuser",{"_index":1277,"title":{},"body":{"controllers/DashboardController.html":{}}}],["findforuser(currentuser",{"_index":981,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{}}}],["findimportusers",{"_index":3094,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["findimportusers(school",{"_index":3099,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["findimportusersandcount",{"_index":3095,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["findimportusersandcount(query",{"_index":3101,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["finding",{"_index":2528,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":3655,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":3660,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":1157,"title":{},"body":{"injectables/CourseRepo.html":{},"controllers/NewsController.html":{}}}],["findone(courseid",{"_index":1164,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["findone(newsid",{"_index":3531,"title":{},"body":{"controllers/NewsController.html":{}}}],["findonebyid",{"_index":3656,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["findonebyid(id",{"_index":3663,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["findonebyidforuser",{"_index":3723,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":3738,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":3428,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["findtasksandcount",{"_index":4294,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findtasksandcount(query",{"_index":4307,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finduser(userid",{"_index":6390,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["findwithoutimportuser",{"_index":4703,"title":{},"body":{"injectables/UserRepo.html":{}}}],["findwithoutimportuser(school",{"_index":4707,"title":{},"body":{"injectables/UserRepo.html":{}}}],["finish",{"_index":4212,"title":{},"body":{"controllers/TaskController.html":{}}}],["finish(taskid",{"_index":4218,"title":{},"body":{"controllers/TaskController.html":{}}}],["finished",{"_index":2011,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["finished(user",{"_index":4246,"title":{},"body":{"classes/TaskFactory.html":{}}}],["finishedcourseids",{"_index":4317,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["finishforuser(user",{"_index":2834,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["first",{"_index":2624,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"injectables/NewsUc.html":{},"classes/UserInfoResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstclass",{"_index":2955,"title":{},"body":{"classes/ImportUserFactory.html":{},"miscellaneous/variables.html":{}}}],["firstname",{"_index":2541,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"classes/ResolvedUser.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["firstname.replace(mongopatterns.regex_mongo_language_pattern_whitelist",{"_index":3184,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["fishery",{"_index":471,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["fit",{"_index":6308,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":5724,"title":{},"body":{"license.html":{}}}],["fix",{"_index":5809,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":6143,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":5411,"title":{},"body":{"license.html":{}}}],["fixes",{"_index":5830,"title":{},"body":{"todo.html":{}}}],["fixtures",{"_index":6797,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":3003,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateFlagParams.html":{}}}],["flag.params",{"_index":2912,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["flag.params.ts",{"_index":4568,"title":{},"body":{"classes/UpdateFlagParams.html":{}}}],["flag.params.ts:7",{"_index":4571,"title":{},"body":{"classes/UpdateFlagParams.html":{}}}],["flagged",{"_index":2565,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/UpdateFlagParams.html":{},"injectables/UserImportUc.html":{},"miscellaneous/variables.html":{}}}],["flags",{"_index":1728,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["flat",{"_index":1440,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["flow",{"_index":5291,"title":{},"body":{"license.html":{}}}],["flush",{"_index":543,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["focus",{"_index":6630,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["focuses",{"_index":6839,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":1739,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folderpath",{"_index":1882,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["folders",{"_index":6487,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":5187,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":2043,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":6162,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["foractivecourses",{"_index":1173,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forallgrouptypes",{"_index":1200,"title":{},"body":{"classes/CourseScope.html":{}}}],["forallgrouptypes(userid",{"_index":1169,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forbid",{"_index":5348,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":6570,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception",{"_index":4642,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["forbiddenexception('jwt",{"_index":5967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbiddenexception('not",{"_index":4655,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["forbidnonwhitelisted",{"_index":2484,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["forbidunknownvalues",{"_index":2488,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":5307,"title":{},"body":{"license.html":{}}}],["forcepathstyle",{"_index":2242,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["forceserverobjectid",{"_index":1810,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["forcourseid",{"_index":1201,"title":{},"body":{"classes/CourseScope.html":{}}}],["forcourseid(courseid",{"_index":1179,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["foreign",{"_index":6904,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["foreignfield",{"_index":4727,"title":{},"body":{"injectables/UserRepo.html":{}}}],["forget",{"_index":6833,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":5248,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":935,"title":{},"body":{"entities/Course.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formatting",{"_index":6141,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":5401,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":2105,"title":{},"body":{"modules/EncryptionModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerTestModule.html":{}}}],["forroot(options",{"_index":2106,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["forteacher",{"_index":1202,"title":{},"body":{"classes/CourseScope.html":{}}}],["forteacher(userid",{"_index":1172,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["found",{"_index":1703,"title":{},"body":{"injectables/DashboardUc.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":5106,"title":{},"body":{"license.html":{}}}],["framework",{"_index":6179,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":6452,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":6343,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":5104,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":5126,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":4834,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":6581,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":6580,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fromgroup",{"_index":2492,"title":{},"body":{"classes/GridElement.html":{}}}],["fromgroup(title",{"_index":1381,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["frompersistedgroup",{"_index":2493,"title":{},"body":{"classes/GridElement.html":{}}}],["frompersistedgroup(id",{"_index":1379,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["frompersistedreference",{"_index":2494,"title":{},"body":{"classes/GridElement.html":{}}}],["frompersistedreference(id",{"_index":1378,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["fromsinglereference",{"_index":2495,"title":{},"body":{"classes/GridElement.html":{}}}],["fromsinglereference(reference",{"_index":1380,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["fs",{"_index":2309,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fs.rm",{"_index":2322,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fsp",{"_index":2307,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["fulfilled",{"_index":6352,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":5334,"title":{},"body":{"license.html":{}}}],["full",{"_index":2279,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["fullblown",{"_index":600,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["function",{"_index":429,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"interfaces/IRoleProperties.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"entities/Role.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":885,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":6223,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":5484,"title":{},"body":{"license.html":{}}}],["functions",{"_index":4945,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":5432,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":1124,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"license.html":{}}}],["g",{"_index":6160,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gates",{"_index":6144,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["general",{"_index":5097,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generally",{"_index":4973,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["generate",{"_index":453,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["generated",{"_index":5033,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["generateemptydashboard",{"_index":1656,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["generateemptydashboard(userid",{"_index":1669,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["generating",{"_index":6151,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generator",{"_index":458,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["generatorfn",{"_index":459,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["generic",{"_index":4969,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["genericdata",{"_index":29,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/typealiases.html":{}}}],["get(':id",{"_index":3532,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':id/board",{"_index":3935,"title":{},"body":{"controllers/RoomsController.html":{}}}],["get(':teamid/news",{"_index":4521,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["get('finished",{"_index":4216,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('me",{"_index":4603,"title":{},"body":{"controllers/UserController.html":{}}}],["get('unassigned",{"_index":2879,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["get(`${this.options.uri}${path",{"_index":141,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["get(id",{"_index":2199,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["get(path",{"_index":136,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getadminidandtoken",{"_index":155,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getasadmin(path",{"_index":134,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getbasedir",{"_index":1872,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["getboard",{"_index":3945,"title":{},"body":{"injectables/RoomsUc.html":{}}}],["getboard(roomid",{"_index":603,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["getbydraftforcreatorquery",{"_index":4417,"title":{},"body":{"classes/TaskScope.html":{}}}],["getbydraftforcreatorquery(creatorid",{"_index":4438,"title":{},"body":{"classes/TaskScope.html":{}}}],["getbydraftquery",{"_index":4418,"title":{},"body":{"classes/TaskScope.html":{}}}],["getbydraftquery(isdraft",{"_index":4440,"title":{},"body":{"classes/TaskScope.html":{}}}],["getcollectionnames",{"_index":1783,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getcontent",{"_index":1355,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getdashboardbyid",{"_index":1645,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdashboardbyid(id",{"_index":1649,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdatabasecollection",{"_index":1784,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdatabasecollection(collectionname",{"_index":1799,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdb",{"_index":1802,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdefaultmaxduedate",{"_index":4466,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getdetails",{"_index":183,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{}}}],["getelement",{"_index":1295,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["getelement(position",{"_index":1320,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getentitypermissions",{"_index":303,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":317,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["geteol",{"_index":2304,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["getfirstopenindex",{"_index":1296,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getgradeduserids",{"_index":2785,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getgrid",{"_index":1297,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getgroupmembers(groupname",{"_index":107,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getgroupmoderators(groupname",{"_index":105,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["gethello",{"_index":1967,"title":{},"body":{"controllers/DelayController.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{}}}],["getid",{"_index":1298,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getinout",{"_index":3986,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getinout(whatever",{"_index":3990,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getmaxsubmissions",{"_index":2799,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getmetadata",{"_index":2648,"title":{},"body":{"interfaces/ILearnroom.html":{}}}],["getnewspermissions",{"_index":3724,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":3740,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnumberofgradedusers",{"_index":2793,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getnumberofstudents",{"_index":973,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getnumberofsubmittedusers",{"_index":2782,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getorconstructdashboardmodelentity",{"_index":1556,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["getorconstructdashboardmodelentity(entity",{"_index":1570,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["getparent",{"_index":2813,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getparentdata",{"_index":2829,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getparentid",{"_index":1048,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["getpermittedcourses",{"_index":4144,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedcourses(user",{"_index":4151,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedentities",{"_index":304,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":320,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedlessonids",{"_index":4174,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedlessons",{"_index":4145,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedlessons(user",{"_index":4155,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedschools",{"_index":2135,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":2143,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":2136,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":2145,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":3975,"title":{},"body":{"classes/Scope.html":{}}}],["getreferences",{"_index":1360,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getreferencesfromposition",{"_index":1299,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["getreferencesfromposition(position",{"_index":1329,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getrequiredpermissions",{"_index":3725,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":3743,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":184,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{}}}],["getroomboard",{"_index":3933,"title":{},"body":{"controllers/RoomsController.html":{}}}],["getroomboard(roomid",{"_index":3934,"title":{},"body":{"controllers/RoomsController.html":{}}}],["gets",{"_index":437,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["getseedfolder",{"_index":1829,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getservice",{"_index":2222,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":2209,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getstudentid",{"_index":2732,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["getsubmissionitems",{"_index":2771,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["getsubmitteduserids",{"_index":2776,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["gettargetfilters",{"_index":3726,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":3746,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfolder",{"_index":1830,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["gettargetfolder(toseedfolder",{"_index":1848,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getter",{"_index":939,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gettimeout",{"_index":4551,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":4990,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":2137,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":2147,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserid",{"_index":1300,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["getuserlist(querystring",{"_index":89,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["getuserschoolpermissions",{"_index":2138,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":2149,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusersdashboard",{"_index":1646,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusersdashboard(userid",{"_index":1651,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusertargetpermissions",{"_index":2139,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":2152,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["gi",{"_index":3482,"title":{},"body":{"classes/MongoPatterns.html":{}}}],["git",{"_index":5004,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git://github.com/hpi",{"_index":4842,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/leeroybrun/mongoose",{"_index":4865,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/schul",{"_index":4856,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":4999,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":5367,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1906,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserFilterQuery.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":2180,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":5373,"title":{},"body":{"license.html":{}}}],["global",{"_index":892,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":2375,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":2117,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":2460,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":3219,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":2380,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["globalvalidationpipe",{"_index":2463,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{}}}],["gnu",{"_index":5095,"title":{},"body":{"license.html":{}}}],["go",{"_index":5083,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":5858,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":5178,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":6607,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":3378,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{}}}],["good",{"_index":4980,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":5515,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":5179,"title":{},"body":{"license.html":{}}}],["grade",{"_index":2699,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["gradecomment",{"_index":2700,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{}}}],["graded",{"_index":780,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradeduserids",{"_index":2786,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradeduserids.length",{"_index":2795,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradefileids",{"_index":2717,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["gradefiles",{"_index":2701,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["grant",{"_index":5539,"title":{},"body":{"license.html":{}}}],["granted",{"_index":5296,"title":{},"body":{"license.html":{}}}],["grants",{"_index":5587,"title":{},"body":{"license.html":{}}}],["graph",{"_index":5789,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":5431,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5761,"title":{},"body":{"license.html":{}}}],["grid",{"_index":1085,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"classes/PatchGroupParams.html":{},"miscellaneous/variables.html":{}}}],["gridarray",{"_index":1657,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridelement",{"_index":1366,"title":{"classes/GridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridelement.frompersistedgroup(modelentity.id",{"_index":1597,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.fromsinglereference(referenceforindex",{"_index":1453,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridelement.fromsinglereference(room",{"_index":1443,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridelement.getcontent().title",{"_index":1626,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.getid",{"_index":1619,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.hasid",{"_index":1617,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.isgroup",{"_index":1624,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["gridelement.setgroupname(params",{"_index":1700,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["gridelementcontent",{"_index":1356,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["gridelements",{"_index":1486,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["gridelementwithposition",{"_index":1327,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gridindexfromposition",{"_index":1301,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["gridindexfromposition(pos",{"_index":1333,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["gridposition",{"_index":1321,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["gridpositionwithgroupindex",{"_index":1330,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"miscellaneous/typealiases.html":{}}}],["group",{"_index":1364,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PatchGroupParams.html":{},"injectables/UserRepo.html":{}}}],["group.name",{"_index":111,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["groupdata",{"_index":1392,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["groupelements",{"_index":1496,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["groupid",{"_index":1365,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["groupindex",{"_index":1394,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["groupmetadata",{"_index":1389,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["groupname",{"_index":94,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["gt",{"_index":3719,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":1178,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/TaskScope.html":{}}}],["guarantee",{"_index":3558,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":5973,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":6517,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":6463,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guest:guest",{"_index":6098,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["guide",{"_index":6872,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":6299,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hack",{"_index":2800,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["halper",{"_index":4577,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":6439,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handlebars",{"_index":4971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handled",{"_index":826,"title":{},"body":{"classes/BusinessError.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":5844,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":2432,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":888,"title":{},"body":{"modules/CoreModule.html":{},"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":6206,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":6555,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":6820,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["hard",{"_index":6230,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hascoursepermission",{"_index":4201,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursereadpermission",{"_index":4146,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursereadpermission(user",{"_index":4157,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursewritepermission",{"_index":4147,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hascoursewritepermission(user",{"_index":4159,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hasid",{"_index":1354,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["hasmatch",{"_index":3096,"title":{},"body":{"injectables/ImportUserRepo.html":{},"injectables/UserImportUc.html":{}}}],["hasmatch(user",{"_index":3103,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["hasoneoftaskdashboardpermissions",{"_index":4148,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hasoneoftaskdashboardpermissions(user",{"_index":4161,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["haspermission",{"_index":3863,"title":{},"body":{"injectables/PermissionService.html":{},"injectables/TaskAuthorizationService.html":{}}}],["haspermissions",{"_index":344,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/PermissionService.html":{}}}],["hastaskpermission",{"_index":4149,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hastaskpermission(user",{"_index":4164,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["hasuserallschoolpermissions",{"_index":3831,"title":{},"body":{"injectables/PermissionService.html":{}}}],["hasuserallschoolpermissions(user",{"_index":3836,"title":{},"body":{"injectables/PermissionService.html":{}}}],["having",{"_index":5309,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["header",{"_index":3252,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":142,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":6368,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":5163,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":6268,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hell",{"_index":942,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["help",{"_index":6784,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helper",{"_index":2404,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/SubmissionRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":6519,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":6755,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":6742,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helpto",{"_index":6129,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["hence",{"_index":6363,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":379,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":5631,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":6479,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":643,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":6631,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":6193,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["high",{"_index":6202,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":6573,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":1928,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":6283,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":4855,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":4858,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":5564,"title":{},"body":{"license.html":{}}}],["holders",{"_index":5522,"title":{},"body":{"license.html":{}}}],["homework",{"_index":6492,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":2710,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["homeworks",{"_index":2750,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["homogeneitysolve",{"_index":6208,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":6069,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":6364,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hookfn",{"_index":425,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["hooks",{"_index":4823,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":943,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["host",{"_index":2392,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":2457,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":5438,"title":{},"body":{"license.html":{}}}],["hot",{"_index":5848,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["household",{"_index":5458,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":2084,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":1119,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["htmlcontent",{"_index":249,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":251,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["http",{"_index":217,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":5108,"title":{},"body":{"license.html":{}}}],["http://localhost",{"_index":6072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.gnu.org/licenses",{"_index":5785,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":831,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":6682,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["httpmodule",{"_index":3898,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["https://docs.nestjs.com/first",{"_index":6521,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":6874,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/hpi",{"_index":5826,"title":{},"body":{"todo.html":{}}}],["https://github.com/mikro",{"_index":6619,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://github.com/thoughtbot/fishery",{"_index":406,"title":{},"body":{"classes/BaseFactory.html":{}}}],["https://hpi",{"_index":5854,"title":{},"body":{"todo.html":{}}}],["https://jestjs.io",{"_index":6170,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":6628,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":6558,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":6171,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://min.io",{"_index":6173,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":6169,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":6333,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":5810,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":6335,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://www.rabbitmq.com",{"_index":6174,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["httpservice",{"_index":16,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["httpstatus",{"_index":202,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":212,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":845,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["human",{"_index":6686,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["i...properties",{"_index":947,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["i.e",{"_index":6356,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":3244,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icollectionfilepath",{"_index":1880,"title":{"interfaces/ICollectionFilePath.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["icons",{"_index":6918,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":1044,"title":{"interfaces/ICourseGroupProperties.html":{}},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["icourseproperties",{"_index":934,"title":{"interfaces/ICourseProperties.html":{}},"body":{"entities/Course.html":{},"classes/CourseFactory.html":{},"interfaces/ICourseProperties.html":{}}}],["icreatenews",{"_index":2518,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["icurrentuser",{"_index":982,"title":{"interfaces/ICurrentUser.html":{}},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"controllers/ImportUserController.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":10,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"classes/UserFactory.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":3819,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":3821,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":5883,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idashboardmodelproperties",{"_index":1485,"title":{"interfaces/IDashboardModelProperties.html":{}},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["idashboardrepo",{"_index":1660,"title":{"interfaces/IDashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["idea",{"_index":4190,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["identical",{"_index":3299,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identifiable",{"_index":5656,"title":{},"body":{"license.html":{}}}],["identified",{"_index":6692,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiedreference",{"_index":366,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"miscellaneous/typealiases.html":{}}}],["identifier",{"_index":2125,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiers",{"_index":2574,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"injectables/JwtValidationAdapter.html":{}}}],["identify",{"_index":3500,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":6894,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ids",{"_index":323,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{}}}],["ierrortype",{"_index":832,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":6642,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":6652,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":6645,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifileproperties",{"_index":516,"title":{"interfaces/IFileProperties.html":{}},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["ifindoptions",{"_index":1160,"title":{"interfaces/IFindOptions.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"controllers/ImportUserController.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{}}}],["ignore",{"_index":3190,"title":{},"body":{"classes/ImportUserScope.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":3279,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["igridelement",{"_index":1324,"title":{"interfaces/IGridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["iimportuserproperties",{"_index":2561,"title":{"interfaces/IImportUserProperties.html":{}},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{}}}],["iimportuserscope",{"_index":2641,"title":{"interfaces/IImportUserScope.html":{}},"body":{"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"classes/ImportUserMapper.html":{},"injectables/ImportUserRepo.html":{},"injectables/UserImportUc.html":{}}}],["ilearnroom",{"_index":928,"title":{"interfaces/ILearnroom.html":{}},"body":{"entities/Course.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{}}}],["ilessonproperties",{"_index":2649,"title":{"interfaces/ILessonProperties.html":{}},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{}}}],["ilogger",{"_index":2388,"title":{"interfaces/ILogger.html":{}},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["imateapotexception",{"_index":2201,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["imateapotexception('this",{"_index":2218,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immediately",{"_index":2188,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["impact",{"_index":5021,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":3354,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":5267,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":6522,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":3241,"title":{},"body":{"interfaces/JwtConstants.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":954,"title":{},"body":{"entities/Course.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":6571,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":6892,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":5680,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["import.module",{"_index":4027,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["import.module.ts",{"_index":3084,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["import.uc",{"_index":2911,"title":{},"body":{"controllers/ImportUserController.html":{},"modules/ImportUserModule.html":{}}}],["import.uc.ts",{"_index":4625,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["import.uc.ts:125",{"_index":4631,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["import.uc.ts:19",{"_index":4627,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["import.uc.ts:33",{"_index":4629,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["import.uc.ts:54",{"_index":4639,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["import.uc.ts:81",{"_index":4636,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["import.uc.ts:98",{"_index":4641,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["import/constants.ts",{"_index":4938,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["import/controller/dto/import",{"_index":2956,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserSortingQuery.html":{},"miscellaneous/enumerations.html":{}}}],["import/controller/dto/match",{"_index":4936,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["import/controller/dto/role",{"_index":4937,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["import/controller/dto/update",{"_index":4567,"title":{},"body":{"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{}}}],["import/controller/dto/user",{"_index":4622,"title":{},"body":{"classes/UserFilterQuery.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["import/controller/import",{"_index":2864,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["import/mapper/import",{"_index":3004,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["import/mapper/match.mapper.ts",{"_index":3058,"title":{},"body":{"classes/ImportUserMatchMapper.html":{}}}],["import/mapper/match.mapper.ts:12",{"_index":3064,"title":{},"body":{"classes/ImportUserMatchMapper.html":{}}}],["import/mapper/match.mapper.ts:5",{"_index":3062,"title":{},"body":{"classes/ImportUserMatchMapper.html":{}}}],["import/mapper/role",{"_index":3907,"title":{},"body":{"classes/RoleNameMapper.html":{}}}],["import/mapper/user",{"_index":4673,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["import/uc/user",{"_index":4624,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["import/user",{"_index":3083,"title":{},"body":{"modules/ImportUserModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["import_user_update",{"_index":4944,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["import_user_view",{"_index":4942,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["important",{"_index":2206,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/PermissionService.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importcollection",{"_index":1748,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollection(@param('collectionname",{"_index":1764,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["importcollection(collectionname",{"_index":1756,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollections",{"_index":1749,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["imported",{"_index":1942,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importeddocumentsamount",{"_index":1939,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importing",{"_index":5622,"title":{},"body":{"license.html":{}}}],["imports",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/FilesModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"classes/TestBootstrapConsole.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importuser",{"_index":2584,"title":{"entities/ImportUser.html":{}},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"injectables/UserImportUc.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["importuser.classnames",{"_index":3032,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["importuser.firstname",{"_index":3028,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["importuser.flagged",{"_index":3033,"title":{},"body":{"classes/ImportUserMapper.html":{},"injectables/UserImportUc.html":{}}}],["importuser.id",{"_index":3026,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["importuser.lastname",{"_index":3029,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["importuser.loginname",{"_index":3027,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["importuser.matchedby",{"_index":3035,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["importuser.revokematch",{"_index":4659,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["importuser.rolenames.map((role",{"_index":3030,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["importuser.school.id",{"_index":4654,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["importuser.scope",{"_index":3108,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["importuser.setmatch(usermatch",{"_index":4657,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["importuser.user",{"_index":3034,"title":{},"body":{"classes/ImportUserMapper.html":{},"injectables/ImportUserRepo.html":{}}}],["importuser.user).filter((user",{"_index":3135,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["importusercontroller",{"_index":2862,"title":{"controllers/ImportUserController.html":{}},"body":{"controllers/ImportUserController.html":{},"modules/ImportUserModule.html":{}}}],["importuserentities",{"_index":3131,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["importuserentities.map((importuser",{"_index":3134,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["importuserfactory",{"_index":2938,"title":{"classes/ImportUserFactory.html":{}},"body":{"classes/ImportUserFactory.html":{},"miscellaneous/variables.html":{}}}],["importuserfactory.define(importuser",{"_index":2948,"title":{},"body":{"classes/ImportUserFactory.html":{},"miscellaneous/variables.html":{}}}],["importuserfilterquery",{"_index":2873,"title":{"classes/ImportUserFilterQuery.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserMapper.html":{}}}],["importuserid",{"_index":2884,"title":{},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserResponse.html":{},"injectables/UserImportUc.html":{}}}],["importuserlist",{"_index":2920,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["importuserlist.map((importuser",{"_index":2923,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["importuserlistresponse",{"_index":2895,"title":{"classes/ImportUserListResponse.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["importuserlistresponse(dtolist",{"_index":2925,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["importusermapper",{"_index":2903,"title":{"classes/ImportUserMapper.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserMapper.html":{}}}],["importusermapper.mapimportuserfilterquerytodomain(scope",{"_index":2919,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["importusermapper.mapsortingquerytodomain(sortingquery",{"_index":2918,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["importusermapper.maptoresponse(importuser",{"_index":2924,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["importusermapper.maptoresponse(result",{"_index":2928,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["importusermatchmapper",{"_index":3016,"title":{"classes/ImportUserMatchMapper.html":{}},"body":{"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"classes/UserMatchMapper.html":{}}}],["importusermatchmapper.mapimportusermatchscopetodomain(match",{"_index":3055,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["importusermatchmapper.mapmatchcreatortoresponse(matchcreator",{"_index":4689,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["importusermodule",{"_index":3077,"title":{"modules/ImportUserModule.html":{}},"body":{"modules/ImportUserModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["importuserrepo",{"_index":3081,"title":{"injectables/ImportUserRepo.html":{}},"body":{"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"injectables/UserImportUc.html":{},"overview.html":{}}}],["importuserresponse",{"_index":2896,"title":{"classes/ImportUserResponse.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserResponse.html":{}}}],["importusers",{"_index":2583,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"injectables/ImportUserRepo.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{}}}],["importuserscope",{"_index":3107,"title":{"classes/ImportUserScope.html":{}},"body":{"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{}}}],["importusersortbyquery",{"_index":3015,"title":{},"body":{"classes/ImportUserMapper.html":{},"classes/ImportUserSortingQuery.html":{},"miscellaneous/enumerations.html":{}}}],["importusersortbyquery.firstname",{"_index":3021,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["importusersortbyquery.lastname",{"_index":3022,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["importusersortingquery",{"_index":2875,"title":{"classes/ImportUserSortingQuery.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserSortingQuery.html":{}}}],["impose",{"_index":5548,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":5683,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":3716,"title":{},"body":{"classes/NewsScope.html":{}}}],["improvements",{"_index":5157,"title":{},"body":{"license.html":{}}}],["improves",{"_index":6696,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":6495,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":5741,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":5743,"title":{},"body":{"license.html":{}}}],["inamematch",{"_index":2646,"title":{"interfaces/INameMatch.html":{}},"body":{"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"injectables/UserImportUc.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{}}}],["inc",{"_index":5107,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":5738,"title":{},"body":{"license.html":{}}}],["include",{"_index":369,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"license.html":{}}}],["included",{"_index":5261,"title":{},"body":{"license.html":{}}}],["includes",{"_index":5217,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":2298,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":5399,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":2473,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incorporate",{"_index":5161,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":5700,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":5461,"title":{},"body":{"license.html":{}}}],["increase",{"_index":5078,"title":{},"body":{"index.html":{}}}],["increases",{"_index":6328,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":5544,"title":{},"body":{"license.html":{}}}],["independend",{"_index":6661,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":5388,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":6376,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index({name",{"_index":924,"title":{},"body":{"entities/Course.html":{},"entities/Lesson.html":{},"entities/Task.html":{},"entities/User.html":{}}}],["index.ts",{"_index":5801,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexes",{"_index":4359,"title":{},"body":{"injectables/TaskRepo.html":{},"todo.html":{}}}],["indicate",{"_index":5591,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":5555,"title":{},"body":{"license.html":{}}}],["individual",{"_index":5397,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":5197,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":5475,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":6036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":1111,"title":{"interfaces/INewsProperties.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["inewsscope",{"_index":2529,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["inewuserprops",{"_index":6636,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info(text",{"_index":862,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["info.mapper",{"_index":3606,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":3957,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.mapper.ts:5",{"_index":3959,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":3580,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{}}}],["info.response.ts",{"_index":3964,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:13",{"_index":3966,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["info.response.ts:14",{"_index":4665,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":3967,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["info.response.ts:19",{"_index":4664,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:24",{"_index":4667,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:3",{"_index":3965,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":5444,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":2132,"title":{},"body":{"classes/ErrorResponse.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["infra",{"_index":3432,"title":{},"body":{"modules/ManagementModule.html":{}}}],["infra/encryption",{"_index":2087,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["infrastructure",{"_index":6507,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infrastucture",{"_index":4045,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["infringe",{"_index":5589,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":5619,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":5211,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":372,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inheritances",{"_index":3679,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["inherited",{"_index":192,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseScope.html":{},"injectables/FilesRepo.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskScope.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/UserFactory.html":{},"classes/UserMatchListResponse.html":{},"classes/ValidationError.html":{}}}],["initialization",{"_index":6880,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["initialize",{"_index":6670,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":3358,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":6458,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":5613,"title":{},"body":{"license.html":{}}}],["inject",{"_index":17,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/SymetricKeyEncryptionService.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject('dashboard_repo",{"_index":1690,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["inject('mail_service_options",{"_index":3404,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["inject('rocket_chat_options",{"_index":70,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["inject(mikroorm",{"_index":3468,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":3470,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":18,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BoardMapper.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":300,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BoardMapper.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"injectables/RoleRepo.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{},"overview.html":{}}}],["injected",{"_index":2184,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":3355,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":6407,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["inline",{"_index":242,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inlineattachment",{"_index":241,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inner",{"_index":5025,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":3221,"title":{},"body":{"modules/InterceptorModule.html":{},"classes/ServerConsole.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["inputroles",{"_index":3847,"title":{},"body":{"injectables/PermissionService.html":{}}}],["insensitive",{"_index":3166,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["insertedcount",{"_index":1808,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["inside",{"_index":829,"title":{},"body":{"classes/BusinessError.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":6873,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":5276,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":5480,"title":{},"body":{"license.html":{}}}],["installed",{"_index":5497,"title":{},"body":{"license.html":{}}}],["instance",{"_index":2213,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":2370,"title":{},"body":{"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":5010,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instant",{"_index":946,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["instead",{"_index":1933,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":5045,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":5362,"title":{},"body":{"license.html":{}}}],["integration",{"_index":6777,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":5129,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":5353,"title":{},"body":{"license.html":{}}}],["interact",{"_index":5776,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":5695,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":5226,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":6255,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":5230,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":6446,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":2049,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":2050,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":898,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptormodule",{"_index":878,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":5414,"title":{},"body":{"license.html":{}}}],["interest",{"_index":5606,"title":{},"body":{"license.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"interfaces/Board.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"interfaces/RocketChatOptions.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"entities/Directory.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"entities/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"entities/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":3275,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/AppendedAttachment.html":{},"interfaces/Board.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":5486,"title":{},"body":{"license.html":{}}}],["internal",{"_index":1114,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":6634,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":872,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["internalservererrorexception",{"_index":1588,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception('unknown",{"_index":1609,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["internalservererrorexception(error",{"_index":2423,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["interpretation",{"_index":5750,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":5274,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":5289,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":6605,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":2185,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":6287,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":6397,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":6077,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":5797,"title":{},"body":{"todo.html":{}}}],["inusermigration",{"_index":2682,"title":{},"body":{"interfaces/ISchoolProperties.html":{},"entities/School.html":{}}}],["invalid",{"_index":1915,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["invalidate",{"_index":5383,"title":{},"body":{"license.html":{}}}],["inviteusertogroup(groupname",{"_index":99,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["invocation",{"_index":6476,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":6481,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":6416,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":6264,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":6388,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":6606,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":2552,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskUC.html":{}}}],["ipermissionsandroles",{"_index":2543,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":3416,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["iresolveduser",{"_index":2537,"title":{"interfaces/IResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{}}}],["irole",{"_index":2540,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["iroleproperties",{"_index":2671,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["irrevocable",{"_index":5298,"title":{},"body":{"license.html":{}}}],["isarray",{"_index":2969,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["isboolean",{"_index":2978,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateFlagParams.html":{},"miscellaneous/functions.html":{}}}],["isbusinesserror",{"_index":2402,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":2436,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ischoolproperties",{"_index":2680,"title":{"interfaces/ISchoolProperties.html":{}},"body":{"interfaces/ISchoolProperties.html":{},"entities/School.html":{}}}],["iscreator",{"_index":4199,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["isdate",{"_index":1248,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":1231,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isdirectory",{"_index":506,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["isdraft",{"_index":781,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskScope.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["isenum",{"_index":2979,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/ImportUserSortingQuery.html":{},"classes/SortingQuery.html":{}}}],["isenum(importusersortbyquery",{"_index":3217,"title":{},"body":{"classes/ImportUserSortingQuery.html":{}}}],["isenum(matchfilterquery",{"_index":2981,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["isenum(rolenamefilterquery",{"_index":2982,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["isenum(sortorder",{"_index":4057,"title":{},"body":{"classes/SortingQuery.html":{}}}],["isfeatherserror",{"_index":2400,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":2431,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isfinished",{"_index":782,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["isfinishedforuser(user",{"_index":2768,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["isflagged",{"_index":3157,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["isflagged(flagged",{"_index":3175,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["isgraded",{"_index":2728,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["isgradedforuser(user",{"_index":2818,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["isgroup",{"_index":1357,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["ishidden",{"_index":3348,"title":{},"body":{"classes/LessonScope.html":{}}}],["isin",{"_index":3572,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":3575,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isint",{"_index":3804,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":3801,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":3795,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":2986,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["ismongoid()@apiproperty({description",{"_index":4697,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["ismongoid()@apiproperty({pattern",{"_index":3141,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["isnotempty",{"_index":2980,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/UserFilterQuery.html":{}}}],["isnotemptystring",{"_index":4067,"title":{},"body":{"classes/StringValidator.html":{}}}],["isnotemptystring(value",{"_index":4068,"title":{},"body":{"classes/StringValidator.html":{}}}],["isnumber",{"_index":3497,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0)@apiproperty",{"_index":3503,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0)@isoptional()@apipropertyoptional({description",{"_index":3501,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isolated",{"_index":6482,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":6728,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isopen",{"_index":1008,"title":{},"body":{"classes/CourseFactory.html":{}}}],["isoptional",{"_index":1249,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserSortingQuery.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/SortingQuery.html":{},"classes/UpdateNewsParams.html":{},"classes/UserFilterQuery.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":3571,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":4581,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isenum(importusersortbyquery)@apipropertyoptional({enum",{"_index":3213,"title":{},"body":{"classes/ImportUserSortingQuery.html":{}}}],["isoptional()@isenum(rolenamefilterquery)@apipropertyoptional({enum",{"_index":2975,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["isoptional()@isenum(sortorder)@apipropertyoptional({enum",{"_index":3215,"title":{},"body":{"classes/ImportUserSortingQuery.html":{},"classes/SortingQuery.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":3566,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":4580,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":3569,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@isnotempty()@apipropertyoptional({type",{"_index":2958,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["ispublished",{"_index":3774,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":3248,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":1250,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/PatchGroupParams.html":{},"classes/StringValidator.html":{},"classes/UpdateNewsParams.html":{},"classes/UserFilterQuery.html":{}}}],["isstring()@apiproperty({description",{"_index":1229,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/ImportUserResponse.html":{},"classes/PatchGroupParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":1242,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":1239,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring(value",{"_index":4070,"title":{},"body":{"classes/StringValidator.html":{}}}],["isstudent",{"_index":1170,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issubmitted",{"_index":2821,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["issubmittedforuser(user",{"_index":2815,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["issubstitutionteacher",{"_index":783,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["issuer",{"_index":3255,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":6140,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["isteacher",{"_index":606,"title":{},"body":{"interfaces/Board.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/RoomsUc.html":{}}}],["isteacher(user",{"_index":634,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["istechnicalerror",{"_index":2405,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":2438,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":3367,"title":{},"body":{"injectables/Logger.html":{}}}],["istorageproviderproperties",{"_index":2683,"title":{"interfaces/IStorageProviderProperties.html":{}},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["isubmissionproperties",{"_index":2696,"title":{"interfaces/ISubmissionProperties.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{}}}],["iswhitelisted",{"_index":3292,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["iswhitelisted(accountid",{"_index":3295,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["isystemproperties",{"_index":2734,"title":{"interfaces/ISystemProperties.html":{}},"body":{"interfaces/ISystemProperties.html":{},"entities/System.html":{}}}],["it's",{"_index":6289,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":6727,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":6745,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":6747,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":6826,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["itaskproperties",{"_index":2742,"title":{"interfaces/ITaskProperties.html":{}},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{}}}],["itaskstatus",{"_index":774,"title":{"interfaces/ITaskStatus.html":{}},"body":{"classes/BoardTaskStatusMapper.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["iteamproperties",{"_index":2838,"title":{"interfaces/ITeamProperties.html":{}},"body":{"interfaces/ITeamProperties.html":{},"entities/Team.html":{}}}],["item",{"_index":5244,"title":{},"body":{"license.html":{}}}],["items",{"_index":2674,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/PermissionService.html":{},"entities/Role.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/typealiases.html":{}}}],["itself",{"_index":5501,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":2527,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":2840,"title":{"interfaces/IUserProperties.html":{}},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{},"classes/UserFactory.html":{}}}],["javascript",{"_index":809,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["jest",{"_index":5842,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":5916,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["jest.spyon(repo",{"_index":6828,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":6020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":5057,"title":{},"body":{"index.html":{}}}],["job",{"_index":1995,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["job/delete",{"_index":2342,"title":{},"body":{"modules/FilesModule.html":{}}}],["jobs",{"_index":6437,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["john",{"_index":4620,"title":{},"body":{"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["john${sequence",{"_index":2951,"title":{},"body":{"classes/ImportUserFactory.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":6910,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["joinpath",{"_index":2261,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["joinpath(...paths",{"_index":2282,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["jose",{"_index":4837,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":940,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/SymetricKeyEncryptionService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":808,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json.parse(text",{"_index":1926,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify",{"_index":1914,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify(collections",{"_index":1736,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["json.stringify(e.constraints",{"_index":2449,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(sortedbsondocuments",{"_index":1960,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments",{"_index":821,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments.length",{"_index":1807,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["jsonwebtoken",{"_index":4839,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":3250,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["jwauthguard",{"_index":6844,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":3273,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtauthguard",{"_index":3227,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":281,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":3282,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":3281,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":3277,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":285,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":3233,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":3260,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":265,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["jwtvalidationadapter",{"_index":266,"title":{"injectables/JwtValidationAdapter.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"overview.html":{}}}],["jwtwhitelist",{"_index":3301,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["kafka",{"_index":6346,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1941,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":6105,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":5269,"title":{},"body":{"license.html":{}}}],["key",{"_index":2253,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/NewsUc.html":{},"injectables/SymetricKeyEncryptionService.html":{},"license.html":{}}}],["keyof",{"_index":5908,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":3239,"title":{},"body":{"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kickuserfromgroup(groupname",{"_index":97,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["kind",{"_index":5222,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":5117,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["know",{"_index":5142,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["knowingly",{"_index":5646,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5653,"title":{},"body":{"license.html":{}}}],["known",{"_index":6534,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":6436,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kurse",{"_index":949,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["l.course.isfinished()).map((l",{"_index":4488,"title":{},"body":{"injectables/TaskUC.html":{}}}],["l.id",{"_index":4489,"title":{},"body":{"injectables/TaskUC.html":{}}}],["label",{"_index":5072,"title":{},"body":{"index.html":{}}}],["language",{"_index":3486,"title":{},"body":{"classes/MongoPatterns.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":6329,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":5391,"title":{},"body":{"license.html":{}}}],["last",{"_index":4666,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["lastname",{"_index":2542,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"classes/ResolvedUser.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lastname.replace(mongopatterns.regex_mongo_language_pattern_whitelist",{"_index":3196,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["later",{"_index":1128,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":3737,"title":{},"body":{"injectables/NewsUc.html":{},"dependencies.html":{}}}],["launch",{"_index":6164,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["launch/settings",{"_index":5825,"title":{},"body":{"todo.html":{}}}],["law",{"_index":5213,"title":{},"body":{"license.html":{}}}],["laws",{"_index":5189,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":5617,"title":{},"body":{"license.html":{}}}],["layer",{"_index":6241,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":6431,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":6199,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":5800,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["lazily",{"_index":3842,"title":{},"body":{"injectables/PermissionService.html":{}}}],["ldap",{"_index":3089,"title":{},"body":{"modules/ImportUserModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["ldapdn",{"_index":2566,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserScope.html":{},"miscellaneous/variables.html":{}}}],["ldapid",{"_index":2567,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"miscellaneous/variables.html":{}}}],["ldapjs",{"_index":4841,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":4844,"title":{},"body":{"dependencies.html":{}}}],["lead",{"_index":6426,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":4975,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["lean",{"_index":4860,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learnroom",{"_index":1610,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["learnroommetadata",{"_index":930,"title":{},"body":{"entities/Course.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"miscellaneous/typealiases.html":{}}}],["learnroommodule",{"_index":3310,"title":{"modules/LearnroomModule.html":{}},"body":{"modules/LearnroomModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["learnroomtypes",{"_index":931,"title":{},"body":{"entities/Course.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/enumerations.html":{}}}],["learnroomtypes.course",{"_index":1608,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["leave",{"_index":5869,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":4541,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":2181,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ISystemProperties.html":{},"entities/System.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["legacy/feathers",{"_index":6152,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/feathers/mocha",{"_index":6131,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/nest",{"_index":5859,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":6058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":5151,"title":{},"body":{"license.html":{}}}],["less",{"_index":6389,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":593,"title":{"entities/Lesson.html":{}},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/RoomsUc.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["lesson.entity",{"_index":2745,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["lessoncourse",{"_index":745,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["lessoncourse.name",{"_index":748,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["lessonfactory",{"_index":3324,"title":{"classes/LessonFactory.html":{}},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["lessonfactory.define(lesson",{"_index":3327,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["lessonfilter",{"_index":610,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["lessonfilter(isteacher",{"_index":642,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["lessonid",{"_index":2754,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["lessonids",{"_index":4366,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["lessonidsoffinishedcourses",{"_index":4318,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["lessonidsofopencourses",{"_index":4316,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["lessonname",{"_index":2749,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["lessonrepo",{"_index":595,"title":{"injectables/LessonRepo.html":{}},"body":{"interfaces/Board.html":{},"modules/LearnroomModule.html":{},"injectables/LessonRepo.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["lessons",{"_index":617,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"injectables/RoomsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["lessons.filter((l",{"_index":4487,"title":{},"body":{"injectables/TaskUC.html":{}}}],["lessons.map((l",{"_index":4509,"title":{},"body":{"injectables/TaskUC.html":{}}}],["lessons.map((lesson",{"_index":648,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["lessonscope",{"_index":3334,"title":{"classes/LessonScope.html":{}},"body":{"injectables/LessonRepo.html":{},"classes/LessonScope.html":{}}}],["letter",{"_index":6531,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":5170,"title":{},"body":{"license.html":{}}}],["level",{"_index":6297,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":6723,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":5525,"title":{},"body":{"license.html":{}}}],["liable",{"_index":5210,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":5259,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":5452,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":5094,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":5193,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":5194,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":5196,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":5123,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":5593,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":5536,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":5585,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1004,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"license.html":{}}}],["limitation",{"_index":5734,"title":{},"body":{"license.html":{}}}],["limited",{"_index":5722,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["limiting",{"_index":5524,"title":{},"body":{"license.html":{}}}],["line",{"_index":46,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/ImportUserFactory.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":6005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":3088,"title":{},"body":{"modules/ImportUserModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":5286,"title":{},"body":{"license.html":{}}}],["linter",{"_index":5843,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":319,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/LessonFactory.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"license.html":{}}}],["lists",{"_index":2286,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["literal",{"_index":421,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/CourseRepo.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/ImportUserFactory.html":{},"interfaces/JwtConstants.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"injectables/RoomsUc.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/UserFactory.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":5614,"title":{},"body":{"license.html":{}}}],["living",{"_index":6603,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":6311,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":1903,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/ImportUserRepo.html":{},"injectables/TaskUC.html":{}}}],["load/perf",{"_index":5817,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":6503,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loadallcollectionsfromdatabase",{"_index":1831,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromdatabase(targetfolder",{"_index":1851,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadallcollectionsfromfilesystem",{"_index":1832,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromfilesystem(basedir",{"_index":1857,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1833,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames(source",{"_index":1860,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loaded",{"_index":2774,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/PermissionService.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":6776,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loads",{"_index":1853,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["local",{"_index":3002,"title":{},"body":{"classes/ImportUserListResponse.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/UpdateMatchParams.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"dependencies.html":{},"license.html":{}}}],["localfield",{"_index":4726,"title":{},"body":{"injectables/UserRepo.html":{}}}],["localhost:15672",{"_index":6097,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localhost:3030",{"_index":6110,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localization",{"_index":6336,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":4042,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["locate",{"_index":6567,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":6315,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":1871,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lodash",{"_index":1875,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["log",{"_index":2655,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":2663,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":5845,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":6469,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logged",{"_index":5042,"title":{},"body":{"index.html":{}}}],["logger",{"_index":897,"title":{"injectables/Logger.html":{}},"body":{"modules/CoreModule.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":2389,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(deletefilesconsole.name",{"_index":2005,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":2056,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger(newsuc.name",{"_index":3754,"title":{},"body":{"injectables/NewsUc.html":{}}}],["logger.error(error",{"_index":2453,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":2450,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":2443,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":6759,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":3352,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":3372,"title":{},"body":{"modules/LoggerModule.html":{}}}],["loggermodule",{"_index":879,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":6677,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":890,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":2046,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:11",{"_index":2057,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":2053,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":6177,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":6288,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":6339,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":2611,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginname",{"_index":2614,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{}}}],["loginname.replace(mongopatterns.regex_mongo_language_pattern_whitelist",{"_index":3199,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["loginuseruc",{"_index":6539,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logoutuser(authtoken",{"_index":87,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["logs",{"_index":5799,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":5073,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["look",{"_index":3238,"title":{},"body":{"interfaces/JwtConstants.html":{},"index.html":{}}}],["lookup",{"_index":4725,"title":{},"body":{"injectables/UserRepo.html":{}}}],["loop",{"_index":2034,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["loss",{"_index":5742,"title":{},"body":{"license.html":{}}}],["losses",{"_index":5744,"title":{},"body":{"license.html":{}}}],["low",{"_index":6204,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":2625,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":2366,"title":{},"body":{"injectables/FilesRepo.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["luckily",{"_index":6455,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":6903,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":5404,"title":{},"body":{"license.html":{}}}],["made",{"_index":5158,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":252,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/PlainTextMailContent.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"license.html":{}}}],["mail.interface",{"_index":3403,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mail.service",{"_index":3381,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mail_service_options",{"_index":3393,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailattachment",{"_index":237,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["mailcontent",{"_index":245,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["mailmodule",{"_index":3373,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{}}}],["mailmodule.forroot",{"_index":4029,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["mailmoduleoptions",{"_index":3375,"title":{"interfaces/MailModuleOptions.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailservice",{"_index":3380,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mailserviceoptions",{"_index":3399,"title":{"interfaces/MailServiceOptions.html":{}},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["main",{"_index":6369,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":2214,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{}}}],["mainly",{"_index":6386,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":5435,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":6269,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":6200,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":5264,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":3186,"title":{},"body":{"classes/ImportUserScope.html":{},"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/PermissionService.html":{},"injectables/UserRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":5324,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":4579,"title":{},"body":{"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":6821,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["manage",{"_index":6253,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":6226,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":6093,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["management.console",{"_index":3423,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.console.ts",{"_index":1706,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["management.console.ts:11",{"_index":1711,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:25",{"_index":1721,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:49",{"_index":1718,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.controller",{"_index":3421,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.controller.ts",{"_index":1745,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:14",{"_index":1758,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:19",{"_index":1755,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:24",{"_index":1752,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:9",{"_index":1760,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.module.ts",{"_index":1775,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service",{"_index":1776,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service.ts",{"_index":1777,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:13",{"_index":1800,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:18",{"_index":1801,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:30",{"_index":1797,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:36",{"_index":1789,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:42",{"_index":1798,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:50",{"_index":1791,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:56",{"_index":1793,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:6",{"_index":1787,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:60",{"_index":1795,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:9",{"_index":1803,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.uc",{"_index":1725,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["management.uc.ts",{"_index":1826,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["management.uc.ts:134",{"_index":1867,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:183",{"_index":1840,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:19",{"_index":1838,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:30",{"_index":1873,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:38",{"_index":1846,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:46",{"_index":1849,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:63",{"_index":1852,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:76",{"_index":1858,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:91",{"_index":1862,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management/database",{"_index":1746,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["managementmodule",{"_index":3408,"title":{"modules/ManagementModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["manager",{"_index":4781,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":6313,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":5803,"title":{},"body":{"todo.html":{}}}],["manner",{"_index":5632,"title":{},"body":{"license.html":{}}}],["manual",{"_index":2578,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{}}}],["manually",{"_index":6756,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":5162,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":927,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/User.html":{}}}],["manytomany('course",{"_index":1466,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["manytomany('file",{"_index":2715,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["manytomany('role",{"_index":2675,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["manytomany('user",{"_index":917,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["manytomany({entity",{"_index":3905,"title":{},"body":{"entities/Role.html":{}}}],["manytoone",{"_index":511,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"entities/User.html":{}}}],["manytoone('course",{"_index":1039,"title":{},"body":{"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{}}}],["manytoone('coursegroup",{"_index":2712,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["manytoone('dashboardmodelentity",{"_index":1463,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["manytoone('lesson",{"_index":2753,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["manytoone('school",{"_index":912,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{}}}],["manytoone('storageprovider",{"_index":526,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["manytoone('task",{"_index":2709,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["manytoone('team",{"_index":1155,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["manytoone('user",{"_index":1130,"title":{},"body":{"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{}}}],["manytoone(undefined",{"_index":2857,"title":{},"body":{"entities/ImportUser.html":{}}}],["map",{"_index":1310,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["map((el",{"_index":1438,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["map((elementwithposition",{"_index":1531,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["map((match",{"_index":3209,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["map((rolename",{"_index":4686,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["map((submission",{"_index":2790,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["mapcreatenewstodomain",{"_index":3594,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":3597,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdashboardtoentity",{"_index":1557,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtoentity(modelentity",{"_index":1572,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtomodel",{"_index":1558,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdashboardtomodel(entity",{"_index":1575,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapdomaintoresponse",{"_index":6510,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapelementtoentity",{"_index":1559,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapelementtoentity(modelentity",{"_index":1577,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapfootodomain",{"_index":6511,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapgridelement",{"_index":1521,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["mapgridelement(data",{"_index":1523,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["mapgridelementtomodel",{"_index":1560,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapgridelementtomodel(elementwithposition",{"_index":1579,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapimportuserfilterquerytodomain",{"_index":3006,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["mapimportuserfilterquerytodomain(query",{"_index":3008,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["mapimportusermatchscopetodomain",{"_index":3059,"title":{},"body":{"classes/ImportUserMatchMapper.html":{}}}],["mapimportusermatchscopetodomain(match",{"_index":3061,"title":{},"body":{"classes/ImportUserMatchMapper.html":{}}}],["maplearnroom",{"_index":1522,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maplearnroom(metadata",{"_index":1525,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["mapmatchcreatortoresponse",{"_index":3060,"title":{},"body":{"classes/ImportUserMatchMapper.html":{}}}],["mapmatchcreatortoresponse(matchcreator",{"_index":3063,"title":{},"body":{"classes/ImportUserMatchMapper.html":{}}}],["mapnewsscopetodomain",{"_index":3595,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":3599,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":749,"title":{},"body":{"injectables/BoardMapper.html":{},"controllers/RoomsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mappedelements",{"_index":1632,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mappedelements.includes(el",{"_index":1636,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mappedlesson",{"_index":739,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedlesson.coursename",{"_index":747,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask",{"_index":720,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.availabledate",{"_index":729,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.coursename",{"_index":727,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.description",{"_index":735,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.displaycolor",{"_index":733,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mappedtask.duedate",{"_index":731,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["mapper",{"_index":1647,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"controllers/RoomsController.html":{},"controllers/UserController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":6509,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/board.mapper",{"_index":3318,"title":{},"body":{"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{}}}],["mapper/course.mapper",{"_index":994,"title":{},"body":{"controllers/CourseController.html":{}}}],["mapper/dashboard.mapper",{"_index":1274,"title":{},"body":{"controllers/DashboardController.html":{}}}],["mapper/import",{"_index":2904,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["mapper/news.mapper",{"_index":3545,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["mapper/task.mapper",{"_index":4231,"title":{},"body":{"controllers/TaskController.html":{}}}],["mapper/user",{"_index":2907,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["mappers",{"_index":6843,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapping",{"_index":6248,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapreferencetoentity",{"_index":1561,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetoentity(modelentity",{"_index":1581,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetomodel",{"_index":1562,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["mapreferencetomodel(reference",{"_index":1583,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["maps",{"_index":6281,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapsortingquerytodomain",{"_index":3007,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["mapsortingquerytodomain(sortingquery",{"_index":3010,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["maptodomain",{"_index":3909,"title":{},"body":{"classes/RoleNameMapper.html":{},"classes/UserMatchMapper.html":{}}}],["maptodomain(query",{"_index":4675,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["maptodomain(rolename",{"_index":3910,"title":{},"body":{"classes/RoleNameMapper.html":{}}}],["maptometadataresponse",{"_index":1061,"title":{},"body":{"classes/CourseMapper.html":{}}}],["maptometadataresponse(course",{"_index":1062,"title":{},"body":{"classes/CourseMapper.html":{}}}],["maptoresponse",{"_index":705,"title":{},"body":{"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/DashboardMapper.html":{},"classes/ImportUserMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/RoleNameMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/TaskStatusMapper.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{}}}],["maptoresponse(board",{"_index":706,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["maptoresponse(dashboard",{"_index":1528,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maptoresponse(importuser",{"_index":3012,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["maptoresponse(news",{"_index":3601,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(rolename",{"_index":3912,"title":{},"body":{"classes/RoleNameMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":3958,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(status",{"_index":773,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{},"classes/TaskStatusMapper.html":{}}}],["maptoresponse(target",{"_index":4126,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["maptoresponse(taskwithstatus",{"_index":4263,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":3877,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{}}}],["mapupdatenewstodomain",{"_index":3596,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":3603,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapusertocurrentuser",{"_index":5936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["march",{"_index":5677,"title":{},"body":{"license.html":{}}}],["marked",{"_index":1996,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"license.html":{}}}],["marks",{"_index":5543,"title":{},"body":{"license.html":{}}}],["masks",{"_index":5191,"title":{},"body":{"license.html":{}}}],["master",{"_index":4994,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":1841,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMatchMapper.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"injectables/UserImportUc.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["match.mapper",{"_index":2908,"title":{},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserMapper.html":{},"classes/UserMatchMapper.html":{}}}],["match.mapper.ts",{"_index":4674,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["match.mapper.ts:20",{"_index":4677,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["match.mapper.ts:8",{"_index":4676,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["match.params",{"_index":2899,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["match.params.ts",{"_index":4572,"title":{},"body":{"classes/UpdateMatchParams.html":{}}}],["match.params.ts:7",{"_index":4574,"title":{},"body":{"classes/UpdateMatchParams.html":{}}}],["match.response",{"_index":2902,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["match.response.ts",{"_index":4668,"title":{},"body":{"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["match.response.ts:19",{"_index":4698,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:22",{"_index":4694,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:25",{"_index":4692,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:28",{"_index":4693,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:34",{"_index":4696,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:40",{"_index":4695,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match.response.ts:43",{"_index":4669,"title":{},"body":{"classes/UserMatchListResponse.html":{}}}],["match.response.ts:7",{"_index":4691,"title":{},"body":{"classes/UserMatchResponse.html":{}}}],["match_matchedby",{"_index":2633,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserScope.html":{}}}],["match_userid",{"_index":2630,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"injectables/UserRepo.html":{}}}],["matchcreator",{"_index":2570,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserMatchMapper.html":{},"injectables/UserImportUc.html":{},"classes/UserMatchMapper.html":{},"miscellaneous/enumerations.html":{}}}],["matchcreator.auto",{"_index":3075,"title":{},"body":{"classes/ImportUserMatchMapper.html":{}}}],["matchcreator.manual",{"_index":3073,"title":{},"body":{"classes/ImportUserMatchMapper.html":{},"injectables/UserImportUc.html":{}}}],["matchcreatorresponse",{"_index":3065,"title":{},"body":{"classes/ImportUserMatchMapper.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{}}}],["matchcreatorresponse.auto",{"_index":3076,"title":{},"body":{"classes/ImportUserMatchMapper.html":{}}}],["matchcreatorresponse.manual",{"_index":3074,"title":{},"body":{"classes/ImportUserMatchMapper.html":{}}}],["matchcreatorscope",{"_index":2643,"title":{},"body":{"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"classes/ImportUserMatchMapper.html":{},"classes/ImportUserScope.html":{},"miscellaneous/enumerations.html":{}}}],["matchcreatorscope.auto",{"_index":3067,"title":{},"body":{"classes/ImportUserMatchMapper.html":{},"classes/ImportUserScope.html":{}}}],["matchcreatorscope.manual",{"_index":3069,"title":{},"body":{"classes/ImportUserMatchMapper.html":{},"classes/ImportUserScope.html":{}}}],["matchcreatorscope.none",{"_index":3071,"title":{},"body":{"classes/ImportUserMatchMapper.html":{},"classes/ImportUserScope.html":{}}}],["matched",{"_index":842,"title":{},"body":{"classes/BusinessError.html":{},"classes/ImportUserFactory.html":{},"injectables/ImportUserRepo.html":{},"injectables/UserImportUc.html":{}}}],["matched(matchedby",{"_index":2941,"title":{},"body":{"classes/ImportUserFactory.html":{}}}],["matchedby",{"_index":2568,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{}}}],["matches",{"_index":2619,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"entities/ImportUser.html":{},"classes/ImportUserScope.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["matches.length",{"_index":2622,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["matches[1",{"_index":2623,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["matchfilterquery",{"_index":2967,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/ImportUserMatchMapper.html":{},"miscellaneous/enumerations.html":{}}}],["matchfilterquery.auto",{"_index":3066,"title":{},"body":{"classes/ImportUserMatchMapper.html":{}}}],["matchfilterquery.manual",{"_index":3068,"title":{},"body":{"classes/ImportUserMatchMapper.html":{}}}],["matchfilterquery.none",{"_index":3070,"title":{},"body":{"classes/ImportUserMatchMapper.html":{}}}],["matching",{"_index":173,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":5313,"title":{},"body":{"license.html":{}}}],["materially",{"_index":5502,"title":{},"body":{"license.html":{}}}],["math.floor(index",{"_index":1401,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["matrix",{"_index":6324,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":6317,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":6391,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":3805,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["max(100",{"_index":3807,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":3798,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":784,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["maxworkers",{"_index":6017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":3453,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":5850,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":4608,"title":{},"body":{"controllers/UserController.html":{}}}],["me(authtoken",{"_index":75,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["me(currentuser",{"_index":4602,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":5551,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":5088,"title":{},"body":{"index.html":{}}}],["means",{"_index":5026,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":5333,"title":{},"body":{"license.html":{}}}],["measures",{"_index":5029,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechanisms",{"_index":6480,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":5358,"title":{},"body":{"license.html":{}}}],["meet",{"_index":5371,"title":{},"body":{"license.html":{}}}],["meets",{"_index":5245,"title":{},"body":{"license.html":{}}}],["member",{"_index":50,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/FeathersAuthProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["members",{"_index":110,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["memory",{"_index":3435,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":5242,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":5723,"title":{},"body":{"license.html":{}}}],["mere",{"_index":5225,"title":{},"body":{"license.html":{}}}],["merge",{"_index":5092,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mergeelementintoposition",{"_index":1302,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["mergeelementintoposition(element",{"_index":1336,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["merging",{"_index":5603,"title":{},"body":{"license.html":{}}}],["message",{"_index":84,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":6347,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["met",{"_index":5300,"title":{},"body":{"license.html":{}}}],["meta",{"_index":6887,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":1527,"title":{},"body":{"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["metadata.type",{"_index":1607,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["method",{"_index":2195,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/PermissionService.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":182,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metrics",{"_index":4881,"title":{},"body":{"dependencies.html":{}}}],["microservice",{"_index":6327,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":6256,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":5018,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":4846,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":6326,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":3087,"title":{},"body":{"modules/ImportUserModule.html":{},"modules/NewsModule.html":{}}}],["migrations/scheduled",{"_index":3651,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":361,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"entities/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"entities/System.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":3442,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm.init",{"_index":6066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikroorm/asynclocalstorage",{"_index":5840,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":3464,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":3466,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":3467,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":3413,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":3424,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":3448,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":3462,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports.length",{"_index":3463,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports[0",{"_index":3465,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmoduleasyncoptions",{"_index":3443,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":3459,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":4555,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":240,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":3498,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(0",{"_index":3499,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(1",{"_index":3806,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":6404,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":3797,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minus",{"_index":3490,"title":{},"body":{"classes/MongoPatterns.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":6908,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":4921,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":5532,"title":{},"body":{"license.html":{}}}],["missed",{"_index":2825,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["missing",{"_index":2212,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":3715,"title":{},"body":{"classes/NewsScope.html":{}}}],["missmatches",{"_index":4354,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["mix",{"_index":6236,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":4847,"title":{},"body":{"dependencies.html":{}}}],["mkdir",{"_index":2312,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdir(folderpath",{"_index":2317,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp",{"_index":2313,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp(dirpath",{"_index":2321,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mocha",{"_index":5993,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mocha's",{"_index":6732,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":6792,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":6780,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":6782,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":5479,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":1245,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modelentity",{"_index":1574,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["modelentity.gridelements.init",{"_index":1600,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.gridelements.isinitialized",{"_index":1599,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.gridelements.remove(el",{"_index":1637,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.references.loaditems",{"_index":1592,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.title",{"_index":1598,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.user.id",{"_index":1606,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.xpos",{"_index":1595,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["modelentity.ypos",{"_index":1596,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["models",{"_index":3782,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":5186,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":5249,"title":{},"body":{"license.html":{}}}],["modified",{"_index":5169,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":5376,"title":{},"body":{"license.html":{}}}],["modify",{"_index":5153,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":5215,"title":{},"body":{"license.html":{}}}],["modularization",{"_index":6081,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["modularize",{"_index":2088,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["module",{"_index":257,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"injectables/PermissionService.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"modules/ValidationModule.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":6856,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":6860,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":6858,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":6824,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":6823,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":6001,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":6775,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":6545,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":6540,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":5983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":6013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":3444,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":6791,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":6790,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":259,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":4023,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":6552,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":6550,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":6551,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/files/files.module",{"_index":4003,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["modules/management/management.module",{"_index":4002,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["modules/user",{"_index":4026,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["moment",{"_index":4849,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":813,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongo.ensureinstance",{"_index":3451,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongo.geturi",{"_index":3452,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongo.patterns",{"_index":3178,"title":{},"body":{"classes/ImportUserScope.html":{},"injectables/UserRepo.html":{}}}],["mongod",{"_index":3471,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["mongodatabasemoduleoptions",{"_index":3438,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":472,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/TaskRepo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongodriver",{"_index":4712,"title":{},"body":{"injectables/UserRepo.html":{}}}],["mongoexport",{"_index":1842,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongoimport",{"_index":1868,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongomemorydatabasemodule",{"_index":3433,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":4048,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":3445,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongomemoryserver.create",{"_index":3450,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":4040,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["mongopatterns",{"_index":3177,"title":{"classes/MongoPatterns.html":{}},"body":{"classes/ImportUserScope.html":{},"classes/MongoPatterns.html":{},"injectables/UserRepo.html":{}}}],["monitoring",{"_index":6359,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":4867,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":5043,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":5573,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":6700,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mount",{"_index":5020,"title":{},"body":{"index.html":{}}}],["mounted",{"_index":5011,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mounts",{"_index":5820,"title":{},"body":{"todo.html":{}}}],["move",{"_index":597,"title":{},"body":{"interfaces/Board.html":{},"injectables/PermissionService.html":{},"injectables/RoomsUc.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moveelement",{"_index":1256,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{}}}],["moveelement(dashboardid",{"_index":1259,"title":{},"body":{"controllers/DashboardController.html":{}}}],["moveelement(from",{"_index":1338,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["moveelementondashboard",{"_index":1675,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementondashboard(dashboardid",{"_index":1681,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementparams",{"_index":1260,"title":{"classes/MoveElementParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["moveelementposition",{"_index":3492,"title":{"classes/MoveElementPosition.html":{}},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["ms",{"_index":1976,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":2410,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":6380,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":6240,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":2487,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":6278,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":6280,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":579,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["name",{"_index":114,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["name.mapper",{"_index":3018,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["name.mapper.ts",{"_index":3908,"title":{},"body":{"classes/RoleNameMapper.html":{}}}],["name.mapper.ts:12",{"_index":3911,"title":{},"body":{"classes/RoleNameMapper.html":{}}}],["name.mapper.ts:5",{"_index":3913,"title":{},"body":{"classes/RoleNameMapper.html":{}}}],["name.response",{"_index":2989,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["name.response.ts",{"_index":4930,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["named",{"_index":5085,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nameonly",{"_index":1816,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["names",{"_index":1844,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/ImportUserListResponse.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"controllers/NewsController.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":5868,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":4869,"title":{},"body":{"dependencies.html":{}}}],["native",{"_index":4890,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":5389,"title":{},"body":{"license.html":{}}}],["ne",{"_index":4443,"title":{},"body":{"classes/TaskScope.html":{}}}],["necessary",{"_index":5730,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":2810,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":4493,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neededpermission",{"_index":4152,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["needs",{"_index":6257,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":2434,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":5857,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":6101,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":6106,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console",{"_index":6127,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console:dev",{"_index":6128,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:build",{"_index":6120,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":6123,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":6139,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":6142,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":6100,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":6109,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":6114,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":6111,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":6117,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":5988,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":6135,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":6136,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":6138,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":5990,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":5989,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":6137,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":3841,"title":{},"body":{"injectables/PermissionService.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestexpress.set('feathersapp",{"_index":2216,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["nestinterceptor",{"_index":1971,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":868,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":6161,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":19,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserMapper.html":{},"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserImportUc.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1974,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":4772,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4774,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":663,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserSortingQuery.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"controllers/RoomsController.html":{},"classes/SchoolInfoResponse.html":{},"classes/SortingQuery.html":{},"classes/TargetInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserFilterQuery.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":1973,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{}}}],["nestjs/testing.test",{"_index":6781,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["net",{"_index":5039,"title":{},"body":{"index.html":{}}}],["network",{"_index":5122,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":6392,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":2151,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":149,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseMapper.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Submission.html":{},"classes/TargetInfoMapper.html":{},"entities/Task.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"entities/User.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newelement",{"_index":1442,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["newfactory",{"_index":489,"title":{},"body":{"classes/BaseFactory.html":{}}}],["newgroupname",{"_index":1393,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["newly",{"_index":6598,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["newpropsfactory",{"_index":487,"title":{},"body":{"classes/BaseFactory.html":{}}}],["newrooms",{"_index":1420,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["newrooms.foreach((room",{"_index":1422,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["news",{"_index":1118,"title":{"entities/News.html":{}},"body":{"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":3614,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.controller",{"_index":3646,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.controller.ts",{"_index":4518,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.controller.ts:22",{"_index":4522,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.createdat",{"_index":3620,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":3760,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":3615,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":3612,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":1226,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":4583,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":1247,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":1230,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:28",{"_index":4582,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:29",{"_index":1238,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:37",{"_index":1246,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:44",{"_index":1241,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":3622,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":3616,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":3617,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":3618,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.targetmodel",{"_index":3619,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":3613,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updatedat",{"_index":3621,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":3623,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news[key",{"_index":3779,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":6564,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":6569,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":3650,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":3758,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":3753,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":3583,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":3585,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["news_view",{"_index":3752,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":3518,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["newscount",{"_index":3767,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsentities",{"_index":3675,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentities.filter((news",{"_index":3681,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentity",{"_index":3672,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsfilterquery",{"_index":3528,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{}}}],["newsid",{"_index":3526,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":3553,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.length",{"_index":3772,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":3556,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.map(async",{"_index":3769,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslistresponse",{"_index":3542,"title":{"classes/NewsListResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslistresponse(dtolist",{"_index":3557,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper",{"_index":3544,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":3551,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":3555,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":3552,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":3562,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":3635,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["newsrepo",{"_index":3640,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":3543,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{}}}],["newsscope",{"_index":3667,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{}}}],["newstarget",{"_index":1109,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"entities/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":3658,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["newstargetmodel",{"_index":310,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":1147,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":330,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":1150,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["newsuc",{"_index":3540,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":3776,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":3765,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newvar",{"_index":160,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["next",{"_index":45,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"entities/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/ImportUserFactory.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserFactory.html":{},"injectables/UserRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":4559,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":2062,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["node",{"_index":2324,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":5006,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["node_env=test",{"_index":4047,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["nodejs",{"_index":6456,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":4864,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":4866,"title":{},"body":{"dependencies.html":{}}}],["nofutureavailabledate",{"_index":624,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["non",{"_index":2094,"title":{},"body":{"classes/EncryptedStringType.html":{},"classes/MongoPatterns.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":5426,"title":{},"body":{"license.html":{}}}],["none",{"_index":2645,"title":{},"body":{"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"classes/ImportUserFilterQuery.html":{},"miscellaneous/enumerations.html":{}}}],["nonemptytargets",{"_index":3787,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":5262,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":5456,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":6056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":5939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notation",{"_index":500,"title":{},"body":{"classes/BaseFactory.html":{}}}],["note",{"_index":368,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{}}}],["notfinished",{"_index":4506,"title":{},"body":{"injectables/TaskUC.html":{}}}],["notfound",{"_index":1687,"title":{},"body":{"injectables/DashboardUc.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":1349,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["notfoundexception('no",{"_index":1413,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["notfoundexception(`the",{"_index":3430,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["nothing",{"_index":5586,"title":{},"body":{"license.html":{}}}],["notice",{"_index":5236,"title":{},"body":{"license.html":{}}}],["notices",{"_index":5232,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":5574,"title":{},"body":{"license.html":{}}}],["notify",{"_index":5571,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":5519,"title":{},"body":{"license.html":{}}}],["nountildate",{"_index":1175,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["november",{"_index":5101,"title":{},"body":{"license.html":{}}}],["now",{"_index":1174,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsScope.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now.getfullyear()}_",{"_index":1888,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now.getmonth",{"_index":1889,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now}ms",{"_index":2064,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":5812,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":2093,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"injectables/NewsUc.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"injectables/UserImportUc.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"miscellaneous/functions.html":{}}}],["nullable",{"_index":2631,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["nullish",{"_index":2092,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["number",{"_index":37,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IPagination.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"interfaces/JwtPayload.html":{},"classes/LessonFactory.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/UserFactory.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":5712,"title":{},"body":{"license.html":{}}}],["numberoffiles",{"_index":2026,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["numberofstudents",{"_index":2803,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["numbers",{"_index":3488,"title":{},"body":{"classes/MongoPatterns.html":{},"miscellaneous/typealiases.html":{}}}],["nuxt",{"_index":6350,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":6082,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["o",{"_index":1738,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["oauth",{"_index":4871,"title":{},"body":{"dependencies.html":{}}}],["oauth2",{"_index":4802,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":431,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(entity",{"_index":485,"title":{},"body":{"classes/BaseFactory.html":{}}}],["object.assign(this",{"_index":1137,"title":{},"body":{"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/TeamNews.html":{}}}],["object.entries(params",{"_index":3778,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.setprototypeof(this",{"_index":57,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["object.values(constraint",{"_index":234,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":1252,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":354,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/CourseGroup.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/UserRepo.html":{}}}],["objectid().tohexstring",{"_index":6054,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objectid().tostring",{"_index":1659,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["objectid(id",{"_index":486,"title":{},"body":{"classes/BaseFactory.html":{}}}],["objectid.createfromhexstring(id",{"_index":1479,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["objectid.createfromhexstring(props.id",{"_index":1487,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["objectid.isvalid(id",{"_index":3109,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["objectid.isvalid(schoolid",{"_index":3180,"title":{},"body":{"classes/ImportUserScope.html":{},"injectables/UserRepo.html":{}}}],["objectid.isvalid(userid",{"_index":3182,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["objectid.isvalid(value",{"_index":3824,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":810,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":5690,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":5440,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":5335,"title":{},"body":{"license.html":{}}}],["observable",{"_index":2055,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obviously",{"_index":6307,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":5425,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":2412,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":5583,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":5487,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["odered",{"_index":3735,"title":{},"body":{"injectables/NewsUc.html":{}}}],["of.ts",{"_index":5896,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":5150,"title":{},"body":{"license.html":{}}}],["offered",{"_index":5446,"title":{},"body":{"license.html":{}}}],["offering",{"_index":5429,"title":{},"body":{"license.html":{}}}],["offers",{"_index":6125,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["official",{"_index":5251,"title":{},"body":{"license.html":{}}}],["offset",{"_index":1187,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/ImportUserRepo.html":{},"injectables/TaskRepo.html":{}}}],["ok/err",{"_index":6627,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":6711,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":5037,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":5176,"title":{},"body":{"license.html":{}}}],["omit",{"_index":3385,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":6184,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":339,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["oneday",{"_index":1026,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["ones",{"_index":6537,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onetomany",{"_index":1472,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["onetomany('dashboardgridelementmodel",{"_index":1492,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["onetomany('submission",{"_index":2755,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["oneweekago",{"_index":4510,"title":{},"body":{"injectables/TaskUC.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":4511,"title":{},"body":{"injectables/TaskUC.html":{}}}],["onlyactivecourses",{"_index":1180,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardUc.html":{}}}],["onlyreadcourses",{"_index":4192,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["onlywritecoursesids",{"_index":4191,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["onmoduledestroy",{"_index":3440,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":6295,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":392,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":6816,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":4826,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opencourseids",{"_index":4315,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["opencourses",{"_index":4503,"title":{},"body":{"injectables/TaskUC.html":{}}}],["opencourses.map((c",{"_index":4508,"title":{},"body":{"injectables/TaskUC.html":{}}}],["opened",{"_index":6115,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":5747,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":5433,"title":{},"body":{"license.html":{}}}],["operates",{"_index":6697,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":5271,"title":{},"body":{"license.html":{}}}],["operation",{"_index":5354,"title":{},"body":{"license.html":{}}}],["operations",{"_index":6367,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":3972,"title":{},"body":{"classes/Scope.html":{},"license.html":{}}}],["opportunity",{"_index":5697,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":6889,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":5841,"title":{},"body":{"todo.html":{}}}],["optimization",{"_index":6577,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":6895,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":3461,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":190,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerTestModule.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":6687,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":1864,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":72,"title":{"interfaces/Options.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/DatabaseManagementConsole.html":{},"modules/EncryptionModule.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"classes/LessonFactory.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.collection",{"_index":1733,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options.exchange",{"_index":3389,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options.order",{"_index":2917,"title":{},"body":{"controllers/ImportUserController.html":{},"injectables/NewsUc.html":{}}}],["options.routingkey",{"_index":3394,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["options.symmetriccipherkey",{"_index":2113,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["options.ts",{"_index":2550,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.uri",{"_index":3391,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options?.collection",{"_index":1732,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options?.override",{"_index":1741,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["ora",{"_index":869,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["ora.ora",{"_index":865,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["order",{"_index":1185,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/UserRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["order.firstname",{"_index":4737,"title":{},"body":{"injectables/UserRepo.html":{}}}],["order.lastname",{"_index":4741,"title":{},"body":{"injectables/UserRepo.html":{}}}],["orderby",{"_index":1190,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["orderby(bsondocuments",{"_index":1954,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["orderquery",{"_index":4736,"title":{},"body":{"injectables/UserRepo.html":{}}}],["orderquery.firstname",{"_index":4738,"title":{},"body":{"injectables/UserRepo.html":{}}}],["orderquery.lastname",{"_index":4742,"title":{},"body":{"injectables/UserRepo.html":{}}}],["organization",{"_index":5599,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":5198,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":6186,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":5533,"title":{},"body":{"license.html":{}}}],["original",{"_index":5534,"title":{},"body":{"license.html":{}}}],["orm",{"_index":3469,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":6068,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":6172,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":362,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"injectables/ImportUserRepo.html":{},"entities/Lesson.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"entities/System.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":3666,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":6798,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":6620,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":363,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"injectables/LessonRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":3414,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{}}}],["os",{"_index":2281,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["os.eol",{"_index":2315,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["others",{"_index":2483,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":3458,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":6528,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DeleteFilesUc.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"license.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":6721,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outdated",{"_index":5823,"title":{},"body":{"todo.html":{}}}],["outgoing",{"_index":6383,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":3988,"title":{},"body":{"classes/ServerConsole.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outside",{"_index":1399,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":4355,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":6841,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":6272,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":6680,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":1726,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":6847,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":6855,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":2115,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":891,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":5898,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":5790,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":6786,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":5628,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":6227,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":3590,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":4299,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["p",{"_index":6089,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["package",{"_index":4760,"title":{"dependencies.html":{}},"body":{"todo.html":{}}}],["packaged",{"_index":5382,"title":{},"body":{"license.html":{}}}],["packages",{"_index":5813,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":5263,"title":{},"body":{"license.html":{}}}],["page",{"_index":3796,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":3802,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":2167,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":1184,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"controllers/ImportUserController.html":{},"injectables/ImportUserRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":6499,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination?.limit",{"_index":1189,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/ImportUserRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["pagination?.skip",{"_index":1188,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/ImportUserRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["pagination].query.ts",{"_index":6566,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":983,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/CourseController.html":{},"injectables/CourseUc.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":1075,"title":{"classes/PaginationResponse.html":{}},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["paginationresponse:136",{"_index":3578,"title":{},"body":{"classes/NewsListResponse.html":{}}}],["paginationresponse:14",{"_index":1082,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{},"classes/UserMatchListResponse.html":{}}}],["paginationresponse:17",{"_index":1081,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{},"classes/UserMatchListResponse.html":{}}}],["paginationresponse:20",{"_index":1080,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{},"classes/UserMatchListResponse.html":{}}}],["paginationresponse:50",{"_index":4670,"title":{},"body":{"classes/UserMatchListResponse.html":{}}}],["paginationresponse:59",{"_index":4255,"title":{},"body":{"classes/TaskListResponse.html":{}}}],["paginationresponse:61",{"_index":1079,"title":{},"body":{"classes/CourseMetadataListResponse.html":{}}}],["paginationresponse:68",{"_index":2985,"title":{},"body":{"classes/ImportUserListResponse.html":{}}}],["papaparse",{"_index":4874,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":5775,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":5561,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":5639,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":6795,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param",{"_index":329,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BsonConverter.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/ImportUserController.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/PermissionService.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"injectables/UserImportUc.html":{}}}],["param('id",{"_index":1280,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{}}}],["param('teamid",{"_index":4525,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":6771,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":6769,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":6498,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paramdisplayat",{"_index":3759,"title":{},"body":{"injectables/NewsUc.html":{}}}],["parameter",{"_index":2811,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"controllers/NewsController.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":189,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":416,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params(params",{"_index":464,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["params.content",{"_index":3631,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.course",{"_index":3328,"title":{},"body":{"classes/LessonFactory.html":{},"miscellaneous/variables.html":{}}}],["params.displayat",{"_index":3632,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.flagged",{"_index":2931,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["params.from",{"_index":1282,"title":{},"body":{"controllers/DashboardController.html":{}}}],["params.school",{"_index":1034,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["params.target",{"_index":3756,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":3634,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":3633,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":1288,"title":{},"body":{"controllers/DashboardController.html":{},"classes/NewsMapper.html":{}}}],["params.to",{"_index":1283,"title":{},"body":{"controllers/DashboardController.html":{}}}],["params.userid",{"_index":2927,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["params?.school",{"_index":1033,"title":{},"body":{"classes/CourseFactory.html":{},"miscellaneous/variables.html":{}}}],["param|query].ts",{"_index":6497,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":2797,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{}}}],["parentids",{"_index":4300,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.courseids",{"_index":4372,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.creatorid",{"_index":4370,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.lessonids",{"_index":4374,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope",{"_index":4369,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bycourseids(parentids.courseids",{"_index":4373,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bylessonids(parentids.lessonids",{"_index":4375,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.byonlycreatorid(parentids.creatorid",{"_index":4371,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parents",{"_index":2802,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parentsfinished",{"_index":4323,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsfinished.bycourseids(parentids.finishedcourseids",{"_index":4324,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsfinished.bylessonids(parentids.lessonidsoffinishedcourses",{"_index":4325,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsopen",{"_index":4320,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsopen.bycourseids(parentids.opencourseids",{"_index":4321,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentsopen.bylessonids(parentids.lessonidsofopencourses",{"_index":4322,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parse",{"_index":6546,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":6563,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":1270,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":4795,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":6418,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":2826,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ImportUserScope.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":440,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialfilterexpression",{"_index":2632,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["partialtype",{"_index":4576,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":5255,"title":{},"body":{"license.html":{}}}],["parties",{"_index":5224,"title":{},"body":{"license.html":{}}}],["parts",{"_index":5293,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":5434,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":5604,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":6529,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":2480,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/TaskAuthorizationService.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":442,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":3272,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":3274,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":3276,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":118,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["past",{"_index":1120,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["patch",{"_index":1269,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{}}}],["patch(':id",{"_index":3538,"title":{},"body":{"controllers/NewsController.html":{}}}],["patch(':id/element",{"_index":1267,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patch(':id/finish",{"_index":4219,"title":{},"body":{"controllers/TaskController.html":{}}}],["patch(':id/flag",{"_index":2891,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["patch(':id/match",{"_index":2887,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["patch(':id/moveelement",{"_index":1261,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patch(':id/restore",{"_index":4223,"title":{},"body":{"controllers/TaskController.html":{}}}],["patchgroup",{"_index":1257,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroup(dashboardid",{"_index":1264,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroupparams",{"_index":1266,"title":{"classes/PatchGroupParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/PatchGroupParams.html":{}}}],["patching",{"_index":3827,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["patent",{"_index":5560,"title":{},"body":{"license.html":{}}}],["patents",{"_index":5623,"title":{},"body":{"license.html":{}}}],["path",{"_index":1870,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":6014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.join(...paths",{"_index":2328,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["paths",{"_index":1855,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":689,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pattern_login_from_dn",{"_index":2615,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["payload",{"_index":3269,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":3262,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["payment",{"_index":5669,"title":{},"body":{"license.html":{}}}],["peer",{"_index":5442,"title":{},"body":{"license.html":{}}}],["peers",{"_index":5445,"title":{},"body":{"license.html":{}}}],["per",{"_index":6513,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":4362,"title":{},"body":{"injectables/TaskRepo.html":{},"license.html":{}}}],["performing",{"_index":5281,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":5569,"title":{},"body":{"license.html":{}}}],["permission",{"_index":340,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"entities/TeamNews.html":{},"injectables/UserImportUc.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":3792,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permission.some((p",{"_index":4206,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permissions",{"_index":312,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"entities/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"entities/TeamNews.html":{},"controllers/UserController.html":{},"injectables/UserImportUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":345,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":3791,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.includes(p",{"_index":4207,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permissions.includes(permission",{"_index":4208,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permissions.length",{"_index":336,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissionservice",{"_index":3082,"title":{"injectables/PermissionService.html":{}},"body":{"modules/ImportUserModule.html":{},"injectables/PermissionService.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"controllers/UserController.html":{},"injectables/UserImportUc.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["permissive",{"_index":5364,"title":{},"body":{"license.html":{}}}],["permit",{"_index":5398,"title":{},"body":{"license.html":{}}}],["permits",{"_index":5168,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":5110,"title":{},"body":{"license.html":{}}}],["permittedcourses",{"_index":4175,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permittedlessons",{"_index":4197,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permittedmatch",{"_index":4715,"title":{},"body":{"injectables/UserRepo.html":{}}}],["perpetuity",{"_index":5492,"title":{},"body":{"license.html":{}}}],["persist",{"_index":544,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist(entity",{"_index":557,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persist/make",{"_index":6583,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistall",{"_index":545,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistall(entities",{"_index":559,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistallandflush",{"_index":546,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistallandflush(entities",{"_index":561,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistandflush",{"_index":547,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistandflush(entity",{"_index":563,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persisted",{"_index":576,"title":{},"body":{"injectables/BaseRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":6586,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["persistent",{"_index":3407,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":6678,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":6715,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":5455,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":5688,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":6597,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":5408,"title":{},"body":{"license.html":{}}}],["physically",{"_index":5423,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":5140,"title":{},"body":{"license.html":{}}}],["pin",{"_index":6643,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pipe",{"_index":146,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":4758,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":4724,"title":{},"body":{"injectables/UserRepo.html":{}}}],["pipeline.push",{"_index":4743,"title":{},"body":{"injectables/UserRepo.html":{}}}],["pipes",{"_index":6516,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":3822,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["place",{"_index":4494,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["plain",{"_index":811,"title":{},"body":{"injectables/BsonConverter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plaintextcontent",{"_index":250,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":248,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["platform",{"_index":2079,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["please",{"_index":3843,"title":{},"body":{"injectables/PermissionService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":4820,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":5608,"title":{},"body":{"license.html":{}}}],["point",{"_index":1232,"title":{},"body":{"classes/CreateNewsParams.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":5770,"title":{},"body":{"license.html":{}}}],["policy",{"_index":6574,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pool",{"_index":4909,"title":{},"body":{"dependencies.html":{}}}],["populate",{"_index":3678,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/PermissionService.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":1127,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["populateroles",{"_index":4704,"title":{},"body":{"injectables/UserRepo.html":{}}}],["populateroles(roles",{"_index":4709,"title":{},"body":{"injectables/UserRepo.html":{}}}],["port",{"_index":6095,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":5449,"title":{},"body":{"license.html":{}}}],["pos",{"_index":1335,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["pos.x",{"_index":1396,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["pos.y",{"_index":1400,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["position",{"_index":1323,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["position.groupindex",{"_index":1448,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["position.x",{"_index":1539,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["position.y",{"_index":1540,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["positionfromgridindex",{"_index":1303,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["positionfromgridindex(index",{"_index":1340,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["possesses",{"_index":5420,"title":{},"body":{"license.html":{}}}],["possession",{"_index":5380,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":5749,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":5036,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1761,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post('export",{"_index":1754,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('export/:collectionname",{"_index":1751,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('seed/:collectionname",{"_index":1757,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post(`${this.options.uri}${path",{"_index":154,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["post(`${this.options.uri}/api/v1/login",{"_index":161,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["post(path",{"_index":153,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["postasadmin(path",{"_index":126,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["povider",{"_index":5834,"title":{},"body":{"todo.html":{}}}],["power",{"_index":5347,"title":{},"body":{"license.html":{}}}],["pr",{"_index":5055,"title":{},"body":{"index.html":{}}}],["practical",{"_index":5124,"title":{},"body":{"license.html":{}}}],["practice",{"_index":5643,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":6875,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":5839,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":5115,"title":{},"body":{"license.html":{}}}],["precise",{"_index":5182,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":5000,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":5605,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":6681,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":6730,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":5247,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":979,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"index.html":{},"todo.html":{}}}],["preloaded",{"_index":6907,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":6906,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prepare",{"_index":3361,"title":{},"body":{"injectables/Logger.html":{}}}],["prepended",{"_index":5034,"title":{},"body":{"index.html":{}}}],["present",{"_index":5704,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["presentation",{"_index":6243,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":5240,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":5529,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":6146,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["prevent",{"_index":384,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["prevented",{"_index":5485,"title":{},"body":{"license.html":{}}}],["previous",{"_index":5607,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":5135,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":5671,"title":{},"body":{"license.html":{}}}],["primarykey",{"_index":356,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["primaryrolesearchoperation",{"_index":2673,"title":{},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["principle",{"_index":6794,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":6185,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":6629,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["prior",{"_index":2021,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"license.html":{}}}],["prisma",{"_index":6891,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["private",{"_index":35,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/Board.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"injectables/JwtStrategy.html":{},"classes/LessonScope.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["privatedevice",{"_index":3306,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["problem",{"_index":5069,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":5708,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedures",{"_index":5481,"title":{},"body":{"license.html":{}}}],["process",{"_index":6385,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":6473,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":6412,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":6293,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":5661,"title":{},"body":{"license.html":{}}}],["produce",{"_index":5273,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":6675,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":5409,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":4013,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":5672,"title":{},"body":{"license.html":{}}}],["program",{"_index":5131,"title":{},"body":{"license.html":{}}}],["program's",{"_index":5357,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":5782,"title":{},"body":{"license.html":{}}}],["programming",{"_index":5256,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":5141,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":5317,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":5344,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":5666,"title":{},"body":{"license.html":{}}}],["project",{"_index":4729,"title":{},"body":{"injectables/UserRepo.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":4878,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":4880,"title":{},"body":{"dependencies.html":{}}}],["prominent",{"_index":5243,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":5235,"title":{},"body":{"license.html":{}}}],["promise",{"_index":77,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"controllers/CourseController.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"controllers/ImportUserController.html":{},"injectables/ImportUserRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":1977,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1601,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/variables.html":{}}}],["promise.all([this.userrepo.findbyid(userid",{"_index":4497,"title":{},"body":{"injectables/TaskUC.html":{}}}],["promise.all(gridelement.getreferences().map((ref",{"_index":1627,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["promise.all(referencemodels.map((ref",{"_index":1593,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["promise.resolve",{"_index":2327,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["promises",{"_index":2306,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":4819,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":5206,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":5590,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":5216,"title":{},"body":{"license.html":{}}}],["properly",{"_index":4984,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusResponse.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"entities/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["properties)mongodb",{"_index":6888,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["propertiestopopulate",{"_index":2345,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{}}}],["property",{"_index":360,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/BaseFile.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["property()@index({name",{"_index":3902,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["property({fieldname",{"_index":4061,"title":{},"body":{"entities/StorageProvider.html":{}}}],["property({onupdate",{"_index":399,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{}}}],["property({type",{"_index":2849,"title":{},"body":{"entities/ImportUser.html":{}}}],["propertydecorator",{"_index":4985,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":477,"title":{},"body":{"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/ImportUserResponse.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/TeamNews.html":{},"classes/UserMatchResponse.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.accesskeyid",{"_index":2691,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["props.alias",{"_index":2740,"title":{},"body":{"interfaces/ISystemProperties.html":{},"entities/System.html":{}}}],["props.availabledate",{"_index":2759,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.bucket",{"_index":536,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.classnames",{"_index":2997,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["props.classnames.length",{"_index":2602,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["props.color",{"_index":967,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.colums",{"_index":1402,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["props.comment",{"_index":2721,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.content",{"_index":1134,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.course",{"_index":1047,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.creator",{"_index":540,"title":{},"body":{"entities/BaseFile.html":{},"entities/CourseNews.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{}}}],["props.deletedat",{"_index":532,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.description",{"_index":957,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.displayat",{"_index":1136,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.duedate",{"_index":2761,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.email",{"_index":2597,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/User.html":{}}}],["props.endpointurl",{"_index":2689,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["props.externalid",{"_index":1141,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.firstname",{"_index":2593,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/User.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["props.flagged",{"_index":2607,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["props.grade",{"_index":2725,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.gradecomment",{"_index":2727,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.grid.foreach((element",{"_index":1404,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["props.gridelements",{"_index":1490,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["props.hidden",{"_index":2652,"title":{},"body":{"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{}}}],["props.id",{"_index":1375,"title":{},"body":{"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{}}}],["props.importuserid",{"_index":2991,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["props.lastname",{"_index":2595,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/User.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["props.ldapdn",{"_index":2589,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["props.ldapid",{"_index":2591,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["props.lesson",{"_index":2765,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.loginname",{"_index":2993,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["props.match",{"_index":2998,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["props.matchedby",{"_index":2605,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["props.name",{"_index":956,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"entities/Lesson.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{}}}],["props.permissions",{"_index":2676,"title":{},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["props.private",{"_index":2762,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["props.references.sort(this.sortreferences",{"_index":1377,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["props.region",{"_index":2695,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["props.rolenames",{"_index":2995,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["props.rolenames.length",{"_index":2599,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["props.roles",{"_index":2678,"title":{},"body":{"interfaces/IRoleProperties.html":{},"entities/Role.html":{}}}],["props.school",{"_index":960,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{}}}],["props.secretaccesskey",{"_index":2693,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["props.source",{"_index":1143,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.sourcedescription",{"_index":1145,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.startdate",{"_index":971,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.storagefilename",{"_index":534,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.storageprovider",{"_index":538,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.student",{"_index":2719,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.students",{"_index":961,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["props.substitutionteachers",{"_index":965,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.target",{"_index":1139,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.task",{"_index":2723,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["props.teachers",{"_index":963,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.title",{"_index":1133,"title":{},"body":{"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.type",{"_index":2737,"title":{},"body":{"interfaces/ISystemProperties.html":{},"entities/System.html":{}}}],["props.untildate",{"_index":969,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.updater",{"_index":1138,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["props.url",{"_index":2738,"title":{},"body":{"interfaces/ISystemProperties.html":{},"entities/System.html":{}}}],["props.user",{"_index":2604,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["props.userid",{"_index":1408,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["propsfactory",{"_index":408,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["protect",{"_index":5145,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":407,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserFactory.html":{}}}],["protecting",{"_index":5326,"title":{},"body":{"license.html":{}}}],["protection",{"_index":5369,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":6178,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":5507,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prototype",{"_index":55,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["prove",{"_index":5727,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":1984,"title":{},"body":{"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/RocketChatModule.html":{},"modules/ValidationModule.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":325,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":3364,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/RocketChatModule.html":{},"modules/ServerConsoleModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provides",{"_index":3359,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":889,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":5520,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":5566,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":5715,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":5717,"title":{},"body":{"license.html":{}}}],["public",{"_index":73,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DelayController.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/ServerController.html":{},"injectables/SymetricKeyEncryptionService.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":5535,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":5174,"title":{},"body":{"license.html":{}}}],["publish",{"_index":5361,"title":{},"body":{"license.html":{},"todo.html":{}}}],["published",{"_index":1237,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"controllers/UserController.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":5054,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["pulled",{"_index":6332,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":4965,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["purposes",{"_index":5459,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":5659,"title":{},"body":{"license.html":{}}}],["put",{"_index":5806,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":6585,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qs",{"_index":4883,"title":{},"body":{"dependencies.html":{}}}],["qualify",{"_index":5579,"title":{},"body":{"license.html":{}}}],["quality",{"_index":5726,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":3208,"title":{},"body":{"classes/ImportUserScope.html":{},"classes/NewsScope.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":3211,"title":{},"body":{"classes/ImportUserScope.html":{},"classes/NewsScope.html":{}}}],["queries/requests",{"_index":6396,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":986,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"classes/LessonScope.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/RoleNameMapper.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"injectables/UserImportUc.html":{},"classes/UserMatchMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query('x",{"_index":1285,"title":{},"body":{"controllers/DashboardController.html":{}}}],["query('y",{"_index":1286,"title":{},"body":{"controllers/DashboardController.html":{}}}],["query.classes",{"_index":3051,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["query.firstname",{"_index":3039,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["query.flagged",{"_index":3056,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["query.lastname",{"_index":3042,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["query.loginname",{"_index":3045,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["query.match",{"_index":3052,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["query.match.map((match",{"_index":3054,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["query.name",{"_index":4679,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["query.role",{"_index":3046,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["query.targetid",{"_index":3628,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":3626,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":3630,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":6562,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["query/empty",{"_index":3977,"title":{},"body":{"classes/Scope.html":{}}}],["queryfiltermatch",{"_index":4716,"title":{},"body":{"injectables/UserRepo.html":{}}}],["queryfiltermatch.$or",{"_index":4722,"title":{},"body":{"injectables/UserRepo.html":{}}}],["queryoptions",{"_index":1186,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/ImportUserRepo.html":{}}}],["queryordermap",{"_index":1166,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["queryordernumeric",{"_index":4711,"title":{},"body":{"injectables/UserRepo.html":{}}}],["queryordernumeric.asc",{"_index":4740,"title":{},"body":{"injectables/UserRepo.html":{}}}],["queryordernumeric.desc",{"_index":4739,"title":{},"body":{"injectables/UserRepo.html":{}}}],["querys",{"_index":4044,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["r.id",{"_index":6053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rabbitmq",{"_index":3379,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["rabbitmq:3.8.9",{"_index":6092,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmq_url",{"_index":6085,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmqmodule",{"_index":3377,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":3387,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmoduleoptions",{"_index":3384,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["random",{"_index":2277,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["rates",{"_index":6361,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["react",{"_index":4821,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":2289,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"controllers/NewsController.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/UserImportUc.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["read/update",{"_index":4940,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["readable",{"_index":5405,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readcourseids",{"_index":4188,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readcourses",{"_index":4183,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readcourses.map((c",{"_index":4189,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readdir",{"_index":2262,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readdir(folderpath",{"_index":2284,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile",{"_index":2263,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile(filepath",{"_index":2287,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readily",{"_index":5648,"title":{},"body":{"license.html":{}}}],["reading",{"_index":5511,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readlessons",{"_index":4194,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["readonly",{"_index":71,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BusinessError.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["ready",{"_index":6613,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":6793,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":936,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["reason",{"_index":5657,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":5421,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":5577,"title":{},"body":{"license.html":{}}}],["receive",{"_index":5138,"title":{},"body":{"license.html":{}}}],["received",{"_index":5385,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":5595,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":5663,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":5491,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":5655,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":253,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":5252,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":6920,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":6915,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":6913,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["record",{"_index":30,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{},"miscellaneous/typealiases.html":{}}}],["recursively",{"_index":2297,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/PermissionService.html":{}}}],["red",{"_index":5832,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":3300,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"dependencies.html":{}}}],["redisidentifier",{"_index":3307,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["redistribute",{"_index":5764,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":6302,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":6428,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":4982,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactor",{"_index":1661,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["refactoring",{"_index":6699,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":6330,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refer",{"_index":6595,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":1126,"title":{},"body":{"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/UpdateMatchParams.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"injectables/UserImportUc.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reference.getmetadata",{"_index":1385,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referenced",{"_index":1129,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"injectables/ImportUserRepo.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["referencedid",{"_index":1363,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referenceforindex",{"_index":1451,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referenceids",{"_index":1467,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["referencemodels",{"_index":1591,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["references",{"_index":1374,"title":{},"body":{"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"modules/ImportUserModule.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["references[position.groupindex",{"_index":1452,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["referring",{"_index":5134,"title":{},"body":{"license.html":{}}}],["refers",{"_index":5188,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":4887,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":6602,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":5692,"title":{},"body":{"license.html":{}}}],["regard",{"_index":5516,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":5030,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":5381,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regenerate",{"_index":5294,"title":{},"body":{"license.html":{}}}],["regex",{"_index":3191,"title":{},"body":{"classes/ImportUserScope.html":{},"classes/MongoPatterns.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{}}}],["regex_mongo_language_pattern_whitelist",{"_index":3480,"title":{},"body":{"classes/MongoPatterns.html":{}}}],["region",{"_index":2243,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["registernewuser(creatorid",{"_index":6635,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["regularfiles",{"_index":2368,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["reimplement",{"_index":6822,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":5565,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":6832,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["related",{"_index":1240,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":6618,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":6900,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":6122,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":2828,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{}}}],["relative",{"_index":1869,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["release",{"_index":6810,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":5180,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":5171,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":5374,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":5181,"title":{},"body":{"license.html":{}}}],["relies",{"_index":6576,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":5849,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":5647,"title":{},"body":{"license.html":{}}}],["remain",{"_index":5439,"title":{},"body":{"license.html":{}}}],["remains",{"_index":5132,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":5694,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":5696,"title":{},"body":{"license.html":{}}}],["removal",{"_index":5517,"title":{},"body":{"license.html":{}}}],["remove",{"_index":548,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/DeleteFilesConsole.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"injectables/ImportUserRepo.html":{},"modules/InterceptorModule.html":{},"classes/MongoPatterns.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/StorageProviderRepo.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove(entity",{"_index":565,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeall",{"_index":549,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeall(entities",{"_index":567,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeallandflush",{"_index":550,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeallandflush(entities",{"_index":569,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeandflush",{"_index":551,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeandflush(entity",{"_index":571,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removed",{"_index":2020,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["removedeletedfilesdata",{"_index":1990,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{}}}],["removedeletedfilesdata(removedsince",{"_index":2017,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["removedeletedfilesdata(removedsincedays",{"_index":1994,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removedirrecursive",{"_index":2264,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedirrecursive(folderpath",{"_index":2294,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedsince",{"_index":2007,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{}}}],["removedsince.setdate(removedsince.getdate",{"_index":2008,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removedsincedays",{"_index":2001,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removefromposition",{"_index":1304,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["removefromposition(position",{"_index":1342,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removegroupmoderator(groupname",{"_index":103,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["removematch",{"_index":2869,"title":{},"body":{"controllers/ImportUserController.html":{},"injectables/UserImportUc.html":{}}}],["removematch(currentuserid",{"_index":4635,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["removematch(importuserid",{"_index":2881,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["removereference",{"_index":2496,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removereference(reference",{"_index":1359,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removereferencebyindex",{"_index":2497,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removereferencebyindex(index",{"_index":1358,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removeroomsnotinlist",{"_index":1305,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["removeroomsnotinlist(roomlist",{"_index":1344,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removes",{"_index":2296,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["rename",{"_index":2756,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["renamegroupondashboard",{"_index":1676,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["renamegroupondashboard(dashboardid",{"_index":1683,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["rendered",{"_index":4976,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["repair",{"_index":5732,"title":{},"body":{"license.html":{}}}],["repeats",{"_index":3425,"title":{},"body":{"modules/ManagementModule.html":{}}}],["replace",{"_index":6303,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":5852,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replacing",{"_index":6668,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":5836,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":256,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":5867,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec",{"_index":1194,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["repo.integration.spec.js",{"_index":6800,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":6506,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reponse",{"_index":6882,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["report",{"_index":1735,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":6694,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":6259,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":6815,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":5816,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":4998,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":5477,"title":{},"body":{"license.html":{}}}],["representation",{"_index":6149,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["req",{"_index":6849,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":6851,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request",{"_index":2183,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskRepo.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":6877,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":6868,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request.user.user",{"_index":5822,"title":{},"body":{"todo.html":{}}}],["request/response",{"_index":6354,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":6362,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":4549,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":3431,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":3224,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":4556,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":5288,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../../src/services/authentication/logic/whitelist",{"_index":3302,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":3236,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":2381,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":6021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('rimraf",{"_index":2311,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["require('ts",{"_index":6019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1729,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtValidationAdapter.html":{},"interfaces/Options.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["requiredpermissions",{"_index":3775,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/PermissionService.html":{}}}],["requiredpermissions.every((p",{"_index":3861,"title":{},"body":{"injectables/PermissionService.html":{}}}],["requiredpermissions.length",{"_index":3858,"title":{},"body":{"injectables/PermissionService.html":{}}}],["requirement",{"_index":5375,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":5441,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":2220,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":5201,"title":{},"body":{"license.html":{}}}],["reset",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{}}}],["resolve",{"_index":3840,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolved",{"_index":5466,"title":{},"body":{"license.html":{}}}],["resolveduser",{"_index":3865,"title":{"classes/ResolvedUser.html":{}},"body":{"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{}}}],["resolvedusermapper",{"_index":3875,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":4610,"title":{},"body":{"controllers/UserController.html":{}}}],["resolvepermissions",{"_index":3832,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolvepermissions(user",{"_index":3838,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolvepermissionsbyroles",{"_index":3833,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolvepermissionsbyroles(inputroles",{"_index":3845,"title":{},"body":{"injectables/PermissionService.html":{}}}],["resolves",{"_index":3105,"title":{},"body":{"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{},"injectables/UserImportUc.html":{}}}],["resort",{"_index":4357,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["resources",{"_index":6811,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":5351,"title":{},"body":{"license.html":{}}}],["respond",{"_index":5863,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":3530,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":38,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":6869,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":2462,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":6501,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response?.data",{"_index":152,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["response].ts",{"_index":6500,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsejson",{"_index":164,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responsejson.data.authtoken",{"_index":166,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responsejson.data.userid",{"_index":165,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["responses",{"_index":6291,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":6560,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":6219,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":5596,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":6582,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":6057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ressources",{"_index":6102,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":5864,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":2048,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":6440,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":6349,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restore",{"_index":4213,"title":{},"body":{"controllers/TaskController.html":{}}}],["restore(taskid",{"_index":4222,"title":{},"body":{"controllers/TaskController.html":{}}}],["restoreforuser(user",{"_index":2836,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["restricted",{"_index":2031,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/NewsUc.html":{}}}],["restricting",{"_index":5345,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":5552,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":5550,"title":{},"body":{"license.html":{}}}],["result",{"_index":649,"title":{},"body":{"interfaces/Board.html":{},"controllers/CourseController.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DatabaseManagementService.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserMapper.html":{},"classes/NewsScope.html":{},"injectables/RoomsUc.html":{},"classes/StringValidator.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"injectables/UserImportUc.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["result.push(room",{"_index":1436,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["result.query",{"_index":3978,"title":{},"body":{"classes/Scope.html":{}}}],["result.query.ts",{"_index":5930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result.sort",{"_index":650,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["result[sortby",{"_index":3023,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["resultelement",{"_index":1416,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["resulting",{"_index":5165,"title":{},"body":{"license.html":{}}}],["results",{"_index":172,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":5495,"title":{},"body":{"license.html":{}}}],["retention",{"_index":6420,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":3534,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":6467,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":6432,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":78,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"injectables/JwtStrategy.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":438,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["returning",{"_index":4258,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["returns",{"_index":199,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":6744,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":6191,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":6515,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":6306,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":4966,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reverted",{"_index":4983,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reviewers",{"_index":5080,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":5753,"title":{},"body":{"license.html":{}}}],["revised",{"_index":5702,"title":{},"body":{"license.html":{}}}],["revokematch",{"_index":2640,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["rewindsequence",{"_index":417,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["rich",{"_index":6601,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":5489,"title":{},"body":{"license.html":{}}}],["rights",{"_index":5146,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":2310,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"dependencies.html":{}}}],["rimraf.sync(folderpath",{"_index":2326,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["risk",{"_index":5725,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":3899,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["rocket_chat_options",{"_index":3901,"title":{},"body":{"modules/RocketChatModule.html":{}}}],["rocketchat",{"_index":39,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":6300,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchaterror",{"_index":32,"title":{"classes/RocketChatError.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchaterror(e",{"_index":150,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchaterror.prototype",{"_index":58,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchatmodule",{"_index":3895,"title":{"modules/RocketChatModule.html":{}},"body":{"modules/RocketChatModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{}}}],["rocketchatmodule.forroot",{"_index":4033,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["rocketchatoptions",{"_index":23,"title":{"interfaces/RocketChatOptions.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{}}}],["rocketchatservice",{"_index":68,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{}}}],["role",{"_index":2536,"title":{"entities/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"entities/User.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":2842,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["role.factory",{"_index":4617,"title":{},"body":{"classes/UserFactory.html":{}}}],["role.id",{"_index":3890,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.name",{"_index":3889,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserMatchMapper.html":{}}}],["role/permissions",{"_index":6353,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rolefactory",{"_index":4616,"title":{},"body":{"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["rolefactory.buildlist(1",{"_index":4618,"title":{},"body":{"classes/UserFactory.html":{}}}],["roleidbasedsearches",{"_index":2844,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["roleidbasedsearches'})@manytomany('role",{"_index":4587,"title":{},"body":{"entities/User.html":{}}}],["rolename",{"_index":2571,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserScope.html":{},"classes/RoleNameMapper.html":{},"classes/UserMatchMapper.html":{},"miscellaneous/enumerations.html":{}}}],["rolename.admin",{"_index":3202,"title":{},"body":{"classes/ImportUserScope.html":{},"classes/RoleNameMapper.html":{}}}],["rolename.student",{"_index":2954,"title":{},"body":{"classes/ImportUserFactory.html":{},"classes/ImportUserScope.html":{},"classes/RoleNameMapper.html":{},"miscellaneous/variables.html":{}}}],["rolename.teacher",{"_index":3203,"title":{},"body":{"classes/ImportUserScope.html":{},"classes/RoleNameMapper.html":{}}}],["rolenamefilterquery",{"_index":2974,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"classes/RoleNameMapper.html":{},"miscellaneous/enumerations.html":{}}}],["rolenamefilterquery.admin",{"_index":3918,"title":{},"body":{"classes/RoleNameMapper.html":{}}}],["rolenamefilterquery.student",{"_index":3920,"title":{},"body":{"classes/RoleNameMapper.html":{}}}],["rolenamefilterquery.teacher",{"_index":3919,"title":{},"body":{"classes/RoleNameMapper.html":{}}}],["rolenamemapper",{"_index":3017,"title":{"classes/RoleNameMapper.html":{}},"body":{"classes/ImportUserMapper.html":{},"classes/RoleNameMapper.html":{}}}],["rolenamemapper.maptodomain(query.role",{"_index":3048,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["rolenamemapper.maptoresponse(role",{"_index":3031,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["rolenameresponse",{"_index":2988,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/RoleNameMapper.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{}}}],["rolenameresponse.admin",{"_index":3914,"title":{},"body":{"classes/RoleNameMapper.html":{},"classes/UserMatchMapper.html":{}}}],["rolenameresponse.student",{"_index":3916,"title":{},"body":{"classes/RoleNameMapper.html":{},"classes/UserMatchMapper.html":{}}}],["rolenameresponse.teacher",{"_index":3915,"title":{},"body":{"classes/RoleNameMapper.html":{},"classes/UserMatchMapper.html":{}}}],["rolenames",{"_index":2569,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{}}}],["rolerepo",{"_index":3921,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{}}}],["roles",{"_index":2533,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"injectables/TaskUC.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.map((role",{"_index":3888,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["rolesandpermissions",{"_index":3852,"title":{},"body":{"injectables/PermissionService.html":{}}}],["rom",{"_index":5498,"title":{},"body":{"license.html":{}}}],["room",{"_index":687,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/DashboardEntity.html":{},"injectables/RoomsUc.html":{}}}],["room.getmetadata",{"_index":630,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roomboardresponse",{"_index":667,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["roomid",{"_index":588,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{}}}],["roomlist",{"_index":1346,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["roomlist.includes(room",{"_index":1428,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["roommetadata",{"_index":629,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roommetadata.displaycolor",{"_index":632,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roommetadata.id",{"_index":631,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roommetadata.title",{"_index":633,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["roomname",{"_index":93,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["rooms",{"_index":1319,"title":{},"body":{"classes/DashboardEntity.html":{},"controllers/RoomsController.html":{}}}],["rooms.foreach((room",{"_index":1434,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["roomscontroller",{"_index":3314,"title":{"controllers/RoomsController.html":{}},"body":{"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{}}}],["roomsuc",{"_index":602,"title":{"injectables/RoomsUc.html":{}},"body":{"interfaces/Board.html":{},"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"overview.html":{}}}],["root",{"_index":378,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"controllers/UserController.html":{},"index.html":{}}}],["rootdir",{"_index":5984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roots",{"_index":6011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roughly",{"_index":6819,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":1969,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["routes",{"_index":5022,"title":{},"body":{"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routingkey",{"_index":3383,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["royalty",{"_index":5612,"title":{},"body":{"license.html":{}}}],["rss",{"_index":1115,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":6622,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":5506,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":5017,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":6774,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":4543,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":5009,"title":{},"body":{"index.html":{},"license.html":{}}}],["runtime",{"_index":6783,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":2058,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":21,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":2238,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["s3client",{"_index":2234,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["safest",{"_index":5766,"title":{},"body":{"license.html":{}}}],["safety",{"_index":5038,"title":{},"body":{"index.html":{}}}],["sale",{"_index":5621,"title":{},"body":{"license.html":{}}}],["same",{"_index":2638,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/UserImportUc.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":2155,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":2215,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":6788,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":6535,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":6789,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":6672,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":4970,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sanitize",{"_index":4895,"title":{},"body":{"dependencies.html":{}}}],["sanitizer",{"_index":5808,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":334,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":324,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":4295,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["save(task",{"_index":4309,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["saying",{"_index":5437,"title":{},"body":{"license.html":{}}}],["sc",{"_index":5060,"title":{},"body":{"index.html":{}}}],["scans",{"_index":1863,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["scenarios",{"_index":6325,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schedules",{"_index":2019,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["schema",{"_index":945,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":6504,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":6505,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":6032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":900,"title":{"entities/School.html":{}},"body":{"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school._id",{"_index":3179,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["school.entity",{"_index":933,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{}}}],["school.factory",{"_index":1024,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/UserFactory.html":{}}}],["school_import_users_update",{"_index":4943,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["school_import_users_view",{"_index":4941,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["schoolfactory",{"_index":1023,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["schoolfactory.build",{"_index":1035,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["schoolid",{"_index":913,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserScope.html":{},"entities/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolinfo",{"_index":3960,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.id",{"_index":3961,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":3962,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":3605,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":3610,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":3579,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{}}}],["schoolnews",{"_index":1153,"title":{"entities/SchoolNews.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":1152,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["schoolnewsfactory",{"_index":5944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schools",{"_index":2524,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ISchoolProperties.html":{},"entities/School.html":{},"injectables/UserImportUc.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schould",{"_index":1234,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":2085,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":1980,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope",{"_index":1167,"title":{"classes/Scope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ImportUserController.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"classes/UserMatchMapper.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.addquery(allforcreator.query",{"_index":4351,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.addquery(allforfinishedcoursesandlessons.query",{"_index":4350,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.addquery(closedforopencoursesandlessons.query",{"_index":4349,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.addquery(parentidscope.query",{"_index":4376,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.afterduedateornone(filters.afterduedateornone",{"_index":4383,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byavailable(filters?.availableon",{"_index":4387,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byclasses(filters.classes",{"_index":3124,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["scope.bycourseids([courseid",{"_index":4390,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bycourseids(courseids",{"_index":3335,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bydraft(false",{"_index":4381,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byfinished(filters.finished.userid",{"_index":4378,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byfirstname(filters.firstname",{"_index":3116,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["scope.byhidden(filters.hidden",{"_index":3337,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bylastname(filters.lastname",{"_index":3118,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["scope.byloginname(filters.loginname",{"_index":3120,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["scope.bymatches(filters.matches",{"_index":3126,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["scope.byrole(filters.role",{"_index":3122,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["scope.byschool(school",{"_index":3114,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["scope.bytargets(targets",{"_index":3668,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":3669,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byusermatch(user",{"_index":3112,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["scope.excludedraftsofothers(creatorid",{"_index":4392,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.excludedraftsofothers(parentids.creatorid",{"_index":4380,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.excludeunavailableofothers(parentids.creatorid",{"_index":4385,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.foractivecourses",{"_index":1183,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.forallgrouptypes(userid",{"_index":1181,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.forcourseid(courseid",{"_index":1196,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.forteacher(userid",{"_index":1195,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.isflagged(true",{"_index":3128,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["scope.name",{"_index":4681,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["scope.nofutureavailabledate",{"_index":4394,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.query",{"_index":1192,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/ImportUserRepo.html":{},"injectables/LessonRepo.html":{},"injectables/TaskRepo.html":{}}}],["scope.request",{"_index":2207,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":3784,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.targetid",{"_index":4527,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.targetmodel",{"_index":4528,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.transient",{"_index":3353,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":3341,"title":{},"body":{"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope.ts:10",{"_index":3347,"title":{},"body":{"classes/LessonScope.html":{}}}],["scope.ts:16",{"_index":4433,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:23",{"_index":3710,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:24",{"_index":4425,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:30",{"_index":4423,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:38",{"_index":4431,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:44",{"_index":4427,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:5",{"_index":3345,"title":{},"body":{"classes/LessonScope.html":{}}}],["scope.ts:51",{"_index":4435,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:59",{"_index":4422,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:6",{"_index":4429,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:65",{"_index":4442,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:72",{"_index":4437,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:8",{"_index":3708,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:82",{"_index":4420,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:88",{"_index":4441,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:94",{"_index":4439,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope:11",{"_index":1205,"title":{},"body":{"classes/CourseScope.html":{},"classes/ImportUserScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:25",{"_index":1214,"title":{},"body":{"classes/CourseScope.html":{},"classes/ImportUserScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:9",{"_index":1207,"title":{},"body":{"classes/CourseScope.html":{},"classes/ImportUserScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope?.target",{"_index":3781,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":3764,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scoped",{"_index":4173,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["scopeid",{"_index":2162,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopeoperator",{"_index":1204,"title":{},"body":{"classes/CourseScope.html":{},"classes/ImportUserScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["scopepermission",{"_index":4171,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["scopepermissions",{"_index":4170,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["scopes",{"_index":3535,"title":{},"body":{"controllers/NewsController.html":{}}}],["scripts",{"_index":5277,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":4788,"title":{},"body":{"dependencies.html":{}}}],["sdk/client",{"_index":2237,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["search",{"_index":6402,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searching",{"_index":3193,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["searchuserforschool",{"_index":2845,"title":{},"body":{"interfaces/IUserProperties.html":{},"entities/User.html":{}}}],["searchuserforschool'})@manytoone('school",{"_index":4589,"title":{},"body":{"entities/User.html":{}}}],["second",{"_index":6679,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":5209,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":5154,"title":{},"body":{"license.html":{}}}],["secret",{"_index":3234,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretaccesskey",{"_index":2249,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":3280,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":5323,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":5402,"title":{},"body":{"license.html":{}}}],["security",{"_index":6261,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":211,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ISystemProperties.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SubmissionFactory.html":{},"entities/System.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":1720,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application.html":{}}}],["seedcollections",{"_index":1708,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["seedcollections(options",{"_index":1719,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["seeddata",{"_index":6734,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seeddatabasecollectionsfromfilesystem",{"_index":1834,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["seeddatabasecollectionsfromfilesystem(collections",{"_index":1866,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount",{"_index":1922,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount.push(`${collectionname}:${importeddocumentsamount",{"_index":1943,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seems",{"_index":5853,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":4598,"title":{},"body":{"classes/UserAlreadyAssignedToImportUserError.html":{},"todo.html":{}}}],["self",{"_index":6196,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":5637,"title":{},"body":{"license.html":{}}}],["selling",{"_index":5620,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":5190,"title":{},"body":{"license.html":{}}}],["send",{"_index":3396,"title":{},"body":{"injectables/MailService.html":{},"additional-documentation/nestjs-application.html":{}}}],["send(data",{"_index":3401,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["sends",{"_index":6644,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":6271,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":6470,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":2128,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":5811,"title":{},"body":{"todo.html":{}}}],["sentry/node",{"_index":4776,"title":{},"body":{"dependencies.html":{}}}],["separable",{"_index":5448,"title":{},"body":{"license.html":{}}}],["separate",{"_index":3357,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":5065,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["separately",{"_index":5384,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":6401,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":6660,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":6190,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":5008,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["seperation",{"_index":5007,"title":{},"body":{"index.html":{}}}],["sequence",{"_index":418,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["sequence}@example.com",{"_index":2953,"title":{},"body":{"classes/ImportUserFactory.html":{},"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["serialization",{"_index":2067,"title":{},"body":{"classes/EncryptedStringType.html":{},"todo.html":{}}}],["serialize",{"_index":802,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["serialize(documents",{"_index":815,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serialized",{"_index":6909,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":358,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["serializes",{"_index":817,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serve",{"_index":4897,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["served",{"_index":6153,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":1981,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.console",{"_index":4004,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server.controller",{"_index":4024,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["server/overview.html",{"_index":5856,"title":{},"body":{"todo.html":{}}}],["server/pull/2729#pullrequestreview",{"_index":5828,"title":{},"body":{"todo.html":{}}}],["serverconsole",{"_index":3984,"title":{"classes/ServerConsole.html":{}},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{}}}],["serverconsolemodule",{"_index":3996,"title":{"modules/ServerConsoleModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["servercontroller",{"_index":4005,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["servererrortypes",{"_index":5945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":6666,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":4008,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servermodules",{"_index":4028,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/variables.html":{}}}],["servers",{"_index":5166,"title":{},"body":{"license.html":{}}}],["servertestmodule",{"_index":4049,"title":{"modules/ServerTestModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules.html":{},"overview.html":{}}}],["serves",{"_index":5266,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":871,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":2165,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":6829,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":6554,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":2161,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":2189,"title":{},"body":{"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":2192,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:13",{"_index":2200,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:19",{"_index":2198,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:33",{"_index":2224,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:36",{"_index":2225,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":6508,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":2182,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":5731,"title":{},"body":{"license.html":{}}}],["set",{"_index":54,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"modules/InterceptorModule.html":{},"classes/LessonFactory.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/SortingQuery.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserFactory.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(gradeduserids",{"_index":2792,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["set(permissions",{"_index":3856,"title":{},"body":{"injectables/PermissionService.html":{}}}],["set(submitteduserids",{"_index":2781,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["setcontext",{"_index":3365,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":6028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setgroupname",{"_index":2498,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["setgroupname(newgroupname",{"_index":1362,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["setlearnrooms",{"_index":1306,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["setlearnrooms(rooms",{"_index":1347,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["setmatch",{"_index":2870,"title":{},"body":{"controllers/ImportUserController.html":{},"injectables/UserImportUc.html":{}}}],["setmatch(currentuserid",{"_index":4637,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["setmatch(importuserid",{"_index":2885,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["setmatch(user",{"_index":2634,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["sets",{"_index":6796,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":4553,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":1978,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":5970,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["settings",{"_index":6561,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":6027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1727,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"interfaces/Options.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setupentities",{"_index":5946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setuppath",{"_index":1919,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["setuserstatus(authtoken",{"_index":81,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["setversion('3.0",{"_index":6030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":5329,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":5127,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":5284,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":224,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserScope.html":{},"modules/InterceptorModule.html":{},"injectables/UserImportUc.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{}}}],["shared/controller",{"_index":665,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseUc.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserSortingQuery.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["shared/controller/pipe",{"_index":4225,"title":{},"body":{"controllers/TaskController.html":{}}}],["shared/controller/transformer",{"_index":3574,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":6523,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":327,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"classes/BoardTaskStatusMapper.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"interfaces/JwtPayload.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"classes/SchoolInfoMapper.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"todo.html":{}}}],["shared/domain/entity",{"_index":4248,"title":{},"body":{"classes/TaskFactory.html":{}}}],["shared/domain/entity/base.entity",{"_index":1474,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["shared/domain/interface",{"_index":929,"title":{},"body":{"entities/Course.html":{},"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IGridElement.html":{}}}],["shared/domain/types",{"_index":1351,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/ILearnroom.html":{},"injectables/NewsUc.html":{}}}],["shared/infra/console",{"_index":3418,"title":{},"body":{"modules/ManagementModule.html":{},"classes/ServerConsole.html":{}}}],["shared/infra/console/console",{"_index":1723,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["shared/infra/database",{"_index":1878,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["shared/infra/database/mongo",{"_index":4021,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["shared/infra/feathers",{"_index":296,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/FeathersAuthProvider.html":{}}}],["shared/infra/file",{"_index":1876,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["shared/infra/filestorage",{"_index":2341,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesRepo.html":{}}}],["shared/infra/mail",{"_index":4014,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["shared/pipes",{"_index":6547,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/Board.html":{},"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"injectables/JwtStrategy.html":{},"modules/LearnroomModule.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"injectables/RoomsUc.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"injectables/UserImportUc.html":{},"modules/UserModule.html":{}}}],["shared/repo/base.repo",{"_index":3106,"title":{},"body":{"injectables/ImportUserRepo.html":{},"injectables/NewsRepo.html":{}}}],["shared/repo/types/encryptedstring.type",{"_index":2686,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["shared/utils",{"_index":6524,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":6543,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":6527,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shit",{"_index":937,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["short",{"_index":1087,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["shortid",{"_index":4863,"title":{},"body":{"dependencies.html":{}}}],["shorttitle",{"_index":1083,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["show",{"_index":3736,"title":{},"body":{"injectables/NewsUc.html":{}}}],["shows",{"_index":6213,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":6285,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":5783,"title":{},"body":{"license.html":{}}}],["signature",{"_index":6453,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":5478,"title":{},"body":{"license.html":{}}}],["similar",{"_index":4352,"title":{},"body":{"injectables/TaskRepo.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":6273,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":5871,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":6425,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":6741,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":5031,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":6864,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":5687,"title":{},"body":{"license.html":{}}}],["single",{"_index":1731,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["singlevaluetoarraytransformer",{"_index":2977,"title":{},"body":{"classes/ImportUserFilterQuery.html":{},"miscellaneous/functions.html":{}}}],["situation",{"_index":6274,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["six",{"_index":2276,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["size",{"_index":4728,"title":{},"body":{"injectables/UserRepo.html":{}}}],["sizetype",{"_index":1493,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["skip",{"_index":1003,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":2485,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{}}}],["slash",{"_index":5861,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":1931,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":4361,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":2426,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":4900,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":6345,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["software",{"_index":5105,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":5460,"title":{},"body":{"license.html":{}}}],["sole",{"_index":5308,"title":{},"body":{"license.html":{}}}],["solely",{"_index":5320,"title":{},"body":{"license.html":{}}}],["solid",{"_index":6878,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":6232,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":5779,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solve",{"_index":4353,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["something",{"_index":6673,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":6676,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["somewhere",{"_index":598,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["sort",{"_index":1951,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["sortby",{"_index":3019,"title":{},"body":{"classes/ImportUserMapper.html":{},"classes/ImportUserSortingQuery.html":{},"classes/SortingQuery.html":{}}}],["sortedbsondocuments",{"_index":1953,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["sorting",{"_index":4301,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["sorting.query",{"_index":2913,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["sorting.query.ts",{"_index":3212,"title":{},"body":{"classes/ImportUserSortingQuery.html":{},"miscellaneous/enumerations.html":{}}}],["sorting.ts",{"_index":5824,"title":{},"body":{"todo.html":{}}}],["sortingquery",{"_index":2874,"title":{"classes/SortingQuery.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserSortingQuery.html":{},"classes/SortingQuery.html":{}}}],["sortingquery.sortorder",{"_index":3024,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["sortingquery:14",{"_index":3214,"title":{},"body":{"classes/ImportUserSortingQuery.html":{}}}],["sortingquery:18",{"_index":3216,"title":{},"body":{"classes/ImportUserSortingQuery.html":{}}}],["sortorder",{"_index":1221,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/DashboardUc.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/ImportUserSortingQuery.html":{},"injectables/NewsUc.html":{},"classes/SortingQuery.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/UserRepo.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.asc",{"_index":1693,"title":{},"body":{"injectables/DashboardUc.html":{},"classes/ImportUserSortingQuery.html":{},"classes/SortingQuery.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/UserRepo.html":{}}}],["sortorder.desc",{"_index":1223,"title":{},"body":{"injectables/CourseUc.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/UserRepo.html":{}}}],["sortordermap",{"_index":2551,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/ImportUserMapper.html":{},"miscellaneous/typealiases.html":{}}}],["sortreferences",{"_index":1367,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":6491,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":1116,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["sources",{"_index":6112,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":3584,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":6201,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":6442,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":6460,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":5418,"title":{},"body":{"license.html":{}}}],["speak",{"_index":5133,"title":{},"body":{"license.html":{}}}],["spec",{"_index":5964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec.ts",{"_index":5987,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":5992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":5509,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":40,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":5118,"title":{},"body":{"license.html":{}}}],["specification",{"_index":6351,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":6584,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":5254,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":5711,"title":{},"body":{"license.html":{}}}],["specify",{"_index":3457,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["spinner",{"_index":861,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["spirit",{"_index":5703,"title":{},"body":{"license.html":{}}}],["split",{"_index":6245,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spy",{"_index":6825,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":6817,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":6379,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":6899,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":6406,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":5995,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":5985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/config",{"_index":3419,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/core",{"_index":4017,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/core/error/dto/error.response",{"_index":840,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":841,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger",{"_index":2002,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/FilesModule.html":{},"classes/GlobalErrorFilter.html":{},"modules/ImportUserModule.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["src/core/logger/logger.service",{"_index":2022,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["src/modules/authentication/decorator/auth.decorator",{"_index":989,"title":{},"body":{"controllers/CourseController.html":{},"controllers/DashboardController.html":{},"controllers/ImportUserController.html":{},"controllers/NewsController.html":{},"controllers/RoomsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["src/modules/authorization",{"_index":3643,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/modules/authorization/authorization.service",{"_index":3751,"title":{},"body":{"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":6804,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["src/modules/files",{"_index":4020,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/learnroom",{"_index":4016,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/news",{"_index":4019,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/rocketchat",{"_index":4015,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/task",{"_index":4018,"title":{},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["src/modules/user",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{}}}],["stable",{"_index":6197,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":2441,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["standard",{"_index":5250,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":5253,"title":{},"body":{"license.html":{}}}],["start",{"_index":1088,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["startdate",{"_index":901,"title":{},"body":{"entities/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ICourseProperties.html":{}}}],["started",{"_index":4991,"title":{"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":5001,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["starts",{"_index":6094,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":2428,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":6667,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":5768,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stated",{"_index":5299,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":5554,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":6006,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["static",{"_index":415,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/CourseFactory.html":{},"classes/CourseMapper.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"classes/LessonFactory.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MongoPatterns.html":{},"entities/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"modules/RocketChatModule.html":{},"classes/RoleNameMapper.html":{},"classes/SchoolInfoMapper.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/StringValidator.html":{},"classes/SubmissionFactory.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskFactory.html":{},"classes/TaskMapper.html":{},"classes/TaskStatusMapper.html":{},"entities/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserFactory.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":5363,"title":{},"body":{"license.html":{}}}],["status",{"_index":82,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoomsUc.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["status.mapper",{"_index":4267,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.mapper.ts",{"_index":4450,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["status.mapper.ts:5",{"_index":4451,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["status.response",{"_index":4257,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{}}}],["status.response.ts",{"_index":4455,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:14",{"_index":4462,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:17",{"_index":4461,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:20",{"_index":4457,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:23",{"_index":4458,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:26",{"_index":4460,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:29",{"_index":4459,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["status.response.ts:3",{"_index":4456,"title":{},"body":{"classes/TaskStatusResponse.html":{}}}],["statuscode",{"_index":36,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["statusdto",{"_index":4270,"title":{},"body":{"classes/TaskMapper.html":{}}}],["stay",{"_index":6228,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":6654,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":5148,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":6708,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":6590,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":3475,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["storage",{"_index":5393,"title":{},"body":{"license.html":{}}}],["storagefilename",{"_index":517,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["storageprovider",{"_index":513,"title":{"entities/StorageProvider.html":{}},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["storageprovider.accesskeyid",{"_index":2248,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.endpointurl",{"_index":2241,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.entity",{"_index":514,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["storageprovider.region",{"_index":2244,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.secretaccesskey",{"_index":2250,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderclient",{"_index":2251,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderclient.send(deletioncommand",{"_index":2254,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderfactory",{"_index":5948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageproviderfactory.build",{"_index":6048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageproviderid",{"_index":528,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["storageproviderrepo",{"_index":2339,"title":{"injectables/StorageProviderRepo.html":{}},"body":{"modules/FilesModule.html":{},"injectables/StorageProviderRepo.html":{},"overview.html":{}}}],["storageproviders",{"_index":2687,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["store",{"_index":6387,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":6310,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":6462,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["story",{"_index":6818,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":5891,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":5962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":3271,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{}}}],["strict",{"_index":6879,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["strictly",{"_index":6188,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/StorageProvider.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":2096,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/Logger.html":{},"classes/MongoPatterns.html":{},"miscellaneous/functions.html":{}}}],["stringtoboolean",{"_index":3573,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/functions.html":{}}}],["stringvalidator",{"_index":3014,"title":{"classes/StringValidator.html":{}},"body":{"classes/ImportUserMapper.html":{},"classes/ImportUserScope.html":{},"classes/StringValidator.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{}}}],["stringvalidator.isnotemptystring(escapedclasses",{"_index":3207,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["stringvalidator.isnotemptystring(escapedfirstname",{"_index":3188,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["stringvalidator.isnotemptystring(escapedlastname",{"_index":3197,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["stringvalidator.isnotemptystring(escapedloginname",{"_index":3200,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["stringvalidator.isnotemptystring(escapedname",{"_index":4721,"title":{},"body":{"injectables/UserRepo.html":{}}}],["stringvalidator.isnotemptystring(filters.name",{"_index":4718,"title":{},"body":{"injectables/UserRepo.html":{}}}],["stringvalidator.isnotemptystring(query.classes",{"_index":3049,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["stringvalidator.isnotemptystring(query.firstname",{"_index":3037,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["stringvalidator.isnotemptystring(query.lastname",{"_index":3040,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["stringvalidator.isnotemptystring(query.loginname",{"_index":3043,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["stringvalidator.isnotemptystring(query.name",{"_index":4680,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["stringvalidator.isstring(value",{"_index":4072,"title":{},"body":{"classes/StringValidator.html":{}}}],["strip",{"_index":4904,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":2186,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":6919,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":6484,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":6485,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":3363,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stucture",{"_index":5821,"title":{},"body":{"todo.html":{}}}],["student",{"_index":2580,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/ISubmissionProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["studentdashboard",{"_index":4168,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["studentfiles",{"_index":2702,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["studentid",{"_index":2711,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["students",{"_index":902,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"injectables/SubmissionRepo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["studio",{"_index":5051,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":5090,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":6211,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sub",{"_index":3249,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":5602,"title":{},"body":{"license.html":{}}}],["subelements",{"_index":1502,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["subject",{"_index":246,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":5633,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":5322,"title":{},"body":{"license.html":{}}}],["submission",{"_index":2708,"title":{"entities/Submission.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{}}}],["submission.entity",{"_index":2746,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submission.isgraded",{"_index":2789,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submission.student.id",{"_index":2779,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submissionfactory",{"_index":4083,"title":{"classes/SubmissionFactory.html":{}},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["submissionfactory.define(submission",{"_index":4090,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["submissionrepo",{"_index":4093,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{}}}],["submissions",{"_index":2707,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{}}}],["submitted",{"_index":785,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["submitteduserids",{"_index":2777,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["submitteduserids.length",{"_index":2784,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["subpermissions",{"_index":3854,"title":{},"body":{"injectables/PermissionService.html":{}}}],["subprograms",{"_index":5287,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":5427,"title":{},"body":{"license.html":{}}}],["subset",{"_index":6134,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["substantial",{"_index":5473,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":5600,"title":{},"body":{"license.html":{}}}],["substitutionids",{"_index":920,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionteachers",{"_index":903,"title":{},"body":{"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["succeed",{"_index":6761,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["successfully",{"_index":2041,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":1702,"title":{},"body":{"injectables/DashboardUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":5645,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":5482,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":315,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":5870,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":5798,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["suites",{"_index":6132,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["sum",{"_index":4732,"title":{},"body":{"injectables/UserRepo.html":{}}}],["super",{"_index":205,"title":{},"body":{"classes/ApiValidationError.html":{},"entities/BaseFile.html":{},"classes/BusinessError.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"classes/EncryptedStringType.html":{},"entities/File.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"injectables/JwtStrategy.html":{},"entities/Lesson.html":{},"entities/News.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/SchoolNews.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(e.response.statustext",{"_index":53,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["super(em",{"_index":2364,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["super(total",{"_index":1092,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["super(type",{"_index":227,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["supertest",{"_index":6778,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":5512,"title":{},"body":{"license.html":{}}}],["support",{"_index":3242,"title":{},"body":{"interfaces/JwtConstants.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":3251,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":6244,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":6079,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supports",{"_index":473,"title":{},"body":{"classes/BaseFactory.html":{},"license.html":{}}}],["supportuserid",{"_index":3243,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":3844,"title":{},"body":{"injectables/PermissionService.html":{},"license.html":{}}}],["surrender",{"_index":5682,"title":{},"body":{"license.html":{}}}],["survive",{"_index":5553,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":5745,"title":{},"body":{"license.html":{}}}],["svg",{"_index":5787,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":4831,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["swaggermodule.createdocument(app",{"_index":6037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":6038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":3020,"title":{},"body":{"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"classes/ImportUserScope.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{}}}],["symetrickeyencryptionservice",{"_index":2077,"title":{"injectables/SymetricKeyEncryptionService.html":{}},"body":{"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["symetrickeyencryptionservice(configuration.get('s3_key",{"_index":2091,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["symetrickeyencryptionservice(customkey",{"_index":2090,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["symmetric_cipher_key",{"_index":2112,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["symmetriccipherkey",{"_index":2111,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["sync",{"_index":3091,"title":{},"body":{"modules/ImportUserModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["syntax",{"_index":2032,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/NewsUc.html":{}}}],["system",{"_index":1877,"title":{"entities/System.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ISystemProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"modules/ManagementModule.html":{},"entities/System.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system.adapter",{"_index":2334,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system.adapter.ts",{"_index":2257,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["system.adapter.ts:12",{"_index":2267,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:18",{"_index":2305,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:26",{"_index":2269,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:36",{"_index":2285,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:48",{"_index":2300,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:57",{"_index":2288,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:68",{"_index":2272,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:78",{"_index":2295,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:84",{"_index":2283,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.entity",{"_index":2572,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["system.factory",{"_index":2947,"title":{},"body":{"classes/ImportUserFactory.html":{}}}],["system.module.ts",{"_index":2333,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system/file",{"_index":2256,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"miscellaneous/variables.html":{}}}],["systemfactory",{"_index":2946,"title":{},"body":{"classes/ImportUserFactory.html":{},"miscellaneous/variables.html":{}}}],["systemfactory.build",{"_index":2949,"title":{},"body":{"classes/ImportUserFactory.html":{},"miscellaneous/variables.html":{}}}],["systems",{"_index":2273,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/ISystemProperties.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/System.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":436,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"classes/CourseFactory.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/ImportUserFactory.html":{},"injectables/ImportUserRepo.html":{},"classes/LessonFactory.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"classes/SortingQuery.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":1959,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["tablename",{"_index":952,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Lesson.html":{},"entities/Role.html":{},"entities/School.html":{},"entities/StorageProvider.html":{},"entities/Submission.html":{},"entities/System.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/User.html":{}}}],["take",{"_index":2628,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["takes",{"_index":6579,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":5968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tangible",{"_index":5454,"title":{},"body":{"license.html":{}}}],["tap",{"_index":2059,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":1104,"title":{},"body":{"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/TeamNews.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":2170,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.id",{"_index":4128,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.name",{"_index":4129,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.targetids",{"_index":3714,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":3789,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":3712,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":3713,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":1243,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["targetelement",{"_index":1456,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["targetelement.addreferences(element.getreferences",{"_index":1457,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["targetfolder",{"_index":1856,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["targetid",{"_index":311,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":2168,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetinfomapper",{"_index":3607,"title":{"classes/TargetInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/TargetInfoMapper.html":{}}}],["targetinfomapper.maptoresponse(news.target",{"_index":3609,"title":{},"body":{"classes/NewsMapper.html":{}}}],["targetinforesponse",{"_index":3581,"title":{"classes/TargetInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{}}}],["targetmodel",{"_index":309,"title":{},"body":{"injectables/AuthorizationService.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":3747,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":3785,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":2160,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":2164,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":3788,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":2169,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":591,"title":{"entities/Task.html":{}},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/RoomsUc.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.authorization.service",{"_index":4480,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.availabledate",{"_index":4278,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course",{"_index":4202,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["task.createdat",{"_index":4275,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.createstudentstatusforuser(user",{"_index":641,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["task.createteacherstatusforuser(user",{"_index":639,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["task.creator",{"_index":4200,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["task.duedate",{"_index":4280,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":2706,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["task.factory",{"_index":4087,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["task.finishforuser(user",{"_index":4499,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.getparentdata",{"_index":4269,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.id",{"_index":4272,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.name",{"_index":4273,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.restoreforuser(user",{"_index":4500,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.updatedat",{"_index":4276,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task_dashboard_teacher_view_v3",{"_index":4167,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["task_dashboard_view_v3",{"_index":4169,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["taskauthorizationservice",{"_index":4142,"title":{"injectables/TaskAuthorizationService.html":{}},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskcontroller",{"_index":4209,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["taskcourse",{"_index":725,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["taskcourse.name",{"_index":728,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["taskdashboardpermission",{"_index":4162,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskdashboardpermission.studentdashboard",{"_index":4483,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdashboardpermission.teacherdashboard",{"_index":4482,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdesc",{"_index":4268,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.color",{"_index":4282,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.coursename",{"_index":4274,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.lessonname",{"_index":4284,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskentities",{"_index":4395,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskfactory",{"_index":4086,"title":{"classes/TaskFactory.html":{}},"body":{"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["taskfactory.build",{"_index":4091,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["taskfactory.define(task",{"_index":4251,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["taskfilter",{"_index":608,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["taskfilter(isteacher",{"_index":622,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["taskid",{"_index":4221,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["taskids",{"_index":4102,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["tasklistresponse",{"_index":4228,"title":{"classes/TaskListResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["tasklistresponse(taskresponses",{"_index":4239,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmapper",{"_index":4230,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{}}}],["taskmapper.maptoresponse(task",{"_index":4242,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmapper.maptoresponse(taskwithstatus",{"_index":4238,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodule",{"_index":4011,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["taskparentdescriptions",{"_index":2748,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/typealiases.html":{}}}],["taskparentpermission",{"_index":4153,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskparentpermission.read",{"_index":4178,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskparentpermission.write",{"_index":4176,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskrepo",{"_index":596,"title":{"injectables/TaskRepo.html":{}},"body":{"interfaces/Board.html":{},"modules/LearnroomModule.html":{},"injectables/RoomsUc.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskresponse",{"_index":4229,"title":{"classes/TaskResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["taskresponses",{"_index":4236,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks",{"_index":612,"title":{},"body":{"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/RoomsUc.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":638,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["taskscope",{"_index":4311,"title":{"classes/TaskScope.html":{}},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["taskscope('$or",{"_index":4319,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskstatus",{"_index":668,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{}}}],["taskstatus.mapper",{"_index":711,"title":{},"body":{"injectables/BoardMapper.html":{}}}],["taskstatus.mapper.ts",{"_index":772,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{}}}],["taskstatus.mapper.ts:5",{"_index":775,"title":{},"body":{"classes/BoardTaskStatusMapper.html":{}}}],["taskstatus.ts",{"_index":779,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:21",{"_index":792,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:24",{"_index":791,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:27",{"_index":787,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:3",{"_index":786,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:30",{"_index":788,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:33",{"_index":790,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatus.ts:36",{"_index":789,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{}}}],["taskstatusmapper",{"_index":4266,"title":{"classes/TaskStatusMapper.html":{}},"body":{"classes/TaskMapper.html":{},"classes/TaskStatusMapper.html":{}}}],["taskstatusmapper.maptoresponse(status",{"_index":4271,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskstatusresponse",{"_index":4256,"title":{"classes/TaskStatusResponse.html":{}},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{}}}],["taskstatusresponse(status",{"_index":4453,"title":{},"body":{"classes/TaskStatusMapper.html":{}}}],["taskswithstatus",{"_index":4234,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((task",{"_index":4241,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((taskwithstatus",{"_index":4237,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatusvos",{"_index":615,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["taskuc",{"_index":4226,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskwithstatus",{"_index":4265,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskwithstatusvo",{"_index":592,"title":{"classes/TaskWithStatusVo.html":{}},"body":{"interfaces/Board.html":{},"injectables/BoardMapper.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/RoomsUc.html":{},"entities/Task.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["taskwithstatusvo(task",{"_index":640,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{}}}],["taskwithstatusvos",{"_index":4491,"title":{},"body":{"injectables/TaskUC.html":{}}}],["teacher",{"_index":2581,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/ISubmissionProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"entities/Submission.html":{},"injectables/TaskRepo.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacherdashboard",{"_index":4166,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["teacherid",{"_index":2752,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{}}}],["teacherids",{"_index":922,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["teachers",{"_index":904,"title":{},"body":{"entities/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["team",{"_index":1107,"title":{"entities/Team.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITeamProperties.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["team.entity",{"_index":1108,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["teamfactory",{"_index":5954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teamfactory.build",{"_index":6045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teamid",{"_index":4523,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["teammembers",{"_index":2703,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{},"injectables/SubmissionRepo.html":{}}}],["teamnews",{"_index":1154,"title":{"entities/TeamNews.html":{}},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":1151,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["teamnewscontroller",{"_index":3642,"title":{"controllers/TeamNewsController.html":{}},"body":{"modules/NewsModule.html":{},"controllers/TeamNewsController.html":{}}}],["teamnewsfactory",{"_index":5956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["teams",{"_index":2525,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ITeamProperties.html":{},"entities/Team.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":5835,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":6167,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":6464,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":2406,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":6231,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":5332,"title":{},"body":{"license.html":{}}}],["technology",{"_index":6180,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":6157,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":5237,"title":{},"body":{"license.html":{}}}],["temp",{"_index":2274,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["template",{"_index":139,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["term",{"_index":5297,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":5559,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":5578,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":5568,"title":{},"body":{"license.html":{}}}],["termination",{"_index":5556,"title":{},"body":{"license.html":{}}}],["terms",{"_index":5027,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":1970,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskFactory.html":{},"classes/TestBootstrapConsole.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":1983,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":1966,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":1968,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":5986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testable",{"_index":6612,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testbootstrapconsole",{"_index":4529,"title":{"classes/TestBootstrapConsole.html":{}},"body":{"classes/TestBootstrapConsole.html":{}}}],["testcase",{"_index":6718,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":6737,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":1193,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":6008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testing",{"_index":3226,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["testingmodule",{"_index":1972,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":6805,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":6814,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":6808,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":6807,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":6806,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":5994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":5991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":375,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":864,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"classes/SubmissionFactory.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":6541,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":6525,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":6542,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":376,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":6304,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["therefore",{"_index":5173,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":5143,"title":{},"body":{"license.html":{}}}],["think",{"_index":6490,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":5356,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this(entityclass",{"_index":480,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this._id",{"_index":1478,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this._operator",{"_index":3979,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries",{"_index":3981,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.length",{"_index":3980,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.push(query",{"_index":3983,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries[0",{"_index":3982,"title":{},"body":{"classes/Scope.html":{}}}],["this._timeout",{"_index":4564,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.accesskeyid",{"_index":2690,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["this.addquery",{"_index":1171,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/ImportUserScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":3717,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":3718,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(query",{"_index":4445,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.addroom(room",{"_index":1423,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.addstatustotasks(isteacher",{"_index":616,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.adminidandtoken",{"_index":157,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.alias",{"_index":2741,"title":{},"body":{"interfaces/ISystemProperties.html":{},"entities/System.html":{}}}],["this.allrooms",{"_index":1433,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.amqpconnection.publish(this.options.exchange",{"_index":3405,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.aud",{"_index":3247,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":3777,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":6637,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":3757,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":3790,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedcourses(user",{"_index":4484,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":3786,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedlessons(user",{"_index":4485,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.hasoneoftaskdashboardpermissions",{"_index":4502,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.hasoneoftaskdashboardpermissions(user",{"_index":4481,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.hastaskpermission(user",{"_index":4492,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.availabledate",{"_index":2758,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.basepath",{"_index":1884,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.deserialize(bsondocuments",{"_index":1927,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.serialize(jsondocuments",{"_index":1950,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bucket",{"_index":535,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.build(params",{"_index":483,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.buildboard(course",{"_index":621,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.buildboardelements(taskswithstatusvos",{"_index":620,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.byuseridquery(userid",{"_index":4105,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.cache",{"_index":3931,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.classnames",{"_index":2996,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["this.classnames.push(...props.classnames",{"_index":2603,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["this.clone(newpropsfactory",{"_index":490,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.code",{"_index":846,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.color",{"_index":968,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.columns",{"_index":1397,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.comment",{"_index":2720,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.consolewriter.info('schulcloud",{"_index":3994,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(`input",{"_index":3995,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(report",{"_index":1737,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.constructor",{"_index":497,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.content",{"_index":679,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.course",{"_index":1046,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Lesson.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course._id",{"_index":1049,"title":{},"body":{"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["this.course.color",{"_index":2833,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.getnumberofstudents",{"_index":2804,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.name",{"_index":2831,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course.substitutionteachers.contains(user",{"_index":2814,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.course?.isfinished",{"_index":2770,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.coursename",{"_index":4260,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.courserepo.findallbyuserid",{"_index":1692,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.courserepo.findallbyuserid(user.id",{"_index":4179,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findallbyuserid(userid",{"_index":1222,"title":{},"body":{"injectables/CourseUc.html":{}}}],["this.courserepo.findallforteacher(user.id",{"_index":4177,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findone(roomid",{"_index":605,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.courseuc.findallbyuser(currentuser.userid",{"_index":999,"title":{},"body":{"controllers/CourseController.html":{}}}],["this.createdat",{"_index":671,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.createerrorresponse(error",{"_index":2461,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.creategridelement(elementwithposition",{"_index":1616,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.creator",{"_index":539,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.dashboard",{"_index":1483,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.dashboardrepo.getdashboardbyid(dashboardid",{"_index":1696,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.getusersdashboard(userid",{"_index":1691,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.persistandflush(dashboard",{"_index":1695,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboarduc.getusersdashboard(currentuser.userid",{"_index":1278,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.moveelementondashboard",{"_index":1281,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.renamegroupondashboard",{"_index":1287,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.data",{"_index":1093,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["this.databasemanagementservice.clearcollection(collectionname",{"_index":1936,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.collectionexists(collectionname",{"_index":1934,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.createcollection(collectionname",{"_index":1937,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.finddocumentsofcollection(collectionname",{"_index":1949,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.getcollectionnames",{"_index":1891,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.importcollection",{"_index":1940,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem",{"_index":1766,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem([collectionname",{"_index":1768,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem(filter",{"_index":1742,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem",{"_index":1763,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem([collectionname",{"_index":1765,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem(filter",{"_index":1734,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.db.collection(collectionname",{"_index":1805,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.createcollection(collectionname",{"_index":1823,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.dropcollection(collectionname",{"_index":1824,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.listcollections(undefined",{"_index":1815,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.deletedat",{"_index":531,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.deletefilesuc.removedeletedfilesdata(removedsince",{"_index":2009,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.description",{"_index":958,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.details",{"_index":848,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.determinenewroomsin(rooms",{"_index":1421,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.displayat",{"_index":1135,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.displaycolor",{"_index":685,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.duedate",{"_index":2760,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.elements",{"_index":686,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["this.em.aggregate(user",{"_index":4733,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.find(basefile",{"_index":2367,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.em.find(coursegroup",{"_index":4107,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(course",{"_index":1191,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findandcount(coursegroup",{"_index":1059,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["this.em.findandcount(importuser",{"_index":3132,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["this.em.findandcount(lesson",{"_index":3338,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["this.em.findandcount(news",{"_index":3676,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":4104,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(task",{"_index":4364,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findone(dashboardgridelementmodel",{"_index":1618,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.em.findone(dashboardmodelentity",{"_index":1639,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findone(importuser",{"_index":3113,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["this.em.findoneorfail(course",{"_index":1197,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findoneorfail(dashboardmodelentity",{"_index":1667,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(importuser",{"_index":3110,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":3673,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":3930,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(storageprovider",{"_index":4065,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["this.em.findoneorfail(task",{"_index":4312,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":1641,"title":{},"body":{"injectables/DashboardModelMapper.html":{},"injectables/UserRepo.html":{}}}],["this.em.flush",{"_index":580,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.getconnection('write').getdb",{"_index":1804,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.em.map(user",{"_index":4746,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.persist(entity",{"_index":574,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(modelentity",{"_index":1663,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.persist(n",{"_index":578,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(entity",{"_index":575,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(modelentity",{"_index":1665,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.persistandflush(task",{"_index":4314,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(coursenews",{"_index":3684,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(importuser.user",{"_index":3111,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["this.em.populate(lessons",{"_index":3339,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["this.em.populate(newsentities",{"_index":3677,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentity",{"_index":3674,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(regularfiles",{"_index":2371,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.em.populate(schoolnews",{"_index":3682,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(task",{"_index":4313,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(taskentities",{"_index":4396,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(tasks",{"_index":4365,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(teamnews",{"_index":3683,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(user",{"_index":4713,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.populate(usermatches",{"_index":3136,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["this.em.populate(users",{"_index":4748,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.remove(el",{"_index":1638,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.em.remove(entity",{"_index":581,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(entity",{"_index":582,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.email",{"_index":2596,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/User.html":{}}}],["this.encoding",{"_index":2314,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.encryptionservice",{"_index":2089,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.encryptionservice.decrypt(value",{"_index":2102,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.encryptionservice.encrypt(value",{"_index":2099,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.endpointurl",{"_index":2688,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["this.entityclass",{"_index":498,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.entityclass(props",{"_index":482,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.errortype",{"_index":66,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.externalid",{"_index":1140,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":349,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":350,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":331,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":332,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":2171,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":2159,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":2163,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":6553,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.filesrepo.deletefile(file",{"_index":2035,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.filesrepo.findallfilesforcleanup(removedsince",{"_index":2025,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.filestorageadapter.deletefile(file",{"_index":2373,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.filesystemadapter.createdir(targetfolder",{"_index":1945,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.eol",{"_index":1962,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(__dirname",{"_index":1883,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(basedir",{"_index":1899,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(targetfolder",{"_index":1894,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(this.basedir",{"_index":1885,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readdir(basedir",{"_index":1897,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readfile(filepath",{"_index":1924,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.writefile(filepath",{"_index":1961,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.findallforstudent(user",{"_index":4495,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallforteacher(user",{"_index":4496,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findexistinggridelement(elementwithposition",{"_index":1612,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.findimportusersandcount(scope.query",{"_index":3130,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":3671,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.findtasksandcount(scope.query",{"_index":4389,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.finished.add(user",{"_index":2835,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.finished.remove(user",{"_index":2837,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.finished.set(props.finished",{"_index":2767,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.finished?.contains(user",{"_index":2769,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.firstname",{"_index":2592,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/User.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["this.flagged",{"_index":2608,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["this.get('/api/v1/me",{"_index":79,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.get(path",{"_index":135,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getadminidandtoken",{"_index":130,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/groups.members?roomname=${groupname",{"_index":108,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/groups.moderators?roomname=${groupname",{"_index":106,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getasadmin(`/api/v1/users.list?${querystring",{"_index":90,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.getbydraftforcreatorquery(creatorid",{"_index":4446,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.getbydraftquery(false",{"_index":4447,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.getbydraftquery(isdraft",{"_index":4444,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.getbydraftquery(true",{"_index":4448,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.getcollectionnames",{"_index":1821,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdatabasecollection(collectionname",{"_index":1806,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdefaultmaxduedate",{"_index":4505,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.getelement(position",{"_index":1446,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getentitypermissions(userid",{"_index":343,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getfirstopenindex",{"_index":1441,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getgradeduserids",{"_index":2794,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getgradeduserids().some((uid",{"_index":2819,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getid",{"_index":1390,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getmaxsubmissions",{"_index":2808,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getnewspermissions(userid",{"_index":3770,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getnumberofgradedusers",{"_index":2807,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getnumberofsubmittedusers",{"_index":2806,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getorconstructdashboardmodelentity(entity",{"_index":1631,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.getparent",{"_index":2798,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getpermittedtargets(userid",{"_index":3766,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getreferencesfromposition(from",{"_index":1415,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.getseedfolder",{"_index":1886,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.getsubmissionitems",{"_index":2787,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getsubmissionitems().map((submission",{"_index":2778,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getsubmitteduserids",{"_index":2783,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.getsubmitteduserids().some((uid",{"_index":2816,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.gettargetfilters(userid",{"_index":3783,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfolder(toseedfolder",{"_index":1944,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.getuser(userid",{"_index":2154,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.grade",{"_index":2724,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.gradecomment",{"_index":2726,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.gradecomment.length",{"_index":2729,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.graded",{"_index":795,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"classes/TaskStatusResponse.html":{}}}],["this.gradefiles",{"_index":2730,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.gradefiles.length",{"_index":2731,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.grid",{"_index":1403,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.delete(key",{"_index":1431,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.delete(this.gridindexfromposition(position",{"_index":1455,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.get(i",{"_index":1445,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.get(key",{"_index":1411,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.get(this.gridindexfromposition(position",{"_index":1412,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.keys()].foreach((key",{"_index":1424,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.keys()].map((key",{"_index":1409,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.set(index",{"_index":1444,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.set(this.gridindexfromposition(element.pos",{"_index":1405,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.set(this.gridindexfromposition(position",{"_index":1458,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.grid.values",{"_index":1437,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.gridelements",{"_index":1514,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.gridelements.set(props.gridelements",{"_index":1491,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.groupelements",{"_index":1513,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.groupid",{"_index":1512,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.hascoursereadpermission(user",{"_index":4203,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.hascoursewritepermission(user",{"_index":4182,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.hasuserallschoolpermissions(user",{"_index":3864,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.hidden",{"_index":677,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ILessonProperties.html":{},"entities/Lesson.html":{}}}],["this.httpservice",{"_index":137,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.id",{"_index":669,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{}}}],["this.importuserid",{"_index":2990,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["this.importuserrepo.findbyid(importuserid",{"_index":4651,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["this.importuserrepo.findimportusers(currentuser.school",{"_index":4646,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["this.importuserrepo.hasmatch(usermatch",{"_index":4656,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["this.importuserrepo.persistandflush(importuser",{"_index":4658,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["this.isdirectory",{"_index":530,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.isdraft",{"_index":796,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskStatusResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isfinished",{"_index":798,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"classes/TaskStatusResponse.html":{}}}],["this.isfinishedforuser(user",{"_index":2809,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isgradedforuser(user",{"_index":2823,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isgroup",{"_index":1382,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.issubmittedforuser(user",{"_index":2822,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.issubstitutionteacher",{"_index":797,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"classes/TaskStatusResponse.html":{}}}],["this.issubstitutionteacher(userid",{"_index":2812,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.isteacher(user",{"_index":607,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.joinpath(os.tmpdir",{"_index":2319,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.jwtvalidationadapter.iswhitelisted(accountid",{"_index":3285,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.key).tostring",{"_index":4119,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["this.key).tostring(cryptojs.enc.utf8",{"_index":4121,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["this.lastname",{"_index":2594,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"entities/User.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["this.ldapdn",{"_index":2588,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["this.ldapdn?.match(pattern_login_from_dn",{"_index":2620,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["this.ldapid",{"_index":2590,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["this.lesson",{"_index":2764,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.lesson.name",{"_index":2832,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.lessonfilter(isteacher",{"_index":611,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.lessonrepo.findallbycourseids([course.id",{"_index":618,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.lessonrepo.findallbycourseids(readcourseids",{"_index":4196,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.lessonrepo.findallbycourseids(writecourseids",{"_index":4195,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.limit",{"_index":3817,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.loadallcollectionsfromdatabase(folder",{"_index":1905,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadallcollectionsfromfilesystem(folder",{"_index":1904,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1921,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.logger",{"_index":2004,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/NewsUc.html":{}}}],["this.logger.error('the",{"_index":2042,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.error(err",{"_index":2039,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.log('cleanup",{"_index":2010,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.logger.log(`${numberoffiles",{"_index":2028,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.log(`cleanup",{"_index":2006,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.logger.log(`create",{"_index":3755,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":6674,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":3762,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":3771,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":3763,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":6647,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(deletefilesuc.name",{"_index":2023,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":6671,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":2060,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":2063,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.loginname",{"_index":2992,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["this.mapelementtoentity(e",{"_index":1604,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapgridelementtomodel(elementwithposition",{"_index":1634,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapper.mapdashboardtoentity(dashboardmodel",{"_index":1668,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapper.mapdashboardtoentity(modelentity",{"_index":1664,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapper.mapdashboardtomodel(entity",{"_index":1662,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.mapper.maptoresponse(board",{"_index":3941,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.mapreferencetoentity(ref",{"_index":1594,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.mapreferencetomodel(ref",{"_index":1628,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.match",{"_index":2999,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["this.matchedby",{"_index":2639,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["this.maxsubmissions",{"_index":794,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"classes/TaskStatusResponse.html":{}}}],["this.mergeelementintoposition(elementtomove",{"_index":1417,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.message",{"_index":847,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":3478,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":670,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"entities/Lesson.html":{},"entities/Role.html":{},"entities/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{}}}],["this.newsrepo.findall(targets",{"_index":3768,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":3773,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.persistandflush(news",{"_index":3761,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.removeandflush(news",{"_index":3780,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":3549,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":3564,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":3554,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":3560,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":3561,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.options.adminid",{"_index":158,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.adminpassword",{"_index":163,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.admintoken",{"_index":159,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.adminuser",{"_index":162,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.options.module",{"_index":4534,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["this.options.routingkey",{"_index":3406,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.options.uri",{"_index":169,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.orm.close",{"_index":3477,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.params(params",{"_index":1031,"title":{},"body":{"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["this.permissions",{"_index":2677,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/Role.html":{}}}],["this.permissionservice.checkuserhasallschoolpermissions(currentuser",{"_index":4645,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["this.permissionservice.resolvepermissions(user",{"_index":4204,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"controllers/UserController.html":{}}}],["this.persistandflush(dashboard",{"_index":1670,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.populateroles(user.roles.getitems",{"_index":4714,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.positionfromgridindex(key",{"_index":1410,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.post('/api/v1/logout",{"_index":88,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.post('/api/v1/users.setstatus",{"_index":83,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.post(path",{"_index":131,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.addmoderator",{"_index":102,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.archive",{"_index":96,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.create",{"_index":113,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.delete",{"_index":116,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.invite",{"_index":100,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.kick",{"_index":98,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.removemoderator",{"_index":104,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/groups.unarchive",{"_index":92,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.create",{"_index":120,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.createtoken",{"_index":86,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.postasadmin('/api/v1/users.delete",{"_index":125,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.private",{"_index":2763,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.propertiestopopulate",{"_index":2372,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{}}}],["this.propsfactory",{"_index":478,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.afterbuild(afterbuildfn",{"_index":488,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.associations(associations",{"_index":491,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.build(params",{"_index":481,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.params(params",{"_index":492,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.rewindsequence",{"_index":494,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory.transient(transient",{"_index":493,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.propsfactory['sequence",{"_index":501,"title":{},"body":{"classes/BaseFactory.html":{}}}],["this.references",{"_index":1376,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.references.length",{"_index":1384,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.references.set(references",{"_index":1482,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.region",{"_index":2694,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["this.removeandflush(file",{"_index":2374,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.removefromposition(from",{"_index":1418,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.removeroomsnotinlist(rooms",{"_index":1419,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.request.app.get('feathersapp",{"_index":2211,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.resolvepermissions(user",{"_index":3860,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.resolvepermissionsbyroles(innerroles",{"_index":3855,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.resolvepermissionsbyroles(user.roles.getitems",{"_index":3853,"title":{},"body":{"injectables/PermissionService.html":{}}}],["this.response",{"_index":64,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.rolenames",{"_index":2994,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["this.rolenames.push(...props.rolenames",{"_index":2600,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["this.roles.set(props.roles",{"_index":2679,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["this.roomid",{"_index":683,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{}}}],["this.roomsuc.getboard(roomid",{"_index":3940,"title":{},"body":{"controllers/RoomsController.html":{}}}],["this.school",{"_index":959,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/User.html":{}}}],["this.school.id",{"_index":2635,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["this.secretaccesskey",{"_index":2692,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"entities/StorageProvider.html":{}}}],["this.setmatch(props.user",{"_index":2606,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["this.shorttitle",{"_index":1084,"title":{},"body":{"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.skip",{"_index":3816,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.source",{"_index":1142,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.sourcedescription",{"_index":1144,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.spinner.info(text",{"_index":873,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["this.startdate",{"_index":972,"title":{},"body":{"entities/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ICourseProperties.html":{}}}],["this.status",{"_index":673,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.statuscode",{"_index":61,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.storagefilename",{"_index":533,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.storageprovider",{"_index":537,"title":{},"body":{"entities/BaseFile.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.student",{"_index":2718,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.student.id",{"_index":2733,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["this.students.length",{"_index":974,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.students.set(props.students",{"_index":962,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["this.submissions.getitems",{"_index":2775,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.submissions.isinitialized(true",{"_index":2772,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.submissions.set(props.submissions",{"_index":2766,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.submitted",{"_index":793,"title":{},"body":{"classes/BoardTaskStatusResponse.html":{},"classes/TaskStatusResponse.html":{}}}],["this.substitutionteachers.set(props.substitutionteachers",{"_index":966,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.system",{"_index":2586,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["this.target",{"_index":3588,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.targetid",{"_index":3587,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.targetmodel",{"_index":3586,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.task",{"_index":2722,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.taskfilter(isteacher",{"_index":609,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.taskrepo.findallbyparentids",{"_index":4507,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findallfinishedbyparentids",{"_index":4490,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findbyid(taskid",{"_index":4498,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskrepo.findbysingleparent(user.id",{"_index":613,"title":{},"body":{"interfaces/Board.html":{},"injectables/RoomsUc.html":{}}}],["this.taskrepo.save(task",{"_index":4501,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.changefinishedforuser(currentuser.userid",{"_index":4243,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskuc.findall(currentuser.userid",{"_index":4235,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskuc.findallfinished(currentuser.userid",{"_index":4240,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teachers.set(props.teachers",{"_index":964,"title":{},"body":{"entities/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.timeout",{"_index":5831,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":6757,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":684,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BusinessError.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["this.title.substr(0",{"_index":1387,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["this.total",{"_index":3815,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":678,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BusinessError.html":{},"interfaces/ISystemProperties.html":{},"entities/System.html":{}}}],["this.untildate",{"_index":970,"title":{},"body":{"entities/Course.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"interfaces/ICourseProperties.html":{}}}],["this.updatedat",{"_index":672,"title":{},"body":{"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.updateexistinggridelement(existing",{"_index":1614,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["this.updater",{"_index":3589,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["this.url",{"_index":2739,"title":{},"body":{"interfaces/ISystemProperties.html":{},"entities/System.html":{}}}],["this.user",{"_index":1488,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":6646,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userid",{"_index":1407,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["this.userimportuc.findallimportusers(currentuser.userid",{"_index":2921,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["this.userimportuc.removematch(currentuser.userid",{"_index":2929,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["this.userimportuc.setmatch(currentuser.userid",{"_index":2926,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["this.userimportuc.updateflag(currentuser.userid",{"_index":2930,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":6651,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(currentuser.userid",{"_index":4609,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userrepo.findbyid(currentuserid",{"_index":4647,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["this.userrepo.findbyid(userid",{"_index":604,"title":{},"body":{"interfaces/Board.html":{},"injectables/JwtStrategy.html":{},"injectables/RoomsUc.html":{},"injectables/TaskUC.html":{},"injectables/UserImportUc.html":{}}}],["this.userrepo.findbyid(usermatchid",{"_index":4650,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["this.userrepo.findwithoutimportuser(currentuser.school",{"_index":4661,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["this.userrepo.save(user",{"_index":6641,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":6639,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.useruc.findallunmatchedusers(currentuser.userid",{"_index":2934,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["this.validaterocketchatconfig",{"_index":156,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["this.validateusersmatch(dashboard",{"_index":1697,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.validationerrors",{"_index":228,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["this.xpos",{"_index":1480,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.xposition",{"_index":1510,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["this.ypos",{"_index":1481,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["this.yposition",{"_index":1511,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["those",{"_index":5279,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":5514,"title":{},"body":{"license.html":{}}}],["thoughtbot/fishery",{"_index":405,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["three",{"_index":5416,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":5227,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":148,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"injectables/JwtStrategy.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/RoleNameMapper.html":{},"entities/Task.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"injectables/UserImportUc.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":4557,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":4563,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":4562,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":6764,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":333,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thus",{"_index":5314,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":5056,"title":{},"body":{"index.html":{}}}],["ticketsystem.hpi",{"_index":5058,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":6309,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":1233,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":3223,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":4566,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":4560,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouterror",{"_index":4558,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":3225,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":4565,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":6762,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":6360,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":3592,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timouts",{"_index":6750,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":4908,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":181,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BusinessError.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/PatchGroupParams.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["titlea",{"_index":1369,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["titleb",{"_index":1371,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["tls",{"_index":2245,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["tmpdirpath",{"_index":2320,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["toarray",{"_index":1817,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["todo",{"_index":380,"title":{"todo.html":{}},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"entities/Course.html":{},"injectables/DashboardRepo.html":{},"classes/EncryptedStringType.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"classes/ImportUserScope.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/PermissionService.html":{},"entities/Role.html":{},"injectables/RoomsUc.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"injectables/SubmissionRepo.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":2627,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["token",{"_index":11,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["tooling",{"_index":6773,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":5002,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topics",{"_index":6665,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["topromise",{"_index":151,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["toseedfolder",{"_index":1740,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["total",{"_index":998,"title":{},"body":{"controllers/CourseController.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["total.length",{"_index":4734,"title":{},"body":{"injectables/UserRepo.html":{}}}],["total[0].count",{"_index":4735,"title":{},"body":{"injectables/UserRepo.html":{}}}],["trace",{"_index":2661,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":6459,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":6483,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":5541,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":5540,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":5542,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":5488,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":6441,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":5228,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":5490,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":5598,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":6615,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":2474,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":3820,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":2477,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":4799,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":2475,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":419,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"injectables/Logger.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["transient(transient",{"_index":469,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["translate",{"_index":5024,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":6357,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":5443,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":2068,"title":{},"body":{"classes/EncryptedStringType.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":6475,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treated",{"_index":5513,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":5339,"title":{},"body":{"license.html":{}}}],["tries",{"_index":6726,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":6370,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":6477,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":6451,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":3185,"title":{},"body":{"classes/ImportUserScope.html":{},"classes/StringValidator.html":{},"injectables/UserRepo.html":{}}}],["true",{"_index":123,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"entities/Directory.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"interfaces/JwtConstants.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"entities/News.html":{},"interfaces/Options.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/StringValidator.html":{},"entities/Task.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserImportUc.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["true})@index({options",{"_index":2860,"title":{},"body":{"entities/ImportUser.html":{}}}],["true})@isoptional()@isenum(matchfilterquery",{"_index":2970,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["true})@singlevaluetoarraytransformer()@isarray",{"_index":2972,"title":{},"body":{"classes/ImportUserFilterQuery.html":{}}}],["try",{"_index":2033,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"classes/GlobalErrorFilter.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":3189,"title":{},"body":{"classes/ImportUserScope.html":{},"injectables/UserRepo.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["two",{"_index":5147,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":3253,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"entities/BaseFile.html":{},"injectables/BaseRepo.html":{},"interfaces/Board.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"classes/BoardTaskStatusMapper.html":{},"classes/BoardTaskStatusResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"controllers/CourseController.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseMapper.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"entities/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"entities/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/ILearnroom.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISchoolProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ISystemProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/ITeamProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"classes/ImportUserMatchMapper.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"injectables/PermissionService.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"modules/RocketChatModule.html":{},"interfaces/RocketChatOptions.html":{},"entities/Role.html":{},"classes/RoleNameMapper.html":{},"injectables/RoleRepo.html":{},"controllers/RoomsController.html":{},"injectables/RoomsUc.html":{},"entities/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"entities/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"classes/SortingQuery.html":{},"entities/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"entities/System.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskStatusMapper.html":{},"classes/TaskStatusResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/Team.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":2548,"title":{},"body":{"interfaces/IErrorType.html":{}}}],["typealiases",{"_index":5873,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":6886,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":1447,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/ISubmissionProperties.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/Scope.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{}}}],["typeorm",{"_index":6890,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":932,"title":{},"body":{"entities/Course.html":{},"entities/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":5941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/entity",{"_index":2744,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["types/news.types",{"_index":1110,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["typesafety",{"_index":3559,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":47,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"entities/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"classes/ImportUserFactory.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":5468,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":6411,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":2187,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":5996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["u",{"_index":461,"title":{},"body":{"classes/BaseFactory.html":{},"classes/CourseFactory.html":{},"classes/ImportUserFactory.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{}}}],["uc",{"_index":2003,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"modules/FilesModule.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":6512,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/course.uc",{"_index":991,"title":{},"body":{"controllers/CourseController.html":{},"modules/LearnroomModule.html":{}}}],["uc/dashboard.uc",{"_index":1272,"title":{},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["uc/database",{"_index":1724,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["uc/news.uc",{"_index":3541,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/rooms.uc",{"_index":709,"title":{},"body":{"injectables/BoardMapper.html":{},"modules/LearnroomModule.html":{},"controllers/RoomsController.html":{}}}],["uc/task.authorization.service",{"_index":4289,"title":{},"body":{"modules/TaskModule.html":{}}}],["uc/task.uc",{"_index":4227,"title":{},"body":{"controllers/TaskController.html":{}}}],["uc/user",{"_index":2910,"title":{},"body":{"controllers/ImportUserController.html":{},"modules/ImportUserModule.html":{}}}],["ui",{"_index":4906,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["uid",{"_index":2618,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["uid=(.+?),/i",{"_index":2616,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["uid=[^,]*${escapedloginname",{"_index":3201,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["uid=john${sequence},cn=schueler,cn=users,ou=1,dc=training,dc=ucs",{"_index":2950,"title":{},"body":{"classes/ImportUserFactory.html":{},"miscellaneous/variables.html":{}}}],["uid=loginname",{"_index":2613,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["un",{"_index":6434,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":2124,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unarchivegroup(groupname",{"_index":91,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["unauthorizedexception",{"_index":326,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionService.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":347,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unauthorizedexception('missing",{"_index":338,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unauthorizedexception('unauthorized",{"_index":3286,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["uncle",{"_index":6608,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":6366,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":756,"title":{},"body":{"classes/BoardResponse.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"classes/CourseMetadataListResponse.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"classes/DashboardGridElementResponse.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"entities/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/NewsListResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"entities/Role.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskWithStatusVo.html":{},"entities/User.html":{},"classes/UserMatchListResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":5012,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":6182,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":6760,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":6719,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unhandled",{"_index":2455,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["uniform",{"_index":6210,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":2127,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"entities/Role.html":{},"entities/User.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uniquegradeduserids",{"_index":2791,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["uniquesubmitteduserids",{"_index":2780,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["unit",{"_index":6080,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["universal",{"_index":4910,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":819,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"injectables/NewsUc.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":2422,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":5476,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":6838,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":5302,"title":{},"body":{"license.html":{}}}],["unmatchedcountedusers",{"_index":4660,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["unmodified",{"_index":5205,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":5325,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":5510,"title":{},"body":{"license.html":{}}}],["unpublished",{"_index":2530,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unsafe",{"_index":49,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/ImportUserFactory.html":{},"injectables/JwtValidationAdapter.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/UserRepo.html":{},"miscellaneous/variables.html":{}}}],["unskip",{"_index":3647,"title":{},"body":{"modules/NewsModule.html":{}}}],["untestable",{"_index":6662,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":2801,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["untildate",{"_index":905,"title":{},"body":{"entities/Course.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{}}}],["untildateinfuture",{"_index":1177,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["unused",{"_index":4536,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":5052,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":2626,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/UserImportUc.html":{}}}],["update(id",{"_index":3749,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":3536,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":3591,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":393,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/BoardElementResponse.html":{},"classes/BoardLessonResponse.html":{},"injectables/BoardMapper.html":{},"classes/BoardResponse.html":{},"classes/BoardTaskResponse.html":{},"injectables/CourseUc.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["updatedmodel",{"_index":1613,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["updateexistinggridelement",{"_index":1563,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["updateexistinggridelement(elementmodel",{"_index":1585,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["updateflag",{"_index":2871,"title":{},"body":{"controllers/ImportUserController.html":{},"injectables/UserImportUc.html":{}}}],["updateflag(currentuserid",{"_index":4640,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["updateflag(importuserid",{"_index":2889,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["updateflagparams",{"_index":2890,"title":{"classes/UpdateFlagParams.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/UpdateFlagParams.html":{}}}],["updatematchparams",{"_index":2886,"title":{"classes/UpdateMatchParams.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/UpdateMatchParams.html":{}}}],["updatenewsparams",{"_index":3537,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{}}}],["updater",{"_index":1117,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["updaterid",{"_index":1132,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["updates",{"_index":4569,"title":{},"body":{"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"license.html":{}}}],["updating",{"_index":2526,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":3662,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upload",{"_index":4901,"title":{},"body":{"dependencies.html":{}}}],["uploads",{"_index":2714,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"entities/Submission.html":{}}}],["upon",{"_index":6594,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":6530,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":2126,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":24,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":2383,"title":{},"body":{"interfaces/GlobalConstants.html":{},"interfaces/ISystemProperties.html":{},"entities/System.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":5032,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["urlsafe",{"_index":4913,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":6549,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":382,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"entities/CourseNews.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"injectables/Logger.html":{},"classes/MongoPatterns.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":6249,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":2120,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":112,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"classes/MongoPatterns.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"controllers/TeamNewsController.html":{},"injectables/UserRepo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedecorators",{"_index":5975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usedglobals",{"_index":2382,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":3449,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":5772,"title":{},"body":{"license.html":{}}}],["useguards(jwtauthguard",{"_index":5963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":145,"title":{"entities/User.html":{}},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"entities/BaseFile.html":{},"interfaces/Board.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DeleteFilesUc.html":{},"entities/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"entities/ImportUser.html":{},"controllers/ImportUserController.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserMapper.html":{},"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"injectables/JwtStrategy.html":{},"modules/ManagementModule.html":{},"entities/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"injectables/PermissionService.html":{},"classes/ResolvedUserMapper.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoomsUc.html":{},"entities/SchoolNews.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"entities/Submission.html":{},"entities/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskFactory.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"entities/User.html":{},"classes/UserAlreadyAssignedToImportUserError.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"injectables/UserRepo.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user'})@isboolean",{"_index":4570,"title":{},"body":{"classes/UpdateFlagParams.html":{}}}],["user'})@ismongoid",{"_index":4573,"title":{},"body":{"classes/UpdateMatchParams.html":{}}}],["user(props",{"_index":6640,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user._id",{"_index":3181,"title":{},"body":{"classes/ImportUserScope.html":{}}}],["user.business",{"_index":4594,"title":{},"body":{"classes/UserAlreadyAssignedToImportUserError.html":{}}}],["user.controller",{"_index":3086,"title":{},"body":{"modules/ImportUserModule.html":{}}}],["user.controller.ts",{"_index":2865,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.controller.ts:25",{"_index":2876,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.controller.ts:42",{"_index":2888,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.controller.ts:53",{"_index":2883,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.controller.ts:63",{"_index":2892,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.controller.ts:74",{"_index":2880,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.createdat",{"_index":3882,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.email",{"_index":4688,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["user.entity",{"_index":515,"title":{},"body":{"entities/BaseFile.html":{},"entities/Course.html":{},"entities/CourseGroup.html":{},"entities/CourseNews.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"entities/Directory.html":{},"entities/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IImportUserProperties.html":{},"interfaces/IImportUserScope.html":{},"interfaces/INameMatch.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/ImportUser.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/Submission.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"entities/TeamNews.html":{}}}],["user.entity.ts",{"_index":2563,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"miscellaneous/enumerations.html":{}}}],["user.entity.ts:103",{"_index":2861,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:110",{"_index":2855,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:113",{"_index":2850,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:55",{"_index":2858,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:58",{"_index":2859,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:61",{"_index":2852,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:77",{"_index":2853,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:80",{"_index":2848,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:83",{"_index":2851,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:89",{"_index":2847,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:92",{"_index":2856,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.entity.ts:95",{"_index":2846,"title":{},"body":{"entities/ImportUser.html":{}}}],["user.factory",{"_index":4089,"title":{},"body":{"classes/SubmissionFactory.html":{}}}],["user.factory.ts",{"_index":2940,"title":{},"body":{"classes/ImportUserFactory.html":{},"miscellaneous/variables.html":{}}}],["user.factory.ts:10",{"_index":2942,"title":{},"body":{"classes/ImportUserFactory.html":{}}}],["user.firstname",{"_index":3879,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{}}}],["user.id",{"_index":2817,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/ResolvedUserMapper.html":{},"entities/Task.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":3880,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{},"classes/UserMatchMapper.html":{}}}],["user.mapper",{"_index":2905,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.mapper.ts",{"_index":3005,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["user.mapper.ts:17",{"_index":3011,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["user.mapper.ts:32",{"_index":3013,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["user.mapper.ts:49",{"_index":3009,"title":{},"body":{"classes/ImportUserMapper.html":{}}}],["user.permissions",{"_index":2158,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":6544,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.response",{"_index":2897,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user.response.ts",{"_index":2983,"title":{},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{}}}],["user.response.ts:25",{"_index":3142,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:31",{"_index":3144,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:37",{"_index":3139,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:43",{"_index":3143,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:49",{"_index":3147,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:52",{"_index":3138,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:55",{"_index":3146,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:58",{"_index":3140,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.response.ts:61",{"_index":2984,"title":{},"body":{"classes/ImportUserListResponse.html":{}}}],["user.response.ts:7",{"_index":3137,"title":{},"body":{"classes/ImportUserResponse.html":{}}}],["user.roles.getitems",{"_index":4611,"title":{},"body":{"controllers/UserController.html":{}}}],["user.roles.getitems().map((r",{"_index":6052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.roles.getitems(true",{"_index":4683,"title":{},"body":{"classes/UserMatchMapper.html":{}}}],["user.roles.isinitialized(true",{"_index":3850,"title":{},"body":{"injectables/PermissionService.html":{}}}],["user.school.id",{"_index":2636,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"miscellaneous/variables.html":{}}}],["user.school.tostring",{"_index":3886,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":2156,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.ts",{"_index":5938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.uc.ts",{"_index":6538,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":3884,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/account",{"_index":3287,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/class",{"_index":6258,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user/import",{"_index":2866,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["user_already_assigned_to_import_user_error",{"_index":4597,"title":{},"body":{"classes/UserAlreadyAssignedToImportUserError.html":{}}}],["user_already_exists",{"_index":6632,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":6638,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyassignedtoimportusererror",{"_index":4591,"title":{"classes/UserAlreadyAssignedToImportUserError.html":{}},"body":{"classes/UserAlreadyAssignedToImportUserError.html":{},"injectables/UserImportUc.html":{}}}],["useralreadyexisterror",{"_index":6653,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":4600,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["userdocument",{"_index":4747,"title":{},"body":{"injectables/UserRepo.html":{}}}],["userdocuments",{"_index":4744,"title":{},"body":{"injectables/UserRepo.html":{}}}],["userdocuments.map((userdocument",{"_index":4745,"title":{},"body":{"injectables/UserRepo.html":{}}}],["userfactory",{"_index":4088,"title":{"classes/UserFactory.html":{}},"body":{"classes/SubmissionFactory.html":{},"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["userfactory.build",{"_index":4092,"title":{},"body":{"classes/SubmissionFactory.html":{},"miscellaneous/variables.html":{}}}],["userfactory.define(user",{"_index":4619,"title":{},"body":{"classes/UserFactory.html":{},"miscellaneous/variables.html":{}}}],["userfilterquery",{"_index":2878,"title":{"classes/UserFilterQuery.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/UserFilterQuery.html":{},"classes/UserMatchMapper.html":{}}}],["userid",{"_index":76,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"injectables/AuthorizationService.html":{},"interfaces/Board.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/CourseUc.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ImportUserScope.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"injectables/RoomsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/UpdateMatchParams.html":{},"injectables/UserImportUc.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":6837,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":2166,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["userids",{"_index":918,"title":{},"body":{"entities/Course.html":{},"entities/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["userimportpermissions",{"_index":4643,"title":{},"body":{"injectables/UserImportUc.html":{},"miscellaneous/enumerations.html":{}}}],["userimportpermissions.school_import_users_update",{"_index":4648,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["userimportpermissions.school_import_users_view",{"_index":4644,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["userimportuc",{"_index":2909,"title":{"injectables/UserImportUc.html":{}},"body":{"controllers/ImportUserController.html":{},"modules/ImportUserModule.html":{},"injectables/UserImportUc.html":{},"overview.html":{}}}],["userinfomapper",{"_index":3608,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":3611,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":3625,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":3582,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{}}}],["userlist",{"_index":2933,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["userlist.map((user",{"_index":2935,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["usermatch",{"_index":4649,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["usermatch.school.id",{"_index":4653,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["usermatches",{"_index":3133,"title":{},"body":{"injectables/ImportUserRepo.html":{}}}],["usermatchid",{"_index":4638,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["usermatchlistresponse",{"_index":2900,"title":{"classes/UserMatchListResponse.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{}}}],["usermatchlistresponse(dtolist",{"_index":2937,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["usermatchmapper",{"_index":2906,"title":{"classes/UserMatchMapper.html":{}},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserMapper.html":{},"classes/UserMatchMapper.html":{}}}],["usermatchmapper.maptodomain(scope",{"_index":2932,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["usermatchmapper.maptoresponse(user",{"_index":2936,"title":{},"body":{"controllers/ImportUserController.html":{},"classes/ImportUserMapper.html":{}}}],["usermatchresponse",{"_index":2987,"title":{"classes/UserMatchResponse.html":{}},"body":{"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"classes/UserMatchResponse.html":{}}}],["usermodule",{"_index":264,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":119,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":267,"title":{"injectables/UserRepo.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/Board.html":{},"modules/ImportUserModule.html":{},"injectables/JwtStrategy.html":{},"modules/LearnroomModule.html":{},"injectables/RoomsUc.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"controllers/UserController.html":{},"injectables/UserImportUc.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":2535,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"modules/ImportUserModule.html":{},"injectables/ImportUserRepo.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/NewsUc.html":{},"entities/User.html":{},"injectables/UserImportUc.html":{},"injectables/UserRepo.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["userservice",{"_index":6648,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["userspermissions",{"_index":3859,"title":{},"body":{"injectables/PermissionService.html":{}}}],["userspermissions.includes(p",{"_index":3862,"title":{},"body":{"injectables/PermissionService.html":{}}}],["useruc",{"_index":2916,"title":{},"body":{"controllers/ImportUserController.html":{}}}],["uses",{"_index":5470,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":1985,"title":{},"body":{"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/RocketChatModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":447,"title":{},"body":{"classes/BaseFactory.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseFactory.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"classes/ImportUserFactory.html":{},"modules/InterceptorModule.html":{},"classes/LessonFactory.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/UserFactory.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":6252,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["utf",{"_index":2290,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["util",{"_index":6518,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":6772,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":6520,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":2945,"title":{},"body":{"classes/ImportUserFactory.html":{},"dependencies.html":{}}}],["uuidv4",{"_index":2944,"title":{},"body":{"classes/ImportUserFactory.html":{},"miscellaneous/variables.html":{}}}],["v1",{"_index":6029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v3",{"_index":5860,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/docs",{"_index":6150,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["v3/index",{"_index":5865,"title":{},"body":{"todo.html":{}}}],["v4",{"_index":2943,"title":{},"body":{"classes/ImportUserFactory.html":{}}}],["valid",{"_index":2481,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISystemProperties.html":{},"entities/Role.html":{},"entities/System.html":{},"license.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["validate",{"_index":3220,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":3267,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":3298,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validatenested",{"_index":3496,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["validatenested()@apiproperty",{"_index":3493,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["validaterocketchatconfig",{"_index":167,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{}}}],["validateusersmatch",{"_index":1677,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["validateusersmatch(dashboard",{"_index":1685,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["validating",{"_index":3297,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation",{"_index":208,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.adapter",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validation.adapter.ts",{"_index":3290,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["validation.adapter.ts:15",{"_index":3296,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.adapter.ts:20",{"_index":3294,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.error.ts",{"_index":177,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.error.ts:4",{"_index":188,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":4759,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":2465,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation.pipe.ts:12",{"_index":2470,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation_error",{"_index":4752,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":186,"title":{"classes/ValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":231,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":222,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":233,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":191,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":880,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":2469,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":1251,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/ImportUserFilterQuery.html":{},"classes/ImportUserListResponse.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserSortingQuery.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/PatchGroupParams.html":{},"entities/Role.html":{},"classes/SortingQuery.html":{},"classes/UpdateFlagParams.html":{},"classes/UpdateMatchParams.html":{},"classes/UpdateNewsParams.html":{},"classes/UserFilterQuery.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchResponse.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["validators",{"_index":6526,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validity",{"_index":6885,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["validobjectid",{"_index":3823,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":396,"title":{},"body":{"entities/BaseEntityWithTimestamps.html":{},"classes/BaseFactory.html":{},"injectables/ConsoleWriterService.html":{},"entities/Course.html":{},"classes/CourseFactory.html":{},"entities/CourseGroup.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"entities/DashboardGridElementModel.html":{},"entities/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"entities/ImportUser.html":{},"classes/ImportUserFactory.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserResponse.html":{},"classes/ImportUserScope.html":{},"classes/ImportUserSortingQuery.html":{},"entities/Lesson.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"classes/MongoPatterns.html":{},"entities/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"entities/Role.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"classes/SortingQuery.html":{},"classes/StringValidator.html":{},"entities/Submission.html":{},"classes/SubmissionFactory.html":{},"entities/Task.html":{},"classes/TaskFactory.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"classes/UserFilterQuery.html":{},"injectables/UserRepo.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["value.length",{"_index":2097,"title":{},"body":{"classes/EncryptedStringType.html":{},"classes/StringValidator.html":{}}}],["value.trim().length",{"_index":4073,"title":{},"body":{"classes/StringValidator.html":{}}}],["valueof",{"_index":5894,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":2070,"title":{},"body":{"classes/EncryptedStringType.html":{},"interfaces/ISystemProperties.html":{},"entities/System.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["variable",{"_index":6454,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":5909,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["vars",{"_index":4537,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":5112,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":2656,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":2665,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":2670,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":6866,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":122,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":6701,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":6799,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["version",{"_index":5098,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["versions",{"_index":5130,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":1930,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":4259,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":3745,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/UserImportUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":1122,"title":{},"body":{"entities/CourseNews.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{}}}],["violates",{"_index":5505,"title":{},"body":{"license.html":{}}}],["violation",{"_index":5563,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":4861,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":5838,"title":{},"body":{"todo.html":{}}}],["visibility",{"_index":2824,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{}}}],["visible",{"_index":1121,"title":{},"body":{"entities/CourseNews.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/INewsProperties.html":{},"entities/News.html":{},"entities/SchoolNews.html":{},"entities/TeamNews.html":{},"license.html":{}}}],["visual",{"_index":5050,"title":{},"body":{"index.html":{}}}],["vo",{"_index":2576,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["void",{"_index":168,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"classes/BaseFactory.html":{},"injectables/BaseRepo.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseFactory.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/ImportUserFactory.html":{},"injectables/ImportUserRepo.html":{},"classes/ImportUserScope.html":{},"classes/LessonFactory.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/PermissionService.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"injectables/StorageProviderRepo.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskScope.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserFactory.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":5392,"title":{},"body":{"license.html":{}}}],["vs",{"_index":3240,"title":{},"body":{"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":5003,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":6914,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":5866,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":6166,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":6912,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vue.js",{"_index":4972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["wait",{"_index":4916,"title":{},"body":{"dependencies.html":{}}}],["waive",{"_index":5346,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5757,"title":{},"body":{"license.html":{}}}],["want",{"_index":5139,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":6279,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":2657,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":2667,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warranties",{"_index":5239,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":5238,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5846,"title":{},"body":{"todo.html":{}}}],["way",{"_index":3455,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":5406,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["web",{"_index":5777,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["well",{"_index":5220,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":6716,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":3993,"title":{},"body":{"classes/ServerConsole.html":{},"license.html":{}}}],["whereas",{"_index":6413,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":3356,"title":{},"body":{"injectables/Logger.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":5464,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":2479,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["whitelisted",{"_index":3283,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespace",{"_index":3489,"title":{},"body":{"classes/MongoPatterns.html":{}}}],["whole",{"_index":5046,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":5450,"title":{},"body":{"license.html":{}}}],["wich",{"_index":4632,"title":{},"body":{"injectables/UserImportUc.html":{}}}],["widely",{"_index":5257,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":5160,"title":{},"body":{"license.html":{}}}],["window",{"_index":5270,"title":{},"body":{"license.html":{},"todo.html":{}}}],["windows",{"_index":5819,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":4917,"title":{},"body":{"dependencies.html":{}}}],["wip",{"_index":5071,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":5338,"title":{},"body":{"license.html":{}}}],["wish",{"_index":5137,"title":{},"body":{"license.html":{}}}],["within",{"_index":827,"title":{},"body":{"classes/BusinessError.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":4334,"title":{},"body":{"injectables/TaskRepo.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["without/succeeds",{"_index":5814,"title":{},"body":{"todo.html":{}}}],["withrole",{"_index":4613,"title":{},"body":{"classes/UserFactory.html":{}}}],["withrole(name",{"_index":4614,"title":{},"body":{"classes/UserFactory.html":{}}}],["words",{"_index":5064,"title":{},"body":{"index.html":{}}}],["work",{"_index":387,"title":{},"body":{"entities/BaseEntity.html":{},"entities/BaseEntityWithTimestamps.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"entities/Task.html":{},"classes/TaskWithStatusVo.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":5280,"title":{},"body":{"license.html":{}}}],["workers",{"_index":6018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["workflows",{"_index":6663,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":5258,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":6710,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":3567,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":6344,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":5636,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":1473,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrap(dashboard).toreference",{"_index":1484,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["wrap(modelentity).init",{"_index":1590,"title":{},"body":{"injectables/DashboardModelMapper.html":{}}}],["wrap(props.school).toreference",{"_index":2585,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["wrap(props.system).toreference",{"_index":2587,"title":{},"body":{"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["wrap(props.user).toreference",{"_index":1489,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["wrapped",{"_index":5976,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrappedreference",{"_index":1464,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"interfaces/IDashboardModelProperties.html":{},"interfaces/IImportUserProperties.html":{},"entities/ImportUser.html":{}}}],["wraps",{"_index":6334,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":2301,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writecourseids",{"_index":4185,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writecourses",{"_index":4180,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writecourses.includes(c",{"_index":4184,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writecourses.map((c",{"_index":4186,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writeerrorlog",{"_index":2452,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":2459,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writefile",{"_index":2265,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writefile(filepath",{"_index":2299,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writelessons",{"_index":4193,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["writer",{"_index":870,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.module",{"_index":4001,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["writer.module.ts",{"_index":857,"title":{},"body":{"modules/ConsoleWriterModule.html":{}}}],["writer.service",{"_index":859,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["writer.service.ts",{"_index":860,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:10",{"_index":867,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:12",{"_index":863,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer/console",{"_index":856,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["writes",{"_index":6466,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":2444,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":2454,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":5720,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":5415,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1689,"title":{},"body":{"injectables/DashboardUc.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":143,"title":{},"body":{"interfaces/AdminIdAndToken.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/RocketChatError.html":{},"interfaces/RocketChatOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":4919,"title":{},"body":{"dependencies.html":{}}}],["xpos",{"_index":1461,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["xposition",{"_index":1497,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["xunit",{"_index":6381,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["y",{"_index":1265,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"injectables/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/functions.html":{}}}],["years",{"_index":5417,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":448,"title":{},"body":{"classes/BaseFactory.html":{},"classes/BusinessError.html":{},"classes/CourseFactory.html":{},"classes/CourseMetadataListResponse.html":{},"classes/CourseMetadataResponse.html":{},"injectables/CourseRepo.html":{},"injectables/CourseUc.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"classes/ImportUserFactory.html":{},"classes/ImportUserListResponse.html":{},"injectables/ImportUserRepo.html":{},"classes/LessonFactory.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"modules/ServerTestModule.html":{},"classes/StringValidator.html":{},"classes/SubmissionFactory.html":{},"classes/TaskFactory.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/UserFactory.html":{},"injectables/UserImportUc.html":{},"classes/UserMatchListResponse.html":{},"classes/UserMatchMapper.html":{},"injectables/UserRepo.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["yesterday",{"_index":4249,"title":{},"body":{"classes/TaskFactory.html":{},"miscellaneous/variables.html":{}}}],["yourself",{"_index":5651,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":6669,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ypos",{"_index":1462,"title":{},"body":{"entities/DashboardGridElementModel.html":{},"interfaces/DashboardGridElementModelProperties.html":{},"entities/DashboardModelEntity.html":{},"injectables/DashboardModelMapper.html":{},"interfaces/IDashboardModelProperties.html":{}}}],["yposition",{"_index":1498,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["zoom",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/ImportUserModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/ServerTestModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AdminIdAndToken.html":{"url":"interfaces/AdminIdAndToken.html","title":"interface - AdminIdAndToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AdminIdAndToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken?: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                        ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nAuthModule -->\n\nUserRepo->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtValidationAdapter\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '@src/modules/user';\nimport { UserRepo } from '@shared/repo';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { JwtValidationAdapter } from './strategy/jwt-validation.adapter';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy, JwtValidationAdapter, UserRepo],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '@shared/infra/feathers';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:32\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:16\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:54\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, NewsTargetModel } from '@shared/domain';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tif (!Array.isArray(permissions) || permissions.length === 0)\n\t\t\tthrow new UnauthorizedException('missing at least one permission to be checked');\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntity.html":{"url":"entities/BaseEntity.html","title":"entity - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n/**\n * Describes the properties available for entities when used as @IdentifiedReference\n */\nexport type BaseEntityReference = 'id' | '_id';\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseEntityWithTimestamps.html":{"url":"entities/BaseEntityWithTimestamps.html","title":"entity - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: () => })\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n/**\n * Describes the properties available for entities when used as @IdentifiedReference\n */\nexport type BaseEntityReference = 'id' | '_id';\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseFactory.html":{"url":"classes/BaseFactory.html","title":"class - BaseFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/base.factory.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity factory based on thoughtbot/fishery\nhttps://github.com/thoughtbot/fishery\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterBuild\n                            \n                            \n                                associations\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(EntityClass: literal type, propsFactory: Factory)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/testing/factory/base.factory.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        EntityClass\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        propsFactory\n                                                  \n                                                        \n                                                                    Factory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/testing/factory/base.factory.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:87\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n            \n                \nassociations(associations: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:99\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    associations\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:47\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:73\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:60\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:137\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        C\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:111\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:133\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:149\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/base.factory.ts:123\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BuildOptions, DeepPartial, Factory, GeneratorFn, HookFn } from 'fishery';\nimport { ObjectId } from 'mongodb';\n\n/**\n * Entity factory based on thoughtbot/fishery\n * https://github.com/thoughtbot/fishery\n *\n * @template T The entity to be built\n * @template U The properties interface of the entity\n * @template I The transient parameters that your factory supports\n * @template C The class of the factory object being created.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class BaseFactory {\n\tprotected readonly propsFactory: Factory;\n\n\tconstructor(private readonly EntityClass: { new (props: U): T }, propsFactory: Factory) {\n\t\tthis.propsFactory = propsFactory;\n\t}\n\n\t/**\n\t * Define a factory\n\t * @template T The entity to be built\n\t * @template U The properties interface of the entity\n\t * @template I The transient parameters that your factory supports\n\t * @template C The class of the factory object being created.\n\t * @param EntityClass The constructor of the entity to be built.\n\t * @param generator Your factory function - see `Factory.define()` in thoughtbot/fishery\n\t * @returns\n\t */\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tstatic define>(\n\t\tthis: new (EntityClass: { new (props: U): T }, propsFactory: Factory) => F,\n\t\tEntityClass: { new (props: U): T },\n\t\tgenerator: GeneratorFn\n\t): F {\n\t\tconst propsFactory = Factory.define(generator);\n\t\tconst factory = new this(EntityClass, propsFactory);\n\t\treturn factory;\n\t}\n\n\t/**\n\t * Build an entity using your factory\n\t * @param params\n\t * @returns an entity\n\t */\n\tbuild(params?: DeepPartial, options: BuildOptions = {}): T {\n\t\tconst props = this.propsFactory.build(params, options);\n\t\tconst entity = new this.EntityClass(props);\n\n\t\treturn entity;\n\t}\n\n\t/**\n\t * Build an entity using your factory and generate a id for it.\n\t * @param params\n\t * @param id\n\t * @returns an entity\n\t */\n\tbuildWithId(params?: DeepPartial, id?: string): T {\n\t\tconst entity = this.build(params);\n\t\tconst entityWithId = Object.assign(entity, { _id: new ObjectId(id) });\n\n\t\treturn entityWithId;\n\t}\n\n\t/**\n\t * Build a list of entities using your factory\n\t * @param number\n\t * @param params\n\t * @returns a list of entities\n\t */\n\tbuildList(number: number, params?: DeepPartial, options: BuildOptions = {}): T[] {\n\t\tconst list: T[] = [];\n\t\tfor (let i = 0; i ): this {\n\t\tconst newPropsFactory = this.propsFactory.afterBuild(afterBuildFn);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\t * @param associations\n\t * @returns a new factory\n\t */\n\tassociations(associations: Partial): this {\n\t\tconst newPropsFactory = this.propsFactory.associations(associations);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\t * @param params\n\t * @returns a new factory\n\t */\n\tparams(params: DeepPartial): this {\n\t\tconst newPropsFactory = this.propsFactory.params(params);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\t * @param transient - transient params\n\t * @returns a new factory\n\t */\n\ttransient(transient: Partial): this {\n\t\tconst newPropsFactory = this.propsFactory.transient(transient);\n\t\tconst newFactory = this.clone(newPropsFactory);\n\n\t\treturn newFactory;\n\t}\n\n\t/**\n\t * Set sequence back to its default value\n\t */\n\trewindSequence(): void {\n\t\tthis.propsFactory.rewindSequence();\n\t}\n\n\tprotected clone>(this: F, propsFactory: Factory): F {\n\t\tconst copy = new (this.constructor as {\n\t\t\tnew (EntityClass: { new (props: U): T }, propsFactory: Factory): F;\n\t\t})(this.EntityClass, propsFactory);\n\n\t\treturn copy;\n\t}\n\n\t/**\n\t * Get the next sequence value\n\t * @returns the next sequence value\n\t */\n\tprotected sequence(): number {\n\t\t// eslint-disable-next-line @typescript-eslint/dot-notation\n\t\treturn this.propsFactory['sequence']();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/BaseFile.html":{"url":"entities/BaseFile.html","title":"entity - BaseFile","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  BaseFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                isDirectory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDirectory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tpersist(entity: T): T {\n\t\tthis.em.persist(entity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: T): Promise {\n\t\tawait this.em.persistAndFlush(entity);\n\t\treturn entity;\n\t}\n\n\tpersistAll(entities: T[]): T[] {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\treturn persisted;\n\t}\n\n\tasync persistAllAndFlush(entities: T[]): Promise {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tawait this.em.flush();\n\t\treturn persisted;\n\t}\n\n\tremove(entity: T): void {\n\t\tthis.em.remove(entity);\n\t}\n\n\tasync removeAndFlush(entity: T): Promise {\n\t\tawait this.em.removeAndFlush(entity);\n\t}\n\n\tremoveAll(entities: T[]): void {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t}\n\n\tasync removeAllAndFlush(entities: T[]): Promise {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t\tawait this.em.flush();\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Board.html":{"url":"interfaces/Board.html","title":"interface - Board","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Board\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/rooms.uc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayColor\n                                        \n                                \n                                \n                                        \n                                            elements\n                                        \n                                \n                                \n                                        \n                                            roomId\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayColor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elements:         BoardElement[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BoardElement[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roomId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, Course, Task, TaskWithStatusVo, User, Lesson } from '@shared/domain';\nimport { CourseRepo, LessonRepo, TaskRepo, UserRepo } from '@shared/repo';\n\n// TODO: move this somewhere else\nexport interface Board {\n\troomId: string;\n\tdisplayColor: string;\n\ttitle: string;\n\telements: BoardElement[];\n}\n\nexport type BoardElement = {\n\t// TODO: should become fullblown class\n\ttype: string;\n\tcontent: TaskWithStatusVo | Lesson;\n};\n\n@Injectable()\nexport class RoomsUc {\n\tconstructor(\n\t\tprivate readonly courseRepo: CourseRepo,\n\t\tprivate readonly lessonRepo: LessonRepo,\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly userRepo: UserRepo\n\t) {}\n\n\tasync getBoard(roomId: EntityId, userId: EntityId): Promise {\n\t\tconst user = await this.userRepo.findById(userId, true);\n\n\t\tconst course = await this.courseRepo.findOne(roomId, userId);\n\t\tconst isTeacher = this.isTeacher(user, course);\n\t\tconst taskFilter = this.taskFilter(isTeacher);\n\t\tconst lessonFilter = this.lessonFilter(isTeacher);\n\t\tconst [tasks] = await this.taskRepo.findBySingleParent(user.id, course.id, taskFilter);\n\t\tconst tasksWithStatusVos = this.addStatusToTasks(isTeacher, tasks, user);\n\t\tconst [lessons] = await this.lessonRepo.findAllByCourseIds([course.id], lessonFilter);\n\t\tconst boardElements = this.buildBoardElements(tasksWithStatusVos, lessons);\n\n\t\tconst board = this.buildBoard(course, boardElements);\n\t\treturn board;\n\t}\n\n\tprivate taskFilter(isTeacher: boolean): { draft?: boolean; noFutureAvailableDate?: boolean } {\n\t\tconst filters: { draft?: boolean; noFutureAvailableDate?: boolean } = {};\n\t\tif (!isTeacher) {\n\t\t\tfilters.draft = false;\n\t\t\tfilters.noFutureAvailableDate = true;\n\t\t\treturn filters;\n\t\t}\n\t\tfilters.draft = true;\n\t\treturn filters;\n\t}\n\n\t// TODO: move somewhere else\n\tprivate buildBoard(room: Course, boardElements: BoardElement[]): Board {\n\t\tconst roomMetadata = room.getMetadata();\n\t\tconst board = {\n\t\t\troomId: roomMetadata.id,\n\t\t\tdisplayColor: roomMetadata.displayColor,\n\t\t\ttitle: roomMetadata.title,\n\t\t\telements: boardElements,\n\t\t};\n\t\treturn board;\n\t}\n\n\tprivate isTeacher(user: User, course: Course): boolean {\n\t\tif (course.teachers.contains(user) || course.substitutionTeachers.contains(user)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate addStatusToTasks(isTeacher: boolean, tasks: Task[], user: User): TaskWithStatusVo[] {\n\t\tlet tasksWithStatusVos: TaskWithStatusVo[];\n\t\tif (isTeacher) {\n\t\t\ttasksWithStatusVos = tasks.map((task) => {\n\t\t\t\tconst status = task.createTeacherStatusForUser(user);\n\t\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t\t});\n\t\t} else {\n\t\t\ttasksWithStatusVos = tasks.map((task) => {\n\t\t\t\tconst status = task.createStudentStatusForUser(user);\n\t\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t\t});\n\t\t}\n\t\treturn tasksWithStatusVos;\n\t}\n\n\tprivate lessonFilter(isTeacher: boolean): { hidden?: boolean } {\n\t\tconst filters: { hidden?: boolean } = {};\n\t\tif (!isTeacher) {\n\t\t\tfilters.hidden = false;\n\t\t}\n\t\treturn filters;\n\t}\n\n\tprivate buildBoardElements(tasks: TaskWithStatusVo[], lessons: Lesson[]): BoardElement[] {\n\t\tconst boardTasks = tasks.map((task) => ({ type: 'task', content: task }));\n\t\tconst boardLessons = lessons.map((lesson) => ({ type: 'lesson', content: lesson }));\n\t\tconst result = [...boardTasks, ...boardLessons];\n\t\tresult.sort();\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardElementResponse.html":{"url":"classes/BoardElementResponse.html","title":"class - BoardElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardElementResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardElementResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BoardTaskResponse | BoardLessonResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the Board, either: a task or a lesson specific for the board'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'ElementType. Can be any of: \"task\", \"lesson\".'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:87\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { DecodeHtmlEntities } from '@shared/controller';\nimport { BoardTaskStatusResponse } from './roomBoardResponse-taskStatus';\n\nexport class BoardTaskResponse {\n\tconstructor({ id, name, createdAt, updatedAt, status }: BoardTaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: BoardTaskStatusResponse;\n}\n\nexport class BoardLessonResponse {\n\tconstructor({ id, name, hidden, createdAt, updatedAt }: BoardLessonResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.hidden = hidden;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\thidden: boolean;\n}\n\nexport class BoardElementResponse {\n\tconstructor({ type, content }: BoardElementResponse) {\n\t\tthis.type = type;\n\t\tthis.content = content;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'ElementType. Can be any of: \"task\", \"lesson\".',\n\t})\n\ttype: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the Board, either: a task or a lesson specific for the board',\n\t})\n\tcontent: BoardTaskResponse | BoardLessonResponse;\n}\n\n// TODO: this and DashboardResponse should be combined\nexport class BoardResponse {\n\tconstructor({ roomId, title, displayColor, elements }: BoardResponse) {\n\t\tthis.roomId = roomId;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t\tthis.elements = elements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the room this board belongs to',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\troomId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Board',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Board',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\ttype: [BoardElementResponse],\n\t\tdescription: 'Array of board specific tasks or lessons with matching type property',\n\t})\n\telements: BoardElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardLessonResponse.html":{"url":"classes/BoardLessonResponse.html","title":"class - BoardLessonResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardLessonResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                hidden\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardLessonResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardLessonResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { DecodeHtmlEntities } from '@shared/controller';\nimport { BoardTaskStatusResponse } from './roomBoardResponse-taskStatus';\n\nexport class BoardTaskResponse {\n\tconstructor({ id, name, createdAt, updatedAt, status }: BoardTaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: BoardTaskStatusResponse;\n}\n\nexport class BoardLessonResponse {\n\tconstructor({ id, name, hidden, createdAt, updatedAt }: BoardLessonResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.hidden = hidden;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\thidden: boolean;\n}\n\nexport class BoardElementResponse {\n\tconstructor({ type, content }: BoardElementResponse) {\n\t\tthis.type = type;\n\t\tthis.content = content;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'ElementType. Can be any of: \"task\", \"lesson\".',\n\t})\n\ttype: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the Board, either: a task or a lesson specific for the board',\n\t})\n\tcontent: BoardTaskResponse | BoardLessonResponse;\n}\n\n// TODO: this and DashboardResponse should be combined\nexport class BoardResponse {\n\tconstructor({ roomId, title, displayColor, elements }: BoardResponse) {\n\t\tthis.roomId = roomId;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t\tthis.elements = elements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the room this board belongs to',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\troomId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Board',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Board',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\ttype: [BoardElementResponse],\n\t\tdescription: 'Array of board specific tasks or lessons with matching type property',\n\t})\n\telements: BoardElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BoardMapper.html":{"url":"injectables/BoardMapper.html","title":"injectable - BoardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BoardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/board.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \nmapToResponse(board: Board)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/board.mapper.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    board\n                                    \n                                                Board\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BoardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Course, Lesson, TaskWithStatusVo } from '@shared/domain';\nimport {\n\tBoardResponse,\n\tBoardElementResponse,\n\tBoardTaskResponse,\n\tBoardLessonResponse,\n} from '../controller/dto/roomBoardResponse';\nimport { Board } from '../uc/rooms.uc';\nimport { BoardTaskStatusMapper } from './board-taskStatus.mapper';\n\n@Injectable()\nexport class BoardMapper {\n\tmapToResponse(board: Board): BoardResponse {\n\t\tconst elements: BoardElementResponse[] = [];\n\t\tboard.elements.forEach((element) => {\n\t\t\tif (element.type === 'task') {\n\t\t\t\tconst { task: boardTask, status } = element.content as TaskWithStatusVo;\n\t\t\t\tconst boardTaskDesc = boardTask.getParentData();\n\t\t\t\tconst boardTaskStatus = BoardTaskStatusMapper.mapToResponse(status);\n\n\t\t\t\tconst mappedTask = new BoardTaskResponse({\n\t\t\t\t\tid: boardTask.id,\n\t\t\t\t\tname: boardTask.name,\n\t\t\t\t\tcreatedAt: boardTask.createdAt,\n\t\t\t\t\tupdatedAt: boardTask.updatedAt,\n\t\t\t\t\tstatus: boardTaskStatus,\n\t\t\t\t});\n\n\t\t\t\tconst taskCourse = boardTask.course as Course;\n\t\t\t\tmappedTask.courseName = taskCourse.name;\n\t\t\t\tmappedTask.availableDate = boardTask.availableDate;\n\t\t\t\tmappedTask.duedate = boardTask.dueDate;\n\t\t\t\tmappedTask.displayColor = boardTaskDesc.color;\n\t\t\t\tmappedTask.description = boardTask.description;\n\t\t\t\tconst boardElementResponse = new BoardElementResponse({ type: 'task', content: mappedTask });\n\t\t\t\telements.push(boardElementResponse);\n\t\t\t} else if (element.type === 'lesson') {\n\t\t\t\tconst boardLesson = element.content as Lesson;\n\n\t\t\t\tconst mappedLesson = new BoardLessonResponse({\n\t\t\t\t\tid: boardLesson.id,\n\t\t\t\t\tname: boardLesson.name,\n\t\t\t\t\thidden: boardLesson.hidden,\n\t\t\t\t\tcreatedAt: boardLesson.createdAt,\n\t\t\t\t\tupdatedAt: boardLesson.updatedAt,\n\t\t\t\t});\n\n\t\t\t\tconst lessonCourse = boardLesson.course;\n\t\t\t\tmappedLesson.courseName = lessonCourse.name;\n\n\t\t\t\tconst boardElementResponse = new BoardElementResponse({ type: 'lesson', content: mappedLesson });\n\t\t\t\telements.push(boardElementResponse);\n\t\t\t}\n\t\t});\n\t\tconst mapped = new BoardResponse({\n\t\t\troomId: board.roomId,\n\t\t\ttitle: board.title,\n\t\t\tdisplayColor: board.displayColor,\n\t\t\telements,\n\t\t});\n\t\treturn mapped;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardResponse.html":{"url":"classes/BoardResponse.html","title":"class - BoardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                elements\n                            \n                            \n                                roomId\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Board'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        elements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BoardElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'Array of board specific tasks or lessons with matching type property'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roomId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the room this board belongs to', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Board'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:113\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { DecodeHtmlEntities } from '@shared/controller';\nimport { BoardTaskStatusResponse } from './roomBoardResponse-taskStatus';\n\nexport class BoardTaskResponse {\n\tconstructor({ id, name, createdAt, updatedAt, status }: BoardTaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: BoardTaskStatusResponse;\n}\n\nexport class BoardLessonResponse {\n\tconstructor({ id, name, hidden, createdAt, updatedAt }: BoardLessonResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.hidden = hidden;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\thidden: boolean;\n}\n\nexport class BoardElementResponse {\n\tconstructor({ type, content }: BoardElementResponse) {\n\t\tthis.type = type;\n\t\tthis.content = content;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'ElementType. Can be any of: \"task\", \"lesson\".',\n\t})\n\ttype: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the Board, either: a task or a lesson specific for the board',\n\t})\n\tcontent: BoardTaskResponse | BoardLessonResponse;\n}\n\n// TODO: this and DashboardResponse should be combined\nexport class BoardResponse {\n\tconstructor({ roomId, title, displayColor, elements }: BoardResponse) {\n\t\tthis.roomId = roomId;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t\tthis.elements = elements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the room this board belongs to',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\troomId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Board',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Board',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\ttype: [BoardElementResponse],\n\t\tdescription: 'Array of board specific tasks or lessons with matching type property',\n\t})\n\telements: BoardElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardTaskResponse.html":{"url":"classes/BoardTaskResponse.html","title":"class - BoardTaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardTaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardTaskResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardTaskResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BoardTaskStatusResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { DecodeHtmlEntities } from '@shared/controller';\nimport { BoardTaskStatusResponse } from './roomBoardResponse-taskStatus';\n\nexport class BoardTaskResponse {\n\tconstructor({ id, name, createdAt, updatedAt, status }: BoardTaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: BoardTaskStatusResponse;\n}\n\nexport class BoardLessonResponse {\n\tconstructor({ id, name, hidden, createdAt, updatedAt }: BoardLessonResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.hidden = hidden;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\thidden: boolean;\n}\n\nexport class BoardElementResponse {\n\tconstructor({ type, content }: BoardElementResponse) {\n\t\tthis.type = type;\n\t\tthis.content = content;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'ElementType. Can be any of: \"task\", \"lesson\".',\n\t})\n\ttype: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the Board, either: a task or a lesson specific for the board',\n\t})\n\tcontent: BoardTaskResponse | BoardLessonResponse;\n}\n\n// TODO: this and DashboardResponse should be combined\nexport class BoardResponse {\n\tconstructor({ roomId, title, displayColor, elements }: BoardResponse) {\n\t\tthis.roomId = roomId;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t\tthis.elements = elements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the room this board belongs to',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\troomId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Board',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Board',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\ttype: [BoardElementResponse],\n\t\tdescription: 'Array of board specific tasks or lessons with matching type property',\n\t})\n\telements: BoardElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardTaskStatusMapper.html":{"url":"classes/BoardTaskStatusMapper.html","title":"class - BoardTaskStatusMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardTaskStatusMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/board-taskStatus.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(status: ITaskStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/board-taskStatus.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                ITaskStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BoardTaskStatusResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ITaskStatus } from '@shared/domain';\nimport { BoardTaskStatusResponse } from '../controller/dto/roomBoardResponse-taskStatus';\n\nexport class BoardTaskStatusMapper {\n\tstatic mapToResponse(status: ITaskStatus): BoardTaskStatusResponse {\n\t\tconst dto = new BoardTaskStatusResponse(status);\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BoardTaskStatusResponse.html":{"url":"classes/BoardTaskStatusResponse.html","title":"class - BoardTaskStatusResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BoardTaskStatusResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graded\n                            \n                            \n                                isDraft\n                            \n                            \n                                isFinished\n                            \n                            \n                                isSubstitutionTeacher\n                            \n                            \n                                maxSubmissions\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: BoardTaskStatusResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        BoardTaskStatusResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        graded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFinished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubstitutionTeacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/roomBoardResponse-taskStatus.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class BoardTaskStatusResponse {\n\tconstructor({\n\t\tsubmitted,\n\t\tmaxSubmissions,\n\t\tgraded,\n\t\tisDraft,\n\t\tisSubstitutionTeacher,\n\t\tisFinished,\n\t}: BoardTaskStatusResponse) {\n\t\tthis.submitted = submitted;\n\t\tthis.maxSubmissions = maxSubmissions;\n\t\tthis.graded = graded;\n\t\tthis.isDraft = isDraft;\n\t\tthis.isSubstitutionTeacher = isSubstitutionTeacher;\n\t\tthis.isFinished = isFinished;\n\t}\n\n\t@ApiProperty()\n\tsubmitted: number;\n\n\t@ApiProperty()\n\tmaxSubmissions: number;\n\n\t@ApiProperty()\n\tgraded: number;\n\n\t@ApiProperty()\n\tisDraft: boolean;\n\n\t@ApiProperty()\n\tisSubstitutionTeacher: boolean;\n\n\t@ApiProperty()\n\tisFinished: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BsonConverter.html":{"url":"injectables/BsonConverter.html","title":"injectable - BsonConverter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BsonConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/converter/bson.converter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(bsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:21\n                \n            \n\n\n            \n                \n                    Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-bson/ejson objects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-json documents\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(documents: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:11\n                \n            \n\n\n            \n                \n                    Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    documents\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-json documents\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-bson/ejson objects\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport BSON from 'bson';\n\n@Injectable()\nexport class BsonConverter {\n\t/**\n\t * Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\t * @param documents mongo-json documents\n\t * @returns mongo-bson/ejson objects\n\t */\n\tserialize(documents: unknown[]): unknown[] {\n\t\tconst bsonDocuments = BSON.EJSON.serialize(documents) as unknown[];\n\t\treturn bsonDocuments;\n\t}\n\n\t/**\n\t * Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\t * @param bsonDocuments mongo-bson/ejson objects\n\t * @returns mongo-json documents\n\t */\n\tdeserialize(bsonDocuments: unknown[]): unknown[] {\n\t\tconst jsonDocuments = BSON.EJSON.deserialize(bsonDocuments) as unknown[];\n\t\treturn jsonDocuments;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\t// Is not matched by type validation because HttpException is already declared\n\treadonly details: Record;\n\n\tconstructor(\n\t\t{ type, title, defaultMessage }: IErrorType,\n\t\tcode: HttpStatus = HttpStatus.CONFLICT,\n\t\tdetails?: Record\n\t) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t\tthis.details = details || {};\n\t}\n\n\tgetDetails(): Record {\n\t\treturn this.details;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleWriterModule.html":{"url":"modules/ConsoleWriterModule.html","title":"module - ConsoleWriterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleWriterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleWriterService } from './console-writer.service';\n\n@Module({\n\tproviders: [ConsoleWriterService],\n\texports: [ConsoleWriterService],\n})\nexport class ConsoleWriterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleWriterService.html":{"url":"injectables/ConsoleWriterService.html","title":"injectable - ConsoleWriterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleWriterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                spinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ora.Ora\n\n                    \n                \n                \n                    \n                        Default value : createSpinner()\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createSpinner } from 'nestjs-console';\nimport ora from 'ora';\n\n@Injectable()\n/**\n * Console writer service using ora spinner internally.\n */\nexport class ConsoleWriterService {\n\tprivate spinner: ora.Ora = createSpinner();\n\n\tinfo(text: string): void {\n\t\tthis.spinner.info(text);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error';\nimport { LoggerModule } from './logger';\nimport { ValidationModule } from './validation';\nimport { InterceptorModule } from './interceptor';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Course.html":{"url":"entities/Course.html","title":"entity - Course","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                startDate\n                            \n                            \n                                students\n                            \n                            \n                                substitutionTeachers\n                            \n                            \n                                teachers\n                            \n                            \n                                    Optional\n                                untilDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.color\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.description\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.name\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teacherIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        untilDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'activeCourses'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:62\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\n\nimport { ILearnroom } from '@shared/domain/interface';\nimport { LearnroomMetadata, LearnroomTypes } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\nexport interface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n\tstartDate?: Date;\n\tuntilDate?: Date;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Index({ name: 'findAllForTeacher', properties: ['substitutionTeachers', 'teachers'] })\n@Index({ name: 'findAllByUserId', properties: ['students', 'substitutionTeachers', 'teachers'] })\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps implements ILearnroom {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\t@Property()\n\tstartDate?: Date;\n\n\t@Index({ name: 'activeCourses' })\n\t@Property()\n\tuntilDate?: Date;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t\tif (props.untilDate) this.untilDate = props.untilDate;\n\t\tif (props.startDate) this.startDate = props.startDate;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tisFinished(): boolean {\n\t\tif (!this.untilDate) {\n\t\t\treturn false;\n\t\t}\n\t\tconst isFinished = this.untilDate \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CourseController.html":{"url":"controllers/CourseController.html","title":"controller - CourseController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CourseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/course.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/course.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { PaginationQuery } from '@shared/controller/';\nimport { ICurrentUser } from '@shared/domain';\nimport { CourseUc } from '../uc/course.uc';\nimport { CourseMetadataListResponse } from './dto';\nimport { CourseMapper } from '../mapper/course.mapper';\n\n@ApiTags('Courses')\n@Authenticate('jwt')\n@Controller('courses')\nexport class CourseController {\n\tconstructor(private readonly courseUc: CourseUc) {}\n\n\t@Get()\n\tasync findForUser(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [courses, total] = await this.courseUc.findAllByUser(currentUser.userId, paginationQuery);\n\t\tconst courseResponses = courses.map((course) => CourseMapper.mapToMetadataResponse(course));\n\t\tconst { skip, limit } = paginationQuery;\n\n\t\tconst result = new CourseMetadataListResponse(courseResponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseFactory.html":{"url":"classes/CourseFactory.html","title":"class - CourseFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/course.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isFinished\n                            \n                            \n                                isOpen\n                            \n                            \n                                afterBuild\n                            \n                            \n                                associations\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isFinished\n                        \n                    \n                \n            \n            \n                \nisFinished()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/course.factory.ts:11\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n            \n                \nisOpen()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/course.factory.ts:18\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:87\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n            \n                \nassociations(associations: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:99\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    associations\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:47\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:73\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:60\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:137\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:32\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        C\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:111\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:133\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:149\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\n\nimport { Course, School, ICourseProperties } from '@shared/domain';\n\nimport { schoolFactory } from './school.factory';\nimport { BaseFactory } from './base.factory';\n\nconst oneDay = 24 * 60 * 60 * 1000;\n\nclass CourseFactory extends BaseFactory {\n\tisFinished(): this {\n\t\tconst untilDate = new Date(Date.now() - oneDay);\n\t\tconst params: DeepPartial = { untilDate };\n\n\t\treturn this.params(params);\n\t}\n\n\tisOpen(): this {\n\t\tconst untilDate = new Date(Date.now() + oneDay);\n\t\tconst params: DeepPartial = { untilDate };\n\n\t\treturn this.params(params);\n\t}\n}\n\nexport const courseFactory = CourseFactory.define(Course, ({ sequence, params }) => {\n\tlet school: School;\n\tif (params?.school) {\n\t\tschool = params.school as School;\n\t} else {\n\t\tschool = schoolFactory.build();\n\t}\n\n\treturn {\n\t\tname: `course #${sequence}`,\n\t\tdescription: `course #${sequence} description`,\n\t\tcolor: '#FFFFFF',\n\t\tschool,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CourseGroup.html":{"url":"entities/CourseGroup.html","title":"entity - CourseGroup","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CourseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                students\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseGroupRepo.html":{"url":"injectables/CourseGroupRepo.html","title":"injectable - CourseGroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CourseGroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/coursegroup/coursegroup.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup } from '@shared/domain';\n\n@Injectable()\nexport class CourseGroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourseIds(courseIds: EntityId[]): Promise> {\n\t\tconst [courseGroups, count] = await this.em.findAndCount(CourseGroup, {\n\t\t\tcourse: { $in: courseIds },\n\t\t});\n\t\treturn [courseGroups, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseMapper.html":{"url":"classes/CourseMapper.html","title":"class - CourseMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/course.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToMetadataResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToMetadataResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToMetadataResponse(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/course.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseMetadataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Course } from '@shared/domain';\nimport { CourseMetadataResponse } from '../controller/dto';\n\nexport class CourseMapper {\n\tstatic mapToMetadataResponse(course: Course): CourseMetadataResponse {\n\t\tconst courseMetadata = course.getMetadata();\n\t\tconst dto = new CourseMetadataResponse(\n\t\t\tcourseMetadata.id,\n\t\t\tcourseMetadata.title,\n\t\t\tcourseMetadata.shortTitle,\n\t\t\tcourseMetadata.displayColor,\n\t\t\tcourseMetadata.startDate,\n\t\t\tcourseMetadata.untilDate\n\t\t);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseMetadataListResponse.html":{"url":"classes/CourseMetadataListResponse.html","title":"class - CourseMetadataListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseMetadataListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: CourseMetadataResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        CourseMetadataResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseMetadataResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { EntityId } from '@shared/domain';\n\nexport class CourseMetadataResponse {\n\tconstructor(\n\t\tid: EntityId,\n\t\ttitle: string,\n\t\tshortTitle: string,\n\t\tdisplayColor: string,\n\t\tstartDate?: Date,\n\t\tuntilDate?: Date\n\t) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.startDate = startDate;\n\t\tthis.untilDate = untilDate;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Start date of the course',\n\t})\n\tstartDate?: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'End date of the course. After this the course counts as archived',\n\t})\n\tuntilDate?: Date;\n}\n\nexport class CourseMetadataListResponse extends PaginationResponse {\n\tconstructor(data: CourseMetadataResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [CourseMetadataResponse] })\n\tdata: CourseMetadataResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseMetadataResponse.html":{"url":"classes/CourseMetadataResponse.html","title":"class - CourseMetadataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseMetadataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                    Optional\n                                startDate\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                untilDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: EntityId, title: string, shortTitle: string, displayColor: string, startDate?: Date, untilDate?: Date)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        shortTitle\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayColor\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        startDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        untilDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Start date of the course'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        untilDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'End date of the course. After this the course counts as archived'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/courseMetadata.response.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { EntityId } from '@shared/domain';\n\nexport class CourseMetadataResponse {\n\tconstructor(\n\t\tid: EntityId,\n\t\ttitle: string,\n\t\tshortTitle: string,\n\t\tdisplayColor: string,\n\t\tstartDate?: Date,\n\t\tuntilDate?: Date\n\t) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.startDate = startDate;\n\t\tthis.untilDate = untilDate;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Start date of the course',\n\t})\n\tstartDate?: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'End date of the course. After this the course counts as archived',\n\t})\n\tuntilDate?: Date;\n}\n\nexport class CourseMetadataListResponse extends PaginationResponse {\n\tconstructor(data: CourseMetadataResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [CourseMetadataResponse] })\n\tdata: CourseMetadataResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/CourseNews.html":{"url":"entities/CourseNews.html","title":"entity - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:104\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseRepo.html":{"url":"injectables/CourseRepo.html","title":"injectable - CourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/course/course.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/course/course.repo.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(courseId: EntityId, userId?: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, Course, Counted, IFindOptions } from '@shared/domain';\nimport { Scope } from '../scope';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforTeacher(userId: EntityId): CourseScope {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforActiveCourses(): CourseScope {\n\t\tconst now = new Date();\n\t\tconst noUntilDate = { untilDate: { $exists: false } };\n\t\tconst untilDateInFuture = { untilDate: { $gte: now } };\n\n\t\tthis.addQuery({ $or: [noUntilDate, untilDateInFuture] });\n\n\t\treturn this;\n\t}\n\n\tforCourseId(courseId: EntityId): CourseScope {\n\t\tthis.addQuery({ id: courseId });\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(\n\t\tuserId: EntityId,\n\t\tfilters?: { onlyActiveCourses?: boolean },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\n\t\tif (filters?.onlyActiveCourses) {\n\t\t\tscope.forActiveCourses();\n\t\t}\n\n\t\tconst { pagination, order } = options || {};\n\t\tconst queryOptions = {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t};\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query, queryOptions);\n\n\t\treturn [courses, count];\n\t}\n\n\t// not tested in repo.integration.spec\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forTeacher(userId);\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\n\t\treturn [courses, count];\n\t}\n\n\tasync findOne(courseId: EntityId, userId?: EntityId): Promise {\n\t\tconst scope = new CourseScope();\n\t\tscope.forCourseId(courseId);\n\t\tif (userId) scope.forAllGroupTypes(userId);\n\n\t\tconst course = await this.em.findOneOrFail(Course, scope.query);\n\n\t\treturn course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseScope.html":{"url":"classes/CourseScope.html","title":"class - CourseScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/course/course.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forActiveCourses\n                            \n                            \n                                forAllGroupTypes\n                            \n                            \n                                forCourseId\n                            \n                            \n                                forTeacher\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forActiveCourses\n                        \n                    \n                \n            \n            \n                \nforActiveCourses()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         CourseScope\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forAllGroupTypes\n                        \n                    \n                \n            \n            \n                \nforAllGroupTypes(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forCourseId\n                        \n                    \n                \n            \n            \n                \nforCourseId(courseId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forTeacher\n                        \n                    \n                \n            \n            \n                \nforTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/course/course.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, Course, Counted, IFindOptions } from '@shared/domain';\nimport { Scope } from '../scope';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforTeacher(userId: EntityId): CourseScope {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tforActiveCourses(): CourseScope {\n\t\tconst now = new Date();\n\t\tconst noUntilDate = { untilDate: { $exists: false } };\n\t\tconst untilDateInFuture = { untilDate: { $gte: now } };\n\n\t\tthis.addQuery({ $or: [noUntilDate, untilDateInFuture] });\n\n\t\treturn this;\n\t}\n\n\tforCourseId(courseId: EntityId): CourseScope {\n\t\tthis.addQuery({ id: courseId });\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(\n\t\tuserId: EntityId,\n\t\tfilters?: { onlyActiveCourses?: boolean },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\n\t\tif (filters?.onlyActiveCourses) {\n\t\t\tscope.forActiveCourses();\n\t\t}\n\n\t\tconst { pagination, order } = options || {};\n\t\tconst queryOptions = {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t};\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query, queryOptions);\n\n\t\treturn [courses, count];\n\t}\n\n\t// not tested in repo.integration.spec\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forTeacher(userId);\n\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\n\t\treturn [courses, count];\n\t}\n\n\tasync findOne(courseId: EntityId, userId?: EntityId): Promise {\n\t\tconst scope = new CourseScope();\n\t\tscope.forCourseId(courseId);\n\t\tif (userId) scope.forAllGroupTypes(userId);\n\n\t\tconst course = await this.em.findOneOrFail(Course, scope.query);\n\n\t\treturn course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseUc.html":{"url":"injectables/CourseUc.html","title":"injectable - CourseUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CourseUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/course.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findAllByUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/course.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \nfindAllByUser(userId: EntityId, options?: PaginationQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/course.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, Course, Counted, SortOrder } from '@shared/domain';\nimport { CourseRepo } from '@shared/repo';\nimport { PaginationQuery } from '@shared/controller/';\n\n@Injectable()\nexport class CourseUc {\n\tconstructor(private readonly courseRepo: CourseRepo) {}\n\n\tfindAllByUser(userId: EntityId, options?: PaginationQuery): Promise> {\n\t\treturn this.courseRepo.findAllByUserId(userId, {}, { pagination: options, order: { updatedAt: SortOrder.desc } });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\nimport { NewsTargetModel } from '@shared/domain';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle!: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent!: string;\n\n\t@IsDate()\n\t@IsOptional()\n\t@ApiPropertyOptional({\n\t\tdescription:\n\t\t\t'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published',\n\t})\n\tdisplayAt?: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel!: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                            \n                                    Async\n                                moveElement\n                            \n                            \n                                    Async\n                                patchGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElement(dashboardId: string, params: MoveElementParams, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/moveElement')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                MoveElementParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        patchGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchGroup(dashboardId: string, x: number, y: number, params: PatchGroupParams, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/element')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                PatchGroupParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Patch, Param, Body, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ParseObjectIdPipe } from '@shared/controller';\nimport { ICurrentUser } from '@shared/domain';\nimport { DashboardUc } from '../uc/dashboard.uc';\nimport { DashboardResponse, MoveElementParams, PatchGroupParams } from './dto';\nimport { DashboardMapper } from '../mapper/dashboard.mapper';\n\n@ApiTags('Dashboard')\n@Authenticate('jwt')\n@Controller('dashboard')\nexport class DashboardController {\n\tconstructor(private readonly dashboardUc: DashboardUc) {}\n\n\t@Get()\n\tasync findForUser(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\tconst dashboard = await this.dashboardUc.getUsersDashboard(currentUser.userId);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/moveElement')\n\tasync moveElement(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t@Body() params: MoveElementParams,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.moveElementOnDashboard(\n\t\t\tdashboardId,\n\t\t\tparams.from,\n\t\t\tparams.to,\n\t\t\tcurrentUser.userId\n\t\t);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/element')\n\tasync patchGroup(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t@Query('x') x: number,\n\t\t@Query('y') y: number,\n\t\t@Body() params: PatchGroupParams,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.renameGroupOnDashboard(\n\t\t\tdashboardId,\n\t\t\t{ x, y },\n\t\t\tparams.title,\n\t\t\tcurrentUser.userId\n\t\t);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardEntity.html":{"url":"classes/DashboardEntity.html","title":"class - DashboardEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                grid\n                            \n                            \n                                id\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addRoom\n                            \n                            \n                                    Private\n                                allRooms\n                            \n                            \n                                    Private\n                                determineNewRoomsIn\n                            \n                            \n                                getElement\n                            \n                            \n                                    Private\n                                getFirstOpenIndex\n                            \n                            \n                                getGrid\n                            \n                            \n                                getId\n                            \n                            \n                                    Private\n                                getReferencesFromPosition\n                            \n                            \n                                getUserId\n                            \n                            \n                                    Private\n                                gridIndexFromPosition\n                            \n                            \n                                    Private\n                                mergeElementIntoPosition\n                            \n                            \n                                moveElement\n                            \n                            \n                                    Private\n                                positionFromGridIndex\n                            \n                            \n                                    Private\n                                removeFromPosition\n                            \n                            \n                                    Private\n                                removeRoomsNotInList\n                            \n                            \n                                setLearnRooms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, props: DashboardProps)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:179\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        DashboardProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:162\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:160\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:166\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addRoom\n                        \n                    \n                \n            \n            \n                \n                    \n                    addRoom(room: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:275\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        allRooms\n                        \n                    \n                \n            \n            \n                \n                    \n                    allRooms()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ILearnroom[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        determineNewRoomsIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    determineNewRoomsIn(rooms: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:254\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rooms\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ILearnroom[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElement\n                        \n                    \n                \n            \n            \n                \ngetElement(position: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getFirstOpenIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstOpenIndex()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGrid\n                        \n                    \n                \n            \n            \n                \ngetGrid()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementWithPosition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getReferencesFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferencesFromPosition(position: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:289\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserId\n                        \n                    \n                \n            \n            \n                \ngetUserId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        gridIndexFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    gridIndexFromPosition(pos: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pos\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mergeElementIntoPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeElementIntoPosition(element: IGridElement, position: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:310\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                IGridElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveElement\n                        \n                    \n                \n            \n            \n                \nmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:220\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElementWithPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        positionFromGridIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    positionFromGridIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        removeFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFromPosition(position: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:301\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        removeRoomsNotInList\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRoomsNotInList(roomList: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomList\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLearnRooms\n                        \n                    \n                \n            \n            \n                \nsetLearnRooms(rooms: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    rooms\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId, LearnroomMetadata } from '@shared/domain/types';\nimport { ILearnroom } from '@shared/domain/interface';\n\nconst defaultColumns = 4;\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId | undefined;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReferenceByIndex(index: number): void;\n\n\tremoveReference(reference: ILearnroom): void;\n\n\tgetReferences(): ILearnroom[];\n\n\taddReferences(anotherReference: ILearnroom[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle?: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: LearnroomMetadata[];\n\tgroupId?: string;\n};\n\nexport class GridElement implements IGridElement {\n\tid?: EntityId;\n\n\ttitle?: string;\n\n\tprivate sortReferences = (a: ILearnroom, b: ILearnroom) => {\n\t\tconst titleA = a.getMetadata().title;\n\t\tconst titleB = b.getMetadata().title;\n\t\tif (titleA  titleB) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: ILearnroom[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references.sort(this.sortReferences);\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string | undefined, group: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: ILearnroom[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId | undefined {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): ILearnroom[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReferenceByIndex(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : '';\n\t\tconst groupMetadata = {\n\t\t\tgroupId: this.getId(),\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; grid: GridElementWithPosition[]; userId: EntityId };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\tgrid: Map;\n\n\tuserId: EntityId;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tthis.userId = props.userId;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetUserId(): EntityId {\n\t\treturn this.userId;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tsetLearnRooms(rooms: ILearnroom[]): void {\n\t\tthis.removeRoomsNotInList(rooms);\n\t\tconst newRooms = this.determineNewRoomsIn(rooms);\n\n\t\tnewRooms.forEach((room) => {\n\t\t\tthis.addRoom(room);\n\t\t});\n\t}\n\n\tprivate removeRoomsNotInList(roomList: ILearnroom[]): void {\n\t\t[...this.grid.keys()].forEach((key) => {\n\t\t\tconst element = this.grid.get(key) as IGridElement;\n\t\t\tconst currentRooms = element.getReferences();\n\t\t\tcurrentRooms.forEach((room) => {\n\t\t\t\tif (!roomList.includes(room)) {\n\t\t\t\t\telement.removeReference(room);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (element.getReferences().length === 0) {\n\t\t\t\tthis.grid.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate determineNewRoomsIn(rooms: ILearnroom[]): ILearnroom[] {\n\t\tconst result: ILearnroom[] = [];\n\t\tconst existingRooms = this.allRooms();\n\t\trooms.forEach((room) => {\n\t\t\tif (!existingRooms.includes(room)) {\n\t\t\t\tresult.push(room);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tprivate allRooms(): ILearnroom[] {\n\t\tconst elements = [...this.grid.values()];\n\t\tconst references = elements\n\t\t\t.map((el) => {\n\t\t\t\treturn el.getReferences();\n\t\t\t})\n\t\t\t.flat();\n\t\treturn references;\n\t}\n\n\tprivate addRoom(room: ILearnroom): void {\n\t\tconst index = this.getFirstOpenIndex();\n\t\tconst newElement = GridElement.FromSingleReference(room);\n\t\tthis.grid.set(index, newElement);\n\t}\n\n\tprivate getFirstOpenIndex(): number {\n\t\tlet i = 0;\n\t\twhile (this.grid.get(i) !== undefined) {\n\t\t\ti += 1;\n\t\t}\n\t\treturn i;\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReferenceByIndex(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DashboardGridElementModel.html":{"url":"entities/DashboardGridElementModel.html","title":"entity - DashboardGridElementModel","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DashboardGridElementModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dashboard\n                            \n                            \n                                references\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DashboardModelEntity', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('Course', undefined, {fieldName: 'referenceIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:47\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n\tEntity,\n\tProperty,\n\tManyToOne,\n\tOneToMany,\n\tManyToMany,\n\tCollection,\n\tIdentifiedReference,\n\twrap,\n} from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\n\nexport interface DashboardGridElementModelProperties {\n\tid?: string;\n\ttitle?: string;\n\txPos: number;\n\tyPos: number;\n\treferences: Course[];\n\tdashboard: DashboardModelEntity;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor({ id, title, xPos, yPos, references, dashboard }: DashboardGridElementModelProperties) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t\tthis.title = title;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.references.set(references);\n\t\tthis.dashboard = wrap(dashboard).toReference();\n\t}\n\n\t@Property()\n\ttitle?: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: User;\n\tgridElements?: DashboardGridElementModel[];\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tthis.user = wrap(props.user).toReference();\n\t\tif (props.gridElements) this.gridElements.set(props.gridElements);\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DashboardGridElementModelProperties.html":{"url":"interfaces/DashboardGridElementModelProperties.html","title":"interface - DashboardGridElementModelProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DashboardGridElementModelProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dashboard\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            references\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            xPos\n                                        \n                                \n                                \n                                        \n                                            yPos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dashboard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dashboard:         DashboardModelEntity\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DashboardModelEntity\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        references\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        references:         Course[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xPos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yPos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        yPos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n\tEntity,\n\tProperty,\n\tManyToOne,\n\tOneToMany,\n\tManyToMany,\n\tCollection,\n\tIdentifiedReference,\n\twrap,\n} from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\n\nexport interface DashboardGridElementModelProperties {\n\tid?: string;\n\ttitle?: string;\n\txPos: number;\n\tyPos: number;\n\treferences: Course[];\n\tdashboard: DashboardModelEntity;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor({ id, title, xPos, yPos, references, dashboard }: DashboardGridElementModelProperties) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t\tthis.title = title;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.references.set(references);\n\t\tthis.dashboard = wrap(dashboard).toReference();\n\t}\n\n\t@Property()\n\ttitle?: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: User;\n\tgridElements?: DashboardGridElementModel[];\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tthis.user = wrap(props.user).toReference();\n\t\tif (props.gridElements) this.gridElements.set(props.gridElements);\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementResponse.html":{"url":"classes/DashboardGridElementResponse.html","title":"class - DashboardGridElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                    Optional\n                                groupElements\n                            \n                            \n                                    Optional\n                                groupId\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                xPosition\n                            \n                            \n                                yPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: DashboardGridElementResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        DashboardGridElementResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DashboardGridSubElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of all subelements in the group'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the group element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'X position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Y position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:83\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\tconstructor({ id, title, shortTitle, displayColor }: DashboardGridSubElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tshortTitle,\n\t\tdisplayColor,\n\t\txPosition,\n\t\tyPosition,\n\t\tgroupId,\n\t\tgroupElements,\n\t}: DashboardGridElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.xPosition = xPosition;\n\t\tthis.yPosition = yPosition;\n\t\tthis.groupId = groupId;\n\t\tthis.groupElements = groupElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the group element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tgroupId?: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements?: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\tconstructor({ id, gridElements }: DashboardResponse) {\n\t\tthis.id = id;\n\t\tthis.gridElements = gridElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridSubElementResponse.html":{"url":"classes/DashboardGridSubElementResponse.html","title":"class - DashboardGridSubElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridSubElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: DashboardGridSubElementResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        DashboardGridSubElementResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\tconstructor({ id, title, shortTitle, displayColor }: DashboardGridSubElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tshortTitle,\n\t\tdisplayColor,\n\t\txPosition,\n\t\tyPosition,\n\t\tgroupId,\n\t\tgroupElements,\n\t}: DashboardGridElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.xPosition = xPosition;\n\t\tthis.yPosition = yPosition;\n\t\tthis.groupId = groupId;\n\t\tthis.groupElements = groupElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the group element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tgroupId?: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements?: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\tconstructor({ id, gridElements }: DashboardResponse) {\n\t\tthis.id = id;\n\t\tthis.gridElements = gridElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardMapper.html":{"url":"classes/DashboardMapper.html","title":"class - DashboardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                mapGridElement\n                            \n                            \n                                    Private\n                                    Static\n                                mapLearnroom\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        mapGridElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapGridElement(data: GridElementWithPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardGridElementResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        mapLearnroom\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapLearnroom(metadata: LearnroomMetadata)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metadata\n                                    \n                                                LearnroomMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardGridSubElementResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(dashboard: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DashboardEntity, GridElementWithPosition, LearnroomMetadata } from '@shared/domain';\nimport { DashboardResponse, DashboardGridElementResponse, DashboardGridSubElementResponse } from '../controller/dto';\n\nexport class DashboardMapper {\n\tstatic mapToResponse(dashboard: DashboardEntity): DashboardResponse {\n\t\tconst dto = new DashboardResponse({\n\t\t\tid: dashboard.getId(),\n\t\t\tgridElements: dashboard\n\t\t\t\t.getGrid()\n\t\t\t\t.map((elementWithPosition) => DashboardMapper.mapGridElement(elementWithPosition)),\n\t\t});\n\t\treturn dto;\n\t}\n\n\tprivate static mapGridElement(data: GridElementWithPosition): DashboardGridElementResponse {\n\t\tconst elementData = data.gridElement.getContent();\n\t\tconst position = data.pos;\n\t\tconst dto = new DashboardGridElementResponse({\n\t\t\ttitle: elementData.title,\n\t\t\tshortTitle: elementData.shortTitle,\n\t\t\tdisplayColor: elementData.displayColor,\n\t\t\txPosition: position.x,\n\t\t\tyPosition: position.y,\n\t\t});\n\t\tif (elementData.referencedId) {\n\t\t\tdto.id = elementData.referencedId;\n\t\t}\n\t\tif (elementData.group && elementData.groupId) {\n\t\t\tdto.groupId = elementData.groupId;\n\t\t\tdto.groupElements = elementData.group.map((groupMetadata) => DashboardMapper.mapLearnroom(groupMetadata));\n\t\t}\n\t\treturn dto;\n\t}\n\n\tprivate static mapLearnroom(metadata: LearnroomMetadata): DashboardGridSubElementResponse {\n\t\treturn new DashboardGridSubElementResponse(metadata);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/DashboardModelEntity.html":{"url":"entities/DashboardModelEntity.html","title":"entity - DashboardModelEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  DashboardModelEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Collection\n\n                    \n                \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('DashboardGridElementModel', 'dashboard')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'userId', wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.model.entity.ts:77\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n\tEntity,\n\tProperty,\n\tManyToOne,\n\tOneToMany,\n\tManyToMany,\n\tCollection,\n\tIdentifiedReference,\n\twrap,\n} from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\n\nexport interface DashboardGridElementModelProperties {\n\tid?: string;\n\ttitle?: string;\n\txPos: number;\n\tyPos: number;\n\treferences: Course[];\n\tdashboard: DashboardModelEntity;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor({ id, title, xPos, yPos, references, dashboard }: DashboardGridElementModelProperties) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t\tthis.title = title;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.references.set(references);\n\t\tthis.dashboard = wrap(dashboard).toReference();\n\t}\n\n\t@Property()\n\ttitle?: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: User;\n\tgridElements?: DashboardGridElementModel[];\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tthis.user = wrap(props.user).toReference();\n\t\tif (props.gridElements) this.gridElements.set(props.gridElements);\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardModelMapper.html":{"url":"injectables/DashboardModelMapper.html","title":"injectable - DashboardModelMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardModelMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createGridElement\n                            \n                            \n                                    Private\n                                    Async\n                                findExistingGridElement\n                            \n                            \n                                    Private\n                                    Async\n                                getOrConstructDashboardModelEntity\n                            \n                            \n                                    Async\n                                mapDashboardToEntity\n                            \n                            \n                                    Async\n                                mapDashboardToModel\n                            \n                            \n                                    Async\n                                mapElementToEntity\n                            \n                            \n                                    Async\n                                mapGridElementToModel\n                            \n                            \n                                    Async\n                                mapReferenceToEntity\n                            \n                            \n                                mapReferenceToModel\n                            \n                            \n                                    Private\n                                    Async\n                                updateExistingGridElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        createGridElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    createGridElement(elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findExistingGridElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    findExistingGridElement(elementWithPosition: GridElementWithPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getOrConstructDashboardModelEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrConstructDashboardModelEntity(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapDashboardToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapDashboardToEntity(modelEntity: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapDashboardToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapDashboardToModel(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapElementToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapElementToEntity(modelEntity: DashboardGridElementModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardGridElementModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapGridElementToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapGridElementToModel(elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mapReferenceToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapReferenceToEntity(modelEntity: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mapReferenceToModel\n                        \n                    \n                \n            \n            \n                \nmapReferenceToModel(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Course\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        updateExistingGridElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateExistingGridElement(elementModel: DashboardGridElementModel, elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.model.mapper.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementModel\n                                    \n                                                DashboardGridElementModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { wrap, EntityManager } from '@mikro-orm/core';\nimport { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport {\n\tDashboardEntity,\n\tGridElement,\n\tGridElementWithPosition,\n\tILearnroom,\n\tLearnroomTypes,\n\tDashboardGridElementModel,\n\tDashboardModelEntity,\n\tCourse,\n\tUser,\n} from '@shared/domain';\n\n@Injectable()\nexport class DashboardModelMapper {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tasync mapReferenceToEntity(modelEntity: Course): Promise {\n\t\tconst domainEntity = await wrap(modelEntity).init();\n\t\treturn domainEntity;\n\t}\n\n\tasync mapElementToEntity(modelEntity: DashboardGridElementModel): Promise {\n\t\tconst referenceModels = await modelEntity.references.loadItems();\n\t\tconst references = await Promise.all(referenceModels.map((ref) => this.mapReferenceToEntity(ref)));\n\t\tconst result = {\n\t\t\tpos: { x: modelEntity.xPos, y: modelEntity.yPos },\n\t\t\tgridElement: GridElement.FromPersistedGroup(modelEntity.id, modelEntity.title, references),\n\t\t};\n\t\treturn result;\n\t}\n\n\tasync mapDashboardToEntity(modelEntity: DashboardModelEntity): Promise {\n\t\tif (!modelEntity.gridElements.isInitialized()) {\n\t\t\tawait modelEntity.gridElements.init();\n\t\t}\n\t\tconst grid = await Promise.all(\n\t\t\tArray.from(modelEntity.gridElements).map(async (e) => {\n\t\t\t\treturn this.mapElementToEntity(e);\n\t\t\t})\n\t\t);\n\t\treturn new DashboardEntity(modelEntity.id, { grid, userId: modelEntity.user.id });\n\t}\n\n\tmapReferenceToModel(reference: ILearnroom): Course {\n\t\tconst metadata = reference.getMetadata();\n\t\tif (metadata.type === LearnroomTypes.Course) {\n\t\t\tconst course = reference as Course;\n\t\t\treturn course;\n\t\t}\n\t\tthrow new InternalServerErrorException('unknown learnroom type');\n\t}\n\n\tasync mapGridElementToModel(\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity\n\t): Promise {\n\t\tconst existing = await this.findExistingGridElement(elementWithPosition);\n\t\tif (existing) {\n\t\t\tconst updatedModel = this.updateExistingGridElement(existing, elementWithPosition, dashboard);\n\t\t\treturn updatedModel;\n\t\t}\n\t\tconst createdModel = await this.createGridElement(elementWithPosition, dashboard);\n\t\treturn createdModel;\n\t}\n\n\tprivate async findExistingGridElement(\n\t\telementWithPosition: GridElementWithPosition\n\t): Promise {\n\t\tconst { gridElement } = elementWithPosition;\n\t\tif (gridElement.hasId()) {\n\t\t\tconst existing = await this.em.findOne(DashboardGridElementModel, gridElement.getId() as string);\n\t\t\tif (existing) return existing;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate async updateExistingGridElement(\n\t\telementModel: DashboardGridElementModel,\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity\n\t): Promise {\n\t\telementModel.xPos = elementWithPosition.pos.x;\n\t\telementModel.yPos = elementWithPosition.pos.y;\n\t\tconst { gridElement } = elementWithPosition;\n\n\t\tif (gridElement.isGroup()) {\n\t\t\telementModel.title = gridElement.getContent().title;\n\t\t}\n\n\t\tconst references = await Promise.all(gridElement.getReferences().map((ref) => this.mapReferenceToModel(ref)));\n\t\telementModel.references.set(references);\n\n\t\telementModel.dashboard = wrap(dashboard).toReference();\n\t\treturn elementModel;\n\t}\n\n\tprivate async createGridElement(\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity\n\t): Promise {\n\t\tconst { gridElement } = elementWithPosition;\n\t\tconst references = await Promise.all(gridElement.getReferences().map((ref) => this.mapReferenceToModel(ref)));\n\t\tconst elementModel = new DashboardGridElementModel({\n\t\t\tid: gridElement.getId(),\n\t\t\txPos: elementWithPosition.pos.x,\n\t\t\tyPos: elementWithPosition.pos.y,\n\t\t\treferences,\n\t\t\tdashboard,\n\t\t});\n\n\t\treturn elementModel;\n\t}\n\n\tasync mapDashboardToModel(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.getOrConstructDashboardModelEntity(entity);\n\t\tconst mappedElements = await Promise.all(\n\t\t\tentity.getGrid().map((elementWithPosition) => this.mapGridElementToModel(elementWithPosition, modelEntity))\n\t\t);\n\n\t\tArray.from(modelEntity.gridElements).forEach((el) => {\n\t\t\tif (!mappedElements.includes(el)) {\n\t\t\t\tmodelEntity.gridElements.remove(el);\n\t\t\t\tthis.em.remove(el);\n\t\t\t}\n\t\t});\n\n\t\treturn modelEntity;\n\t}\n\n\tprivate async getOrConstructDashboardModelEntity(entity: DashboardEntity): Promise {\n\t\tconst existing = await this.em.findOne(DashboardModelEntity, entity.getId());\n\t\tif (existing) {\n\t\t\treturn existing;\n\t\t}\n\t\tconst user = await this.em.findOneOrFail(User, entity.getUserId());\n\t\treturn new DashboardModelEntity({ id: entity.getId(), user, gridElements: [] });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardRepo.html":{"url":"injectables/DashboardRepo.html","title":"injectable - DashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/dashboard/dashboard.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDashboardById\n                            \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                persist\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager, mapper: DashboardModelMapper)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapper\n                                                  \n                                                        \n                                                                        DashboardModelMapper\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persist\n                        \n                    \n                \n            \n            \n                \n                    \n                    persist(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, GridElementWithPosition, DashboardModelEntity } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst generateEmptyDashboard = (userId: EntityId) => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tconst dashboard = new DashboardEntity(new ObjectId().toString(), { grid: gridArray, userId });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(userId: EntityId): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager, protected readonly mapper: DashboardModelMapper) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await this.mapper.mapDashboardToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(userId: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, { user: userId });\n\t\tif (dashboardModel) {\n\t\t\treturn this.mapper.mapDashboardToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateEmptyDashboard(userId);\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardResponse.html":{"url":"classes/DashboardResponse.html","title":"class - DashboardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: DashboardResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        DashboardResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DashboardGridElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of all elements visible on the dashboard'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Dashboard entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:108\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\tconstructor({ id, title, shortTitle, displayColor }: DashboardGridSubElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tshortTitle,\n\t\tdisplayColor,\n\t\txPosition,\n\t\tyPosition,\n\t\tgroupId,\n\t\tgroupElements,\n\t}: DashboardGridElementResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.shortTitle = shortTitle;\n\t\tthis.displayColor = displayColor;\n\t\tthis.xPosition = xPosition;\n\t\tthis.yPosition = yPosition;\n\t\tthis.groupId = groupId;\n\t\tthis.groupElements = groupElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle?: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the group element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tgroupId?: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements?: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\tconstructor({ id, gridElements }: DashboardResponse) {\n\t\tthis.id = id;\n\t\tthis.gridElements = gridElements;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardUc.html":{"url":"injectables/DashboardUc.html","title":"injectable - DashboardUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DashboardUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/dashboard.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                moveElementOnDashboard\n                            \n                            \n                                    Async\n                                renameGroupOnDashboard\n                            \n                            \n                                    Private\n                                validateUsersMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dashboardRepo: IDashboardRepo, courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dashboardRepo\n                                                  \n                                                        \n                                                                        IDashboardRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElementOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElementOnDashboard(dashboardId: EntityId, from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    from\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        renameGroupOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    renameGroupOnDashboard(dashboardId: EntityId, position: GridPosition, params: string, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validateUsersMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUsersMatch(dashboard: DashboardEntity, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, NotFoundException } from '@nestjs/common';\nimport { DashboardEntity, EntityId, GridPositionWithGroupIndex, GridPosition, SortOrder } from '@shared/domain';\nimport { IDashboardRepo, CourseRepo } from '@shared/repo';\n// import { NotFound } from '@feathersjs/errors'; // wrong import? see NotFoundException\n\n@Injectable()\nexport class DashboardUc {\n\tconstructor(\n\t\t@Inject('DASHBOARD_REPO') private readonly dashboardRepo: IDashboardRepo,\n\t\tprivate readonly courseRepo: CourseRepo\n\t) {}\n\n\tasync getUsersDashboard(userId: EntityId): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getUsersDashboard(userId);\n\t\tconst [courses] = await this.courseRepo.findAllByUserId(\n\t\t\tuserId,\n\t\t\t{ onlyActiveCourses: true },\n\t\t\t{ order: { name: SortOrder.asc } }\n\t\t);\n\t\tdashboard.setLearnRooms(courses);\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tasync moveElementOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tfrom: GridPositionWithGroupIndex,\n\t\tto: GridPositionWithGroupIndex,\n\t\tuserId: EntityId\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tthis.validateUsersMatch(dashboard, userId);\n\n\t\tdashboard.moveElement(from, to);\n\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tasync renameGroupOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tposition: GridPosition,\n\t\tparams: string,\n\t\tuserId: EntityId\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tthis.validateUsersMatch(dashboard, userId);\n\n\t\tconst gridElement = dashboard.getElement(position);\n\t\tgridElement.setGroupName(params);\n\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tprivate validateUsersMatch(dashboard: DashboardEntity, userId: EntityId) {\n\t\tif (dashboard.getUserId() !== userId) {\n\t\t\tthrow new NotFoundException('no such dashboard found');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseManagementConsole.html":{"url":"classes/DatabaseManagementConsole.html","title":"class - DatabaseManagementConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseManagementConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                seedCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService, databaseManagementUc: DatabaseManagementUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/console/database-management.console.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementUc\n                                                  \n                                                        \n                                                                        DatabaseManagementUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'export', options: undefined, description: 'export database collections to filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'seed', options: undefined, description: 'reset database collections with seed data from filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabaseManagementController.html":{"url":"controllers/DatabaseManagementController.html","title":"controller - DatabaseManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabaseManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/controller/database-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/database\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollection\n                            \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                            \n                                    Async\n                                importCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('seed/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @All('seed')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Param, Post, All } from '@nestjs/common';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\n@Controller('management/database')\nexport class DatabaseManagementController {\n\tconstructor(private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@All('seed')\n\tasync importCollections(): Promise {\n\t\treturn this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem();\n\t}\n\n\t@Post('seed/:collectionName')\n\tasync importCollection(@Param('collectionName') collectionName: string): Promise {\n\t\treturn this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem([collectionName]);\n\t}\n\n\t@Post('export')\n\tasync exportCollections(): Promise {\n\t\treturn this.databaseManagementUc.exportCollectionsToFileSystem();\n\t}\n\n\t@Post('export/:collectionName')\n\tasync exportCollection(@Param('collectionName') collectionName: string): Promise {\n\t\treturn this.databaseManagementUc.exportCollectionsToFileSystem([collectionName]);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseManagementModule.html":{"url":"modules/DatabaseManagementModule.html","title":"module - DatabaseManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseManagementService } from './database-management.service';\n\n@Module({\n\timports: [DatabaseManagementService],\n\texports: [DatabaseManagementService],\n})\nexport class DatabaseManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementService.html":{"url":"injectables/DatabaseManagementService.html","title":"injectable - DatabaseManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearCollection\n                            \n                            \n                                    Async\n                                collectionExists\n                            \n                            \n                                    Async\n                                createCollection\n                            \n                            \n                                    Async\n                                dropCollection\n                            \n                            \n                                    Async\n                                findDocumentsOfCollection\n                            \n                            \n                                    Async\n                                getCollectionNames\n                            \n                            \n                                    Private\n                                getDatabaseCollection\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    db\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        collectionExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionExists(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dropCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    dropCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findDocumentsOfCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    findDocumentsOfCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollectionNames()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDatabaseCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Collection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string, jsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        db\n                    \n                \n\n                \n                    \n                        getdb()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { Collection, Db } from 'mongodb';\n\n@Injectable()\nexport class DatabaseManagementService {\n\tconstructor(private em: EntityManager) {}\n\n\tprivate get db(): Db {\n\t\treturn this.em.getConnection('write').getDb();\n\t}\n\n\tprivate getDatabaseCollection(collectionName: string): Collection {\n\t\tconst collection = this.db.collection(collectionName);\n\t\treturn collection;\n\t}\n\n\tasync importCollection(collectionName: string, jsonDocuments: unknown[]): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tif (jsonDocuments.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst { insertedCount } = await collection.insertMany(jsonDocuments, {\n\t\t\tforceServerObjectId: true,\n\t\t\tbypassDocumentValidation: true,\n\t\t});\n\t\treturn insertedCount;\n\t}\n\n\tasync findDocumentsOfCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst documents = (await collection.find({}).toArray()) as unknown[];\n\t\treturn documents;\n\t}\n\n\tasync clearCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst { deletedCount } = await collection.deleteMany({});\n\t\treturn deletedCount || 0;\n\t}\n\n\tasync getCollectionNames(): Promise {\n\t\tconst collections = (await this.db.listCollections(undefined, { nameOnly: true }).toArray()) as unknown[] as {\n\t\t\tname: string;\n\t\t}[];\n\t\tconst collectionNames = collections.map((collection) => collection.name);\n\t\treturn collectionNames;\n\t}\n\n\tasync collectionExists(collectionName: string): Promise {\n\t\tconst collections = await this.getCollectionNames();\n\t\tconst result = collections.includes(collectionName);\n\t\treturn result;\n\t}\n\n\tasync createCollection(collectionName: string): Promise {\n\t\tawait this.db.createCollection(collectionName);\n\t}\n\n\tasync dropCollection(collectionName: string): Promise {\n\t\tawait this.db.dropCollection(collectionName);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementUc.html":{"url":"injectables/DatabaseManagementUc.html","title":"injectable - DatabaseManagementUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                basePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollectionsToFileSystem\n                            \n                            \n                                    Private\n                                getSeedFolder\n                            \n                            \n                                    Private\n                                getTargetFolder\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromFilesystem\n                            \n                            \n                                    Private\n                                    Async\n                                loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                            \n                            \n                                    Async\n                                seedDatabaseCollectionsFromFileSystem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseDir\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileSystemAdapter: FileSystemAdapter, databaseManagementService: DatabaseManagementService, bsonConverter: BsonConverter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileSystemAdapter\n                                                  \n                                                        \n                                                                        FileSystemAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementService\n                                                  \n                                                        \n                                                                        DatabaseManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bsonConverter\n                                                  \n                                                        \n                                                                        BsonConverter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollectionsToFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:183\n                \n            \n\n\n            \n                \n                    Exports all or defined  from database as bson to filesystem.\nThe behaviour should match $ mongoexport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional override existing seed data files\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSeedFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeedFolder()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:38\n                \n            \n\n\n            \n                \n                    setup dir with json files\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTargetFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFolder(toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:46\n                \n            \n\n\n            \n                \n                    export folder name based on current date\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromDatabase(targetFolder: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:63\n                \n            \n\n\n            \n                \n                    Loads all collection names from database and adds related file paths.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetFolder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromFilesystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromFilesystem(baseDir: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:76\n                \n            \n\n\n            \n                \n                    Loads all collection names and file paths from backup files.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseDir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCollectionsAvailableFromSourceAndFilterByCollectionNames(source: \"files\" | \"database\", folder: string, collectionNameFilter?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:91\n                \n            \n\n\n            \n                \n                    Scans  for existing collections and optionally filters them based on \n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            \"files\" | \"database\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collectionNameFilter\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        the filtered collection names and related file paths\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedDatabaseCollectionsFromFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedDatabaseCollectionsFromFileSystem(collections?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:134\n                \n            \n\n\n            \n                \n                    Imports all or filtered  from filesystem as bson to database.\nThe behaviour should match $ mongoimport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '../../../../../../backup'\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                        \n                    \n\n            \n                \n                    relative path to seed data folder based of location of this file.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseDir\n                    \n                \n\n                \n                    \n                        getbaseDir()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:30\n                                \n                            \n                    \n                        \n                                absolute path reference for seed data base folder.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteFilesConsole.html":{"url":"classes/DeleteFilesConsole.html","title":"class - DeleteFilesConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteFilesConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/job/delete-files.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeDeletedFilesData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deleteFilesUc: DeleteFilesUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/job/delete-files.console.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deleteFilesUc\n                                                  \n                                                        \n                                                                        DeleteFilesUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/files/job/delete-files.console.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDeletedFilesData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDeletedFilesData(removedSinceDays: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'cleanup-job ', description: 'cleanup job to remove files that were marked for deletion  days ago'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/files/job/delete-files.console.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removedSinceDays\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Console, Command } from 'nestjs-console';\nimport { Logger } from '@src/core/logger';\nimport { DeleteFilesUc } from '../uc';\n\n@Console({ command: 'files', description: 'file deletion console' })\nexport class DeleteFilesConsole {\n\tprivate logger: Logger;\n\n\tconstructor(private deleteFilesUc: DeleteFilesUc) {\n\t\tthis.logger = new Logger(DeleteFilesConsole.name);\n\t}\n\n\t@Command({\n\t\tcommand: 'cleanup-job ',\n\t\tdescription: 'cleanup job to remove files that were marked for deletion  days ago',\n\t})\n\tasync removeDeletedFilesData(removedSinceDays: number): Promise {\n\t\tthis.logger.log(`cleanup job will remove files that were marked for deletion ${removedSinceDays} days ago`);\n\t\tconst removedSince = new Date();\n\t\tremovedSince.setDate(removedSince.getDate() - removedSinceDays);\n\n\t\tawait this.deleteFilesUc.removeDeletedFilesData(removedSince);\n\t\tthis.logger.log('cleanup job finished');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteFilesUc.html":{"url":"injectables/DeleteFilesUc.html","title":"injectable - DeleteFilesUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeleteFilesUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/uc/delete-files.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeDeletedFilesData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filesRepo: FilesRepo, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/uc/delete-files.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filesRepo\n                                                  \n                                                        \n                                                                        FilesRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDeletedFilesData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDeletedFilesData(removedSince: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/files/uc/delete-files.uc.ts:15\n                \n            \n\n\n            \n                \n                    Schedules files that have been removed prior removedSince by a user to be removed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removedSince\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { FilesRepo } from '@shared/repo';\n\n@Injectable()\nexport class DeleteFilesUc {\n\tconstructor(private filesRepo: FilesRepo, private logger: Logger) {\n\t\tthis.logger.setContext(DeleteFilesUc.name);\n\t}\n\n\t/**\n\t * Schedules files that have been removed prior removedSince by a user to be removed.\n\t * @param removedSince\n\t */\n\tasync removeDeletedFilesData(removedSince: Date): Promise {\n\t\tconst filesForDeletion = await this.filesRepo.findAllFilesForCleanup(removedSince);\n\t\tconst numberOfFiles = filesForDeletion.length;\n\t\tthis.logger.log(`${numberOfFiles} files will be deleted`);\n\t\tconst failingFileIds: string[] = [];\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const file of filesForDeletion) {\n\t\t\ttry {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait this.filesRepo.deleteFile(file);\n\t\t\t} catch (err) {\n\t\t\t\tfailingFileIds.push(file.id);\n\t\t\t\tthis.logger.error(err);\n\t\t\t}\n\t\t}\n\t\tthis.logger.log(`${numberOfFiles - failingFileIds.length} out of ${numberOfFiles} files were successfully deleted`);\n\t\tif (failingFileIds.length > 0) {\n\t\t\tthis.logger.error('the following files could not be deleted:', failingFileIds);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Directory.html":{"url":"entities/Directory.html","title":"entity - Directory","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Directory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EncryptedStringType.html":{"url":"classes/EncryptedStringType.html","title":"class - EncryptedStringType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EncryptedStringType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/types/EncryptedString.type.ts\n        \n\n\n            \n                Description\n            \n            \n                Serialization type to transparent encrypt string values in database.\n\n            \n\n            \n                Extends\n            \n            \n                        Type\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encryptionService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToDatabaseValue\n                            \n                            \n                                convertToJSValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(customKey?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encryptionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SymetricKeyEncryptionService\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToDatabaseValue\n                        \n                    \n                \n            \n            \n                \nconvertToDatabaseValue(value: string | undefined, platform: Platform)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platform\n                                    \n                                            Platform\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertToJSValue\n                        \n                    \n                \n            \n            \n                \nconvertToJSValue(value: string | undefined, platform: Platform)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platform\n                                    \n                                            Platform\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Configuration } from '@hpi-schul-cloud/commons';\nimport { Type, Platform } from '@mikro-orm/core';\nimport { SymetricKeyEncryptionService } from '../../infra/encryption';\n\n/**\n * Serialization type to transparent encrypt string values in database.\n */\nexport class EncryptedStringType extends Type {\n\t// TODO modularize service?\n\tprivate encryptionService: SymetricKeyEncryptionService;\n\n\tconstructor(customKey?: string) {\n\t\tsuper();\n\t\tif (customKey) {\n\t\t\tthis.encryptionService = new SymetricKeyEncryptionService(customKey);\n\t\t} else {\n\t\t\tthis.encryptionService = new SymetricKeyEncryptionService(Configuration.get('S3_KEY') as string);\n\t\t}\n\t}\n\n\tconvertToDatabaseValue(value: string | undefined, platform: Platform): string {\n\t\t// keep nullish values\n\t\tif (value == null) {\n\t\t\treturn value as unknown as string;\n\t\t}\n\n\t\t// encrypt non-empty strings only\n\t\tif (value.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tconst encryptedString = this.encryptionService.encrypt(value);\n\n\t\treturn encryptedString;\n\t}\n\n\tconvertToJSValue(value: string | undefined, platform: Platform): string {\n\t\t// keep nullish values\n\t\tif (value == null) {\n\t\t\treturn value as unknown as string;\n\t\t}\n\n\t\t// decrypt non-empty strings only\n\t\tif (value.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// decrypt only non-empty strings\n\t\tconst decryptedString: string = this.encryptionService.decrypt(value);\n\n\t\treturn decryptedString;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EncryptionModule.html":{"url":"modules/EncryptionModule.html","title":"module - EncryptionModule","body":"\n                   \n\n\n\n\n    Modules\n    EncryptionModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: EncryptionModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                EncryptionModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { SymetricKeyEncryptionService } from './encryption.service';\n\nexport interface EncryptionModuleOptions {\n\tSymmetricCipherKey: string;\n}\n\n@Module({})\nexport class EncryptionModule {\n\tstatic forRoot(options: EncryptionModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: EncryptionModule,\n\t\t\tproviders: [\n\t\t\t\tSymetricKeyEncryptionService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'SYMMETRIC_CIPHER_KEY',\n\t\t\t\t\tuseValue: options.SymmetricCipherKey,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [SymetricKeyEncryptionService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EncryptionModuleOptions.html":{"url":"interfaces/EncryptionModuleOptions.html","title":"interface - EncryptionModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EncryptionModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            SymmetricCipherKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SymmetricCipherKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SymmetricCipherKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { SymetricKeyEncryptionService } from './encryption.service';\n\nexport interface EncryptionModuleOptions {\n\tSymmetricCipherKey: string;\n}\n\n@Module({})\nexport class EncryptionModule {\n\tstatic forRoot(options: EncryptionModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: EncryptionModule,\n\t\t\tproviders: [\n\t\t\t\tSymetricKeyEncryptionService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'SYMMETRIC_CIPHER_KEY',\n\t\t\t\t\tuseValue: options.SymmetricCipherKey,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [SymetricKeyEncryptionService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId, NewsTargetModel } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { FeathersServiceProvider } from '@shared/infra/feathers';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FeathersModule_exports\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: string, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: string, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/feathers/feathers-service.provider.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: string, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/File.html":{"url":"entities/File.html","title":"entity - File","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bucket\n                            \n                            \n                                storageFileName\n                            \n                            \n                                storageProvider\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bucket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StorageProvider\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('StorageProvider', {fieldName: 'storageProviderId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileStorageAdapter.html":{"url":"injectables/FileStorageAdapter.html","title":"injectable - FileStorageAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileStorageAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/filestorage/filestorage.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: File)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/filestorage/filestorage.adapter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { S3Client, DeleteObjectCommand } from '@aws-sdk/client-s3';\n\nimport { Injectable } from '@nestjs/common';\nimport { StorageProvider, File } from '@shared/domain';\n\nfunction createStorageProviderClient(storageProvider: StorageProvider): S3Client {\n\treturn new S3Client({\n\t\tendpoint: storageProvider.endpointUrl,\n\t\tforcePathStyle: true,\n\t\tregion: storageProvider.region,\n\t\ttls: true,\n\t\tcredentials: {\n\t\t\taccessKeyId: storageProvider.accessKeyId,\n\t\t\tsecretAccessKey: storageProvider.secretAccessKey,\n\t\t},\n\t});\n}\n\n@Injectable()\nexport class FileStorageAdapter {\n\tasync deleteFile(file: File): Promise {\n\t\tconst { storageProvider, bucket, storageFileName } = file;\n\t\tconst storageProviderClient = createStorageProviderClient(storageProvider);\n\t\tconst deletionCommand = new DeleteObjectCommand({ Bucket: bucket, Key: storageFileName });\n\t\tawait storageProviderClient.send(deletionCommand);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemAdapter.html":{"url":"injectables/FileSystemAdapter.html","title":"injectable - FileSystemAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encoding\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDir\n                            \n                            \n                                    Async\n                                createTmpDir\n                            \n                            \n                                joinPath\n                            \n                            \n                                    Async\n                                readDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Async\n                                removeDirRecursive\n                            \n                            \n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    EOL\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:26\n                \n            \n\n\n            \n                \n                    creates a directory if not already exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTmpDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTmpDir(dirNamePrefix: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:68\n                \n            \n\n\n            \n                \n                    Creates a folder in systems temp path.\nThe dirNamePrefix given will be extended by six random characters.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirNamePrefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        full path string to temp folder, format depends on os\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinPath\n                        \n                    \n                \n            \n            \n                \njoinPath(...paths: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    readDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:36\n                \n            \n\n\n            \n                \n                    Lists filenames of given folderPath\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        string array of filenames\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filePath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:57\n                \n            \n\n\n            \n                \n                    Read file from filesystem with given encoding, defaults to utf-8\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to existing file, format depending on os\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        file content as encoded text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDirRecursive\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDirRecursive(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:78\n                \n            \n\n\n            \n                \n                    Removes the given folder recursively including content when not empty.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder, format depending on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        writeFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeFile(filePath: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:48\n                \n            \n\n\n            \n                \n                    Write text to file, will override existing files.\nThe folder in which the file will be created must exist.\nThe path format depends on os\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to a file\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BufferEncoding\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        EOL\n                    \n                \n\n                \n                    \n                        getEOL()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { promises as fsp, existsSync } from 'fs';\nimport os from 'os';\nimport path from 'path';\n\nimport rimraf = require('rimraf');\n\nconst { mkdir, readdir, writeFile, readFile, mkdtemp } = fsp;\n\n@Injectable()\nexport class FileSystemAdapter {\n\tprivate encoding: BufferEncoding;\n\n\tconstructor() {\n\t\tthis.encoding = 'utf-8';\n\t}\n\n\tget EOL(): string {\n\t\treturn os.EOL;\n\t}\n\n\t/**\n\t * creates a directory if not already exists\n\t * @param folderPath\n\t */\n\tasync createDir(folderPath: string): Promise {\n\t\tconst exists = existsSync(folderPath);\n\t\tif (!exists) await mkdir(folderPath);\n\t}\n\n\t/**\n\t * Lists filenames of given folderPath\n\t * @param folderPath path to an existing folder\n\t * @returns string array of filenames\n\t */\n\tasync readDir(folderPath: string): Promise {\n\t\tconst filenames = await readdir(folderPath, { encoding: this.encoding });\n\t\treturn filenames;\n\t}\n\n\t/**\n\t * Write text to file, will override existing files.\n\t * The folder in which the file will be created must exist.\n\t * The path format depends on os\n\t * @param filePath path to a file\n\t * @param text\n\t */\n\tasync writeFile(filePath: string, text: string): Promise {\n\t\tawait writeFile(filePath, text);\n\t}\n\n\t/**\n\t * Read file from filesystem with given encoding, defaults to utf-8\n\t * @param filePath path to existing file, format depending on os\n\t * @returns file content as encoded text\n\t */\n\tasync readFile(filePath: string): Promise {\n\t\tconst text = await readFile(filePath, this.encoding);\n\t\treturn text;\n\t}\n\n\t/**\n\t * Creates a folder in systems temp path.\n\t * The dirNamePrefix given will be extended by six random characters.\n\t * @param dirNamePrefix\n\t * @returns full path string to temp folder, format depends on os\n\t */\n\tasync createTmpDir(dirNamePrefix: string): Promise {\n\t\tconst dirPath = this.joinPath(os.tmpdir(), dirNamePrefix);\n\t\tconst tmpDirPath = await mkdtemp(dirPath);\n\t\treturn tmpDirPath;\n\t}\n\n\t/**\n\t * Removes the given folder recursively including content when not empty.\n\t * @param folderPath path to an existing folder, format depending on\n\t */\n\tasync removeDirRecursive(folderPath: string): Promise {\n\t\t// fs.rm changed in node 14.14, use rimraf instead\n\t\trimraf.sync(folderPath);\n\t\treturn Promise.resolve();\n\t}\n\n\tjoinPath(...paths: string[]): string {\n\t\treturn path.join(...paths);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileSystemModule.html":{"url":"modules/FileSystemModule.html","title":"module - FileSystemModule","body":"\n                   \n\n\n\n\n    Modules\n    FileSystemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileSystemAdapter } from './file-system.adapter';\n\n@Module({\n\tproviders: [FileSystemAdapter],\n\texports: [FileSystemAdapter],\n})\nexport class FileSystemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FilesModule_imports\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nLoggerModule->FilesModule\n\n\n\n\n\nDeleteFilesUc\n\nDeleteFilesUc\n\nFilesModule -->\n\nDeleteFilesUc->FilesModule\n\n\n\n\n\nFileStorageAdapter\n\nFileStorageAdapter\n\nFilesModule -->\n\nFileStorageAdapter->FilesModule\n\n\n\n\n\nFilesRepo\n\nFilesRepo\n\nFilesModule -->\n\nFilesRepo->FilesModule\n\n\n\n\n\nStorageProviderRepo\n\nStorageProviderRepo\n\nFilesModule -->\n\nStorageProviderRepo->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeleteFilesUc\n                        \n                        \n                            FileStorageAdapter\n                        \n                        \n                            FilesRepo\n                        \n                        \n                            StorageProviderRepo\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileStorageAdapter } from '@shared/infra/filestorage';\nimport { FilesRepo, StorageProviderRepo } from '@shared/repo';\nimport { LoggerModule } from '@src/core/logger';\nimport { DeleteFilesConsole } from './job/delete-files.console';\nimport { DeleteFilesUc } from './uc';\n\n@Module({\n\timports: [LoggerModule],\n\tproviders: [DeleteFilesConsole, DeleteFilesUc, FilesRepo, StorageProviderRepo, FileStorageAdapter],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesRepo.html":{"url":"injectables/FilesRepo.html","title":"injectable - FilesRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/files/files.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                findAllFilesForCleanup\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileStorageAdapter: FileStorageAdapter, em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/files/files.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileStorageAdapter\n                                                  \n                                                        \n                                                                        FileStorageAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: BaseFile)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/files/files.repo.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                BaseFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFilesForCleanup\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFilesForCleanup(cleanupThreshold: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/files/files.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cleanupThreshold\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['storageProvider']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/files/files.repo.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { BaseFile, File } from '@shared/domain';\nimport { FileStorageAdapter } from '@shared/infra/filestorage';\nimport { BaseRepo } from '../base.repo';\n\n@Injectable()\nexport class FilesRepo extends BaseRepo {\n\tconstructor(private fileStorageAdapter: FileStorageAdapter, protected readonly em: EntityManager) {\n\t\tsuper(em);\n\t}\n\n\tpropertiesToPopulate = ['storageProvider'];\n\n\tasync findAllFilesForCleanup(cleanupThreshold: Date): Promise {\n\t\tconst filesForCleanupQuery = { deletedAt: { $lte: cleanupThreshold } };\n\t\tconst files = await this.em.find(BaseFile, filesForCleanupQuery);\n\t\tconst regularFiles = files.filter((file) => file instanceof File);\n\t\tawait this.em.populate(regularFiles, this.propertiesToPopulate);\n\t\treturn files;\n\t}\n\n\tasync deleteFile(file: BaseFile): Promise {\n\t\tif (file instanceof File) await this.fileStorageAdapter.deleteFile(file);\n\t\tawait this.removeAndFlush(file);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\nimport { ApiValidationErrorResponse } from '../dto/api-validation-error.response';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tif (error instanceof ApiValidationError) {\n\t\tconst response = new ApiValidationErrorResponse(error);\n\t\treturn response;\n\t}\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create default response for all unknown errors\n\t\treturn createErrorResponseForUnknownError();\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger: ILogger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\tforbidUnknownValues: true,\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridElement.html":{"url":"classes/GridElement.html","title":"class - GridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElement\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                references\n                            \n                            \n                                    Private\n                                sortReferences\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addReferences\n                            \n                            \n                                    Static\n                                FromGroup\n                            \n                            \n                                    Static\n                                FromPersistedGroup\n                            \n                            \n                                    Static\n                                FromPersistedReference\n                            \n                            \n                                    Static\n                                FromSingleReference\n                            \n                            \n                                getContent\n                            \n                            \n                                getId\n                            \n                            \n                                getReferences\n                            \n                            \n                                hasId\n                            \n                            \n                                isGroup\n                            \n                            \n                                removeReference\n                            \n                            \n                                removeReferenceByIndex\n                            \n                            \n                                setGroupName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILearnroom[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sortReferences\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:39\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromGroup(title: string, references: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    references\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromPersistedGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromPersistedGroup(id: EntityId, title: string | undefined, group: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromPersistedReference\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromPersistedReference(id: EntityId, reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromSingleReference\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromSingleReference(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContent\n                        \n                    \n                \n            \n            \n                \ngetContent()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ILearnroom[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasId\n                        \n                    \n                \n            \n            \n                \nhasId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReference\n                        \n                    \n                \n            \n            \n                \nremoveReference(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReferenceByIndex\n                        \n                    \n                \n            \n            \n                \nremoveReferenceByIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGroupName\n                        \n                    \n                \n            \n            \n                \nsetGroupName(newGroupName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newGroupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId, LearnroomMetadata } from '@shared/domain/types';\nimport { ILearnroom } from '@shared/domain/interface';\n\nconst defaultColumns = 4;\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId | undefined;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReferenceByIndex(index: number): void;\n\n\tremoveReference(reference: ILearnroom): void;\n\n\tgetReferences(): ILearnroom[];\n\n\taddReferences(anotherReference: ILearnroom[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle?: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: LearnroomMetadata[];\n\tgroupId?: string;\n};\n\nexport class GridElement implements IGridElement {\n\tid?: EntityId;\n\n\ttitle?: string;\n\n\tprivate sortReferences = (a: ILearnroom, b: ILearnroom) => {\n\t\tconst titleA = a.getMetadata().title;\n\t\tconst titleB = b.getMetadata().title;\n\t\tif (titleA  titleB) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: ILearnroom[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references.sort(this.sortReferences);\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string | undefined, group: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: ILearnroom[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId | undefined {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): ILearnroom[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReferenceByIndex(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : '';\n\t\tconst groupMetadata = {\n\t\t\tgroupId: this.getId(),\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; grid: GridElementWithPosition[]; userId: EntityId };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\tgrid: Map;\n\n\tuserId: EntityId;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tthis.userId = props.userId;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetUserId(): EntityId {\n\t\treturn this.userId;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tsetLearnRooms(rooms: ILearnroom[]): void {\n\t\tthis.removeRoomsNotInList(rooms);\n\t\tconst newRooms = this.determineNewRoomsIn(rooms);\n\n\t\tnewRooms.forEach((room) => {\n\t\t\tthis.addRoom(room);\n\t\t});\n\t}\n\n\tprivate removeRoomsNotInList(roomList: ILearnroom[]): void {\n\t\t[...this.grid.keys()].forEach((key) => {\n\t\t\tconst element = this.grid.get(key) as IGridElement;\n\t\t\tconst currentRooms = element.getReferences();\n\t\t\tcurrentRooms.forEach((room) => {\n\t\t\t\tif (!roomList.includes(room)) {\n\t\t\t\t\telement.removeReference(room);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (element.getReferences().length === 0) {\n\t\t\t\tthis.grid.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate determineNewRoomsIn(rooms: ILearnroom[]): ILearnroom[] {\n\t\tconst result: ILearnroom[] = [];\n\t\tconst existingRooms = this.allRooms();\n\t\trooms.forEach((room) => {\n\t\t\tif (!existingRooms.includes(room)) {\n\t\t\t\tresult.push(room);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tprivate allRooms(): ILearnroom[] {\n\t\tconst elements = [...this.grid.values()];\n\t\tconst references = elements\n\t\t\t.map((el) => {\n\t\t\t\treturn el.getReferences();\n\t\t\t})\n\t\t\t.flat();\n\t\treturn references;\n\t}\n\n\tprivate addRoom(room: ILearnroom): void {\n\t\tconst index = this.getFirstOpenIndex();\n\t\tconst newElement = GridElement.FromSingleReference(room);\n\t\tthis.grid.set(index, newElement);\n\t}\n\n\tprivate getFirstOpenIndex(): number {\n\t\tlet i = 0;\n\t\twhile (this.grid.get(i) !== undefined) {\n\t\t\ti += 1;\n\t\t}\n\t\treturn i;\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReferenceByIndex(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICollectionFilePath.html":{"url":"interfaces/ICollectionFilePath.html","title":"interface - ICollectionFilePath","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICollectionFilePath\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            collectionName\n                                        \n                                \n                                \n                                        \n                                            filePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collectionName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collectionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseGroupProperties.html":{"url":"interfaces/ICourseGroupProperties.html","title":"interface - ICourseGroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseGroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            startDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionTeachers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teachers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            untilDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionTeachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionTeachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        untilDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        untilDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\n\nimport { ILearnroom } from '@shared/domain/interface';\nimport { LearnroomMetadata, LearnroomTypes } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\nexport interface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n\tstartDate?: Date;\n\tuntilDate?: Date;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Index({ name: 'findAllForTeacher', properties: ['substitutionTeachers', 'teachers'] })\n@Index({ name: 'findAllByUserId', properties: ['students', 'substitutionTeachers', 'teachers'] })\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps implements ILearnroom {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\t@Property()\n\tstartDate?: Date;\n\n\t@Index({ name: 'activeCourses' })\n\t@Property()\n\tuntilDate?: Date;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t\tif (props.untilDate) this.untilDate = props.untilDate;\n\t\tif (props.startDate) this.startDate = props.startDate;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tisFinished(): boolean {\n\t\tif (!this.untilDate) {\n\t\t\treturn false;\n\t\t}\n\t\tconst isFinished = this.untilDate \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardModelProperties.html":{"url":"interfaces/IDashboardModelProperties.html","title":"interface - IDashboardModelProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardModelProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.model.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            gridElements\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gridElements\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gridElements:         DashboardGridElementModel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DashboardGridElementModel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n\tEntity,\n\tProperty,\n\tManyToOne,\n\tOneToMany,\n\tManyToMany,\n\tCollection,\n\tIdentifiedReference,\n\twrap,\n} from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\nimport { User } from './user.entity';\nimport { Course } from './course.entity';\n\nexport interface DashboardGridElementModelProperties {\n\tid?: string;\n\ttitle?: string;\n\txPos: number;\n\tyPos: number;\n\treferences: Course[];\n\tdashboard: DashboardModelEntity;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor({ id, title, xPos, yPos, references, dashboard }: DashboardGridElementModelProperties) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t\tthis.title = title;\n\t\tthis.xPos = xPos;\n\t\tthis.yPos = yPos;\n\t\tthis.references.set(references);\n\t\tthis.dashboard = wrap(dashboard).toReference();\n\t}\n\n\t@Property()\n\ttitle?: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t@ManyToMany('Course', undefined, { fieldName: 'referenceIds' })\n\treferences = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\nexport interface IDashboardModelProperties {\n\tid: string;\n\tuser: User;\n\tgridElements?: DashboardGridElementModel[];\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(props: IDashboardModelProperties) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(props.id);\n\t\tthis.id = props.id;\n\t\tthis.user = wrap(props.user).toReference();\n\t\tif (props.gridElements) this.gridElements.set(props.gridElements);\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\t@ManyToOne('User', { fieldName: 'userId', wrappedReference: true })\n\tuser: IdentifiedReference;\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardRepo.html":{"url":"interfaces/IDashboardRepo.html","title":"interface - IDashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/dashboard/dashboard.repo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDashboardById\n                                    \n                                \n                                \n                                    \n                                        getUsersDashboard\n                                    \n                                \n                                \n                                    \n                                        persistAndFlush\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \ngetDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \npersistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/dashboard/dashboard.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, GridElementWithPosition, DashboardModelEntity } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst generateEmptyDashboard = (userId: EntityId) => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tconst dashboard = new DashboardEntity(new ObjectId().toString(), { grid: gridArray, userId });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(userId: EntityId): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager, protected readonly mapper: DashboardModelMapper) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tthis.em.persist(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await this.mapper.mapDashboardToModel(entity);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn this.mapper.mapDashboardToEntity(modelEntity);\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await this.mapper.mapDashboardToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(userId: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, { user: userId });\n\t\tif (dashboardModel) {\n\t\t\treturn this.mapper.mapDashboardToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateEmptyDashboard(userId);\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFileProperties.html":{"url":"interfaces/IFileProperties.html","title":"interface - IFileProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFileProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bucket\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deletedAt\n                                        \n                                \n                                \n                                        \n                                            storageFileName\n                                        \n                                \n                                \n                                        \n                                            storageProvider\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deletedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deletedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageFileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storageFileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageProvider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storageProvider:         StorageProvider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StorageProvider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\nexport interface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory!: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElement.html":{"url":"interfaces/IGridElement.html","title":"interface - IGridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getContent\n                                        \n                                \n                                \n                                        \n                                            getId\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addReferences\n                                    \n                                \n                                \n                                    \n                                        getReferences\n                                    \n                                \n                                \n                                    \n                                        hasId\n                                    \n                                \n                                \n                                    \n                                        isGroup\n                                    \n                                \n                                \n                                    \n                                        removeReference\n                                    \n                                \n                                \n                                    \n                                        removeReferenceByIndex\n                                    \n                                \n                                \n                                    \n                                        setGroupName\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: ILearnroom[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                ILearnroom[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ILearnroom[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasId\n                        \n                    \n                \n            \n            \n                \nhasId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReference\n                        \n                    \n                \n            \n            \n                \nremoveReference(reference: ILearnroom)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                ILearnroom\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReferenceByIndex\n                        \n                    \n                \n            \n            \n                \nremoveReferenceByIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGroupName\n                        \n                    \n                \n            \n            \n                \nsetGroupName(newGroupName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newGroupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getContent:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getId:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId, LearnroomMetadata } from '@shared/domain/types';\nimport { ILearnroom } from '@shared/domain/interface';\n\nconst defaultColumns = 4;\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId | undefined;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReferenceByIndex(index: number): void;\n\n\tremoveReference(reference: ILearnroom): void;\n\n\tgetReferences(): ILearnroom[];\n\n\taddReferences(anotherReference: ILearnroom[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle?: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: LearnroomMetadata[];\n\tgroupId?: string;\n};\n\nexport class GridElement implements IGridElement {\n\tid?: EntityId;\n\n\ttitle?: string;\n\n\tprivate sortReferences = (a: ILearnroom, b: ILearnroom) => {\n\t\tconst titleA = a.getMetadata().title;\n\t\tconst titleB = b.getMetadata().title;\n\t\tif (titleA  titleB) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t};\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: ILearnroom[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references.sort(this.sortReferences);\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string | undefined, group: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: ILearnroom): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: ILearnroom[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: ILearnroom[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId | undefined {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): ILearnroom[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReferenceByIndex(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : '';\n\t\tconst groupMetadata = {\n\t\t\tgroupId: this.getId(),\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; grid: GridElementWithPosition[]; userId: EntityId };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\tgrid: Map;\n\n\tuserId: EntityId;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tthis.userId = props.userId;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetUserId(): EntityId {\n\t\treturn this.userId;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tsetLearnRooms(rooms: ILearnroom[]): void {\n\t\tthis.removeRoomsNotInList(rooms);\n\t\tconst newRooms = this.determineNewRoomsIn(rooms);\n\n\t\tnewRooms.forEach((room) => {\n\t\t\tthis.addRoom(room);\n\t\t});\n\t}\n\n\tprivate removeRoomsNotInList(roomList: ILearnroom[]): void {\n\t\t[...this.grid.keys()].forEach((key) => {\n\t\t\tconst element = this.grid.get(key) as IGridElement;\n\t\t\tconst currentRooms = element.getReferences();\n\t\t\tcurrentRooms.forEach((room) => {\n\t\t\t\tif (!roomList.includes(room)) {\n\t\t\t\t\telement.removeReference(room);\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (element.getReferences().length === 0) {\n\t\t\t\tthis.grid.delete(key);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate determineNewRoomsIn(rooms: ILearnroom[]): ILearnroom[] {\n\t\tconst result: ILearnroom[] = [];\n\t\tconst existingRooms = this.allRooms();\n\t\trooms.forEach((room) => {\n\t\t\tif (!existingRooms.includes(room)) {\n\t\t\t\tresult.push(room);\n\t\t\t}\n\t\t});\n\t\treturn result;\n\t}\n\n\tprivate allRooms(): ILearnroom[] {\n\t\tconst elements = [...this.grid.values()];\n\t\tconst references = elements\n\t\t\t.map((el) => {\n\t\t\t\treturn el.getReferences();\n\t\t\t})\n\t\t\t.flat();\n\t\treturn references;\n\t}\n\n\tprivate addRoom(room: ILearnroom): void {\n\t\tconst index = this.getFirstOpenIndex();\n\t\tconst newElement = GridElement.FromSingleReference(room);\n\t\tthis.grid.set(index, newElement);\n\t}\n\n\tprivate getFirstOpenIndex(): number {\n\t\tlet i = 0;\n\t\twhile (this.grid.get(i) !== undefined) {\n\t\t\ti += 1;\n\t\t}\n\t\treturn i;\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReferenceByIndex(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IImportUserProperties.html":{"url":"interfaces/IImportUserProperties.html","title":"interface - IImportUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IImportUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/import-user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            classNames\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            flagged\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            ldapDn\n                                        \n                                \n                                \n                                        \n                                            ldapId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            matchedBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roleNames\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                        \n                                            system\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flagged\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flagged:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ldapDn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ldapDn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ldapId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ldapId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matchedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matchedBy:         MatchCreator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MatchCreator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleNames:         RoleName[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleName[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        system\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        system:         System\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         System\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, IdentifiedReference, Index, ManyToOne, Property, wrap } from '@mikro-orm/core';\nimport { BaseEntityReference, BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\n\nimport { System } from './system.entity';\n\nimport type { User } from './user.entity';\n\nexport interface IImportUserProperties {\n\t// references\n\tschool: School;\n\tsystem: System;\n\t// external identifiers\n\tldapDn: string;\n\tldapId: string;\n\t// descriptive properties\n\tfirstName: string;\n\tlastName: string;\n\temail: string; // TODO VO\n\troleNames?: RoleName[];\n\tclassNames?: string[];\n\tuser?: User;\n\tmatchedBy?: MatchCreator;\n\tflagged?: boolean;\n}\n\nexport enum MatchCreator {\n\tAUTO = 'auto',\n\tMANUAL = 'admin',\n}\nexport enum RoleName {\n\tSTUDENT = 'student',\n\tTEACHER = 'teacher',\n\tADMIN = 'administrator',\n}\n\n@Entity({ tableName: 'importusers' })\nexport class ImportUser extends BaseEntityWithTimestamps {\n\tconstructor(props: IImportUserProperties) {\n\t\tsuper();\n\t\tthis.school = wrap(props.school).toReference();\n\t\tthis.system = wrap(props.system).toReference();\n\t\tthis.ldapDn = props.ldapDn;\n\t\tthis.ldapId = props.ldapId;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tif (Array.isArray(props.roleNames) && props.roleNames.length > 0) this.roleNames.push(...props.roleNames);\n\t\tif (Array.isArray(props.classNames) && props.classNames.length > 0) this.classNames.push(...props.classNames);\n\t\tif (props.user && props.matchedBy) this.setMatch(props.user, props.matchedBy);\n\t\tif (props.flagged && props.flagged === true) this.flagged = true;\n\t}\n\n\t@ManyToOne(() => 'School', { fieldName: 'schoolId', wrappedReference: true, eager: true })\n\tschool: IdentifiedReference;\n\n\t@ManyToOne(() => 'System', { wrappedReference: true })\n\tsystem: IdentifiedReference;\n\n\t@Property()\n\tldapDn: string;\n\n\t/**\n\t * extracts the login name out of the dn which has the login name in 'uid=LOGINNAME,[...]'\n\t * */\n\tget loginName(): string | null {\n\t\tconst PATTERN_LOGIN_FROM_DN = /^uid=(.+?),/i; // extract uid from dn\n\t\tconst matches = this.ldapDn?.match(PATTERN_LOGIN_FROM_DN);\n\t\tif (Array.isArray(matches) && matches.length >= 2) {\n\t\t\tconst loginName = matches[1]; // 0: full match, 1: first group match\n\t\t\treturn loginName;\n\t\t}\n\t\treturn null;\n\t}\n\n\t@Property()\n\tldapId: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Property()\n\t/**\n\t * Lowercase email string\n\t */\n\temail: string;\n\n\t@Enum({ fieldName: 'roles' })\n\troleNames: RoleName[] = [];\n\n\t@Property()\n\tclassNames: string[] = [];\n\n\t/**\n\t * Update user-match together with matchedBy, take the field as read-only\n\t * @read\n\t */\n\t@ManyToOne('User', { fieldName: 'match_userId', eager: true, nullable: true })\n\t@Index({ options: { unique: true, partialFilterExpression: { match_userId: { $type: 'objectId' } } } })\n\tuser?: User;\n\n\t/**\n\t * References who set the user, take the field as read-only\n\t * @private\n\t */\n\t@Enum({ fieldName: 'match_matchedBy', nullable: true })\n\tmatchedBy?: MatchCreator;\n\n\t@Property({ type: Boolean })\n\tflagged = false;\n\n\tsetMatch(user: User, matchedBy: MatchCreator) {\n\t\tif (this.school.id !== user.school.id) {\n\t\t\tthrow new Error('not same school');\n\t\t}\n\t\tthis.user = user;\n\t\tthis.matchedBy = matchedBy;\n\t}\n\n\trevokeMatch() {\n\t\tthis.user = undefined;\n\t\tthis.matchedBy = undefined;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IImportUserScope.html":{"url":"interfaces/IImportUserScope.html","title":"interface - IImportUserScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IImportUserScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/importuser.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            classes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            flagged\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loginName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            matches\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flagged\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flagged:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loginName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        matches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        matches:         MatchCreatorScope[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MatchCreatorScope[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         RoleName\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleName\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { RoleName } from '../entity/import-user.entity';\n\nexport enum MatchCreatorScope {\n\tAUTO = 'auto',\n\tMANUAL = 'admin',\n\tNONE = 'none',\n}\n\nexport interface IImportUserScope {\n\tfirstName?: string;\n\tlastName?: string;\n\tloginName?: string;\n\tmatches?: MatchCreatorScope[];\n\tflagged?: boolean;\n\trole?: RoleName;\n\tclasses?: string;\n}\n\nexport interface INameMatch {\n\t/**\n\t * Match filter for lastName or firstName\n\t */\n\tname?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILearnroom.html":{"url":"interfaces/ILearnroom.html","title":"interface - ILearnroom","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILearnroom\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/learnroom.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LearnroomMetadata } from '@shared/domain/types';\n\nexport interface ILearnroom {\n\tgetMetadata: () => LearnroomMetadata;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILessonProperties.html":{"url":"interfaces/ILessonProperties.html","title":"interface - ILessonProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILessonProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\nexport interface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Index({ name: 'findAllByCourseIds' })\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INameMatch.html":{"url":"interfaces/INameMatch.html","title":"interface - INameMatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INameMatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/importuser.types.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Match filter for lastName or firstName\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { RoleName } from '../entity/import-user.entity';\n\nexport enum MatchCreatorScope {\n\tAUTO = 'auto',\n\tMANUAL = 'admin',\n\tNONE = 'none',\n}\n\nexport interface IImportUserScope {\n\tfirstName?: string;\n\tlastName?: string;\n\tloginName?: string;\n\tmatches?: MatchCreatorScope[];\n\tflagged?: boolean;\n\trole?: RoleName;\n\tclasses?: string;\n}\n\nexport interface INameMatch {\n\t/**\n\t * Match filter for lastName or firstName\n\t */\n\tname?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId | User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId | School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId | NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResolvedUser.html":{"url":"interfaces/IResolvedUser.html","title":"interface - IResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         IRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation', options: { unique: true } })\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany({ entity: 'Role' })\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISchoolProperties.html":{"url":"interfaces/ISchoolProperties.html","title":"interface - ISchoolProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISchoolProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ISchoolProperties {\n\tname: string;\n}\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\tconstructor(props: ISchoolProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n\n\t@Property()\n\tname!: string;\n\n\t@Property()\n\tinUserMigration?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStorageProviderProperties.html":{"url":"interfaces/IStorageProviderProperties.html","title":"interface - IStorageProviderProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStorageProviderProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/storageprovider.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessKeyId\n                                        \n                                \n                                \n                                        \n                                            endpointUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            secretAccessKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessKeyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessKeyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endpointUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpointUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretAccessKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretAccessKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { EncryptedStringType } from '@shared/repo/types/EncryptedString.type';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IStorageProviderProperties {\n\tendpointUrl: string;\n\taccessKeyId: string;\n\tsecretAccessKey: string;\n\tregion?: string;\n}\n\n@Entity({ tableName: 'storageproviders' })\nexport class StorageProvider extends BaseEntityWithTimestamps {\n\t@Property()\n\tendpointUrl!: string;\n\n\t@Property()\n\taccessKeyId!: string;\n\n\t@Property({ fieldName: 'secretAccessKey', type: EncryptedStringType })\n\tsecretAccessKey!: string;\n\n\t@Property()\n\tregion?: string;\n\n\tconstructor(props: IStorageProviderProperties) {\n\t\tsuper();\n\t\tthis.endpointUrl = props.endpointUrl;\n\t\tthis.accessKeyId = props.accessKeyId;\n\t\tthis.secretAccessKey = props.secretAccessKey;\n\t\tthis.region = props.region;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubmissionProperties.html":{"url":"interfaces/ISubmissionProperties.html","title":"interface - ISubmissionProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubmissionProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            courseGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeFiles\n                                        \n                                \n                                \n                                        \n                                            student\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentFiles\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseGroup:         CourseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CourseGroup[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        student\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        student:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Task\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamMembers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\nexport interface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tgetStudentId(): EntityId {\n\t\treturn this.student.id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISystemProperties.html":{"url":"interfaces/ISystemProperties.html","title":"interface - ISystemProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISystemProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/system.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alias\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alias:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface ISystemProperties {\n\ttype: string;\n\turl?: string;\n\talias?: string;\n}\n\n@Entity({ tableName: 'systems' })\nexport class System extends BaseEntityWithTimestamps {\n\tconstructor(props: ISystemProperties) {\n\t\tsuper();\n\t\tthis.type = props.type;\n\t\tif (props.url != null) this.url = props.url;\n\t\tif (props.alias != null) this.alias = props.alias;\n\t}\n\n\t@Property({})\n\ttype: string; // see legacy enum for valid values\n\n\t@Property()\n\turl?: string;\n\n\t@Property()\n\talias?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskProperties.html":{"url":"interfaces/ITaskProperties.html","title":"interface - ITaskProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            availableDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            finished\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lesson\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            submissions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        finished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        finished:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lesson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lesson:         Lesson\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lesson\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submissions:         Submission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Submission[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tdescription?: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n\tisFinished: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { courseName: string; lessonName: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdescription: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.description = props.description || '';\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisFinishedForUser(user: User): boolean {\n\t\treturn !!(this.finished?.contains(user) || this.course?.isFinished());\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionItems(): Submission[] {\n\t\tif (!this.submissions.isInitialized(true)) {\n\t\t\tthrow new Error('Submissions items are not loaded.');\n\t\t}\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submittedUserIds = this.getSubmissionItems().map((submission) => submission.student.id);\n\t\tconst uniqueSubmittedUserIds = [...new Set(submittedUserIds)];\n\n\t\treturn uniqueSubmittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst count = submittedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\t\tconst uniqueGradedUserIds = [...new Set(gradedUserIds)];\n\n\t\treturn uniqueGradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst count = gradedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(user: User): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\tconst isFinished = this.isFinishedForUser(user);\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.substitutionTeachers.contains(user);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(user: User): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((uid) => uid === user.id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(user: User): boolean {\n\t\tconst graded = this.getGradedUserIds().some((uid) => uid === user.id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(user: User): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(user);\n\t\tconst isGraded = this.isGradedForUser(user);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\t\tconst isFinished = this.isFinishedForUser(user);\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetParentData(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tcourseName: this.course.name,\n\t\t\t\tlessonName: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tcourseName: '',\n\t\t\t\tlessonName: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n\n\tfinishForUser(user: User) {\n\t\tthis.finished.add(user);\n\t}\n\n\trestoreForUser(user: User) {\n\t\tthis.finished.remove(user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskStatus.html":{"url":"interfaces/ITaskStatus.html","title":"interface - ITaskStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graded\n                                        \n                                \n                                \n                                        \n                                            isDraft\n                                        \n                                \n                                \n                                        \n                                            isFinished\n                                        \n                                \n                                \n                                        \n                                            isSubstitutionTeacher\n                                        \n                                \n                                \n                                        \n                                            maxSubmissions\n                                        \n                                \n                                \n                                        \n                                            submitted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graded:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDraft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDraft:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isFinished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isFinished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSubstitutionTeacher\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSubstitutionTeacher:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSubmissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSubmissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitted:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tdescription?: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n\tisFinished: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { courseName: string; lessonName: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdescription: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.description = props.description || '';\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisFinishedForUser(user: User): boolean {\n\t\treturn !!(this.finished?.contains(user) || this.course?.isFinished());\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionItems(): Submission[] {\n\t\tif (!this.submissions.isInitialized(true)) {\n\t\t\tthrow new Error('Submissions items are not loaded.');\n\t\t}\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submittedUserIds = this.getSubmissionItems().map((submission) => submission.student.id);\n\t\tconst uniqueSubmittedUserIds = [...new Set(submittedUserIds)];\n\n\t\treturn uniqueSubmittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst count = submittedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\t\tconst uniqueGradedUserIds = [...new Set(gradedUserIds)];\n\n\t\treturn uniqueGradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst count = gradedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(user: User): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\tconst isFinished = this.isFinishedForUser(user);\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.substitutionTeachers.contains(user);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(user: User): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((uid) => uid === user.id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(user: User): boolean {\n\t\tconst graded = this.getGradedUserIds().some((uid) => uid === user.id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(user: User): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(user);\n\t\tconst isGraded = this.isGradedForUser(user);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\t\tconst isFinished = this.isFinishedForUser(user);\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetParentData(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tcourseName: this.course.name,\n\t\t\t\tlessonName: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tcourseName: '',\n\t\t\t\tlessonName: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n\n\tfinishForUser(user: User) {\n\t\tthis.finished.add(user);\n\t}\n\n\trestoreForUser(user: User) {\n\t\tthis.finished.remove(user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeamProperties.html":{"url":"interfaces/ITeamProperties.html","title":"interface - ITeamProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITeamProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ITeamProperties {\n\tname: string;\n}\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ITeamProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName: string;\n\tlastName: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier', options: { unique: true } })\n\temail: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ImportUser.html":{"url":"entities/ImportUser.html","title":"entity - ImportUser","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ImportUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/import-user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classNames\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                flagged\n                            \n                            \n                                lastName\n                            \n                            \n                                ldapDn\n                            \n                            \n                                ldapId\n                            \n                            \n                                    Optional\n                                matchedBy\n                            \n                            \n                                roleNames\n                            \n                            \n                                school\n                            \n                            \n                                system\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        classNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flagged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({type: Boolean})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ldapDn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ldapId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        matchedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchCreator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum({fieldName: 'match_matchedBy', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:110\n                        \n                    \n\n            \n                \n                    References who set the user, take the field as read-only\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleName[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum({fieldName: 'roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {fieldName: 'schoolId', wrappedReference: true, eager: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        system\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'match_userId', eager: true, nullable: true})@Index({options: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/import-user.entity.ts:103\n                        \n                    \n\n            \n                \n                    Update user-match together with matchedBy, take the field as read-only\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { Entity, Enum, IdentifiedReference, Index, ManyToOne, Property, wrap } from '@mikro-orm/core';\nimport { BaseEntityReference, BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\n\nimport { System } from './system.entity';\n\nimport type { User } from './user.entity';\n\nexport interface IImportUserProperties {\n\t// references\n\tschool: School;\n\tsystem: System;\n\t// external identifiers\n\tldapDn: string;\n\tldapId: string;\n\t// descriptive properties\n\tfirstName: string;\n\tlastName: string;\n\temail: string; // TODO VO\n\troleNames?: RoleName[];\n\tclassNames?: string[];\n\tuser?: User;\n\tmatchedBy?: MatchCreator;\n\tflagged?: boolean;\n}\n\nexport enum MatchCreator {\n\tAUTO = 'auto',\n\tMANUAL = 'admin',\n}\nexport enum RoleName {\n\tSTUDENT = 'student',\n\tTEACHER = 'teacher',\n\tADMIN = 'administrator',\n}\n\n@Entity({ tableName: 'importusers' })\nexport class ImportUser extends BaseEntityWithTimestamps {\n\tconstructor(props: IImportUserProperties) {\n\t\tsuper();\n\t\tthis.school = wrap(props.school).toReference();\n\t\tthis.system = wrap(props.system).toReference();\n\t\tthis.ldapDn = props.ldapDn;\n\t\tthis.ldapId = props.ldapId;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tif (Array.isArray(props.roleNames) && props.roleNames.length > 0) this.roleNames.push(...props.roleNames);\n\t\tif (Array.isArray(props.classNames) && props.classNames.length > 0) this.classNames.push(...props.classNames);\n\t\tif (props.user && props.matchedBy) this.setMatch(props.user, props.matchedBy);\n\t\tif (props.flagged && props.flagged === true) this.flagged = true;\n\t}\n\n\t@ManyToOne(() => 'School', { fieldName: 'schoolId', wrappedReference: true, eager: true })\n\tschool: IdentifiedReference;\n\n\t@ManyToOne(() => 'System', { wrappedReference: true })\n\tsystem: IdentifiedReference;\n\n\t@Property()\n\tldapDn: string;\n\n\t/**\n\t * extracts the login name out of the dn which has the login name in 'uid=LOGINNAME,[...]'\n\t * */\n\tget loginName(): string | null {\n\t\tconst PATTERN_LOGIN_FROM_DN = /^uid=(.+?),/i; // extract uid from dn\n\t\tconst matches = this.ldapDn?.match(PATTERN_LOGIN_FROM_DN);\n\t\tif (Array.isArray(matches) && matches.length >= 2) {\n\t\t\tconst loginName = matches[1]; // 0: full match, 1: first group match\n\t\t\treturn loginName;\n\t\t}\n\t\treturn null;\n\t}\n\n\t@Property()\n\tldapId: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Property()\n\t/**\n\t * Lowercase email string\n\t */\n\temail: string;\n\n\t@Enum({ fieldName: 'roles' })\n\troleNames: RoleName[] = [];\n\n\t@Property()\n\tclassNames: string[] = [];\n\n\t/**\n\t * Update user-match together with matchedBy, take the field as read-only\n\t * @read\n\t */\n\t@ManyToOne('User', { fieldName: 'match_userId', eager: true, nullable: true })\n\t@Index({ options: { unique: true, partialFilterExpression: { match_userId: { $type: 'objectId' } } } })\n\tuser?: User;\n\n\t/**\n\t * References who set the user, take the field as read-only\n\t * @private\n\t */\n\t@Enum({ fieldName: 'match_matchedBy', nullable: true })\n\tmatchedBy?: MatchCreator;\n\n\t@Property({ type: Boolean })\n\tflagged = false;\n\n\tsetMatch(user: User, matchedBy: MatchCreator) {\n\t\tif (this.school.id !== user.school.id) {\n\t\t\tthrow new Error('not same school');\n\t\t}\n\t\tthis.user = user;\n\t\tthis.matchedBy = matchedBy;\n\t}\n\n\trevokeMatch() {\n\t\tthis.user = undefined;\n\t\tthis.matchedBy = undefined;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ImportUserController.html":{"url":"controllers/ImportUserController.html","title":"controller - ImportUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ImportUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/import-user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user/import\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllImportUsers\n                            \n                            \n                                    Async\n                                findAllUnmatchedUsers\n                            \n                            \n                                    Async\n                                removeMatch\n                            \n                            \n                                    Async\n                                setMatch\n                            \n                            \n                                    Async\n                                updateFlag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllImportUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllImportUsers(currentUser: ICurrentUser, scope: ImportUserFilterQuery, sortingQuery: ImportUserSortingQuery, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user-import/controller/import-user.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                ImportUserFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sortingQuery\n                                    \n                                                ImportUserSortingQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUnmatchedUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUnmatchedUsers(currentUser: ICurrentUser, scope: UserFilterQuery, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('unassigned')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user-import/controller/import-user.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                UserFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMatch(importUserId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id/match')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user-import/controller/import-user.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    importUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    setMatch(importUserId: string, currentUser: ICurrentUser, params: UpdateMatchParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/match')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user-import/controller/import-user.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    importUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateMatchParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateFlag\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFlag(importUserId: string, currentUser: ICurrentUser, params: UpdateFlagParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/flag')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user-import/controller/import-user.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    importUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateFlagParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { PaginationQuery, ParseObjectIdPipe } from '@shared/controller';\nimport { ICurrentUser, IFindOptions, ImportUser, User } from '@shared/domain';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ImportUserFilterQuery } from './dto/import-user-filter.query';\nimport { ImportUserListResponse, ImportUserResponse } from './dto/import-user.response';\nimport { UpdateMatchParams } from './dto/update-match.params';\nimport { UserMatchListResponse } from './dto/user-match.response';\n\nimport { ImportUserMapper } from '../mapper/import-user.mapper';\nimport { UserFilterQuery } from './dto/user-filter.query';\nimport { UserMatchMapper } from '../mapper/user-match.mapper';\nimport { UserImportUc } from '../uc/user-import.uc';\nimport { UpdateFlagParams } from './dto/update-flag.params';\nimport { ImportUserSortingQuery } from './dto/import-user-sorting.query';\n\n@ApiTags('UserImport')\n@Authenticate('jwt')\n@Controller('user/import')\nexport class ImportUserController {\n\tconstructor(private readonly userImportUc: UserImportUc, private readonly userUc: UserImportUc) {}\n\n\t@Get()\n\tasync findAllImportUsers(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: ImportUserFilterQuery,\n\t\t@Query() sortingQuery: ImportUserSortingQuery,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst options: IFindOptions = { pagination: paginationQuery };\n\t\toptions.order = ImportUserMapper.mapSortingQueryToDomain(sortingQuery);\n\t\tconst query = ImportUserMapper.mapImportUserFilterQueryToDomain(scope);\n\t\tconst [importUserList, count] = await this.userImportUc.findAllImportUsers(currentUser.userId, query, options);\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst dtoList = importUserList.map((importUser) => ImportUserMapper.mapToResponse(importUser));\n\t\tconst response = new ImportUserListResponse(dtoList, count, skip, limit);\n\t\treturn response;\n\t}\n\n\t@Patch(':id/match')\n\tasync setMatch(\n\t\t@Param('id', ParseObjectIdPipe) importUserId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateMatchParams\n\t): Promise {\n\t\tconst result = await this.userImportUc.setMatch(currentUser.userId, importUserId, params.userId);\n\t\tconst response = ImportUserMapper.mapToResponse(result);\n\t\treturn response;\n\t}\n\n\t@Delete(':id/match')\n\tasync removeMatch(\n\t\t@Param('id', ParseObjectIdPipe) importUserId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst result = await this.userImportUc.removeMatch(currentUser.userId, importUserId);\n\t\tconst response = ImportUserMapper.mapToResponse(result);\n\t\treturn response;\n\t}\n\n\t@Patch(':id/flag')\n\tasync updateFlag(\n\t\t@Param('id', ParseObjectIdPipe) importUserId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateFlagParams\n\t): Promise {\n\t\tconst result = await this.userImportUc.updateFlag(currentUser.userId, importUserId, params.flagged);\n\t\tconst response = ImportUserMapper.mapToResponse(result);\n\t\treturn response;\n\t}\n\n\t@Get('unassigned')\n\tasync findAllUnmatchedUsers(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: UserFilterQuery,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst options: IFindOptions = { pagination: paginationQuery };\n\n\t\tconst query = UserMatchMapper.mapToDomain(scope);\n\t\tconst [userList, total] = await this.userUc.findAllUnmatchedUsers(currentUser.userId, query, options);\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst dtoList = userList.map((user) => UserMatchMapper.mapToResponse(user));\n\t\tconst response = new UserMatchListResponse(dtoList, total, skip, limit);\n\t\treturn response as unknown as UserMatchListResponse;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserFactory.html":{"url":"classes/ImportUserFactory.html","title":"class - ImportUserFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/import-user.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                matched\n                            \n                            \n                                afterBuild\n                            \n                            \n                                associations\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        matched\n                        \n                    \n                \n            \n            \n                \nmatched(matchedBy: MatchCreator, user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/import-user.factory.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchedBy\n                                    \n                                                MatchCreator\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:87\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n            \n                \nassociations(associations: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:99\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    associations\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:47\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:73\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:60\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:137\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:32\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        C\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:111\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:133\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:149\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { v4 as uuidv4 } from 'uuid';\n\nimport { ImportUser, IImportUserProperties, RoleName, MatchCreator, User } from '@shared/domain';\nimport { DeepPartial } from 'fishery';\nimport { schoolFactory } from './school.factory';\nimport { systemFactory } from './system.factory';\nimport { BaseFactory } from './base.factory';\n\nclass ImportUserFactory extends BaseFactory {\n\tmatched(matchedBy: MatchCreator, user: User): this {\n\t\tconst params: DeepPartial = { matchedBy, user };\n\t\treturn this.params(params);\n\t}\n}\n\nexport const importUserFactory = ImportUserFactory.define(ImportUser, ({ sequence }) => {\n\treturn {\n\t\tschool: schoolFactory.build(),\n\t\tsystem: systemFactory.build(),\n\t\tldapDn: `uid=john${sequence},cn=schueler,cn=users,ou=1,dc=training,dc=ucs`,\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tldapId: uuidv4() as unknown as string,\n\t\tfirstName: `John${sequence}`,\n\t\tlastName: `Doe${sequence}`,\n\t\temail: `user-${sequence}@example.com`,\n\t\troleNames: [RoleName.STUDENT],\n\t\tclassNames: ['firstClass'],\n\t\tflagged: false,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserFilterQuery.html":{"url":"classes/ImportUserFilterQuery.html","title":"class - ImportUserFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                classes\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                flagged\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                loginName\n                            \n                            \n                                    Optional\n                                match\n                            \n                            \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        classes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsNotEmpty()@ApiPropertyOptional({type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:54\n                        \n                    \n\n            \n                \n                    filter available classes for contains\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        flagged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        loginName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        match\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchFilterQuery[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: MatchFilterQuery, isArray: true})@IsOptional()@IsEnum(MatchFilterQuery, {each: true})@SingleValueToArrayTransformer()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleNameFilterQuery\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(RoleNameFilterQuery)@ApiPropertyOptional({enum: RoleNameFilterQuery})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts:59\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { SingleValueToArrayTransformer } from '@shared/controller';\nimport { IsArray, IsBoolean, IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport enum MatchFilterQuery {\n\tAUTO = 'auto',\n\tMANUAL = 'admin',\n\tNONE = 'none',\n}\nexport enum RoleNameFilterQuery {\n\tSTUDENT = 'student',\n\tTEACHER = 'teacher',\n\tADMIN = 'admin',\n}\n\nexport class ImportUserFilterQuery {\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsString()\n\t@IsNotEmpty()\n\tfirstName?: string;\n\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsString()\n\t@IsNotEmpty()\n\tlastName?: string;\n\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsString()\n\t@IsNotEmpty()\n\tloginName?: string;\n\n\t@ApiPropertyOptional({ enum: MatchFilterQuery, isArray: true })\n\t@IsOptional()\n\t@IsEnum(MatchFilterQuery, { each: true })\n\t@SingleValueToArrayTransformer()\n\t@IsArray()\n\tmatch?: MatchFilterQuery[];\n\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsBoolean()\n\tflagged?: boolean;\n\n\t/**\n\t * filter available classes for contains\n\t */\n\t@IsOptional()\n\t@IsString()\n\t@IsNotEmpty()\n\t@ApiPropertyOptional({ type: String })\n\tclasses?: string;\n\n\t@IsOptional()\n\t@IsEnum(RoleNameFilterQuery)\n\t@ApiPropertyOptional({ enum: RoleNameFilterQuery })\n\trole?: RoleNameFilterQuery;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserListResponse.html":{"url":"classes/ImportUserListResponse.html","title":"class - ImportUserListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/import-user.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: ImportUserResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ImportUserResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImportUserResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:68\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { IsMongoId, IsString } from 'class-validator';\nimport type { UserMatchResponse } from '.';\nimport { RoleNameResponse } from './role-name.response';\n\nexport class ImportUserResponse {\n\tconstructor(props: ImportUserResponse) {\n\t\tthis.importUserId = props.importUserId;\n\t\tthis.loginName = props.loginName;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.roleNames = props.roleNames;\n\t\tthis.classNames = props.classNames;\n\t\tif (props.match != null) this.match = props.match;\n\t\tif (props.flagged === true) this.flagged = true;\n\t}\n\n\t@IsMongoId()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'id reference to a import user',\n\t})\n\t// no school, system\n\timportUserId: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'login name from external system',\n\t})\n\tloginName: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'external systems user firstname',\n\t})\n\tfirstName: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'external systems user lastname',\n\t})\n\tlastName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'list of user roles from external system: student, teacher, admin',\n\t\tenum: RoleNameResponse,\n\t})\n\troleNames: RoleNameResponse[];\n\n\t@ApiProperty({ description: 'names of classes the user attends from external system' })\n\tclassNames: string[];\n\n\t@ApiPropertyOptional({ description: 'assignemnt to a local user account' })\n\tmatch?: UserMatchResponse;\n\n\t@ApiProperty({ description: 'manual flag to apply it as filter' })\n\tflagged = false;\n}\n\nexport class ImportUserListResponse extends PaginationResponse {\n\tconstructor(data: ImportUserResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [ImportUserResponse] })\n\tdata: ImportUserResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserMapper.html":{"url":"classes/ImportUserMapper.html","title":"class - ImportUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/mapper/import-user.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapImportUserFilterQueryToDomain\n                            \n                            \n                                    Static\n                                mapSortingQueryToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapImportUserFilterQueryToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapImportUserFilterQueryToDomain(query: ImportUserFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/mapper/import-user.mapper.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                ImportUserFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IImportUserScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapSortingQueryToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapSortingQueryToDomain(sortingQuery: ImportUserSortingQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/mapper/import-user.mapper.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sortingQuery\n                                    \n                                                ImportUserSortingQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SortOrderMap | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(importUser: ImportUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/mapper/import-user.mapper.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    importUser\n                                    \n                                                ImportUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ImportUserResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BadRequestException } from '@nestjs/common';\nimport { StringValidator } from '@shared/common';\nimport { ImportUser, IImportUserScope, SortOrderMap } from '@shared/domain';\nimport {\n\tImportUserResponse,\n\tImportUserFilterQuery,\n\tImportUserSortByQuery,\n\tImportUserSortingQuery,\n} from '../controller/dto';\n\nimport { ImportUserMatchMapper } from './match.mapper';\n\nimport { RoleNameMapper } from './role-name.mapper';\nimport { UserMatchMapper } from './user-match.mapper';\n\nexport class ImportUserMapper {\n\tstatic mapSortingQueryToDomain(sortingQuery: ImportUserSortingQuery): SortOrderMap | undefined {\n\t\tconst { sortBy } = sortingQuery;\n\t\tif (sortBy == null) return undefined;\n\t\tconst result: SortOrderMap = {};\n\t\tswitch (sortBy) {\n\t\t\tcase ImportUserSortByQuery.FIRSTNAME:\n\t\t\tcase ImportUserSortByQuery.LASTNAME:\n\t\t\t\tresult[sortBy] = sortingQuery.sortOrder;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new BadRequestException();\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic mapToResponse(importUser: ImportUser): ImportUserResponse {\n\t\tconst dto = new ImportUserResponse({\n\t\t\timportUserId: importUser.id,\n\t\t\tloginName: importUser.loginName || '',\n\t\t\tfirstName: importUser.firstName,\n\t\t\tlastName: importUser.lastName,\n\t\t\troleNames: importUser.roleNames.map((role) => RoleNameMapper.mapToResponse(role)),\n\t\t\tclassNames: importUser.classNames,\n\t\t\tflagged: importUser.flagged,\n\t\t});\n\t\tif (importUser.user != null && importUser.matchedBy) {\n\t\t\tconst { user } = importUser;\n\t\t\tdto.match = UserMatchMapper.mapToResponse(user, importUser.matchedBy);\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapImportUserFilterQueryToDomain(query: ImportUserFilterQuery): IImportUserScope {\n\t\tconst dto: IImportUserScope = {};\n\t\tif (StringValidator.isNotEmptyString(query.firstName)) dto.firstName = query.firstName;\n\t\tif (StringValidator.isNotEmptyString(query.lastName)) dto.lastName = query.lastName;\n\t\tif (StringValidator.isNotEmptyString(query.loginName)) dto.loginName = query.loginName;\n\t\tif (query.role != null) {\n\t\t\tdto.role = RoleNameMapper.mapToDomain(query.role);\n\t\t}\n\t\tif (StringValidator.isNotEmptyString(query.classes)) dto.classes = query.classes;\n\t\tif (query.match) {\n\t\t\tdto.matches = query.match.map((match) => ImportUserMatchMapper.mapImportUserMatchScopeToDomain(match));\n\t\t}\n\t\tif (query.flagged === true) dto.flagged = true;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserMatchMapper.html":{"url":"classes/ImportUserMatchMapper.html","title":"class - ImportUserMatchMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserMatchMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/mapper/match.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapImportUserMatchScopeToDomain\n                            \n                            \n                                    Static\n                                mapMatchCreatorToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapImportUserMatchScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapImportUserMatchScopeToDomain(match: MatchFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/mapper/match.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    match\n                                    \n                                                MatchFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MatchCreatorScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapMatchCreatorToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapMatchCreatorToResponse(matchCreator: MatchCreator)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/mapper/match.mapper.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matchCreator\n                                    \n                                                MatchCreator\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MatchCreatorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MatchCreator, MatchCreatorScope } from '@shared/domain';\nimport { MatchCreatorResponse, MatchFilterQuery } from '../controller/dto';\n\nexport class ImportUserMatchMapper {\n\tstatic mapImportUserMatchScopeToDomain(match: MatchFilterQuery): MatchCreatorScope {\n\t\tif (match === MatchFilterQuery.AUTO) return MatchCreatorScope.AUTO;\n\t\tif (match === MatchFilterQuery.MANUAL) return MatchCreatorScope.MANUAL;\n\t\tif (match === MatchFilterQuery.NONE) return MatchCreatorScope.NONE;\n\t\tthrow Error('invalid match from filter query');\n\t}\n\n\tstatic mapMatchCreatorToResponse(matchCreator: MatchCreator): MatchCreatorResponse {\n\t\tswitch (matchCreator) {\n\t\t\tcase MatchCreator.MANUAL:\n\t\t\t\treturn MatchCreatorResponse.MANUAL;\n\t\t\tcase MatchCreator.AUTO:\n\t\t\tdefault:\n\t\t\t\treturn MatchCreatorResponse.AUTO;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImportUserModule.html":{"url":"modules/ImportUserModule.html","title":"module - ImportUserModule","body":"\n                   \n\n\n\n\n    Modules\n    ImportUserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ImportUserModule\n\n\n\ncluster_ImportUserModule_providers\n\n\n\ncluster_ImportUserModule_imports\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nImportUserModule\n\nImportUserModule\n\nImportUserModule -->\n\nLoggerModule->ImportUserModule\n\n\n\n\n\nImportUserRepo\n\nImportUserRepo\n\nImportUserModule -->\n\nImportUserRepo->ImportUserModule\n\n\n\n\n\nPermissionService\n\nPermissionService\n\nImportUserModule -->\n\nPermissionService->ImportUserModule\n\n\n\n\n\nUserImportUc\n\nUserImportUc\n\nImportUserModule -->\n\nUserImportUc->ImportUserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nImportUserModule -->\n\nUserRepo->ImportUserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user-import/user-import.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ImportUserRepo\n                        \n                        \n                            PermissionService\n                        \n                        \n                            UserImportUc\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ImportUserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerModule } from '@src/core/logger';\nimport { ImportUserRepo, UserRepo } from '@shared/repo';\nimport { PermissionService } from '@shared/domain';\nimport { ImportUserController } from './controller/import-user.controller';\nimport { UserImportUc } from './uc/user-import.uc';\n\n@Module({\n\timports: [LoggerModule],\n\tcontrollers: [ImportUserController],\n\tproviders: [UserImportUc, ImportUserRepo, UserRepo, PermissionService],\n\texports: [],\n})\n/**\n * Module to provide user migration,\n * to link existing users with ldap references to enable\n * external authentication and sync.\n */\nexport class ImportUserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImportUserRepo.html":{"url":"injectables/ImportUserRepo.html","title":"injectable - ImportUserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ImportUserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/importuser/importuser.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findImportUsers\n                            \n                            \n                                    Private\n                                    Async\n                                findImportUsersAndCount\n                            \n                            \n                                    Async\n                                hasMatch\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/importuser/importuser.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findImportUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    findImportUsers(school: School, filters: IImportUserScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/importuser/importuser.repo.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    school\n                                    \n                                                School\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    filters\n                                    \n                                                IImportUserScope\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    options\n                                    \n                                            IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findImportUsersAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findImportUsersAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/importuser/importuser.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hasMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasMatch(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/importuser/importuser.repo.ts:23\n                \n            \n\n\n            \n                \n                    resolves with importusers matched with a local user account\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery, QueryOrderMap } from '@mikro-orm/core';\nimport { Injectable } from '@nestjs/common';\n\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { Counted, EntityId, IFindOptions, IImportUserScope, ImportUser, School, User } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { ImportUserScope } from './importuser.scope';\n\n@Injectable()\nexport class ImportUserRepo extends BaseRepo {\n\tasync findById(id: EntityId): Promise {\n\t\tif (!ObjectId.isValid(id)) throw new Error('invalid id');\n\t\tconst importUser = await this.em.findOneOrFail(ImportUser, { id });\n\t\tif (importUser.user != null) {\n\t\t\tawait this.em.populate(importUser.user, 'roles');\n\t\t}\n\t\treturn importUser;\n\t}\n\n\t/**\n\t * resolves with importusers matched with a local user account\n\t */\n\tasync hasMatch(user: User): Promise {\n\t\tconst scope = new ImportUserScope();\n\t\tscope.byUserMatch(user);\n\t\tconst importUser = await this.em.findOne(ImportUser, scope.query);\n\t\treturn importUser;\n\t}\n\n\tasync findImportUsers(\n\t\tschool: School,\n\t\tfilters: IImportUserScope = {},\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new ImportUserScope();\n\t\tscope.bySchool(school);\n\t\tif (filters.firstName != null) scope.byFirstName(filters.firstName);\n\t\tif (filters.lastName != null) scope.byLastName(filters.lastName);\n\t\tif (filters.loginName != null) scope.byLoginName(filters.loginName);\n\t\tif (filters.role != null) scope.byRole(filters.role);\n\t\tif (filters.classes != null) scope.byClasses(filters.classes);\n\t\tif (filters.matches != null) scope.byMatches(filters.matches);\n\t\tif (filters.flagged === true) scope.isFlagged(true);\n\t\tconst countedImportUsers = await this.findImportUsersAndCount(scope.query, options);\n\t\treturn countedImportUsers;\n\t}\n\n\tprivate async findImportUsersAndCount(\n\t\tquery: FilterQuery,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst queryOptions = {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t};\n\t\tconst [importUserEntities, count] = await this.em.findAndCount(ImportUser, query, queryOptions);\n\t\tconst userMatches = importUserEntities.map((importUser) => importUser.user).filter((user) => user != null);\n\t\t// load role names of referenced users\n\t\tawait this.em.populate(userMatches, 'roles');\n\t\treturn [importUserEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserResponse.html":{"url":"classes/ImportUserResponse.html","title":"class - ImportUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/import-user.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                classNames\n                            \n                            \n                                firstName\n                            \n                            \n                                flagged\n                            \n                            \n                                importUserId\n                            \n                            \n                                lastName\n                            \n                            \n                                loginName\n                            \n                            \n                                    Optional\n                                match\n                            \n                            \n                                roleNames\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ImportUserResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ImportUserResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        classNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'names of classes the user attends from external system'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'external systems user firstname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flagged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'manual flag to apply it as filter'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'id reference to a import user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'external systems user lastname'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'login name from external system'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        match\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserMatchResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'assignemnt to a local user account'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleNameResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'list of user roles from external system: student, teacher, admin', enum: RoleNameResponse})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/import-user.response.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { IsMongoId, IsString } from 'class-validator';\nimport type { UserMatchResponse } from '.';\nimport { RoleNameResponse } from './role-name.response';\n\nexport class ImportUserResponse {\n\tconstructor(props: ImportUserResponse) {\n\t\tthis.importUserId = props.importUserId;\n\t\tthis.loginName = props.loginName;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.roleNames = props.roleNames;\n\t\tthis.classNames = props.classNames;\n\t\tif (props.match != null) this.match = props.match;\n\t\tif (props.flagged === true) this.flagged = true;\n\t}\n\n\t@IsMongoId()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'id reference to a import user',\n\t})\n\t// no school, system\n\timportUserId: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'login name from external system',\n\t})\n\tloginName: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'external systems user firstname',\n\t})\n\tfirstName: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'external systems user lastname',\n\t})\n\tlastName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'list of user roles from external system: student, teacher, admin',\n\t\tenum: RoleNameResponse,\n\t})\n\troleNames: RoleNameResponse[];\n\n\t@ApiProperty({ description: 'names of classes the user attends from external system' })\n\tclassNames: string[];\n\n\t@ApiPropertyOptional({ description: 'assignemnt to a local user account' })\n\tmatch?: UserMatchResponse;\n\n\t@ApiProperty({ description: 'manual flag to apply it as filter' })\n\tflagged = false;\n}\n\nexport class ImportUserListResponse extends PaginationResponse {\n\tconstructor(data: ImportUserResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [ImportUserResponse] })\n\tdata: ImportUserResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserScope.html":{"url":"classes/ImportUserScope.html","title":"class - ImportUserScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/importuser/importuser.scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byClasses\n                            \n                            \n                                byFirstName\n                            \n                            \n                                byLastName\n                            \n                            \n                                byLoginName\n                            \n                            \n                                byMatches\n                            \n                            \n                                byRole\n                            \n                            \n                                bySchool\n                            \n                            \n                                byUserMatch\n                            \n                            \n                                isFlagged\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byClasses\n                        \n                    \n                \n            \n            \n                \nbyClasses(classes: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/importuser/importuser.scope.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    classes\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ImportUserScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byFirstName\n                        \n                    \n                \n            \n            \n                \nbyFirstName(firstName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/importuser/importuser.scope.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ImportUserScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLastName\n                        \n                    \n                \n            \n            \n                \nbyLastName(lastName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/importuser/importuser.scope.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ImportUserScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLoginName\n                        \n                    \n                \n            \n            \n                \nbyLoginName(loginName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/importuser/importuser.scope.ts:53\n                \n            \n\n\n            \n                \n                    filters the login name case insensitive for contains which is part of the dn\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ImportUserScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byMatches\n                        \n                    \n                \n            \n            \n                \nbyMatches(matches: MatchCreatorScope[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/importuser/importuser.scope.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    matches\n                                    \n                                                MatchCreatorScope[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byRole\n                        \n                    \n                \n            \n            \n                \nbyRole(roleName: RoleName)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/importuser/importuser.scope.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleName\n                                    \n                                                RoleName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ImportUserScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bySchool\n                        \n                    \n                \n            \n            \n                \nbySchool(school: School)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/importuser/importuser.scope.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school\n                                    \n                                                School\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ImportUserScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUserMatch\n                        \n                    \n                \n            \n            \n                \nbyUserMatch(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/importuser/importuser.scope.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ImportUserScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFlagged\n                        \n                    \n                \n            \n            \n                \nisFlagged(flagged)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/importuser/importuser.scope.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    flagged\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ObjectId } from '@mikro-orm/mongodb';\nimport { StringValidator } from '@shared/common';\nimport { EntityId, ImportUser, MatchCreatorScope, RoleName, School, User } from '@shared/domain';\nimport { MongoPatterns } from '../mongo.patterns';\nimport { Scope } from '../scope';\n\nexport class ImportUserScope extends Scope {\n\tbySchool(school: School): ImportUserScope {\n\t\tconst schoolId = school._id;\n\t\tif (!ObjectId.isValid(schoolId)) throw new Error('invalid school id');\n\t\tthis.addQuery({ school: schoolId });\n\t\treturn this;\n\t}\n\n\tbyUserMatch(user: User): ImportUserScope {\n\t\tconst userId = user._id;\n\t\tif (!ObjectId.isValid(userId)) throw new Error('invalid user match id');\n\t\tthis.addQuery({ user: userId });\n\t\treturn this;\n\t}\n\n\tbyFirstName(firstName: string): ImportUserScope {\n\t\tconst escapedFirstName = firstName.replace(MongoPatterns.REGEX_MONGO_LANGUAGE_PATTERN_WHITELIST, '').trim();\n\t\t// TODO make db agnostic\n\t\tif (StringValidator.isNotEmptyString(escapedFirstName, true))\n\t\t\tthis.addQuery({\n\t\t\t\tfirstName: {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t$regex: escapedFirstName,\n\t\t\t\t\t$options: 'i',\n\t\t\t\t},\n\t\t\t});\n\t\treturn this;\n\t}\n\n\tbyLastName(lastName: string): ImportUserScope {\n\t\t// TODO filter does not find café when searching with cafe\n\t\tconst escapedLastName = lastName.replace(MongoPatterns.REGEX_MONGO_LANGUAGE_PATTERN_WHITELIST, '').trim();\n\t\t// TODO make db agnostic\n\t\tif (StringValidator.isNotEmptyString(escapedLastName, true))\n\t\t\tthis.addQuery({\n\t\t\t\tlastName: {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t$regex: escapedLastName,\n\t\t\t\t\t$options: 'i',\n\t\t\t\t},\n\t\t\t});\n\t\treturn this;\n\t}\n\n\t/** filters the login name case insensitive for contains which is part of the dn */\n\tbyLoginName(loginName: string): ImportUserScope {\n\t\t// TODO filter does not find café when searching with cafe\n\t\tconst escapedLoginName = loginName.replace(MongoPatterns.REGEX_MONGO_LANGUAGE_PATTERN_WHITELIST, '').trim();\n\t\t// TODO make db agnostic\n\t\tif (StringValidator.isNotEmptyString(escapedLoginName, true))\n\t\t\tthis.addQuery({\n\t\t\t\tldapDn: {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t$regex: `^uid=[^,]*${escapedLoginName}[^,]*,`,\n\t\t\t\t\t$options: 'i',\n\t\t\t\t},\n\t\t\t});\n\t\treturn this;\n\t}\n\n\tbyRole(roleName: RoleName): ImportUserScope {\n\t\tswitch (roleName) {\n\t\t\tcase RoleName.ADMIN:\n\t\t\t\tthis.addQuery({ roleNames: { $in: ['administrator'] } });\n\t\t\t\tbreak;\n\t\t\tcase RoleName.STUDENT:\n\t\t\t\tthis.addQuery({ roleNames: { $in: ['student'] } });\n\t\t\t\tbreak;\n\t\t\tcase RoleName.TEACHER:\n\t\t\t\tthis.addQuery({ roleNames: { $in: ['teacher'] } });\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('unexpected role name');\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyClasses(classes: string): ImportUserScope {\n\t\tconst escapedClasses = classes.replace(MongoPatterns.REGEX_MONGO_LANGUAGE_PATTERN_WHITELIST, '').trim();\n\t\t// TODO make db agnostic\n\t\tif (StringValidator.isNotEmptyString(escapedClasses, true))\n\t\t\tthis.addQuery({\n\t\t\t\tclassNames: {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t$regex: escapedClasses,\n\t\t\t\t\t$options: 'i',\n\t\t\t\t},\n\t\t\t});\n\t\treturn this;\n\t}\n\n\tbyMatches(matches: MatchCreatorScope[]) {\n\t\tconst queries = matches\n\t\t\t.map((match) => {\n\t\t\t\tif (match === MatchCreatorScope.MANUAL) return { match_matchedBy: 'admin' };\n\t\t\t\tif (match === MatchCreatorScope.AUTO) return { match_matchedBy: 'auto' };\n\t\t\t\tif (match === MatchCreatorScope.NONE) return { match_matchedBy: { $exists: false } };\n\t\t\t\treturn null;\n\t\t\t})\n\t\t\t.filter((match) => match != null);\n\t\tif (queries.length > 0) this.addQuery({ $or: queries });\n\t\treturn this;\n\t}\n\n\tisFlagged(flagged = true) {\n\t\tif (flagged === true) this.addQuery({ flagged: true });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImportUserSortingQuery.html":{"url":"classes/ImportUserSortingQuery.html","title":"class - ImportUserSortingQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImportUserSortingQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/import-user-sorting.query.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SortingQuery\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                sortBy\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ImportUserSortByQuery\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(ImportUserSortByQuery)@ApiPropertyOptional({enum: ImportUserSortByQuery})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SortingQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         SortingQuery:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SortOrder\n\n                    \n                \n                \n                    \n                        Default value : SortOrder.asc\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(SortOrder)@ApiPropertyOptional({enum: SortOrder})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         SortingQuery\n\n                            \n                        \n                    \n                        \n                                Defined in         SortingQuery:18\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { SortingQuery } from '@shared/controller';\nimport { IsEnum, IsOptional } from 'class-validator';\n\nexport enum ImportUserSortByQuery {\n\tFIRSTNAME = 'firstName',\n\tLASTNAME = 'lastName',\n}\n\nexport class ImportUserSortingQuery extends SortingQuery {\n\t@IsOptional()\n\t@IsEnum(ImportUserSortByQuery)\n\t@ApiPropertyOptional({ enum: ImportUserSortByQuery })\n\tsortBy?: ImportUserSortByQuery;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICurrentUser } from '@shared/domain';\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, jwtValidationAdapter: JwtValidationAdapter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtValidationAdapter\n                                                  \n                                                        \n                                                                        JwtValidationAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { UserRepo } from '@shared/repo';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { JwtValidationAdapter } from './jwt-validation.adapter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userRepo: UserRepo, private readonly jwtValidationAdapter: JwtValidationAdapter) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// check jwt is whitelisted and extend whitelist entry\n\t\tconst { accountId, jti, userId } = payload;\n\t\tawait this.jwtValidationAdapter.isWhitelisted(accountId, jti);\n\t\t// check user exists\n\t\ttry {\n\t\t\tawait this.userRepo.findById(userId);\n\t\t} catch (err) {\n\t\t\tthrow new UnauthorizedException('Unauthorized.');\n\t\t}\n\n\t\t// TODO: check user/account is active and has one role\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtValidationAdapter.html":{"url":"injectables/JwtValidationAdapter.html","title":"injectable - JwtValidationAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtValidationAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToWhitelist\n                            \n                            \n                                    Async\n                                isWhitelisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToWhitelist(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWhitelisted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWhitelisted(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:15\n                \n            \n\n\n            \n                \n                    When validating a jwt it must be added to a whitelist, here we check this.\nWhen the jwt is validated, the expiration time will be extended with this call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        users account id\n\n                                    \n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jwt id (here required to make jwt identifiers identical in redis)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport jwtWhitelist = require('../../../../../../src/services/authentication/logic/whitelist');\n\nconst { ensureTokenIsWhitelisted, addTokenToWhitelist, createRedisIdentifierFromJwtData } = jwtWhitelist;\n\n@Injectable()\nexport class JwtValidationAdapter {\n\t/**\n\t * When validating a jwt it must be added to a whitelist, here we check this.\n\t * When the jwt is validated, the expiration time will be extended with this call.\n\t * @param accountId users account id\n\t * @param jti jwt id (here required to make jwt identifiers identical in redis)\n\t */\n\tasync isWhitelisted(accountId: string, jti: string): Promise {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait ensureTokenIsWhitelisted({ accountId, jti, privateDevice: false });\n\t}\n\n\tasync addToWhitelist(accountId: string, jti: string): Promise {\n\t\tconst redisIdentifier = createRedisIdentifierFromJwtData(accountId, jti);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait addTokenToWhitelist(redisIdentifier);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnroomModule.html":{"url":"modules/LearnroomModule.html","title":"module - LearnroomModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnroomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\n\nBoardMapper\n\nBoardMapper\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nBoardMapper->LearnroomModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nLearnroomModule -->\n\nCourseRepo->LearnroomModule\n\n\n\n\n\nCourseUc\n\nCourseUc\n\nLearnroomModule -->\n\nCourseUc->LearnroomModule\n\n\n\n\n\nDashboardModelMapper\n\nDashboardModelMapper\n\nLearnroomModule -->\n\nDashboardModelMapper->LearnroomModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nLearnroomModule -->\n\nLessonRepo->LearnroomModule\n\n\n\n\n\nRoomsUc\n\nRoomsUc\n\nLearnroomModule -->\n\nRoomsUc->LearnroomModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nLearnroomModule -->\n\nTaskRepo->LearnroomModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nLearnroomModule -->\n\nUserRepo->LearnroomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/learnroom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BoardMapper\n                        \n                        \n                            CourseRepo\n                        \n                        \n                            CourseUc\n                        \n                        \n                            DashboardModelMapper\n                        \n                        \n                            DashboardUc\n                        \n                        \n                            LessonRepo\n                        \n                        \n                            RoomsUc\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                        \n                            CourseController\n                        \n                        \n                            RoomsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { DashboardRepo, DashboardModelMapper, CourseRepo, LessonRepo, TaskRepo, UserRepo } from '@shared/repo';\n\nimport { DashboardController } from './controller/dashboard.controller';\nimport { CourseController } from './controller/course.controller';\nimport { DashboardUc } from './uc/dashboard.uc';\nimport { CourseUc } from './uc/course.uc';\nimport { RoomsController } from './controller/rooms.controller';\nimport { RoomsUc } from './uc/rooms.uc';\nimport { BoardMapper } from './mapper/board.mapper';\n\n@Module({\n\timports: [],\n\tcontrollers: [DashboardController, CourseController, RoomsController],\n\tproviders: [\n\t\tDashboardUc,\n\t\t{\n\t\t\tprovide: 'DASHBOARD_REPO',\n\t\t\tuseClass: DashboardRepo,\n\t\t},\n\t\tDashboardModelMapper,\n\t\tCourseUc,\n\t\tCourseRepo,\n\t\tLessonRepo,\n\t\tRoomsUc,\n\t\tTaskRepo,\n\t\tUserRepo,\n\t\tBoardMapper,\n\t],\n})\nexport class LearnroomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Lesson.html":{"url":"entities/Lesson.html","title":"entity - Lesson","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'findAllByCourseIds'})@Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, ManyToOne, Property, Index } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\nexport interface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Index({ name: 'findAllByCourseIds' })\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonFactory.html":{"url":"classes/LessonFactory.html","title":"class - LessonFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/lesson.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterBuild\n                            \n                            \n                                associations\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:87\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n            \n                \nassociations(associations: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:99\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    associations\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:47\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:73\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:60\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:137\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:32\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        C\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:111\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:133\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:149\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Lesson, ILessonProperties, Course } from '@shared/domain';\n\nimport { courseFactory } from './course.factory';\nimport { BaseFactory } from './base.factory';\n\nclass LessonFactory extends BaseFactory {}\n\nexport const lessonFactory = LessonFactory.define(Lesson, ({ sequence, params }) => {\n\tlet course: Course;\n\tif (params.course) {\n\t\tcourse = params.course as Course;\n\t} else {\n\t\tcourse = courseFactory.build();\n\t}\n\n\treturn {\n\t\tname: `lesson #${sequence}`,\n\t\tcourse,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonRepo.html":{"url":"injectables/LessonRepo.html","title":"injectable - LessonRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LessonRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByCourseIds(courseIds: EntityId[], filters?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\nimport { EntityId, Lesson, Counted } from '@shared/domain';\n\nimport { LessonScope } from './lesson-scope';\n\n@Injectable()\nexport class LessonRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByCourseIds(courseIds: EntityId[], filters?: { hidden?: boolean }): Promise> {\n\t\tconst scope = new LessonScope();\n\n\t\tscope.byCourseIds(courseIds);\n\n\t\tif (filters?.hidden !== undefined) {\n\t\t\tscope.byHidden(filters.hidden);\n\t\t}\n\n\t\tconst [lessons, count] = await this.em.findAndCount(Lesson, scope.query);\n\n\t\tawait this.em.populate(lessons, ['course']);\n\n\t\treturn [lessons, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonScope.html":{"url":"classes/LessonScope.html","title":"class - LessonScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byCourseIds\n                            \n                            \n                                byHidden\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byHidden\n                        \n                    \n                \n            \n            \n                \nbyHidden(isHidden: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isHidden\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Lesson } from '@shared/domain';\nimport { Scope } from '../scope';\n\nexport class LessonScope extends Scope {\n\tbyCourseIds(courseIds: EntityId[]): LessonScope {\n\t\tthis.addQuery({ course: { $in: courseIds } });\n\t\treturn this;\n\t}\n\n\tbyHidden(isHidden: boolean): LessonScope {\n\t\tthis.addQuery({ hidden: { $eq: isHidden } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConsoleLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, ConsoleLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend ConsoleLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends ConsoleLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            recipients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base64Content\n                                        \n                                \n                                \n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MailModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/mail/mail.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailModuleOptions.html":{"url":"interfaces/MailModuleOptions.html","title":"interface - MailModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection, options: MailServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/mail/mail.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailServiceOptions.html":{"url":"interfaces/MailServiceOptions.html","title":"interface - MailServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_ManagementModule_imports\n\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFileSystemModule\n\nFileSystemModule\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BsonConverter\n                        \n                        \n                            ConsoleWriterService\n                        \n                        \n                            DatabaseManagementService\n                        \n                        \n                            DatabaseManagementUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabaseManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementModule\n                        \n                        \n                            FileSystemModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { DatabaseManagementService, DatabaseManagementModule } from '@shared/infra/database';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { FileSystemModule } from '@shared/infra/file-system';\n\nimport { ConsoleWriterService } from '@shared/infra/console';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from '@src/config';\nimport { DatabaseManagementController } from './controller/database-management.controller';\nimport { DatabaseManagementUc } from './uc/database-management.uc';\nimport { BsonConverter } from './converter/bson.converter';\nimport { DatabaseManagementConsole } from './console/database-management.console';\n\n@Module({\n\timports: [\n\t\tFileSystemModule,\n\t\tDatabaseManagementModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\t// TODO repeats server module definitions\n\t\t\ttype: 'mongo',\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t],\n\tproviders: [\n\t\tDatabaseManagementUc,\n\t\tDatabaseManagementService,\n\t\tBsonConverter,\n\t\t// console providers\n\t\tDatabaseManagementConsole,\n\t\t// infra services\n\t\tConsoleWriterService,\n\t],\n\tcontrollers: [DatabaseManagementController],\n})\nexport class ManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleAsyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MongoMemoryServer } from 'mongodb-memory-server-global-4.2';\nimport { MongoDatabaseModuleOptions } from './types';\n\nconst createMikroOrmModule = async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\tconst defaultOptions = {\n\t\t\tentities: ALL_ENTITIES,\n\t\t};\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule({ ...defaultOptions, ...options })],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoPatterns.html":{"url":"classes/MongoPatterns.html","title":"class - MongoPatterns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoPatterns\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/mongo.patterns.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                REGEX_MONGO_LANGUAGE_PATTERN_WHITELIST\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        REGEX_MONGO_LANGUAGE_PATTERN_WHITELIST\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /[^\\-_\\w\\d áàâäãåçéèêëíìîïñóòôöõúùûüýÿæœÁÀÂÄÃÅÇÉÈÊËÍÌÎÏÑÓÒÔÖÕÚÙÛÜÝŸÆŒ]/gi\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/mongo.patterns.ts:6\n                        \n                    \n\n            \n                \n                    Regex to escape strings before use as regex against database.\nUsed to remove all non-language characters except numbers, whitespace or minus.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MongoPatterns {\n\t/**\n\t * Regex to escape strings before use as regex against database.\n\t * Used to remove all non-language characters except numbers, whitespace or minus.\n\t */\n\tstatic REGEX_MONGO_LANGUAGE_PATTERN_WHITELIST =\n\t\t/[^\\-_\\w\\d áàâäãåçéèêëíìîïñóòôöõúùûüýÿæœÁÀÂÄÃÅÇÉÈÊËÍÌÎÏÑÓÒÔÖÕÚÙÛÜÝŸÆŒ]/gi;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementParams.html":{"url":"classes/MoveElementParams.html","title":"class - MoveElementParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min, IsOptional } from 'class-validator';\n\n/**\n * DTO for Updating the position of a Dashboard Element.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\tx!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\ty!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiPropertyOptional({ description: 'used to identify a position within a group.' })\n\tgroupIndex?: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom!: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto!: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementPosition.html":{"url":"classes/MoveElementPosition.html","title":"class - MoveElementPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating the position of a Dashboard Element.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                groupIndex\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@IsOptional()@ApiPropertyOptional({description: 'used to identify a position within a group.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min, IsOptional } from 'class-validator';\n\n/**\n * DTO for Updating the position of a Dashboard Element.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\tx!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\ty!: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiPropertyOptional({ description: 'used to identify a position within a group.' })\n\tgroupIndex?: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom!: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto!: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/News.html":{"url":"entities/News.html","title":"entity - News","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:35\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:39\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTarget\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:51\n                        \n                    \n\n            \n                \n                    id reference to a collection populated later with name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:55\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:31\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:64\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:21\n                \n            \n\n\n            \n                \n                    Create a news by a user in a given scope (school or team).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:84\n                \n            \n\n\n            \n                \n                    Delete a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:35\n                \n            \n\n\n            \n                \n                    Responds with all news for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:56\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id.\nA user may only read news of scopes he has the read permission.\nThe news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:70\n                \n            \n\n\n            \n                \n                    Update properties of a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\nimport { ParseObjectIdPipe, PaginationQuery } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { NewsUc } from '../uc/news.uc';\n\nimport { CreateNewsParams, NewsFilterQuery, NewsListResponse, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Create a news by a user in a given scope (school or team).\n\t */\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Responds with all news for a user.\n\t */\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new NewsListResponse(dtoList, count);\n\t\treturn response;\n\t}\n\n\t/**\n\t * Retrieve a specific news entry by id.\n\t * A user may only read news of scopes he has the read permission.\n\t * The news entity has school and user names populated.\n\t */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Update properties of a news.\n\t */\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Delete a news.\n\t */\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '@shared/domain';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsListResponse.html":{"url":"classes/NewsListResponse.html","title":"class - NewsListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:129\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        NewsResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:136\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { NewsTargetModel } from '@shared/domain';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tcontent,\n\t\tdisplayAt,\n\t\tsource,\n\t\tsourceDescription,\n\t\ttargetModel,\n\t\ttargetId,\n\t\ttarget,\n\t\tschool,\n\t\tcreator,\n\t\tupdater,\n\t\tcreatedAt,\n\t\tupdatedAt,\n\t\tpermissions,\n\t}: NewsResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.content = content;\n\t\tthis.displayAt = displayAt;\n\t\tthis.source = source;\n\t\tthis.sourceDescription = sourceDescription;\n\t\tthis.targetModel = targetModel;\n\t\tthis.targetId = targetId;\n\t\tthis.target = target;\n\t\tthis.school = school;\n\t\tthis.creator = creator;\n\t\tthis.updater = updater;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.permissions = permissions;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\nexport class NewsListResponse extends PaginationResponse {\n\tconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [NewsResponse] })\n\tdata: NewsResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { News, ICreateNews, INewsScope, IUpdateNews, NewsTargetModel } from '@shared/domain';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { TargetInfoMapper } from './target-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst target = TargetInfoMapper.mapToResponse(news.target);\n\t\tconst school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tconst creator = UserInfoMapper.mapToResponse(news.creator);\n\n\t\tconst dto = new NewsResponse({\n\t\t\tid: news.id,\n\t\t\ttitle: news.title,\n\t\t\tcontent: news.content,\n\t\t\tdisplayAt: news.displayAt,\n\t\t\tsource: news.source,\n\t\t\tsourceDescription: news.sourceDescription,\n\t\t\ttargetId: news.target.id,\n\t\t\ttargetModel: news.targetModel,\n\t\t\ttarget,\n\t\t\tschool,\n\t\t\tcreator,\n\t\t\tcreatedAt: news.createdAt,\n\t\t\tupdatedAt: news.updatedAt,\n\t\t\tpermissions: news.permissions,\n\t\t});\n\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                        \n                            TeamNewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerModule } from '@src/core/logger';\nimport { AuthorizationModule } from '@src/modules/authorization';\nimport { NewsRepo } from '@shared/repo';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsController } from './controller/news.controller';\nimport { TeamNewsController } from './controller/team-news.controller';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController, TeamNewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/news/news.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news.repo.ts:19\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news documents list with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news.repo.ts:32\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['school', 'target', 'creator', 'updater']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/news/news.repo.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { Counted, CourseNews, EntityId, IFindOptions, News, SchoolNews, TeamNews } from '@shared/domain';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\tpropertiesToPopulate = ['school', 'target', 'creator', 'updater'];\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements (school, target, and updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst newsEntity = await this.em.findOneOrFail(News, id);\n\t\tawait this.em.populate(newsEntity, this.propertiesToPopulate);\n\t\treturn newsEntity;\n\t}\n\n\t/** resolves a news documents list with some elements (school, target, and updator/creator) populated already */\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [newsEntities, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(newsEntities, this.propertiesToPopulate);\n\t\t// populate target for all inheritances of news which not works when the list contains different types\n\t\tconst discriminatorColumn = 'target';\n\t\tconst schoolNews = newsEntities.filter((news) => news instanceof SchoolNews);\n\t\tawait this.em.populate(schoolNews, discriminatorColumn);\n\t\tconst teamNews = newsEntities.filter((news) => news instanceof TeamNews);\n\t\tawait this.em.populate(teamNews, discriminatorColumn);\n\t\tconst courseNews = newsEntities.filter((news) => news instanceof CourseNews);\n\t\tawait this.em.populate(courseNews, discriminatorColumn);\n\t\treturn [newsEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: NewsResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        NewsResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TargetInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The target object with id and name, could be the school, team, or course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:111\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { NewsTargetModel } from '@shared/domain';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\tconstructor({\n\t\tid,\n\t\ttitle,\n\t\tcontent,\n\t\tdisplayAt,\n\t\tsource,\n\t\tsourceDescription,\n\t\ttargetModel,\n\t\ttargetId,\n\t\ttarget,\n\t\tschool,\n\t\tcreator,\n\t\tupdater,\n\t\tcreatedAt,\n\t\tupdatedAt,\n\t\tpermissions,\n\t}: NewsResponse) {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.content = content;\n\t\tthis.displayAt = displayAt;\n\t\tthis.source = source;\n\t\tthis.sourceDescription = sourceDescription;\n\t\tthis.targetModel = targetModel;\n\t\tthis.targetId = targetId;\n\t\tthis.target = target;\n\t\tthis.school = school;\n\t\tthis.creator = creator;\n\t\tthis.updater = updater;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.permissions = permissions;\n\t}\n\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\nexport class NewsListResponse extends PaginationResponse {\n\tconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [NewsResponse] })\n\tdata: NewsResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/news/news-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news-scope.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/news/news-scope.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { News } from '@shared/domain';\nimport { EmptyResultQuery } from '../query';\nimport { Scope } from '../scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope extends Scope {\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/news/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId, NewsTargetModel } from '@shared/domain';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:64\n                \n            \n\n\n            \n                \n                    Provides news for a user, by default odered by displayAt to show latest news first.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport {\n\tEntityId,\n\tIFindOptions,\n\tNews,\n\tSortOrder,\n\tNewsTargetModel,\n\tICreateNews,\n\tINewsScope,\n\tIUpdateNews,\n} from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { AuthorizationService } from '@src/modules/authorization/authorization.service';\nimport { NewsRepo, NewsTargetFilter } from '@shared/repo';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tprivate logger: ILogger;\n\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService) {\n\t\tthis.logger = new Logger(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, displayAt: paramDisplayAt, ...props } = params;\n\t\t// set news as published by default\n\t\tconst displayAt = paramDisplayAt || new Date();\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tdisplayAt,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t * Provides news for a user, by default odered by displayAt to show latest news first.\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\n\t\tif (options == null) options = {};\n\t\t// by default show latest news first\n\t\tif (options.order == null) options.order = { displayAt: SortOrder.desc };\n\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.removeAndFlush(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            override\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        override\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        override:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport abstract class PaginationResponse {\n\tconstructor(total: number, skip?: number, limit?: number) {\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tabstract data: T;\n\n\t@ApiProperty({ type: 'number' })\n\ttotal: number;\n\n\t@ApiProperty({ type: 'number' })\n\tskip?: number;\n\n\t@ApiProperty({ type: 'number' })\n\tlimit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchGroupParams.html":{"url":"classes/PatchGroupParams.html","title":"class - PatchGroupParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchGroupParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/patchGroup.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Patching a the group name of a grid element.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the Group grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/patchGroup.params.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\n/**\n * DTO for Patching a the group name of a grid element.\n */\nexport class PatchGroupParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the Group grid element',\n\t})\n\ttitle!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionService.html":{"url":"injectables/PermissionService.html","title":"injectable - PermissionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/service/permission.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUserHasAllSchoolPermissions\n                            \n                            \n                                hasUserAllSchoolPermissions\n                            \n                            \n                                resolvePermissions\n                            \n                            \n                                    Private\n                                resolvePermissionsByRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkUserHasAllSchoolPermissions\n                        \n                    \n                \n            \n            \n                \ncheckUserHasAllSchoolPermissions(user: User, requiredPermissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/service/permission.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requiredPermissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUserAllSchoolPermissions\n                        \n                    \n                \n            \n            \n                \nhasUserAllSchoolPermissions(user: User, requiredPermissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/service/permission.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    requiredPermissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolvePermissions\n                        \n                    \n                \n            \n            \n                \nresolvePermissions(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/service/permission.service.ts:16\n                \n            \n\n\n            \n                \n                    Recursively resolve all roles and permissions of a user.\nIMPORTANT: The role collections of the user and nested roles will not be loaded lazily.\nPlease make sure you populate them before calling this method.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        resolvePermissionsByRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByRoles(inputRoles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/service/permission.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputRoles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Role } from '../entity/role.entity';\nimport { User } from '../entity/user.entity';\n\n// TODO move to authorization module\n\n@Injectable()\nexport class PermissionService {\n\t/**\n\t * Recursively resolve all roles and permissions of a user.\n\t * IMPORTANT: The role collections of the user and nested roles will not be loaded lazily.\n\t * Please make sure you populate them before calling this method.\n\t * @param user\n\t * @returns\n\t */\n\tresolvePermissions(user: User): string[] {\n\t\tif (!user.roles.isInitialized(true)) {\n\t\t\tthrow new Error('Roles items are not loaded.');\n\t\t}\n\t\tconst rolesAndPermissions = this.resolvePermissionsByRoles(user.roles.getItems());\n\n\t\treturn rolesAndPermissions;\n\t}\n\n\tprivate resolvePermissionsByRoles(inputRoles: Role[]): string[] {\n\t\tlet permissions: string[] = [];\n\n\t\tfor (let i = 0; i  0) {\n\t\t\t\tconst subPermissions = this.resolvePermissionsByRoles(innerRoles);\n\t\t\t\tpermissions = [...permissions, ...subPermissions];\n\t\t\t}\n\t\t}\n\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn permissions;\n\t}\n\n\thasUserAllSchoolPermissions(user: User, requiredPermissions: string[]): boolean {\n\t\tif (!Array.isArray(requiredPermissions) || requiredPermissions.length === 0) {\n\t\t\treturn false;\n\t\t}\n\t\tconst usersPermissions = this.resolvePermissions(user);\n\t\tconst hasPermissions = requiredPermissions.every((p) => usersPermissions.includes(p));\n\t\treturn hasPermissions;\n\t}\n\n\tcheckUserHasAllSchoolPermissions(user: User, requiredPermissions: string[]): void {\n\t\tconst hasPermission = this.hasUserAllSchoolPermissions(user, requiredPermissions);\n\t\tif (hasPermission !== true) {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IResolvedUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IResolvedUser, IRole } from '@shared/domain';\n\nexport type Role = IRole;\n\nexport class ResolvedUser implements IResolvedUser {\n\t@ApiProperty()\n\tfirstName!: string;\n\n\t@ApiProperty()\n\tlastName!: string;\n\n\t@ApiProperty()\n\tid!: string;\n\n\t@ApiProperty()\n\tcreatedAt!: Date;\n\n\t@ApiProperty()\n\tupdatedAt!: Date;\n\n\t@ApiProperty()\n\troles!: Role[];\n\n\t@ApiProperty()\n\tpermissions!: string[];\n\n\t@ApiProperty()\n\tschoolId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User, Role } from '@shared/domain';\nimport { ResolvedUser } from '../controller/dto';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RocketChatError.html":{"url":"classes/RocketChatError.html","title":"class - RocketChatError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RocketChatError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorType\n                            \n                            \n                                    Private\n                                response\n                            \n                            \n                                    Private\n                                statusCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e: any)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        errorType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GenericData\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/rocketchat/rocket-chat.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken?: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RocketChatModule.html":{"url":"modules/RocketChatModule.html","title":"module - RocketChatModule","body":"\n                   \n\n\n\n\n    Modules\n    RocketChatModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: RocketChatOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/rocketchat/rocket-chat.module.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                RocketChatOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule, HttpModule } from '@nestjs/common';\nimport { RocketChatOptions, RocketChatService } from './rocket-chat.service';\n\n@Module({})\nexport class RocketChatModule {\n\tstatic forRoot(options: RocketChatOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: RocketChatModule,\n\t\t\timports: [HttpModule],\n\t\t\tproviders: [\n\t\t\t\tRocketChatService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'ROCKET_CHAT_OPTIONS',\n\t\t\t\t\tuseValue: options,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [RocketChatService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RocketChatOptions.html":{"url":"interfaces/RocketChatOptions.html","title":"interface - RocketChatOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RocketChatOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/rocketchat/rocket-chat.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            adminId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminPassword\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            adminUser\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminUser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpService, Inject, Injectable } from '@nestjs/common';\nimport { catchError } from 'rxjs/operators';\n\nexport interface RocketChatOptions {\n\turi?: string;\n\tadminUser?: string;\n\tadminPassword?: string;\n\tadminId?: string;\n\tadminToken?: string;\n}\n\ntype GenericData = Record;\n\nexport class RocketChatError extends Error {\n\tprivate statusCode: number;\n\n\tprivate response: GenericData;\n\n\t// rocketchat specific error type\n\tprivate errorType: string;\n\n\tconstructor(e: any) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-argument\n\t\tsuper(e.response.statusText);\n\n\t\t// Set the prototype explicitly.\n\t\tObject.setPrototypeOf(this, RocketChatError.prototype);\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/no-unsafe-member-access\n\t\tthis.statusCode = e.response.statusCode;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.response = e.response.data;\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-assignment\n\t\tthis.errorType = e.response.data.errorType;\n\t}\n}\n\ninterface AdminIdAndToken {\n\tid: string;\n\ttoken: string;\n}\n\n@Injectable()\nexport class RocketChatService {\n\tprivate adminIdAndToken?: AdminIdAndToken;\n\n\tconstructor(\n\t\t@Inject('ROCKET_CHAT_OPTIONS') private readonly options: RocketChatOptions,\n\t\tprivate readonly httpService: HttpService\n\t) {}\n\n\tpublic async me(authToken: string, userId: string): Promise {\n\t\treturn this.get('/api/v1/me', authToken, userId);\n\t}\n\n\tpublic async setUserStatus(authToken: string, userId: string, status: string): Promise {\n\t\treturn this.post('/api/v1/users.setStatus', authToken, userId, {\n\t\t\tmessage: '',\n\t\t\tstatus,\n\t\t});\n\t}\n\n\tpublic async createUserToken(userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.createToken', {\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async logoutUser(authToken: string, userId: string): Promise {\n\t\treturn this.post('/api/v1/logout', authToken, userId, {});\n\t}\n\n\tpublic async getUserList(queryString: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/users.list?${queryString}`);\n\t}\n\n\tpublic async unarchiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.unarchive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async archiveGroup(groupName: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.archive', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async kickUserFromGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.kick', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async inviteUserToGroup(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.invite', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async addGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.addModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async removeGroupModerator(groupName: string, userId: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/groups.removeModerator', {\n\t\t\troomName: groupName,\n\t\t\tuserId,\n\t\t});\n\t}\n\n\tpublic async getGroupModerators(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.moderators?roomName=${groupName}`);\n\t}\n\n\tpublic async getGroupMembers(groupName: string): Promise {\n\t\treturn this.getAsAdmin(`/api/v1/groups.members?roomName=${groupName}`);\n\t}\n\n\tpublic async createGroup(name: string, members: string[]): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.create', {\n\t\t\tname,\n\t\t\tmembers,\n\t\t});\n\t}\n\n\tpublic async deleteGroup(groupName: string): Promise {\n\t\t// group.name is only used\n\t\treturn this.postAsAdmin('/api/v1/groups.delete', {\n\t\t\troomName: groupName,\n\t\t});\n\t}\n\n\tpublic async createUser(email: string, password: string, username: string, name: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.create', {\n\t\t\temail,\n\t\t\tpassword,\n\t\t\tusername,\n\t\t\tname,\n\t\t\tverified: true,\n\t\t});\n\t}\n\n\tpublic async deleteUser(username: string): Promise {\n\t\treturn this.postAsAdmin('/api/v1/users.delete', {\n\t\t\tusername,\n\t\t});\n\t}\n\n\tprivate async postAsAdmin(path: string, body: GenericData): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.post(path, adminIdAndToken.token, adminIdAndToken.id, body);\n\t}\n\n\tprivate async getAsAdmin(path: string): Promise {\n\t\tconst adminIdAndToken = await this.getAdminIdAndToken();\n\t\treturn this.get(path, adminIdAndToken.token, adminIdAndToken.id);\n\t}\n\n\tprivate async get(path: string, authToken: string, userId: string): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.get(`${this.options.uri}${path}`, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async post(path: string, authToken: string, userId: string, body: GenericData): Promise {\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}${path}`, body, {\n\t\t\t\theaders: {\n\t\t\t\t\t'X-Auth-Token': authToken,\n\t\t\t\t\t'X-User-ID': userId,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\t\treturn response?.data as GenericData;\n\t}\n\n\tprivate async getAdminIdAndToken(): Promise {\n\t\tthis.validateRocketChatConfig();\n\n\t\tif (this.adminIdAndToken) {\n\t\t\treturn this.adminIdAndToken;\n\t\t}\n\n\t\tif (this.options.adminId && this.options.adminToken) {\n\t\t\tconst newVar = { id: this.options.adminId, token: this.options.adminToken } as AdminIdAndToken;\n\t\t\tthis.adminIdAndToken = newVar;\n\t\t\treturn newVar;\n\t\t}\n\t\tconst response = await this.httpService\n\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t.post(`${this.options.uri}/api/v1/login`, {\n\t\t\t\tuser: this.options.adminUser,\n\t\t\t\tpassword: this.options.adminPassword,\n\t\t\t})\n\t\t\t.pipe(\n\t\t\t\tcatchError((e) => {\n\t\t\t\t\tthrow new RocketChatError(e);\n\t\t\t\t})\n\t\t\t)\n\t\t\t.toPromise();\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\t\tconst responseJson = response?.data;\n\t\tthis.adminIdAndToken = {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\tid: responseJson.data.userId as string,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\t\t\ttoken: responseJson.data.authToken as string,\n\t\t} as AdminIdAndToken;\n\t\treturn this.adminIdAndToken;\n\t}\n\n\tprivate validateRocketChatConfig(): void {\n\t\tif (!this.options.uri) {\n\t\t\tthrow new Error('rocket chat uri not set');\n\t\t}\n\t\tif (!(this.options.adminId && this.options.adminToken) && !(this.options.adminUser && this.options.adminPassword)) {\n\t\t\tthrow new Error('rocket chat adminId and adminToken OR adminUser and adminPassword must be set');\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation', options: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany({entity: 'Role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation', options: { unique: true } })\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany({ entity: 'Role' })\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleNameMapper.html":{"url":"classes/RoleNameMapper.html","title":"class - RoleNameMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleNameMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/mapper/role-name.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToDomain(roleName: RoleNameFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/mapper/role-name.mapper.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleName\n                                    \n                                                RoleNameFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RoleName\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(roleName: RoleName)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/mapper/role-name.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roleName\n                                    \n                                                RoleName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RoleNameResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RoleName } from '@shared/domain';\nimport { RoleNameFilterQuery, RoleNameResponse } from '../controller/dto';\n\nexport class RoleNameMapper {\n\tstatic mapToResponse(roleName: RoleName): RoleNameResponse {\n\t\tif (roleName === RoleName.ADMIN) return RoleNameResponse.ADMIN;\n\t\tif (roleName === RoleName.TEACHER) return RoleNameResponse.TEACHER;\n\t\tif (roleName === RoleName.STUDENT) return RoleNameResponse.STUDENT;\n\t\tthrow Error('invalid role name from domain');\n\t}\n\n\tstatic mapToDomain(roleName: RoleNameFilterQuery): RoleName {\n\t\tif (roleName === RoleNameFilterQuery.ADMIN) return RoleName.ADMIN;\n\t\tif (roleName === RoleNameFilterQuery.TEACHER) return RoleName.TEACHER;\n\t\tif (roleName === RoleNameFilterQuery.STUDENT) return RoleName.STUDENT;\n\t\tthrow Error('invalid role name from query');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/role/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/role/role.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/role/role.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/role/role.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 60000\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/role/role.repo.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, Role } from '@shared/domain';\n\n@Injectable()\nexport class RoleRepo {\n\tcache = 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\n\t\treturn role;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoomsController.html":{"url":"controllers/RoomsController.html","title":"controller - RoomsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoomsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/rooms.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rooms\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRoomBoard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRoomBoard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoomBoard(roomId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id/board')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/rooms.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { ParseObjectIdPipe } from '@shared/controller';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ICurrentUser } from '@shared/domain';\nimport { RoomsUc } from '../uc/rooms.uc';\nimport { BoardMapper } from '../mapper/board.mapper';\nimport { BoardResponse } from './dto/roomBoardResponse';\n\n@ApiTags('Rooms')\n@Authenticate('jwt')\n@Controller('rooms')\nexport class RoomsController {\n\tconstructor(private readonly roomsUc: RoomsUc, private readonly mapper: BoardMapper) {}\n\n\t@Get(':id/board')\n\tasync getRoomBoard(\n\t\t@Param('id', ParseObjectIdPipe) roomId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst board = await this.roomsUc.getBoard(roomId, currentUser.userId);\n\t\tconst mapped = this.mapper.mapToResponse(board);\n\t\treturn mapped;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoomsUc.html":{"url":"injectables/RoomsUc.html","title":"injectable - RoomsUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoomsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/rooms.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addStatusToTasks\n                            \n                            \n                                    Private\n                                buildBoard\n                            \n                            \n                                    Private\n                                buildBoardElements\n                            \n                            \n                                    Async\n                                getBoard\n                            \n                            \n                                    Private\n                                isTeacher\n                            \n                            \n                                    Private\n                                lessonFilter\n                            \n                            \n                                    Private\n                                taskFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo, lessonRepo: LessonRepo, taskRepo: TaskRepo, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lessonRepo\n                                                  \n                                                        \n                                                                        LessonRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addStatusToTasks\n                        \n                    \n                \n            \n            \n                \n                    \n                    addStatusToTasks(isTeacher: boolean, tasks: Task[], user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isTeacher\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tasks\n                                    \n                                                Task[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        buildBoard\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildBoard(room: Course, boardElements: BoardElement[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    room\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    boardElements\n                                    \n                                                BoardElement[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Board\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        buildBoardElements\n                        \n                    \n                \n            \n            \n                \n                    \n                    buildBoardElements(tasks: TaskWithStatusVo[], lessons: Lesson[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tasks\n                                    \n                                                TaskWithStatusVo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lessons\n                                    \n                                                Lesson[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         BoardElement[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBoard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBoard(roomId: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    isTeacher(user: User, course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        lessonFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    lessonFilter(isTeacher: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isTeacher\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        taskFilter\n                        \n                    \n                \n            \n            \n                \n                    \n                    taskFilter(isTeacher: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/rooms.uc.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isTeacher\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, Course, Task, TaskWithStatusVo, User, Lesson } from '@shared/domain';\nimport { CourseRepo, LessonRepo, TaskRepo, UserRepo } from '@shared/repo';\n\n// TODO: move this somewhere else\nexport interface Board {\n\troomId: string;\n\tdisplayColor: string;\n\ttitle: string;\n\telements: BoardElement[];\n}\n\nexport type BoardElement = {\n\t// TODO: should become fullblown class\n\ttype: string;\n\tcontent: TaskWithStatusVo | Lesson;\n};\n\n@Injectable()\nexport class RoomsUc {\n\tconstructor(\n\t\tprivate readonly courseRepo: CourseRepo,\n\t\tprivate readonly lessonRepo: LessonRepo,\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly userRepo: UserRepo\n\t) {}\n\n\tasync getBoard(roomId: EntityId, userId: EntityId): Promise {\n\t\tconst user = await this.userRepo.findById(userId, true);\n\n\t\tconst course = await this.courseRepo.findOne(roomId, userId);\n\t\tconst isTeacher = this.isTeacher(user, course);\n\t\tconst taskFilter = this.taskFilter(isTeacher);\n\t\tconst lessonFilter = this.lessonFilter(isTeacher);\n\t\tconst [tasks] = await this.taskRepo.findBySingleParent(user.id, course.id, taskFilter);\n\t\tconst tasksWithStatusVos = this.addStatusToTasks(isTeacher, tasks, user);\n\t\tconst [lessons] = await this.lessonRepo.findAllByCourseIds([course.id], lessonFilter);\n\t\tconst boardElements = this.buildBoardElements(tasksWithStatusVos, lessons);\n\n\t\tconst board = this.buildBoard(course, boardElements);\n\t\treturn board;\n\t}\n\n\tprivate taskFilter(isTeacher: boolean): { draft?: boolean; noFutureAvailableDate?: boolean } {\n\t\tconst filters: { draft?: boolean; noFutureAvailableDate?: boolean } = {};\n\t\tif (!isTeacher) {\n\t\t\tfilters.draft = false;\n\t\t\tfilters.noFutureAvailableDate = true;\n\t\t\treturn filters;\n\t\t}\n\t\tfilters.draft = true;\n\t\treturn filters;\n\t}\n\n\t// TODO: move somewhere else\n\tprivate buildBoard(room: Course, boardElements: BoardElement[]): Board {\n\t\tconst roomMetadata = room.getMetadata();\n\t\tconst board = {\n\t\t\troomId: roomMetadata.id,\n\t\t\tdisplayColor: roomMetadata.displayColor,\n\t\t\ttitle: roomMetadata.title,\n\t\t\telements: boardElements,\n\t\t};\n\t\treturn board;\n\t}\n\n\tprivate isTeacher(user: User, course: Course): boolean {\n\t\tif (course.teachers.contains(user) || course.substitutionTeachers.contains(user)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate addStatusToTasks(isTeacher: boolean, tasks: Task[], user: User): TaskWithStatusVo[] {\n\t\tlet tasksWithStatusVos: TaskWithStatusVo[];\n\t\tif (isTeacher) {\n\t\t\ttasksWithStatusVos = tasks.map((task) => {\n\t\t\t\tconst status = task.createTeacherStatusForUser(user);\n\t\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t\t});\n\t\t} else {\n\t\t\ttasksWithStatusVos = tasks.map((task) => {\n\t\t\t\tconst status = task.createStudentStatusForUser(user);\n\t\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t\t});\n\t\t}\n\t\treturn tasksWithStatusVos;\n\t}\n\n\tprivate lessonFilter(isTeacher: boolean): { hidden?: boolean } {\n\t\tconst filters: { hidden?: boolean } = {};\n\t\tif (!isTeacher) {\n\t\t\tfilters.hidden = false;\n\t\t}\n\t\treturn filters;\n\t}\n\n\tprivate buildBoardElements(tasks: TaskWithStatusVo[], lessons: Lesson[]): BoardElement[] {\n\t\tconst boardTasks = tasks.map((task) => ({ type: 'task', content: task }));\n\t\tconst boardLessons = lessons.map((lesson) => ({ type: 'lesson', content: lesson }));\n\t\tconst result = [...boardTasks, ...boardLessons];\n\t\tresult.sort();\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/School.html":{"url":"entities/School.html","title":"entity - School","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                inUserMigration\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        inUserMigration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ISchoolProperties {\n\tname: string;\n}\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\tconstructor(props: ISchoolProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n\n\t@Property()\n\tname!: string;\n\n\t@Property()\n\tinUserMigration?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: School)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                School\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { School } from '@shared/domain';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: School): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse({ id: schoolInfo.id, name: schoolInfo.name });\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: SchoolInfoResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        SchoolInfoResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\tconstructor({ id, name }: SchoolInfoResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/SchoolNews.html":{"url":"entities/SchoolNews.html","title":"entity - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:98\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(operator: ScopeOperator)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        operator\n                                                  \n                                                        \n                                                                        ScopeOperator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/repo/scope.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from './query/empty-result.query';\n\ntype EmptyResultQueryType = typeof EmptyResultQuery;\n\ntype ScopeOperator = '$and' | '$or';\n\nexport class Scope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tprivate _operator: ScopeOperator;\n\n\tconstructor(operator: ScopeOperator = '$and') {\n\t\tthis._operator = operator;\n\t}\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery as FilterQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { [this._operator]: this._queries } : this._queries[0];\n\t\treturn query as FilterQuery;\n\t}\n\n\taddQuery(query: FilterQuery | EmptyResultQueryType): void {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConsole.html":{"url":"classes/ServerConsole.html","title":"class - ServerConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/server.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getInOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/console/server.console.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'test', description: 'sample test output'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:11\n                \n            \n\n\n            \n                \n                    test method for console output\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInOut\n                        \n                    \n                \n            \n            \n                \ngetInOut(whatever: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'out ', description: 'return input args'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:17\n                \n            \n\n\n            \n                \n                    test method for console input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    whatever\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console';\n\n@Console({ command: 'server', description: 'sample server console' })\nexport class ServerConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService) {}\n\n\t/** test method for console output */\n\t@Command({ command: 'test', description: 'sample test output' })\n\tgetHello(): void {\n\t\tthis.consoleWriter.info('Schulcloud Server API');\n\t}\n\n\t/** test method for console input */\n\t@Command({ command: 'out ', description: 'return input args' })\n\tgetInOut(whatever: string): void {\n\t\tthis.consoleWriter.info(`input was: ${whatever}`);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerConsoleModule.html":{"url":"modules/ServerConsoleModule.html","title":"module - ServerConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerConsoleModule -->\n\nFilesModule->ServerConsoleModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConsoleWriterModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ManagementModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleModule } from 'nestjs-console';\nimport { ConsoleWriterModule } from '@shared/infra/console/console-writer/console-writer.module';\nimport { ManagementModule } from '../modules/management/management.module';\nimport { FilesModule } from '../modules/files/files.module';\nimport { ServerConsole } from './server.console';\n\n@Module({\n\timports: [ManagementModule, ConsoleModule, ConsoleWriterModule, FilesModule],\n\tproviders: [\n\t\t/** add console services as providers */\n\t\tServerConsole,\n\t],\n})\nexport class ServerConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerModule -->\n\nFilesModule->ServerModule\n\n\n\n\n\nImportUserModule\n\nImportUserModule\n\nServerModule -->\n\nImportUserModule->ServerModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Server Module used for production\n\n        \n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ImportUserModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DynamicModule, Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MailModule } from '@shared/infra/mail';\nimport { RocketChatModule } from '@src/modules/rocketchat';\nimport { LearnroomModule } from '@src/modules/learnroom';\nimport { CoreModule } from '@src/core';\nimport { TaskModule } from '@src/modules/task';\nimport { UserModule } from '@src/modules/user';\nimport { NewsModule } from '@src/modules/news';\nimport { FilesModule } from '@src/modules/files';\nimport { MongoMemoryDatabaseModule } from '@shared/infra/database';\nimport { MongoDatabaseModuleOptions } from '@shared/infra/database/mongo-memory-database/types';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\nimport { ImportUserModule } from './modules/user-import/user-import.module';\n\nconst serverModules = [\n\tCoreModule,\n\tAuthModule,\n\tTaskModule,\n\tNewsModule,\n\tUserModule,\n\tImportUserModule,\n\tLearnroomModule,\n\tMailModule.forRoot({\n\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t}),\n\tFilesModule,\n\tRocketChatModule.forRoot({\n\t\turi: Configuration.get('ROCKET_CHAT_URI') as string,\n\t\tadminId: Configuration.get('ROCKET_CHAT_ADMIN_ID') as string,\n\t\tadminToken: Configuration.get('ROCKET_CHAT_ADMIN_TOKEN') as string,\n\t\tadminUser: Configuration.get('ROCKET_CHAT_ADMIN_USER') as string,\n\t\tadminPassword: Configuration.get('ROCKET_CHAT_ADMIN_PASSWORD') as string,\n\t}),\n];\n\nconst defaultMikroOrmOptions: MikroOrmModuleSyncOptions = {\n\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t},\n};\n\n/**\n * Server Module used for production\n */\n@Module({\n\timports: [\n\t\t...serverModules,\n\t\tMikroOrmModule.forRoot({\n\t\t\t...defaultMikroOrmOptions,\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n/**\n * Server module used for testing.\n * Should have same modules than the @ServerModule while infrastucture Modules can be different.\n * Customizations:\n * - In Memory Database instead of external connection\n * // TODO add custom mail, rocketchat, and rabbitmq modules\n * // TODO use instead of ServerModule when NODE_ENV=test\n */\n@Module({\n\timports: [...serverModules, MongoMemoryDatabaseModule.forRoot({ ...defaultMikroOrmOptions })],\n\tcontrollers: [ServerController],\n})\nexport class ServerTestModule {\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: ServerTestModule,\n\t\t\timports: [...serverModules, MongoMemoryDatabaseModule.forRoot({ ...defaultMikroOrmOptions, ...options })],\n\t\t\tcontrollers: [ServerController],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerTestModule.html":{"url":"modules/ServerTestModule.html","title":"module - ServerTestModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerTestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerTestModule\n\n\n\ncluster_ServerTestModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerTestModule\n\nServerTestModule\n\nServerTestModule -->\n\nAuthModule->ServerTestModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerTestModule -->\n\nCoreModule->ServerTestModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerTestModule -->\n\nFilesModule->ServerTestModule\n\n\n\n\n\nImportUserModule\n\nImportUserModule\n\nServerTestModule -->\n\nImportUserModule->ServerTestModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerTestModule -->\n\nLearnroomModule->ServerTestModule\n\n\n\n\n\nMongoMemoryDatabaseModule\n\nMongoMemoryDatabaseModule\n\nServerTestModule -->\n\nMongoMemoryDatabaseModule->ServerTestModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerTestModule -->\n\nNewsModule->ServerTestModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerTestModule -->\n\nTaskModule->ServerTestModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerTestModule -->\n\nUserModule->ServerTestModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Server module used for testing.\nShould have same modules than the @ServerModule while infrastucture Modules can be different.\nCustomizations:\n\nIn Memory Database instead of external connection\n// TODO add custom mail, rocketchat, and rabbitmq modules\n// TODO use instead of ServerModule when NODE_ENV=test\n\n\n        \n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ImportUserModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            MongoMemoryDatabaseModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/server.module.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule, MikroOrmModuleSyncOptions } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MailModule } from '@shared/infra/mail';\nimport { RocketChatModule } from '@src/modules/rocketchat';\nimport { LearnroomModule } from '@src/modules/learnroom';\nimport { CoreModule } from '@src/core';\nimport { TaskModule } from '@src/modules/task';\nimport { UserModule } from '@src/modules/user';\nimport { NewsModule } from '@src/modules/news';\nimport { FilesModule } from '@src/modules/files';\nimport { MongoMemoryDatabaseModule } from '@shared/infra/database';\nimport { MongoDatabaseModuleOptions } from '@shared/infra/database/mongo-memory-database/types';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\nimport { ImportUserModule } from './modules/user-import/user-import.module';\n\nconst serverModules = [\n\tCoreModule,\n\tAuthModule,\n\tTaskModule,\n\tNewsModule,\n\tUserModule,\n\tImportUserModule,\n\tLearnroomModule,\n\tMailModule.forRoot({\n\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t}),\n\tFilesModule,\n\tRocketChatModule.forRoot({\n\t\turi: Configuration.get('ROCKET_CHAT_URI') as string,\n\t\tadminId: Configuration.get('ROCKET_CHAT_ADMIN_ID') as string,\n\t\tadminToken: Configuration.get('ROCKET_CHAT_ADMIN_TOKEN') as string,\n\t\tadminUser: Configuration.get('ROCKET_CHAT_ADMIN_USER') as string,\n\t\tadminPassword: Configuration.get('ROCKET_CHAT_ADMIN_PASSWORD') as string,\n\t}),\n];\n\nconst defaultMikroOrmOptions: MikroOrmModuleSyncOptions = {\n\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t},\n};\n\n/**\n * Server Module used for production\n */\n@Module({\n\timports: [\n\t\t...serverModules,\n\t\tMikroOrmModule.forRoot({\n\t\t\t...defaultMikroOrmOptions,\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n/**\n * Server module used for testing.\n * Should have same modules than the @ServerModule while infrastucture Modules can be different.\n * Customizations:\n * - In Memory Database instead of external connection\n * // TODO add custom mail, rocketchat, and rabbitmq modules\n * // TODO use instead of ServerModule when NODE_ENV=test\n */\n@Module({\n\timports: [...serverModules, MongoMemoryDatabaseModule.forRoot({ ...defaultMikroOrmOptions })],\n\tcontrollers: [ServerController],\n})\nexport class ServerTestModule {\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: ServerTestModule,\n\t\t\timports: [...serverModules, MongoMemoryDatabaseModule.forRoot({ ...defaultMikroOrmOptions, ...options })],\n\t\t\tcontrollers: [ServerController],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SortingQuery.html":{"url":"classes/SortingQuery.html","title":"class - SortingQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SortingQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/sorting.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Optional\n                                sortBy\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Optional\n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/sorting.query.ts:13\n                        \n                    \n\n            \n                \n                    Set type and Decorators in extending classes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SortOrder\n\n                    \n                \n                \n                    \n                        Default value : SortOrder.asc\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(SortOrder)@ApiPropertyOptional({enum: SortOrder})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/sorting.query.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsOptional } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nenum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport abstract class SortingQuery {\n\t/**\n\t * Set type and Decorators in extending classes\n\t */\n\tabstract sortBy?: T;\n\n\t@IsOptional()\n\t@IsEnum(SortOrder)\n\t@ApiPropertyOptional({ enum: SortOrder })\n\tsortOrder: SortOrder = SortOrder.asc;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/StorageProvider.html":{"url":"entities/StorageProvider.html","title":"entity - StorageProvider","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  StorageProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/storageprovider.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessKeyId\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Optional\n                                region\n                            \n                            \n                                secretAccessKey\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessKeyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpointUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secretAccessKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'secretAccessKey', type: EncryptedStringType})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { EncryptedStringType } from '@shared/repo/types/EncryptedString.type';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IStorageProviderProperties {\n\tendpointUrl: string;\n\taccessKeyId: string;\n\tsecretAccessKey: string;\n\tregion?: string;\n}\n\n@Entity({ tableName: 'storageproviders' })\nexport class StorageProvider extends BaseEntityWithTimestamps {\n\t@Property()\n\tendpointUrl!: string;\n\n\t@Property()\n\taccessKeyId!: string;\n\n\t@Property({ fieldName: 'secretAccessKey', type: EncryptedStringType })\n\tsecretAccessKey!: string;\n\n\t@Property()\n\tregion?: string;\n\n\tconstructor(props: IStorageProviderProperties) {\n\t\tsuper();\n\t\tthis.endpointUrl = props.endpointUrl;\n\t\tthis.accessKeyId = props.accessKeyId;\n\t\tthis.secretAccessKey = props.secretAccessKey;\n\t\tthis.region = props.region;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageProviderRepo.html":{"url":"injectables/StorageProviderRepo.html","title":"injectable - StorageProviderRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageProviderRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/storageprovider/storageprovider.repo.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { StorageProvider, EntityId } from '@shared/domain';\nimport { BaseRepo } from '../base.repo';\n\n@Injectable()\nexport class StorageProviderRepo extends BaseRepo {\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst storageProvider = await this.em.findOneOrFail(StorageProvider, id);\n\t\treturn storageProvider;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StringValidator.html":{"url":"classes/StringValidator.html","title":"class - StringValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StringValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/validator/string.validator.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isNotEmptyString\n                            \n                            \n                                    Static\n                                isString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isNotEmptyString\n                        \n                    \n                \n            \n            \n                \n                    \n                    isNotEmptyString(value?: string, trim)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/validator/string.validator.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    trim\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isString\n                        \n                    \n                \n            \n            \n                \n                    \n                    isString(value?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/validator/string.validator.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class StringValidator {\n\tstatic isString(value?: string): value is string {\n\t\tconst result = value != null && typeof value === 'string';\n\t\tif (result === true) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tstatic isNotEmptyString(value?: string, trim = false): boolean {\n\t\tif (StringValidator.isString(value)) {\n\t\t\tconst result = trim ? value.trim().length > 0 : value.length > 0;\n\t\t\treturn result;\n\t\t}\n\t\treturn false;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Submission.html":{"url":"entities/Submission.html","title":"entity - Submission","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                    Optional\n                                courseGroup\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFiles\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                teamMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseGroup\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('CourseGroup', {fieldName: 'courseGroupId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'gradeFileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'fileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Task', {fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teamMembers'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\nexport interface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tgetStudentId(): EntityId {\n\t\treturn this.student.id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmissionFactory.html":{"url":"classes/SubmissionFactory.html","title":"class - SubmissionFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmissionFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/submission.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                graded\n                            \n                            \n                                afterBuild\n                            \n                            \n                                associations\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        graded\n                        \n                    \n                \n            \n            \n                \ngraded()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/submission.factory.ts:8\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:87\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n            \n                \nassociations(associations: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:99\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    associations\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:47\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:73\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:60\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:137\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:32\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        C\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:111\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:133\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:149\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\nimport { Submission, ISubmissionProperties } from '@shared/domain';\nimport { BaseFactory } from './base.factory';\nimport { taskFactory } from './task.factory';\nimport { userFactory } from './user.factory';\n\nclass SubmissionFactory extends BaseFactory {\n\tgraded(): this {\n\t\tconst params: DeepPartial = { gradeComment: 'graded text' };\n\t\treturn this.params(params);\n\t}\n}\n\nexport const submissionFactory = SubmissionFactory.define(Submission, ({ sequence }) => {\n\treturn {\n\t\ttask: taskFactory.build(),\n\t\tstudent: userFactory.build(),\n\t\tcomment: `submission comment #${sequence}`,\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/submission/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                byUserIdQuery\n                            \n                            \n                                    Async\n                                findAllByTaskIds\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/submission/submission.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        byUserIdQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    byUserIdQuery(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/submission/submission.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByTaskIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByTaskIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/submission/submission.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/submission/submission.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup, Submission } from '@shared/domain';\n\n// TODO: add scope helper\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByTaskIds(taskIds: EntityId[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: taskIds },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst result = await this.em.findAndCount(Submission, await this.byUserIdQuery(userId));\n\t\treturn result;\n\t}\n\n\tprivate async byUserIdQuery(userId: EntityId): Promise> {\n\t\tconst courseGroupsOfUser = await this.em.find(CourseGroup, { students: userId });\n\t\tconst query = { $or: [{ student: userId }, { teamMembers: userId }, { courseGroup: { $in: courseGroupsOfUser } }] };\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymetricKeyEncryptionService.html":{"url":"injectables/SymetricKeyEncryptionService.html","title":"injectable - SymetricKeyEncryptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SymetricKeyEncryptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decrypt\n                            \n                            \n                                    Public\n                                encrypt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        decrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    decrypt(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        encrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    encrypt(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import CryptoJs from 'crypto-js';\n\nimport { Inject, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SymetricKeyEncryptionService {\n\tconstructor(@Inject('SYMMETRIC_CIPHER_KEY') private readonly key: string) {}\n\n\tpublic encrypt(data: string): string {\n\t\treturn CryptoJs.AES.encrypt(data, this.key).toString();\n\t}\n\n\tpublic decrypt(data: string): string {\n\t\treturn CryptoJs.AES.decrypt(data, this.key).toString(CryptoJs.enc.Utf8);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/System.html":{"url":"entities/System.html","title":"entity - System","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  System\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/system.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        alias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/system.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/system.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/system.entity.ts:23\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface ISystemProperties {\n\ttype: string;\n\turl?: string;\n\talias?: string;\n}\n\n@Entity({ tableName: 'systems' })\nexport class System extends BaseEntityWithTimestamps {\n\tconstructor(props: ISystemProperties) {\n\t\tsuper();\n\t\tthis.type = props.type;\n\t\tif (props.url != null) this.url = props.url;\n\t\tif (props.alias != null) this.alias = props.alias;\n\t}\n\n\t@Property({})\n\ttype: string; // see legacy enum for valid values\n\n\t@Property()\n\turl?: string;\n\n\t@Property()\n\talias?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoMapper.html":{"url":"classes/TargetInfoMapper.html","title":"class - TargetInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/target-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(target: NewsTarget)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/target-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                NewsTarget\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TargetInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NewsTarget } from '@shared/domain';\nimport { TargetInfoResponse } from '../controller/dto/target-info.response';\n\nexport class TargetInfoMapper {\n\tstatic mapToResponse(target: NewsTarget): TargetInfoResponse {\n\t\tconst dto = new TargetInfoResponse({ id: target.id, name: target.name });\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoResponse.html":{"url":"classes/TargetInfoResponse.html","title":"class - TargetInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/target-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: TargetInfoResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        TargetInfoResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TargetInfoResponse {\n\tconstructor({ id, name }: TargetInfoResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t}\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the Target entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the Target entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Task.html":{"url":"entities/Task.html","title":"entity - Task","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                    Optional\n                                course\n                            \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                finished\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                private\n                            \n                            \n                                submissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'teacherId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'findAllByParentIds_findAllForTeacher'})@ManyToMany('User', undefined, {fieldName: 'archived'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Lesson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Lesson', {fieldName: 'lessonId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('Submission', 'task')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:73\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tdescription?: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n\tisFinished: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { courseName: string; lessonName: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdescription: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.description = props.description || '';\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisFinishedForUser(user: User): boolean {\n\t\treturn !!(this.finished?.contains(user) || this.course?.isFinished());\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionItems(): Submission[] {\n\t\tif (!this.submissions.isInitialized(true)) {\n\t\t\tthrow new Error('Submissions items are not loaded.');\n\t\t}\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submittedUserIds = this.getSubmissionItems().map((submission) => submission.student.id);\n\t\tconst uniqueSubmittedUserIds = [...new Set(submittedUserIds)];\n\n\t\treturn uniqueSubmittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst count = submittedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\t\tconst uniqueGradedUserIds = [...new Set(gradedUserIds)];\n\n\t\treturn uniqueGradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst count = gradedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(user: User): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\tconst isFinished = this.isFinishedForUser(user);\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.substitutionTeachers.contains(user);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(user: User): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((uid) => uid === user.id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(user: User): boolean {\n\t\tconst graded = this.getGradedUserIds().some((uid) => uid === user.id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(user: User): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(user);\n\t\tconst isGraded = this.isGradedForUser(user);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\t\tconst isFinished = this.isFinishedForUser(user);\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetParentData(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tcourseName: this.course.name,\n\t\t\t\tlessonName: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tcourseName: '',\n\t\t\t\tlessonName: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n\n\tfinishForUser(user: User) {\n\t\tthis.finished.add(user);\n\t}\n\n\trestoreForUser(user: User) {\n\t\tthis.finished.remove(user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskAuthorizationService.html":{"url":"injectables/TaskAuthorizationService.html","title":"injectable - TaskAuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskAuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedCourses\n                            \n                            \n                                    Async\n                                getPermittedLessons\n                            \n                            \n                                    Private\n                                hasCourseReadPermission\n                            \n                            \n                                    Private\n                                hasCourseWritePermission\n                            \n                            \n                                hasOneOfTaskDashboardPermissions\n                            \n                            \n                                hasTaskPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo, lessonRepo: LessonRepo, permissionService: PermissionService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lessonRepo\n                                                  \n                                                        \n                                                                        LessonRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionService\n                                                  \n                                                        \n                                                                        PermissionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedCourses(user: User, neededPermission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    neededPermission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedLessons\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedLessons(user: User, courses: Course[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    courses\n                                    \n                                                Course[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasCourseReadPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasCourseReadPermission(user: User, course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasCourseWritePermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasCourseWritePermission(user: User, course: Course)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasOneOfTaskDashboardPermissions\n                        \n                    \n                \n            \n            \n                \nhasOneOfTaskDashboardPermissions(user: User, permission: TaskDashBoardPermission | TaskDashBoardPermission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskDashBoardPermission | TaskDashBoardPermission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasTaskPermission\n                        \n                    \n                \n            \n            \n                \nhasTaskPermission(user: User, task: Task, permission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Course, Lesson, PermissionService, Task, User } from '@shared/domain';\nimport { CourseRepo, LessonRepo } from '@shared/repo';\n\nexport enum TaskParentPermission {\n\tread,\n\twrite,\n}\n\nexport enum TaskDashBoardPermission {\n\tteacherDashboard = 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\tstudentDashboard = 'TASK_DASHBOARD_VIEW_V3',\n}\n\n@Injectable()\nexport class TaskAuthorizationService {\n\tconstructor(\n\t\tprivate readonly courseRepo: CourseRepo,\n\t\tprivate readonly lessonRepo: LessonRepo,\n\t\tprivate readonly permissionService: PermissionService\n\t) {}\n\n\t// it should return also the scopePermissions for this user added to the entity .scopePermission: { userId, read: boolean, write: boolean }\n\t// then we can pass and allow only scoped courses to getPermittedLessonIds and validate read write of .scopePermission\n\tasync getPermittedCourses(user: User, neededPermission: TaskParentPermission): Promise {\n\t\tlet permittedCourses: Course[] = [];\n\n\t\tif (neededPermission === TaskParentPermission.write) {\n\t\t\t[permittedCourses] = await this.courseRepo.findAllForTeacher(user.id);\n\t\t} else if (neededPermission === TaskParentPermission.read) {\n\t\t\t[permittedCourses] = await this.courseRepo.findAllByUserId(user.id);\n\t\t}\n\n\t\treturn permittedCourses;\n\t}\n\n\tasync getPermittedLessons(user: User, courses: Course[]): Promise {\n\t\tconst writeCourses = courses.filter((c) => this.hasCourseWritePermission(user, c));\n\t\tconst readCourses = courses.filter((c) => !writeCourses.includes(c));\n\n\t\tconst writeCourseIds = writeCourses.map((c) => c.id);\n\t\tconst readCourseIds = readCourses.map((c) => c.id);\n\n\t\t// idea as combined query:\n\t\t// [{courseIds: onlyWriteCoursesIds}, { courseIds: onlyReadCourses, filter: { hidden: false }}]\n\t\tconst [[writeLessons], [readLessons]] = await Promise.all([\n\t\t\tthis.lessonRepo.findAllByCourseIds(writeCourseIds),\n\t\t\tthis.lessonRepo.findAllByCourseIds(readCourseIds, { hidden: false }),\n\t\t]);\n\n\t\tconst permittedLessons = [...writeLessons, ...readLessons];\n\n\t\treturn permittedLessons;\n\t}\n\n\tprivate hasCourseWritePermission(user: User, course: Course): boolean {\n\t\tconst hasPermission = course.substitutionTeachers.contains(user) || course.teachers.contains(user);\n\n\t\treturn hasPermission;\n\t}\n\n\tprivate hasCourseReadPermission(user: User, course: Course): boolean {\n\t\tconst hasPermission =\n\t\t\tcourse.students.contains(user) || course.substitutionTeachers.contains(user) || course.teachers.contains(user);\n\n\t\treturn hasPermission;\n\t}\n\n\thasTaskPermission(user: User, task: Task, permission: TaskParentPermission): boolean {\n\t\tconst isCreator = task.creator === user;\n\t\tlet hasCoursePermission = false;\n\n\t\tif (task.course && permission === TaskParentPermission.write) {\n\t\t\thasCoursePermission = this.hasCourseWritePermission(user, task.course);\n\t\t} else if (task.course && permission === TaskParentPermission.read) {\n\t\t\thasCoursePermission = this.hasCourseReadPermission(user, task.course);\n\t\t}\n\n\t\tconst hasPermission = isCreator || hasCoursePermission;\n\n\t\treturn hasPermission;\n\t}\n\n\thasOneOfTaskDashboardPermissions(\n\t\tuser: User,\n\t\tpermission: TaskDashBoardPermission | TaskDashBoardPermission[]\n\t): boolean {\n\t\tconst permissions = this.permissionService.resolvePermissions(user);\n\n\t\tconst hasPermission = Array.isArray(permission)\n\t\t\t? permission.some((p) => permissions.includes(p))\n\t\t\t: permissions.includes(permission);\n\n\t\treturn hasPermission;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllFinished\n                            \n                            \n                                    Async\n                                finish\n                            \n                            \n                                    Async\n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFinished\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFinished(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('finished')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        finish\n                        \n                    \n                \n            \n            \n                \n                    \n                    finish(taskId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/finish')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        restore\n                        \n                    \n                \n            \n            \n                \n                    \n                    restore(taskId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/restore')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { ICurrentUser } from '@shared/domain';\nimport { PaginationQuery } from '@shared/controller/';\nimport { Controller, Get, Param, Patch, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { ParseObjectIdPipe } from '@shared/controller/pipe';\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskListResponse, TaskResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('tasks')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAll(currentUser.userId, paginationQuery);\n\t\tconst taskresponses = tasksWithStatus.map((taskWithStatus) => {\n\t\t\treturn TaskMapper.mapToResponse(taskWithStatus);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new TaskListResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n\n\t@Get('finished')\n\tasync findAllFinished(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAllFinished(currentUser.userId, paginationQuery);\n\n\t\tconst taskresponses = tasksWithStatus.map((task) => {\n\t\t\treturn TaskMapper.mapToResponse(task);\n\t\t});\n\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new TaskListResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n\n\t@Patch(':id/finish')\n\tasync finish(\n\t\t@Param('id', ParseObjectIdPipe) taskId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst task = await this.taskUc.changeFinishedForUser(currentUser.userId, taskId, true);\n\n\t\tconst response = TaskMapper.mapToResponse(task);\n\n\t\treturn response;\n\t}\n\n\t@Patch(':id/restore')\n\tasync restore(\n\t\t@Param('id', ParseObjectIdPipe) taskId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst task = await this.taskUc.changeFinishedForUser(currentUser.userId, taskId, false);\n\n\t\tconst response = TaskMapper.mapToResponse(task);\n\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskFactory.html":{"url":"classes/TaskFactory.html","title":"class - TaskFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/task.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                draft\n                            \n                            \n                                finished\n                            \n                            \n                                afterBuild\n                            \n                            \n                                associations\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        draft\n                        \n                    \n                \n            \n            \n                \ndraft()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/task.factory.ts:11\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished\n                        \n                    \n                \n            \n            \n                \nfinished(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/task.factory.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:87\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n            \n                \nassociations(associations: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:99\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    associations\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:47\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:73\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:60\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:137\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:32\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        C\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:111\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:133\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:149\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DeepPartial } from 'fishery';\n\nimport { Task, ITaskProperties } from '@shared/domain';\nimport type { User } from '@shared/domain/entity';\n\nimport { BaseFactory } from './base.factory';\n\nconst yesterday = new Date(Date.now() - 86400000);\n\nclass TaskFactory extends BaseFactory {\n\tdraft(): this {\n\t\tconst params: DeepPartial = { private: true };\n\t\treturn this.params(params);\n\t}\n\n\tfinished(user: User): this {\n\t\tconst params: DeepPartial = { finished: [user] };\n\t\treturn this.params(params);\n\t}\n}\n\nexport const taskFactory = TaskFactory.define(Task, ({ sequence }) => {\n\t// private is by default in constructor true, but in the most test cases we need private: false\n\treturn { name: `task #${sequence}`, private: false, availableDate: yesterday };\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskListResponse.html":{"url":"classes/TaskListResponse.html","title":"class - TaskListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        TaskResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:59\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse, DecodeHtmlEntities } from '@shared/controller';\nimport { TaskStatusResponse } from './task-status.response';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\tconstructor({ id, name, courseName, createdAt, updatedAt, status }: TaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.courseName = courseName;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tcourseName: string = '' as string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string; // TODO: change this, since this is NOT the tasks description, but the name of its lesson\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: TaskStatusResponse;\n}\n\nexport class TaskListResponse extends PaginationResponse {\n\tconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [TaskResponse] })\n\tdata: TaskResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(taskWithStatus: TaskWithStatusVo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskWithStatus\n                                    \n                                                TaskWithStatusVo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskWithStatusVo } from '@shared/domain';\nimport { TaskResponse } from '../controller/dto';\nimport { TaskStatusMapper } from './task-status.mapper';\n\nexport class TaskMapper {\n\tstatic mapToResponse(taskWithStatus: TaskWithStatusVo): TaskResponse {\n\t\tconst { task, status } = taskWithStatus;\n\t\tconst taskDesc = task.getParentData();\n\t\tconst statusDto = TaskStatusMapper.mapToResponse(status);\n\n\t\tconst dto = new TaskResponse({\n\t\t\tid: task.id,\n\t\t\tname: task.name,\n\t\t\tcourseName: taskDesc.courseName,\n\t\t\tcreatedAt: task.createdAt,\n\t\t\tupdatedAt: task.updatedAt,\n\t\t\tstatus: statusDto,\n\t\t});\n\n\t\tdto.availableDate = task.availableDate;\n\t\tdto.duedate = task.dueDate;\n\n\t\tdto.displayColor = taskDesc.color;\n\t\tdto.description = taskDesc.lessonName;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nPermissionService\n\nPermissionService\n\nTaskModule -->\n\nPermissionService->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nTaskModule -->\n\nUserRepo->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            LessonRepo\n                        \n                        \n                            PermissionService\n                        \n                        \n                            TaskAuthorizationService\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionService } from '@shared/domain';\n\nimport { CourseRepo, LessonRepo, TaskRepo, UserRepo } from '@shared/repo';\n\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc';\nimport { TaskAuthorizationService } from './uc/task.authorization.service';\n\n@Module({\n\timports: [],\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, TaskAuthorizationService, LessonRepo, CourseRepo, UserRepo, PermissionService],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/task/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByParentIds\n                            \n                            \n                                    Async\n                                findAllFinishedByParentIds\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findBySingleParent\n                            \n                            \n                                    Private\n                                    Async\n                                findTasksAndCount\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/task/task.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByParentIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByParentIds(parentIds: literal type, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:104\n                \n            \n\n\n            \n                \n                    Find all tasks by their parents which can be any of\n\na teacher who owns the task\na list of courses\na list of lessons\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parentIds for teacher, courses and lesson\n\n                                    \n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        filters\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFinishedByParentIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFinishedByParentIds(parentIds: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findBySingleParent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findBySingleParent(creatorId: EntityId, courseId: EntityId, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    courseId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findTasksAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTasksAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery, QueryOrderMap } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\nimport { EntityId, IFindOptions, Task, Counted, SortOrder } from '@shared/domain';\n\nimport { TaskScope } from './task-scope';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst task = await this.em.findOneOrFail(Task, { id });\n\t\tawait this.em.populate(task, ['course', 'lesson', 'submissions']);\n\t\treturn task;\n\t}\n\n\tasync save(task: Task): Promise {\n\t\tawait this.em.persistAndFlush(task);\n\t}\n\n\tasync findAllFinishedByParentIds(\n\t\tparentIds: {\n\t\t\tcreatorId: EntityId;\n\t\t\topenCourseIds: EntityId[];\n\t\t\tlessonIdsOfOpenCourses: EntityId[];\n\t\t\tfinishedCourseIds: EntityId[];\n\t\t\tlessonIdsOfFinishedCourses: EntityId[];\n\t\t},\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst { pagination } = options || {};\n\n\t\tconst scope = new TaskScope('$or');\n\n\t\tconst parentsOpen = new TaskScope('$or');\n\t\tparentsOpen.byCourseIds(parentIds.openCourseIds);\n\t\tparentsOpen.byLessonIds(parentIds.lessonIdsOfOpenCourses);\n\n\t\tconst parentsFinished = new TaskScope('$or');\n\t\tparentsFinished.byCourseIds(parentIds.finishedCourseIds);\n\t\tparentsFinished.byLessonIds(parentIds.lessonIdsOfFinishedCourses);\n\n\t\tconst closedForOpenCoursesAndLessons = new TaskScope();\n\t\tclosedForOpenCoursesAndLessons.addQuery(parentsOpen.query);\n\t\tclosedForOpenCoursesAndLessons.byDraft(false);\n\t\tclosedForOpenCoursesAndLessons.byFinished(parentIds.creatorId, true);\n\n\t\tconst allForFinishedCoursesAndLessons = new TaskScope();\n\t\tallForFinishedCoursesAndLessons.addQuery(parentsFinished.query);\n\t\tallForFinishedCoursesAndLessons.byDraft(false);\n\n\t\t// must find also closed without course or lesson as parent\n\t\tconst closedWithoutParentForCreator = new TaskScope();\n\t\tclosedWithoutParentForCreator.byFinished(parentIds.creatorId, true);\n\t\tclosedWithoutParentForCreator.byOnlyCreatorId(parentIds.creatorId);\n\n\t\tconst closedDraftsForCreator = new TaskScope();\n\t\tclosedDraftsForCreator.addQuery(parentsOpen.query);\n\t\tclosedDraftsForCreator.byFinished(parentIds.creatorId, true);\n\t\tclosedDraftsForCreator.byCreatorId(parentIds.creatorId);\n\n\t\tconst allForFinishedCoursesAndLessonsForCreator = new TaskScope();\n\t\tallForFinishedCoursesAndLessonsForCreator.addQuery(parentsFinished.query);\n\t\tallForFinishedCoursesAndLessonsForCreator.byCreatorId(parentIds.creatorId);\n\n\t\tconst allForCreator = new TaskScope('$or');\n\t\tallForCreator.addQuery(closedWithoutParentForCreator.query);\n\t\tallForCreator.addQuery(closedDraftsForCreator.query);\n\t\tallForCreator.addQuery(allForFinishedCoursesAndLessonsForCreator.query);\n\n\t\tscope.addQuery(closedForOpenCoursesAndLessons.query);\n\t\tscope.addQuery(allForFinishedCoursesAndLessons.query);\n\t\tscope.addQuery(allForCreator.query);\n\n\t\t// The dueDate can be similar to solve pagination request missmatches we must sort it over id too.\n\t\t// Because after executing limit() in mongoDB it is resort by similar dueDates.\n\t\t// It exist indexes for dueDate and for _id but no combined index, because it is to expensive for only small performance boost.\n\t\tconst order = { dueDate: SortOrder.desc, id: SortOrder.asc };\n\n\t\tconst [tasks, count] = await this.em.findAndCount(Task, scope.query, {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order,\n\t\t});\n\n\t\tawait this.em.populate(tasks, ['course', 'lesson', 'submissions']);\n\n\t\treturn [tasks, count];\n\t}\n\n\t/**\n\t * Find all tasks by their parents which can be any of\n\t * - a teacher who owns the task\n\t * - a list of courses\n\t * - a list of lessons\n\t *\n\t * @param parentIds parentIds for teacher, courses and lesson\n\t * @param filters filters\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAllByParentIds(\n\t\tparentIds: {\n\t\t\tcreatorId?: EntityId;\n\t\t\tcourseIds?: EntityId[];\n\t\t\tlessonIds?: EntityId[];\n\t\t},\n\t\tfilters?: {\n\t\t\tafterDueDateOrNone?: Date;\n\t\t\tfinished?: { userId: EntityId; value: boolean };\n\t\t\tavailableOn?: Date;\n\t\t},\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new TaskScope();\n\n\t\tconst parentIdScope = new TaskScope('$or');\n\n\t\tif (parentIds.creatorId) {\n\t\t\tparentIdScope.byOnlyCreatorId(parentIds.creatorId);\n\t\t}\n\n\t\tif (parentIds.courseIds) {\n\t\t\tparentIdScope.byCourseIds(parentIds.courseIds);\n\t\t}\n\n\t\tif (parentIds.lessonIds) {\n\t\t\tparentIdScope.byLessonIds(parentIds.lessonIds);\n\t\t}\n\n\t\tscope.addQuery(parentIdScope.query);\n\n\t\tif (filters?.finished) {\n\t\t\tscope.byFinished(filters.finished.userId, filters.finished.value);\n\t\t}\n\n\t\tif (parentIds.creatorId) {\n\t\t\tscope.excludeDraftsOfOthers(parentIds.creatorId);\n\t\t} else {\n\t\t\tscope.byDraft(false);\n\t\t}\n\n\t\tif (filters?.afterDueDateOrNone !== undefined) {\n\t\t\tscope.afterDueDateOrNone(filters.afterDueDateOrNone);\n\t\t}\n\n\t\tif (filters?.availableOn !== undefined) {\n\t\t\tif (parentIds.creatorId) {\n\t\t\t\tscope.excludeUnavailableOfOthers(parentIds.creatorId, filters.availableOn);\n\t\t\t} else {\n\t\t\t\tscope.byAvailable(filters?.availableOn);\n\t\t\t}\n\t\t}\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\n\t\treturn countedTaskList;\n\t}\n\n\tasync findBySingleParent(\n\t\tcreatorId: EntityId,\n\t\tcourseId: EntityId,\n\t\tfilters?: { draft?: boolean; noFutureAvailableDate?: boolean },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new TaskScope();\n\t\tscope.byCourseIds([courseId]);\n\n\t\tif (filters?.draft !== undefined) {\n\t\t\tif (filters?.draft === true) {\n\t\t\t\tscope.excludeDraftsOfOthers(creatorId);\n\t\t\t} else {\n\t\t\t\tscope.byDraft(false);\n\t\t\t}\n\t\t}\n\n\t\tif (filters?.noFutureAvailableDate !== undefined) {\n\t\t\tscope.noFutureAvailableDate();\n\t\t}\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\n\t\treturn countedTaskList;\n\t}\n\n\tprivate async findTasksAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [taskEntities, count] = await this.em.findAndCount(Task, query, {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\n\t\tawait this.em.populate(taskEntities, ['course', 'lesson', 'submissions']);\n\n\t\treturn [taskEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: TaskResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        TaskResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '' as string\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskStatusResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse, DecodeHtmlEntities } from '@shared/controller';\nimport { TaskStatusResponse } from './task-status.response';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\tconstructor({ id, name, courseName, createdAt, updatedAt, status }: TaskResponse) {\n\t\tthis.id = id;\n\t\tthis.name = name;\n\t\tthis.courseName = courseName;\n\t\tthis.createdAt = createdAt;\n\t\tthis.updatedAt = updatedAt;\n\t\tthis.status = status;\n\t}\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiPropertyOptional()\n\tavailableDate?: Date;\n\n\t@ApiPropertyOptional()\n\tduedate?: Date;\n\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tcourseName: string = '' as string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string; // TODO: change this, since this is NOT the tasks description, but the name of its lesson\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: TaskStatusResponse;\n}\n\nexport class TaskListResponse extends PaginationResponse {\n\tconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [TaskResponse] })\n\tdata: TaskResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskScope.html":{"url":"classes/TaskScope.html","title":"class - TaskScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/task/task-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterDueDateOrNone\n                            \n                            \n                                byAvailable\n                            \n                            \n                                byCourseIds\n                            \n                            \n                                byCreatorId\n                            \n                            \n                                byDraft\n                            \n                            \n                                byFinished\n                            \n                            \n                                byLessonIds\n                            \n                            \n                                byOnlyCreatorId\n                            \n                            \n                                excludeDraftsOfOthers\n                            \n                            \n                                excludeUnavailableOfOthers\n                            \n                            \n                                    Private\n                                getByDraftForCreatorQuery\n                            \n                            \n                                    Private\n                                getByDraftQuery\n                            \n                            \n                                noFutureAvailableDate\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterDueDateOrNone\n                        \n                    \n                \n            \n            \n                \nafterDueDateOrNone(dueDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byAvailable\n                        \n                    \n                \n            \n            \n                \nbyAvailable(availableDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    availableDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byCreatorId\n                        \n                    \n                \n            \n            \n                \nbyCreatorId(creatorId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byDraft\n                        \n                    \n                \n            \n            \n                \nbyDraft(isDraft: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDraft\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byFinished\n                        \n                    \n                \n            \n            \n                \nbyFinished(userId: EntityId, value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLessonIds\n                        \n                    \n                \n            \n            \n                \nbyLessonIds(lessonIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lessonIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byOnlyCreatorId\n                        \n                    \n                \n            \n            \n                \nbyOnlyCreatorId(teacherId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teacherId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        excludeDraftsOfOthers\n                        \n                    \n                \n            \n            \n                \nexcludeDraftsOfOthers(creatorId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        excludeUnavailableOfOthers\n                        \n                    \n                \n            \n            \n                \nexcludeUnavailableOfOthers(creatorId: EntityId, availableOn: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    availableOn\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getByDraftForCreatorQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByDraftForCreatorQuery(creatorId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    creatorId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterQuery\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getByDraftQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByDraftQuery(isDraft: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDraft\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterQuery\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noFutureAvailableDate\n                        \n                    \n                \n            \n            \n                \nnoFutureAvailableDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/task/task-scope.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TaskScope\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityId, Task } from '@shared/domain';\nimport { Scope } from '../scope';\n\nexport class TaskScope extends Scope {\n\tbyFinished(userId: EntityId, value: boolean): TaskScope {\n\t\tif (value === true) {\n\t\t\tthis.addQuery({ finished: userId });\n\t\t} else if (value === false) {\n\t\t\tthis.addQuery({ finished: { $ne: userId } });\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tbyOnlyCreatorId(teacherId: EntityId): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ creator: teacherId }, { course: null }, { lesson: null }],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyCreatorId(creatorId: EntityId): TaskScope {\n\t\tthis.addQuery({ creator: creatorId });\n\n\t\treturn this;\n\t}\n\n\tbyCourseIds(courseIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ course: { $in: courseIds } }, { lesson: null }],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyLessonIds(lessonIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ lesson: { $in: lessonIds } });\n\n\t\treturn this;\n\t}\n\n\tbyDraft(isDraft: boolean): TaskScope {\n\t\tconst query = this.getByDraftQuery(isDraft);\n\t\tthis.addQuery(query);\n\n\t\treturn this;\n\t}\n\n\texcludeDraftsOfOthers(creatorId: EntityId): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$or: [this.getByDraftForCreatorQuery(creatorId), this.getByDraftQuery(false)],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyAvailable(availableDate: Date): TaskScope {\n\t\tthis.addQuery({ availableDate: { $lte: availableDate } });\n\n\t\treturn this;\n\t}\n\n\tnoFutureAvailableDate(): TaskScope {\n\t\tconst query = { availableDate: { $lte: new Date(Date.now()) } };\n\t\tthis.addQuery(query);\n\n\t\treturn this;\n\t}\n\n\texcludeUnavailableOfOthers(creatorId: EntityId, availableOn: Date): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$or: [\n\t\t\t\t{ creator: creatorId },\n\t\t\t\t{ $and: [{ creator: { $ne: creatorId } }, { availableDate: { $lte: availableOn } }] },\n\t\t\t],\n\t\t});\n\t\treturn this;\n\t}\n\n\tafterDueDateOrNone(dueDate: Date): TaskScope {\n\t\tthis.addQuery({ $or: [{ dueDate: { $gte: dueDate } }, { dueDate: null }] });\n\n\t\treturn this;\n\t}\n\n\tprivate getByDraftQuery(isDraft: boolean): FilterQuery {\n\t\tconst query = isDraft ? { private: { $eq: true } } : { private: { $ne: true } };\n\n\t\treturn query;\n\t}\n\n\tprivate getByDraftForCreatorQuery(creatorId: EntityId): FilterQuery {\n\t\tconst query = { $and: [{ creator: creatorId }, this.getByDraftQuery(true)] };\n\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskStatusMapper.html":{"url":"classes/TaskStatusMapper.html","title":"class - TaskStatusMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskStatusMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task-status.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(status: ITaskStatus)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task-status.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                ITaskStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskStatusResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ITaskStatus } from '@shared/domain';\nimport { TaskStatusResponse } from '../controller/dto/task-status.response';\n\nexport class TaskStatusMapper {\n\tstatic mapToResponse(status: ITaskStatus): TaskStatusResponse {\n\t\tconst dto = new TaskStatusResponse(status);\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskStatusResponse.html":{"url":"classes/TaskStatusResponse.html","title":"class - TaskStatusResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskStatusResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task-status.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                graded\n                            \n                            \n                                isDraft\n                            \n                            \n                                isFinished\n                            \n                            \n                                isSubstitutionTeacher\n                            \n                            \n                                maxSubmissions\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: TaskStatusResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        TaskStatusResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        graded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFinished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubstitutionTeacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxSubmissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task-status.response.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TaskStatusResponse {\n\tconstructor({ submitted, maxSubmissions, graded, isDraft, isSubstitutionTeacher, isFinished }: TaskStatusResponse) {\n\t\tthis.submitted = submitted;\n\t\tthis.maxSubmissions = maxSubmissions;\n\t\tthis.graded = graded;\n\t\tthis.isDraft = isDraft;\n\t\tthis.isSubstitutionTeacher = isSubstitutionTeacher;\n\t\tthis.isFinished = isFinished;\n\t}\n\n\t@ApiProperty()\n\tsubmitted: number;\n\n\t@ApiProperty()\n\tmaxSubmissions: number;\n\n\t@ApiProperty()\n\tgraded: number;\n\n\t@ApiProperty()\n\tisDraft: boolean;\n\n\t@ApiProperty()\n\tisSubstitutionTeacher: boolean;\n\n\t@ApiProperty()\n\tisFinished: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeFinishedForUser\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllFinished\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Private\n                                getDefaultMaxDueDate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, authorizationService: TaskAuthorizationService, userRepo: UserRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        TaskAuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        changeFinishedForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeFinishedForUser(userId: EntityId, taskId: EntityId, isFinished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    taskId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    isFinished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFinished\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFinished(userId: EntityId, pagination?: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(user: User, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(user: User, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDefaultMaxDueDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultMaxDueDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination, Counted, SortOrder, TaskWithStatusVo, ITaskStatus, User, Task } from '@shared/domain';\n\nimport { TaskRepo, UserRepo } from '@shared/repo';\n\nimport { TaskAuthorizationService, TaskParentPermission, TaskDashBoardPermission } from './task.authorization.service';\n\n@Injectable()\nexport class TaskUC {\n\tconstructor(\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly authorizationService: TaskAuthorizationService,\n\t\tprivate readonly userRepo: UserRepo\n\t) {}\n\n\tasync findAllFinished(userId: EntityId, pagination?: IPagination): Promise> {\n\t\t// load the user including all roles\n\t\tconst user = await this.userRepo.findById(userId, true);\n\n\t\tif (\n\t\t\t!this.authorizationService.hasOneOfTaskDashboardPermissions(user, [\n\t\t\t\tTaskDashBoardPermission.teacherDashboard,\n\t\t\t\tTaskDashBoardPermission.studentDashboard,\n\t\t\t])\n\t\t) {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\tconst courses = await this.authorizationService.getPermittedCourses(user, TaskParentPermission.read);\n\t\tconst lessons = await this.authorizationService.getPermittedLessons(user, courses);\n\n\t\tconst openCourseIds = courses.filter((c) => !c.isFinished()).map((c) => c.id);\n\t\tconst finishedCourseIds = courses.filter((c) => c.isFinished()).map((c) => c.id);\n\t\tconst lessonIdsOfOpenCourses = lessons.filter((l) => !l.course.isFinished()).map((l) => l.id);\n\t\tconst lessonIdsOfFinishedCourses = lessons.filter((l) => l.course.isFinished()).map((l) => l.id);\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllFinishedByParentIds(\n\t\t\t{\n\t\t\t\tcreatorId: userId,\n\t\t\t\topenCourseIds,\n\t\t\t\tfinishedCourseIds,\n\t\t\t\tlessonIdsOfOpenCourses,\n\t\t\t\tlessonIdsOfFinishedCourses,\n\t\t\t},\n\t\t\t{ pagination }\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tlet status: ITaskStatus;\n\t\t\tif (this.authorizationService.hasTaskPermission(user, task, TaskParentPermission.write)) {\n\t\t\t\tstatus = task.createTeacherStatusForUser(user);\n\t\t\t} else {\n\t\t\t\t// TaskParentPermission.read check is not needed on this place\n\t\t\t\tstatus = task.createStudentStatusForUser(user);\n\t\t\t}\n\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\tasync findAll(userId: EntityId, pagination: IPagination): Promise> {\n\t\tlet response: Counted;\n\n\t\t// load the user including all roles\n\t\tconst user = await this.userRepo.findById(userId, true);\n\n\t\tif (this.authorizationService.hasOneOfTaskDashboardPermissions(user, TaskDashBoardPermission.studentDashboard)) {\n\t\t\tresponse = await this.findAllForStudent(user, pagination);\n\t\t} else if (\n\t\t\tthis.authorizationService.hasOneOfTaskDashboardPermissions(user, TaskDashBoardPermission.teacherDashboard)\n\t\t) {\n\t\t\tresponse = await this.findAllForTeacher(user, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tasync changeFinishedForUser(userId: EntityId, taskId: EntityId, isFinished: boolean): Promise {\n\t\tconst [user, task] = await Promise.all([this.userRepo.findById(userId, true), this.taskRepo.findById(taskId)]);\n\n\t\tif (!this.authorizationService.hasTaskPermission(user, task, TaskParentPermission.read)) {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\tif (isFinished) {\n\t\t\ttask.finishForUser(user);\n\t\t} else {\n\t\t\ttask.restoreForUser(user);\n\t\t}\n\t\tawait this.taskRepo.save(task);\n\n\t\t// add status\n\t\tconst status = this.authorizationService.hasOneOfTaskDashboardPermissions(\n\t\t\tuser,\n\t\t\tTaskDashBoardPermission.teacherDashboard\n\t\t)\n\t\t\t? task.createTeacherStatusForUser(user)\n\t\t\t: task.createStudentStatusForUser(user);\n\n\t\tconst result = new TaskWithStatusVo(task, status);\n\n\t\treturn result;\n\t}\n\n\tprivate async findAllForStudent(user: User, pagination: IPagination): Promise> {\n\t\tconst courses = await this.authorizationService.getPermittedCourses(user, TaskParentPermission.read);\n\t\tconst openCourses = courses.filter((c) => !c.isFinished());\n\t\tconst lessons = await this.authorizationService.getPermittedLessons(user, openCourses);\n\n\t\tconst dueDate = this.getDefaultMaxDueDate();\n\t\tconst notFinished = { userId: user.id, value: false };\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tcreatorId: user.id,\n\t\t\t\tcourseIds: openCourses.map((c) => c.id),\n\t\t\t\tlessonIds: lessons.map((l) => l.id),\n\t\t\t},\n\t\t\t{ afterDueDateOrNone: dueDate, finished: notFinished, availableOn: new Date() },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.asc },\n\t\t\t}\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tconst status = task.createStudentStatusForUser(user);\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\tprivate async findAllForTeacher(user: User, pagination: IPagination): Promise> {\n\t\tconst courses = await this.authorizationService.getPermittedCourses(user, TaskParentPermission.write);\n\t\tconst openCourses = courses.filter((c) => !c.isFinished());\n\t\tconst lessons = await this.authorizationService.getPermittedLessons(user, openCourses);\n\n\t\tconst notFinished = { userId: user.id, value: false };\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tcreatorId: user.id,\n\t\t\t\tcourseIds: openCourses.map((c) => c.id),\n\t\t\t\tlessonIds: lessons.map((l) => l.id),\n\t\t\t},\n\t\t\t{ finished: notFinished, availableOn: new Date() },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.desc },\n\t\t\t}\n\t\t);\n\n\t\tconst taskWithStatusVos = tasks.map((task) => {\n\t\t\tconst status = task.createTeacherStatusForUser(user);\n\t\t\treturn new TaskWithStatusVo(task, status);\n\t\t});\n\n\t\treturn [taskWithStatusVos, total];\n\t}\n\n\tprivate getDefaultMaxDueDate(): Date {\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\n\t\treturn oneWeekAgo;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskWithStatusVo.html":{"url":"classes/TaskWithStatusVo.html","title":"class - TaskWithStatusVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskWithStatusVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(task: Task, status: ITaskStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                        Task\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        ITaskStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITaskStatus\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property, Index } from '@mikro-orm/core';\nimport { EntityId } from '../types/entity-id';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport type { User } from './user.entity';\n\nexport interface ITaskProperties {\n\tname: string;\n\tdescription?: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tcreator?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tfinished?: User[];\n}\n\nexport interface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n\tisFinished: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\nexport type TaskParentDescriptions = { courseName: string; lessonName: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\n@Index({ name: 'findAllByParentIds_findAllForStudent', properties: ['private', 'dueDate', 'finished'] })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tdescription: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tcreator?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: rename to finished\n\t@Index({ name: 'findAllByParentIds_findAllForTeacher' })\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tfinished = new Collection(this);\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.description = props.description || '';\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.creator = props.creator;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\tthis.finished.set(props.finished || []);\n\t}\n\n\tisFinishedForUser(user: User): boolean {\n\t\treturn !!(this.finished?.contains(user) || this.course?.isFinished());\n\t}\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tprivate getSubmissionItems(): Submission[] {\n\t\tif (!this.submissions.isInitialized(true)) {\n\t\t\tthrow new Error('Submissions items are not loaded.');\n\t\t}\n\t\tconst submissions = this.submissions.getItems();\n\t\treturn submissions;\n\t}\n\n\tgetSubmittedUserIds(): EntityId[] {\n\t\tconst submittedUserIds = this.getSubmissionItems().map((submission) => submission.student.id);\n\t\tconst uniqueSubmittedUserIds = [...new Set(submittedUserIds)];\n\n\t\treturn uniqueSubmittedUserIds;\n\t}\n\n\tgetNumberOfSubmittedUsers(): number {\n\t\tconst submittedUserIds = this.getSubmittedUserIds();\n\t\tconst count = submittedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\tgetGradedUserIds(): EntityId[] {\n\t\tconst gradedUserIds = this.getSubmissionItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\t\tconst uniqueGradedUserIds = [...new Set(gradedUserIds)];\n\n\t\treturn uniqueGradedUserIds;\n\t}\n\n\tgetNumberOfGradedUsers(): number {\n\t\tconst gradedUserIds = this.getGradedUserIds();\n\t\tconst count = gradedUserIds.length;\n\n\t\treturn count;\n\t}\n\n\t// attention based on this parent use this.getParent() instant\n\tgetMaxSubmissions(): number {\n\t\t// hack until parents are defined\n\t\tconst numberOfStudents = this.course ? this.course.getNumberOfStudents() : 0;\n\n\t\treturn numberOfStudents;\n\t}\n\n\tcreateTeacherStatusForUser(user: User): ITaskStatus {\n\t\tconst submitted = this.getNumberOfSubmittedUsers();\n\t\tconst graded = this.getNumberOfGradedUsers();\n\t\tconst maxSubmissions = this.getMaxSubmissions();\n\t\tconst isDraft = this.isDraft();\n\t\tconst isFinished = this.isFinishedForUser(user);\n\t\t// only point that need the parameter\n\t\t// const isSubstitutionTeacher = this.isSubstitutionTeacher(userId);\n\t\t// work with getParent()\n\t\tlet isSubstitutionTeacher = false;\n\t\tif (this.course) {\n\t\t\tisSubstitutionTeacher = this.course.substitutionTeachers.contains(user);\n\t\t}\n\n\t\tconst status = {\n\t\t\tsubmitted,\n\t\t\tgraded,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t};\n\n\t\treturn status;\n\t}\n\n\tisSubmittedForUser(user: User): boolean {\n\t\tconst submitted = this.getSubmittedUserIds().some((uid) => uid === user.id);\n\n\t\treturn submitted;\n\t}\n\n\tisGradedForUser(user: User): boolean {\n\t\tconst graded = this.getGradedUserIds().some((uid) => uid === user.id);\n\n\t\treturn graded;\n\t}\n\n\tcreateStudentStatusForUser(user: User): ITaskStatus {\n\t\tconst isSubmitted = this.isSubmittedForUser(user);\n\t\tconst isGraded = this.isGradedForUser(user);\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = this.isDraft();\n\t\tconst isSubstitutionTeacher = false;\n\t\tconst isFinished = this.isFinishedForUser(user);\n\n\t\tconst status = {\n\t\t\tsubmitted: isSubmitted ? 1 : 0,\n\t\t\tgraded: isGraded ? 1 : 0,\n\t\t\tmaxSubmissions,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t\tisFinished,\n\t\t\t// TODO: visibility of parent is missed ..but isSubstitutionTeacher and this is not really a part from task,\n\t\t\t// for this we must add parent relationship\n\t\t};\n\n\t\treturn status;\n\t}\n\n\t// TODO: based on the parent relationship\n\tgetParentData(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tcourseName: this.course.name,\n\t\t\t\tlessonName: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tcourseName: '',\n\t\t\t\tlessonName: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\n\t\treturn descriptions;\n\t}\n\n\tfinishForUser(user: User) {\n\t\tthis.finished.add(user);\n\t}\n\n\trestoreForUser(user: User) {\n\t\tthis.finished.remove(user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Team.html":{"url":"entities/Team.html","title":"entity - Team","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\nexport interface ITeamProperties {\n\tname: string;\n}\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: ITeamProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/TeamNews.html":{"url":"entities/TeamNews.html","title":"entity - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Team')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:110\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel!: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget!: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget!: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget!: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamNewsController.html":{"url":"controllers/TeamNewsController.html","title":"controller - TeamNewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamNewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/team-news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllForTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeam(teamId: string, currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':teamId/news')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/team-news.controller.ts:22\n                \n            \n\n\n            \n                \n                    Responds with news of a given team for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { PaginationQuery, ParseObjectIdPipe } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { NewsMapper } from '../mapper/news.mapper';\nimport { NewsUc } from '../uc';\nimport { NewsFilterQuery, NewsListResponse } from './dto';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('team')\nexport class TeamNewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Responds with news of a given team for a user.\n\t */\n\t@Get(':teamId/news')\n\tasync findAllForTeam(\n\t\t@Param('teamId', ParseObjectIdPipe) teamId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\t// enforce filter by a given team, used in team tab\n\t\tscope.targetId = teamId;\n\t\tscope.targetModel = 'teams';\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new NewsListResponse(dtoList, count);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestBootstrapConsole.html":{"url":"classes/TestBootstrapConsole.html","title":"class - TestBootstrapConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestBootstrapConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/test/bootstrap.console.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AbstractBootstrapConsole\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/console/test/bootstrap.console.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Test, TestingModule } from '@nestjs/testing';\nimport { AbstractBootstrapConsole, BootstrapConsole } from 'nestjs-console';\n\nexport class TestBootstrapConsole extends AbstractBootstrapConsole {\n\tcreate(): Promise {\n\t\treturn Test.createTestingModule({\n\t\t\timports: [this.options.module],\n\t\t}).compile();\n\t}\n}\n\nexport const execute = async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFlagParams.html":{"url":"classes/UpdateFlagParams.html","title":"class - UpdateFlagParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFlagParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/update-flag.params.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                flagged\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        flagged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'updates flag for an import user'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/update-flag.params.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsBoolean } from 'class-validator';\n\nexport class UpdateFlagParams {\n\t@ApiProperty({ description: 'updates flag for an import user' })\n\t@IsBoolean()\n\tflagged!: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMatchParams.html":{"url":"classes/UpdateMatchParams.html","title":"class - UpdateMatchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMatchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/update-match.params.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'updates local user reference for an import user'})@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/update-match.params.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId } from 'class-validator';\n\nexport class UpdateMatchParams {\n\t@ApiProperty({ description: 'updates local user reference for an import user' })\n\t@IsMongoId()\n\tuserId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle!: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent!: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt!: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier', options: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@ManyToMany('Role', undefined, {fieldName: 'roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName: string;\n\tlastName: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier', options: { unique: true } })\n\temail: string;\n\n\t@Property()\n\tfirstName: string;\n\n\t@Property()\n\tlastName: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserAlreadyAssignedToImportUserError.html":{"url":"classes/UserAlreadyAssignedToImportUserError.html","title":"class - UserAlreadyAssignedToImportUserError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserAlreadyAssignedToImportUserError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/user-already-assigned-to-import-user.business-error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/user-already-assigned-to-import-user.business-error.ts:3\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BusinessError } from './business.error';\n\nexport class UserAlreadyAssignedToImportUserError extends BusinessError {\n\tconstructor() {\n\t\tsuper({\n\t\t\ttype: 'USER_ALREADY_ASSIGNED_TO_IMPORT_USER_ERROR',\n\t\t\ttitle: 'USER_ALREADY_ASSIGNED_TO_IMPORT_USER_ERROR',\n\t\t\tdefaultMessage:\n\t\t\t\t'The selected user already has been referenced to a different import user. Only one reference is allowed.',\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ICurrentUser, PermissionService } from '@shared/domain';\n\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { UserRepo } from '@shared/repo';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\nimport { ResolvedUserMapper } from '../mapper';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userRepo: UserRepo, private readonly permissionService: PermissionService) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\tconst user = await this.userRepo.findById(currentUser.userId, true);\n\t\tconst permissions = this.permissionService.resolvePermissions(user);\n\n\t\t// only the root roles of the user get published\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, user.roles.getItems());\n\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFactory.html":{"url":"classes/UserFactory.html","title":"class - UserFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/testing/factory/user.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Readonly\n                                propsFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                withRole\n                            \n                            \n                                afterBuild\n                            \n                            \n                                associations\n                            \n                            \n                                build\n                            \n                            \n                                buildList\n                            \n                            \n                                buildWithId\n                            \n                            \n                                    Protected\n                                clone\n                            \n                            \n                                    Static\n                                define\n                            \n                            \n                                params\n                            \n                            \n                                rewindSequence\n                            \n                            \n                                    Protected\n                                sequence\n                            \n                            \n                                transient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        propsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Factory\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseFactory\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFactory:15\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        withRole\n                        \n                    \n                \n            \n            \n                \nwithRole(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/testing/factory/user.factory.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterBuild\n                        \n                    \n                \n            \n            \n                \nafterBuild(afterBuildFn: HookFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:87\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding a function to be called after an object is built.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    afterBuildFn\n                                    \n                                            HookFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nthe function to call. It accepts your object of type T. The value this function returns gets returned from \"build\"\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        associations\n                        \n                    \n                \n            \n            \n                \nassociations(associations: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:99\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default associations to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    associations\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        build\n                        \n                    \n                \n            \n            \n                \nbuild(params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:47\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildList\n                        \n                    \n                \n            \n            \n                \nbuildList(number: number, params?: DeepPartial, options: BuildOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:73\n\n                \n            \n\n\n            \n                \n                    Build a list of entities using your factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                                BuildOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        a list of entities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildWithId\n                        \n                    \n                \n            \n            \n                \nbuildWithId(params?: DeepPartial, id?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:60\n\n                \n            \n\n\n            \n                \n                    Build an entity using your factory and generate a id for it.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        an entity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        clone\n                        \n                    \n                \n            \n            \n                \n                    \n                    clone(this: F, propsFactory: Factory)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:137\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        F\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                            F\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propsFactory\n                                    \n                                            Factory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        define\n                        \n                    \n                \n            \n            \n                \n                    \n                    define(this, EntityClass: literal type, generator: GeneratorFn)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:32\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        U\n                        I\n                        C\n                        F\n                    \n                \n            \n\n            \n                \n                    Define a factory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    EntityClass\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The constructor of the entity to be built.\n\n                                    \n                                \n                                \n                                    generator\n                                    \n                                            GeneratorFn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Your factory function - see Factory.define() in thoughtbot/fishery\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     F\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n            \n                \nparams(params: DeepPartial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:111\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            DeepPartial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rewindSequence\n                        \n                    \n                \n            \n            \n                \nrewindSequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:133\n\n                \n            \n\n\n            \n                \n                    Set sequence back to its default value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        sequence\n                        \n                    \n                \n            \n            \n                \n                    \n                    sequence()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:149\n\n                \n            \n\n\n            \n                \n                    Get the next sequence value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the next sequence value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transient\n                        \n                    \n                \n            \n            \n                \ntransient(transient: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseFactory\n\n                \n            \n            \n                \n                        Defined in         BaseFactory:123\n\n                \n            \n\n\n            \n                \n                    Extend the factory by adding default transient parameters to be passed to the factory when \"build\" is called\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    transient\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntransient params\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User, IUserProperties } from '@shared/domain';\nimport { DeepPartial } from 'fishery';\nimport { schoolFactory } from './school.factory';\nimport { BaseFactory } from './base.factory';\nimport { roleFactory } from './role.factory';\n\nclass UserFactory extends BaseFactory {\n\twithRole(name: string): this {\n\t\tconst params: DeepPartial = { roles: roleFactory.buildList(1, { name }) };\n\t\treturn this.params(params);\n\t}\n}\n\nexport const userFactory = UserFactory.define(User, ({ sequence }) => {\n\treturn {\n\t\tfirstName: 'John',\n\t\tlastName: `Doe ${sequence}`,\n\t\temail: `user-${sequence}@example.com`,\n\t\troles: [],\n\t\tschool: schoolFactory.build(),\n\t};\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFilterQuery.html":{"url":"classes/UserFilterQuery.html","title":"class - UserFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/user-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsOptional()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-filter.query.ts:12\n                        \n                    \n\n            \n                \n                    filter firstname or lastname for given value\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class UserFilterQuery {\n\t/**\n\t * filter firstname or lastname for given value\n\t */\n\t@ApiPropertyOptional()\n\t@IsOptional()\n\t@IsString()\n\t@IsNotEmpty()\n\tname?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserImportUc.html":{"url":"injectables/UserImportUc.html","title":"injectable - UserImportUc","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserImportUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/uc/user-import.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllImportUsers\n                            \n                            \n                                    Async\n                                findAllUnmatchedUsers\n                            \n                            \n                                    Async\n                                removeMatch\n                            \n                            \n                                    Async\n                                setMatch\n                            \n                            \n                                    Async\n                                updateFlag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(importUserRepo: ImportUserRepo, userRepo: UserRepo, permissionService: PermissionService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user-import/uc/user-import.uc.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        importUserRepo\n                                                  \n                                                        \n                                                                        ImportUserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionService\n                                                  \n                                                        \n                                                                        PermissionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllImportUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllImportUsers(userId: EntityId, query: IImportUserScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/uc/user-import.uc.ts:33\n                \n            \n\n\n            \n                \n                    Resolves with current users schools importusers and matched users.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                IImportUserScope\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                            IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllUnmatchedUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllUnmatchedUsers(currentUserId: EntityId, query: INameMatch, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/uc/user-import.uc.ts:125\n                \n            \n\n\n            \n                \n                    Returns a list of users wich is not assigned as match to importusers.\nThe result will filter by curernt users school by default.\nThe current user must have permission to read schools users and view importusers.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    currentUserId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    query\n                                    \n                                                INameMatch\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        filters\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeMatch(currentUserId: EntityId, importUserId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/uc/user-import.uc.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUserId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    importUserId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setMatch\n                        \n                    \n                \n            \n            \n                \n                    \n                    setMatch(currentUserId: EntityId, importUserId: EntityId, userMatchId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/uc/user-import.uc.ts:54\n                \n            \n\n\n            \n                \n                    Update a @User reference of an @ImportUser\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUserId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    importUserId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userMatchId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        importuser and matched user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateFlag\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFlag(currentUserId: EntityId, importUserId: EntityId, flagged: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/uc/user-import.uc.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUserId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    importUserId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    flagged\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common';\nimport { UserAlreadyAssignedToImportUserError } from '@shared/common';\nimport {\n\tEntityId,\n\tIFindOptions,\n\tCounted,\n\tImportUser,\n\tIImportUserScope,\n\tMatchCreator,\n\tINameMatch,\n\tUser,\n\tPermissionService,\n} from '@shared/domain';\n\nimport { ImportUserRepo, UserRepo } from '@shared/repo';\nimport { UserImportPermissions } from '../constants';\n\n@Injectable()\nexport class UserImportUc {\n\tconstructor(\n\t\tprivate readonly importUserRepo: ImportUserRepo,\n\t\tprivate readonly userRepo: UserRepo,\n\t\tprivate readonly permissionService: PermissionService\n\t) {}\n\n\t/**\n\t * Resolves with current users schools importusers and matched users.\n\t * @param userId\n\t * @param query\n\t * @param options\n\t * @returns\n\t */\n\tasync findAllImportUsers(\n\t\tuserId: EntityId,\n\t\tquery: IImportUserScope,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst currentUser = await this.userRepo.findById(userId, true);\n\n\t\tconst permissions = [UserImportPermissions.SCHOOL_IMPORT_USERS_VIEW];\n\t\tthis.permissionService.checkUserHasAllSchoolPermissions(currentUser, permissions);\n\n\t\tconst countedImportUsers = await this.importUserRepo.findImportUsers(currentUser.school, query, options);\n\t\treturn countedImportUsers;\n\t}\n\n\t/**\n\t * Update a @User reference of an @ImportUser\n\t * @param currentUserId\n\t * @param importUserId\n\t * @param userMatchId\n\t * @returns importuser and matched user\n\t */\n\tasync setMatch(currentUserId: EntityId, importUserId: EntityId, userMatchId: EntityId) {\n\t\tconst currentUser = await this.userRepo.findById(currentUserId, true);\n\t\tconst permissions = [UserImportPermissions.SCHOOL_IMPORT_USERS_UPDATE];\n\t\tthis.permissionService.checkUserHasAllSchoolPermissions(currentUser, permissions);\n\n\t\tconst userMatch = await this.userRepo.findById(userMatchId, true);\n\t\tconst importUser = await this.importUserRepo.findById(importUserId);\n\n\t\t// check same school\n\t\tif (\n\t\t\t!currentUser.school.id ||\n\t\t\tcurrentUser.school.id !== userMatch.school.id ||\n\t\t\tcurrentUser.school.id !== importUser.school.id\n\t\t) {\n\t\t\tthrow new ForbiddenException('not same school');\n\t\t}\n\n\t\t// check user is not already assigned\n\t\tconst hasMatch = await this.importUserRepo.hasMatch(userMatch);\n\t\tif (hasMatch !== null) throw new UserAlreadyAssignedToImportUserError();\n\n\t\timportUser.setMatch(userMatch, MatchCreator.MANUAL);\n\t\tawait this.importUserRepo.persistAndFlush(importUser);\n\n\t\treturn importUser;\n\t}\n\n\tasync removeMatch(currentUserId: EntityId, importUserId: EntityId) {\n\t\tconst currentUser = await this.userRepo.findById(currentUserId, true);\n\t\tconst permissions = [UserImportPermissions.SCHOOL_IMPORT_USERS_UPDATE];\n\t\tthis.permissionService.checkUserHasAllSchoolPermissions(currentUser, permissions);\n\n\t\tconst importUser = await this.importUserRepo.findById(importUserId);\n\t\t// check same school\n\t\tif (currentUser.school.id !== importUser.school.id) {\n\t\t\tthrow new ForbiddenException('not same school');\n\t\t}\n\n\t\timportUser.revokeMatch();\n\t\tawait this.importUserRepo.persistAndFlush(importUser);\n\n\t\treturn importUser;\n\t}\n\n\tasync updateFlag(currentUserId: EntityId, importUserId: EntityId, flagged: boolean) {\n\t\tconst currentUser = await this.userRepo.findById(currentUserId, true);\n\t\tconst permissions = [UserImportPermissions.SCHOOL_IMPORT_USERS_UPDATE];\n\t\tthis.permissionService.checkUserHasAllSchoolPermissions(currentUser, permissions);\n\n\t\tconst importUser = await this.importUserRepo.findById(importUserId);\n\n\t\t// check same school\n\t\tif (currentUser.school.id !== importUser.school.id) {\n\t\t\tthrow new ForbiddenException('not same school');\n\t\t}\n\n\t\timportUser.flagged = flagged === true;\n\t\tawait this.importUserRepo.persistAndFlush(importUser);\n\n\t\treturn importUser;\n\t}\n\n\t/**\n\t * Returns a list of users wich is not assigned as match to importusers.\n\t * The result will filter by curernt users school by default.\n\t * The current user must have permission to read schools users and view importusers.\n\t * @param currentUserId\n\t * @param query filters\n\t * @param options\n\t * @returns\n\t */\n\tasync findAllUnmatchedUsers(\n\t\tcurrentUserId: EntityId,\n\t\tquery: INameMatch,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst currentUser = await this.userRepo.findById(currentUserId, true);\n\n\t\tconst permissions = [UserImportPermissions.SCHOOL_IMPORT_USERS_VIEW];\n\t\tthis.permissionService.checkUserHasAllSchoolPermissions(currentUser, permissions);\n\n\t\tconst unmatchedCountedUsers = await this.userRepo.findWithoutImportUser(currentUser.school, query, options);\n\t\treturn unmatchedCountedUsers;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@shared/domain';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(user: User): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse({\n\t\t\tid: user.id,\n\t\t\tfirstName: user.firstName,\n\t\t\tlastName: user.lastName,\n\t\t});\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: UserInfoResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        UserInfoResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\tconstructor({ id, firstName, lastName }: UserInfoResponse) {\n\t\tthis.id = id;\n\t\tthis.firstName = firstName;\n\t\tthis.lastName = lastName;\n\t}\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName?: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserMatchListResponse.html":{"url":"classes/UserMatchListResponse.html","title":"class - UserMatchListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserMatchListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/user-match.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: UserMatchResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        UserMatchResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserMatchResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { IsMongoId } from 'class-validator';\nimport { MatchCreatorResponse } from './match-creator.response';\nimport { RoleNameResponse } from './role-name.response';\n\nexport class UserMatchResponse {\n\tconstructor(props: UserMatchResponse) {\n\t\tthis.userId = props.userId;\n\t\tthis.loginName = props.loginName;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.roleNames = props.roleNames;\n\t\tif (props.matchedBy != null) this.matchedBy = props.matchedBy;\n\t}\n\n\t@IsMongoId()\n\t@ApiProperty({ description: 'local user id' })\n\tuserId: string;\n\n\t@ApiProperty({ description: 'login name of local user' })\n\tloginName: string;\n\n\t@ApiProperty({ description: 'firstname of local user' })\n\tfirstName: string;\n\n\t@ApiProperty({ description: 'lastname of local user' })\n\tlastName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'list of user roles from external system: student, teacher, admin',\n\t\tenum: RoleNameResponse,\n\t})\n\troleNames: RoleNameResponse[];\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'match type: admin (manual) or auto (set, when names match exactly for a single user',\n\t\tenum: MatchCreatorResponse,\n\t})\n\tmatchedBy?: MatchCreatorResponse;\n}\n\nexport class UserMatchListResponse extends PaginationResponse {\n\tconstructor(data: UserMatchResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [UserMatchResponse] })\n\tdata: UserMatchResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserMatchMapper.html":{"url":"classes/UserMatchMapper.html","title":"class - UserMatchMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserMatchMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/mapper/user-match.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToDomain(query: UserFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/mapper/user-match.mapper.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                UserFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INameMatch\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, matchCreator?: MatchCreator)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user-import/mapper/user-match.mapper.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matchCreator\n                                    \n                                                MatchCreator\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserMatchResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { StringValidator } from '@shared/common';\nimport { INameMatch, MatchCreator, User } from '@shared/domain';\nimport { RoleNameResponse, UserMatchResponse } from '../controller/dto';\nimport { UserFilterQuery } from '../controller/dto/user-filter.query';\nimport { ImportUserMatchMapper } from './match.mapper';\n\nexport class UserMatchMapper {\n\tstatic mapToDomain(query: UserFilterQuery): INameMatch {\n\t\tconst scope: INameMatch = {};\n\t\tif (query.name) {\n\t\t\tif (StringValidator.isNotEmptyString(query.name, true)) {\n\t\t\t\tscope.name = query.name;\n\t\t\t} else {\n\t\t\t\tthrow Error('invalid name from query');\n\t\t\t}\n\t\t}\n\t\treturn scope;\n\t}\n\n\tstatic mapToResponse(user: User, matchCreator?: MatchCreator): UserMatchResponse {\n\t\tconst domainRoles = user.roles.getItems(true);\n\t\tconst domainRoleNames = domainRoles.map((role) => role.name);\n\t\tconst roleNames: RoleNameResponse[] = domainRoleNames\n\t\t\t.map((roleName) => {\n\t\t\t\tswitch (roleName) {\n\t\t\t\t\tcase 'teacher':\n\t\t\t\t\t\treturn RoleNameResponse.TEACHER;\n\t\t\t\t\tcase 'administrator':\n\t\t\t\t\t\treturn RoleNameResponse.ADMIN;\n\t\t\t\t\tcase 'student':\n\t\t\t\t\t\treturn RoleNameResponse.STUDENT;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.filter((roleName) => roleName != null) as RoleNameResponse[];\n\t\tconst dto = new UserMatchResponse({\n\t\t\tuserId: user.id,\n\t\t\tfirstName: user.firstName,\n\t\t\tlastName: user.lastName,\n\t\t\tloginName: user.email,\n\t\t\troleNames,\n\t\t});\n\t\tif (matchCreator != null) {\n\t\t\tconst matchedBy = ImportUserMatchMapper.mapMatchCreatorToResponse(matchCreator);\n\t\t\tdto.matchedBy = matchedBy;\n\t\t}\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserMatchResponse.html":{"url":"classes/UserMatchResponse.html","title":"class - UserMatchResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserMatchResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user-import/controller/dto/user-match.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                loginName\n                            \n                            \n                                    Optional\n                                matchedBy\n                            \n                            \n                                roleNames\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: UserMatchResponse)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        UserMatchResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'firstname of local user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'lastname of local user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'login name of local user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        matchedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatchCreatorResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'match type: admin (manual) or auto (set, when names match exactly for a single user', enum: MatchCreatorResponse})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleNameResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'list of user roles from external system: student, teacher, admin', enum: RoleNameResponse})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@ApiProperty({description: 'local user id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user-import/controller/dto/user-match.response.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { IsMongoId } from 'class-validator';\nimport { MatchCreatorResponse } from './match-creator.response';\nimport { RoleNameResponse } from './role-name.response';\n\nexport class UserMatchResponse {\n\tconstructor(props: UserMatchResponse) {\n\t\tthis.userId = props.userId;\n\t\tthis.loginName = props.loginName;\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.roleNames = props.roleNames;\n\t\tif (props.matchedBy != null) this.matchedBy = props.matchedBy;\n\t}\n\n\t@IsMongoId()\n\t@ApiProperty({ description: 'local user id' })\n\tuserId: string;\n\n\t@ApiProperty({ description: 'login name of local user' })\n\tloginName: string;\n\n\t@ApiProperty({ description: 'firstname of local user' })\n\tfirstName: string;\n\n\t@ApiProperty({ description: 'lastname of local user' })\n\tlastName: string;\n\n\t@ApiProperty({\n\t\tdescription: 'list of user roles from external system: student, teacher, admin',\n\t\tenum: RoleNameResponse,\n\t})\n\troleNames: RoleNameResponse[];\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'match type: admin (manual) or auto (set, when names match exactly for a single user',\n\t\tenum: MatchCreatorResponse,\n\t})\n\tmatchedBy?: MatchCreatorResponse;\n}\n\nexport class UserMatchListResponse extends PaginationResponse {\n\tconstructor(data: UserMatchResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [UserMatchResponse] })\n\tdata: UserMatchResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPermissionService\n\nPermissionService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPermissionService->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionService\n                        \n                        \n                            UserRepo\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionService } from '@shared/domain';\nimport { UserRepo } from '@shared/repo';\nimport { UserController } from './controller';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [UserRepo, PermissionService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/user/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findWithoutImportUser\n                            \n                            \n                                    Private\n                                    Async\n                                populateRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/user/user.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId, populateRoles)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/user/user.repo.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    populateRoles\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findWithoutImportUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findWithoutImportUser(school: School, filters?: INameMatch, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/user/user.repo.ts:26\n                \n            \n\n\n            \n                \n                    used for importusers module to request users not referenced in importusers\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    school\n                                    \n                                                School\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                                INameMatch\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        populateRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    populateRoles(roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/user/user.repo.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { QueryOrderMap, QueryOrderNumeric } from '@mikro-orm/core';\nimport { EntityManager, MongoDriver, ObjectId } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { StringValidator } from '@shared/common';\nimport { Counted, EntityId, IFindOptions, INameMatch, Role, School, SortOrder, User } from '@shared/domain';\nimport { MongoPatterns } from '../mongo.patterns';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId, populateRoles = false): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\n\t\tif (populateRoles) {\n\t\t\tawait this.em.populate(user, ['roles']);\n\t\t\tawait this.populateRoles(user.roles.getItems());\n\t\t}\n\n\t\treturn user;\n\t}\n\n\t/**\n\t * used for importusers module to request users not referenced in importusers\n\t */\n\tasync findWithoutImportUser(\n\t\tschool: School,\n\t\tfilters?: INameMatch,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst { _id: schoolId } = school;\n\t\tif (!ObjectId.isValid(schoolId)) throw new Error('invalid school id');\n\n\t\tconst permittedMatch = { schoolId };\n\n\t\tconst queryFilterMatch: { $or?: unknown[] } = {};\n\t\tif (filters?.name && StringValidator.isNotEmptyString(filters.name, true)) {\n\t\t\tconst escapedName = filters.name.replace(MongoPatterns.REGEX_MONGO_LANGUAGE_PATTERN_WHITELIST, '').trim();\n\t\t\t// TODO make db agnostic\n\t\t\tif (StringValidator.isNotEmptyString(escapedName, true)) {\n\t\t\t\tqueryFilterMatch.$or = [\n\t\t\t\t\t{\n\t\t\t\t\t\tfirstName: {\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t$regex: escapedName,\n\t\t\t\t\t\t\t$options: 'i',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlastName: {\n\t\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\t$regex: escapedName,\n\t\t\t\t\t\t\t$options: 'i',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\tconst pipeline: unknown[] = [\n\t\t\t{ $match: permittedMatch },\n\t\t\t{\n\t\t\t\t$lookup: {\n\t\t\t\t\tfrom: 'importusers',\n\t\t\t\t\tlocalField: '_id',\n\t\t\t\t\tforeignField: 'match_userId',\n\t\t\t\t\tas: 'importusers',\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\t$match: {\n\t\t\t\t\timportusers: {\n\t\t\t\t\t\t$size: 0,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{ $match: queryFilterMatch },\n\t\t\t{\n\t\t\t\t$project: {\n\t\t\t\t\timportusers: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t];\n\n\t\tconst countPipeline = [...pipeline];\n\t\tcountPipeline.push({ $group: { _id: null, count: { $sum: 1 } } });\n\t\tconst total = (await this.em.aggregate(User, countPipeline)) as { count: number }[];\n\t\tconst count = total.length > 0 ? total[0].count : 0;\n\t\tconst { pagination, order } = options || {};\n\n\t\tif (order) {\n\t\t\tconst orderQuery: QueryOrderMap = {};\n\t\t\tif (order.firstName) {\n\t\t\t\tswitch (order.firstName) {\n\t\t\t\t\tcase SortOrder.desc:\n\t\t\t\t\t\torderQuery.firstName = QueryOrderNumeric.DESC;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase SortOrder.asc:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\torderQuery.firstName = QueryOrderNumeric.ASC;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (order.lastName) {\n\t\t\t\tswitch (order.lastName) {\n\t\t\t\t\tcase SortOrder.desc:\n\t\t\t\t\t\torderQuery.lastName = QueryOrderNumeric.DESC;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase SortOrder.asc:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\torderQuery.lastName = QueryOrderNumeric.ASC;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpipeline.push({ $sort: orderQuery });\n\t\t}\n\n\t\tif (pagination?.skip) {\n\t\t\tpipeline.push({ $skip: pagination?.skip });\n\t\t}\n\t\tif (pagination?.limit) {\n\t\t\tpipeline.push({ $limit: pagination?.limit });\n\t\t}\n\n\t\tconst userDocuments = await this.em.aggregate(User, pipeline);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n\t\tconst users = userDocuments.map((userDocument) => this.em.map(User, userDocument));\n\t\tawait this.em.populate(users, 'roles');\n\t\treturn [users, count];\n\t}\n\n\tprivate async populateRoles(roles: Role[]): Promise {\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ValidationError extends BusinessError {\n\tconstructor(readonly message: string, details?: Record) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'VALIDATION_ERROR',\n\t\t\t\ttitle: 'Validation Error',\n\t\t\t\tdefaultMessage: message,\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\tdetails\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.18.1\n        \n            @hpi-schul-cloud/commons : ^1.3.4\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.3.1\n        \n            @nestjs/common : ^8.2.3\n        \n            @nestjs/core : ^8.2.3\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/microservices : ^8.2.3\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.2.3\n        \n            @nestjs/swagger : ^5.1.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.8.2\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            args : ^5.0.1\n        \n            async : ^3.2.2\n        \n            aws-sdk : ^2.1041.0\n        \n            axios : ^0.24.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            bson : ^4.6.0\n        \n            chalk : ^5.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            commander : ^8.1.0\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : ^4.13.2\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.3.2\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.13.9\n        \n            mongoose-delete : ^0.5.4\n        \n            mongoose-diff-history : git://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.1\n        \n            mongoose-shortid-nodeps : git://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            nestjs-console : ^7.0.0\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^13.1.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^7.3.1\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.5.1\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^6.0.0\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ImportUserSortByQuery   (apps/.../import-user-sorting.query.ts)\n                        \n                        \n                            LearnroomTypes   (apps/.../learnroom.types.ts)\n                        \n                        \n                            MatchCreator   (apps/.../import-user.entity.ts)\n                        \n                        \n                            MatchCreatorResponse   (apps/.../match-creator.response.ts)\n                        \n                        \n                            MatchCreatorScope   (apps/.../importuser.types.ts)\n                        \n                        \n                            MatchFilterQuery   (apps/.../import-user-filter.query.ts)\n                        \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            RoleName   (apps/.../import-user.entity.ts)\n                        \n                        \n                            RoleNameFilterQuery   (apps/.../import-user-filter.query.ts)\n                        \n                        \n                            RoleNameResponse   (apps/.../role-name.response.ts)\n                        \n                        \n                            SortOrder   (apps/.../sorting.query.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                        \n                            TaskDashBoardPermission   (apps/.../task.authorization.service.ts)\n                        \n                        \n                            TaskParentPermission   (apps/.../task.authorization.service.ts)\n                        \n                        \n                            UserImportPermissions   (apps/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/user-import/controller/dto/import-user-sorting.query.ts\n    \n        \n            \n                \n                    \n                        \n                        ImportUserSortByQuery\n                    \n                \n                        \n                            \n                                 FIRSTNAME\n                            \n                        \n                        \n                            \n                                Value : firstName\n                            \n                        \n                        \n                            \n                                 LASTNAME\n                            \n                        \n                        \n                            \n                                Value : lastName\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/types/learnroom.types.ts\n    \n        \n            \n                \n                    \n                        \n                        LearnroomTypes\n                    \n                \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : course\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/entity/import-user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        MatchCreator\n                    \n                \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : auto\n                            \n                        \n                        \n                            \n                                 MANUAL\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RoleName\n                    \n                \n                        \n                            \n                                 STUDENT\n                            \n                        \n                        \n                            \n                                Value : student\n                            \n                        \n                        \n                            \n                                 TEACHER\n                            \n                        \n                        \n                            \n                                Value : teacher\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : administrator\n                            \n                        \n            \n        \n\n    apps/server/src/modules/user-import/controller/dto/match-creator.response.ts\n    \n        \n            \n                \n                    \n                        \n                        MatchCreatorResponse\n                    \n                \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : auto\n                            \n                        \n                        \n                            \n                                 MANUAL\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/types/importuser.types.ts\n    \n        \n            \n                \n                    \n                        \n                        MatchCreatorScope\n                    \n                \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : auto\n                            \n                        \n                        \n                            \n                                 MANUAL\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n\n    apps/server/src/modules/user-import/controller/dto/import-user-filter.query.ts\n    \n        \n            \n                \n                    \n                        \n                        MatchFilterQuery\n                    \n                \n                        \n                            \n                                 AUTO\n                            \n                        \n                        \n                            \n                                Value : auto\n                            \n                        \n                        \n                            \n                                 MANUAL\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        RoleNameFilterQuery\n                    \n                \n                        \n                            \n                                 STUDENT\n                            \n                        \n                        \n                            \n                                Value : student\n                            \n                        \n                        \n                            \n                                 TEACHER\n                            \n                        \n                        \n                            \n                                Value : teacher\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/types/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/modules/user-import/controller/dto/role-name.response.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleNameResponse\n                    \n                \n                        \n                            \n                                 STUDENT\n                            \n                        \n                        \n                            \n                                Value : student\n                            \n                        \n                        \n                            \n                                 TEACHER\n                            \n                        \n                        \n                            \n                                Value : teacher\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n    apps/server/src/shared/controller/dto/sorting.query.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.authorization.service.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDashBoardPermission\n                    \n                \n                        \n                            \n                                 teacherDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_TEACHER_VIEW_V3\n                            \n                        \n                        \n                            \n                                 studentDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_VIEW_V3\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TaskParentPermission\n                    \n                \n                        \n                            \n                                 read\n                            \n                        \n                        \n                            \n                                 write\n                            \n                        \n            \n        \n\n    apps/server/src/modules/user-import/constants.ts\n    \n        \n            \n                \n                    \n                        \n                        UserImportPermissions\n                    \n                \n                    \n                        \n                            UserImportPermissions expect read access for current users school users.\nThey are used to read/update on @ImportUser of same school.\n\n                        \n                    \n                        \n                            \n                                 SCHOOL_IMPORT_USERS_VIEW\n                            \n                        \n                        \n                            \n                                Value : IMPORT_USER_VIEW\n                            \n                        \n                        \n                            \n                                 SCHOOL_IMPORT_USERS_UPDATE\n                            \n                        \n                        \n                            \n                                Value : IMPORT_USER_UPDATE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../management.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createStorageProviderClient   (apps/.../filestorage.adapter.ts)\n                        \n                        \n                            DecodeHtmlEntities   (apps/.../decode-html-entities.transformer.ts)\n                        \n                        \n                            SingleValueToArrayTransformer   (apps/.../single-value-to-array.transformer.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/management.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error: BusinessError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                BusinessError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error: FeathersError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                FeathersError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/infra/filestorage/filestorage.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createStorageProviderClient\n                        \n                    \n                \n            \n            \n                \ncreateStorageProviderClient(storageProvider: StorageProvider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageProvider\n                                    \n                                                StorageProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     S3Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/decode-html-entities.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DecodeHtmlEntities\n                        \n                    \n                \n            \n            \n                \nDecodeHtmlEntities()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a string value so that all contained html entities are decoded.\nThe purpose of this decorator is to revert html entity encodings that come from generic\ninput sanitization in the legacy server. We don't need this encoding in the output of our API\nbecause in common template systems (e.g handlebars and vue.js) strings are generally\nescaped for the output. That leads to wrong text output because html entities are rendered \"as is\"\nwith all characters encoded again.\nExamples:\n\nwhen text = \"X & Y\" and template is {{ text }} it is rendered as \"X &amp; Y\" => wrong\nwhen text = \"X & Y\"     and template is {{ text }} it is rendered as \"X & Y\"      => good\n\n(both for vue.js and handlebars)\nUse this decorator in your response DTO wherever redundant html encoding from the legacy server has to be reverted.\nIMPORTANT: Should be removed later when sanitization works properly\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        the string with decoded html entities\n\n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/single-value-to-array.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SingleValueToArrayTransformer\n                        \n                    \n                \n            \n            \n                \nSingleValueToArrayTransformer()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a given value to be an array if the value is not null or undefined.\nUsed to ensure an array even if only one parameter is given via rest which would set the value not as array.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\nPlace after IsBoolean decorator.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nDevelop: \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages. It contains information about\n\n\nsetup & preconditions\nstarting the application\ntesting\ntools setup (VSCode, Git)\narchitecture\n\nBased on NestJS\nFeathers application\nThis is legacy part of the application!\nBased on Node.js and Feathers\nApplication seperation\nIn order to seperate NestJS and Feathers each application runs in its own express instance. These express instances are then mounted on seperate paths under a common root express instance.\nRoot-Express-App \n├─ api/v1/       --> Feathers-App\n├─ api/v3/       --> NestJS-AppThis ensures that each application can run its own middleware stack for authentication, error handling, logging etc.\nThe mount paths don't have any impact on the routes inside of the applications, e.g. the path /api/v3/news will translate to the inner path /news. That means that in terms of route matching each child application doesn't have to take any measures regarding the path prefix. It simply works as it was mounted to /.\nHowever note that when URLs are generated inside a child application the path prefix has to be prepended. Only then the generated URLs match the appropriate child application, e.g. the path /news has to be provided as the external path /api/v3/news.\nIt is possible (not very likely) that the server api is called with URLs that use the old schema without a path prefix. As a safety net for that we additionally mount the Feathers application as before under the paths:\n\n/ - for internal calls\n/api - for external calls\n\nWhen these paths are accessed an error with context [DEPRECATED-PATH] is logged.\nSetup\nFor more detailed setup instructions, take a look at setup.\nThe whole application setup with all dependencies can be found in System Architecture. It contains information about how different application components are connected to each other.\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleWriterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EncryptionModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileSystemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImportUserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnroomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RocketChatModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerTestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\ncluster_ImportUserModule\n\n\n\ncluster_ImportUserModule_providers\n\n\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_ServerTestModule\n\n\n\ncluster_ServerTestModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nServerTestModule\n\nServerTestModule\n\nServerTestModule -->\n\nUserModule->ServerTestModule\n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\nServerTestModule -->\n\nAuthModule->ServerTestModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\nAuthModule -->\n\nUserRepo->AuthModule\n\n\n\n\n\nImportUserModule\n\nImportUserModule\n\nImportUserModule -->\n\nUserRepo->ImportUserModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nUserRepo->LearnroomModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nUserRepo->TaskModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nLoggerModule->FilesModule\n\n\n\nImportUserModule -->\n\nLoggerModule->ImportUserModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\nServerTestModule -->\n\nCoreModule->ServerTestModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\nServerConsoleModule -->\n\nFilesModule->ServerConsoleModule\n\n\n\nServerModule -->\n\nFilesModule->ServerModule\n\n\n\nServerTestModule -->\n\nFilesModule->ServerTestModule\n\n\n\n\n\nDeleteFilesUc\n\nDeleteFilesUc\n\nFilesModule -->\n\nDeleteFilesUc->FilesModule\n\n\n\n\n\nFileStorageAdapter\n\nFileStorageAdapter\n\nFilesModule -->\n\nFileStorageAdapter->FilesModule\n\n\n\n\n\nFilesRepo\n\nFilesRepo\n\nFilesModule -->\n\nFilesRepo->FilesModule\n\n\n\n\n\nStorageProviderRepo\n\nStorageProviderRepo\n\nFilesModule -->\n\nStorageProviderRepo->FilesModule\n\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\nServerModule -->\n\nImportUserModule->ServerModule\n\n\n\nServerTestModule -->\n\nImportUserModule->ServerTestModule\n\n\n\n\n\nImportUserRepo\n\nImportUserRepo\n\nImportUserModule -->\n\nImportUserRepo->ImportUserModule\n\n\n\n\n\nPermissionService\n\nPermissionService\n\nUserModule -->\n\nPermissionService->UserModule\n\n\n\nImportUserModule -->\n\nPermissionService->ImportUserModule\n\n\n\nTaskModule -->\n\nPermissionService->TaskModule\n\n\n\n\n\nUserImportUc\n\nUserImportUc\n\nImportUserModule -->\n\nUserImportUc->ImportUserModule\n\n\n\n\n\nBoardMapper\n\nBoardMapper\n\nLearnroomModule -->\n\nBoardMapper->LearnroomModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nLearnroomModule -->\n\nCourseRepo->LearnroomModule\n\n\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nCourseUc\n\nCourseUc\n\nLearnroomModule -->\n\nCourseUc->LearnroomModule\n\n\n\n\n\nDashboardModelMapper\n\nDashboardModelMapper\n\nLearnroomModule -->\n\nDashboardModelMapper->LearnroomModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nLearnroomModule -->\n\nLessonRepo->LearnroomModule\n\n\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nRoomsUc\n\nRoomsUc\n\nLearnroomModule -->\n\nRoomsUc->LearnroomModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nLearnroomModule -->\n\nTaskRepo->LearnroomModule\n\n\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\nServerTestModule -->\n\nLearnroomModule->ServerTestModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\nServerTestModule -->\n\nNewsModule->ServerTestModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\nServerTestModule -->\n\nTaskModule->ServerTestModule\n\n\n\n\n\nMongoMemoryDatabaseModule\n\nMongoMemoryDatabaseModule\n\nServerTestModule -->\n\nMongoMemoryDatabaseModule->ServerTestModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        25 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    23 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    43 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    86 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    53 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\ne2e default tests to extend: auth required, fails without/succeeds with\n\nACCEPTED\n\ndocumentation\n\nentity constructor\nem to be used in repositories only (!!!)\n\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nMERGE\n\napi path prefix cleanup: remove middleware and multiple path mounts, sync with nest\nuser module stucture\nsingle domain: shared entity (main.ts), shared repository \nrequest.user.user in jwt strategy\nremove outdated sorting.ts \nremove default launch/settings json files, apply them\nfix https://github.com/hpi-schul-cloud/schulcloud-server/pull/2729#pullrequestreview-699615164\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BaseEntityReference   (apps/.../base.entity.ts)\n                        \n                        \n                            BoardElement   (apps/.../rooms.uc.ts)\n                        \n                        \n                            ConnectionOptions   (apps/.../types.ts)\n                        \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            DashboardProps   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            EmptyResultQueryType   (apps/.../scope.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            GenericData   (apps/.../rocket-chat.service.ts)\n                        \n                        \n                            GridElementContent   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridElementWithPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPositionWithGroupIndex   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../user.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            LearnroomMetadata   (apps/.../learnroom.types.ts)\n                        \n                        \n                            MongoDatabaseModuleOptions   (apps/.../types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            RabbitMqModuleOptions   (apps/.../mail.module.ts)\n                        \n                        \n                            Role   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            ScopeOperator   (apps/.../scope.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TaskParentDescriptions   (apps/.../task.entity.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/entity/base.entity.ts\n    \n    \n        \n            \n                \n                    \n                    BaseEntityReference\n                \n            \n            \n                \n                    Describes the properties available for entities when used as @IdentifiedReference\n\n                \n            \n            \n                \n                        \"id\" | \"_id\"\n\n                \n            \n        \n    \n    apps/server/src/modules/learnroom/uc/rooms.uc.ts\n    \n    \n        \n            \n                \n                    \n                    BoardElement\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/infra/database/mongo-memory-database/types.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionOptions\n                \n            \n            \n                \n                    connection options not to be used in module options for the in memory db module as it is overriding the connection\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoDatabaseModuleOptions\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n    \n        \n            \n                \n                    \n                    DashboardProps\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementContent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementWithPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPositionWithGroupIndex\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyResultQueryType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ScopeOperator\n                \n            \n            \n                \n                        \"$and\" | \"$or\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/shared/infra/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/modules/rocketchat/rocket-chat.service.ts\n    \n    \n        \n            \n                \n                    \n                    GenericData\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/user.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                            School | Team | Course\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/learnroom.types.ts\n    \n    \n        \n            \n                \n                    \n                    LearnroomMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/shared/infra/mail/mail.module.ts\n    \n    \n        \n            \n                \n                    \n                    RabbitMqModuleOptions\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                            IRole\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                        Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/task.entity.ts\n    \n    \n        \n            \n                \n                    \n                    TaskParentDescriptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ENTITIES   (apps/.../all-entities.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../console.ts)\n                        \n                        \n                            cleanupCollections   (apps/.../cleanup-collections.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            courseFactory   (apps/.../course.factory.ts)\n                        \n                        \n                            courseGroupFactory   (apps/.../coursegroup.factory.ts)\n                        \n                        \n                            courseNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createRabbitMqModule   (apps/.../mail.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            DEFAULT   (apps/.../course.entity.ts)\n                        \n                        \n                            defaultColumns   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            defaultMikroOrmOptions   (apps/.../server.module.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            directoryFactory   (apps/.../file.factory.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            execute   (apps/.../bootstrap.console.ts)\n                        \n                        \n                            fileFactory   (apps/.../file.factory.ts)\n                        \n                        \n                            generateEmptyDashboard   (apps/.../dashboard.repo.ts)\n                        \n                        \n                            importUserFactory   (apps/.../import-user.factory.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            lessonFactory   (apps/.../lesson.factory.ts)\n                        \n                        \n                            mapUserToCurrentUser   (apps/.../map-user-to-current-user.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            oneDay   (apps/.../course.factory.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            roleFactory   (apps/.../role.factory.ts)\n                        \n                        \n                            schoolFactory   (apps/.../school.factory.ts)\n                        \n                        \n                            schoolNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            serverModules   (apps/.../server.module.ts)\n                        \n                        \n                            setupEntities   (apps/.../setup-entities.ts)\n                        \n                        \n                            storageProviderFactory   (apps/.../storageprovider.factory.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            submissionFactory   (apps/.../submission.factory.ts)\n                        \n                        \n                            systemFactory   (apps/.../system.factory.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                            taskFactory   (apps/.../task.factory.ts)\n                        \n                        \n                            teamFactory   (apps/.../team.factory.ts)\n                        \n                        \n                            teamNewsFactory   (apps/.../news.factory.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../jwt-validation.adapter.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                               (apps/.../file-system.adapter.ts)\n                        \n                        \n                            userFactory   (apps/.../user.factory.ts)\n                        \n                        \n                            yesterday   (apps/.../task.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/entity/all-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ENTITIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\tCourse,\n\tCourseGroup,\n\tDashboardModelEntity,\n\tDashboardGridElementModel,\n\tBaseFile,\n\tFile,\n\tDirectory,\n\tStorageProvider,\n\tLesson,\n\tRole,\n\tSchool,\n\tSubmission,\n\tTask,\n\tTeam,\n\tUser,\n\tCourseNews,\n\tNews,\n\tSchoolNews,\n\tTeamNews,\n\tSystem,\n\tImportUser,\n]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/console/console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BootstrapConsole({\n\tmodule: ServerConsoleModule,\n\tuseDecorators: true,\n})\n                    \n                \n\n            \n                \n                    The console is starting the application wrapped into commander.\nThis allows adding console commands to execute provider methods.\n\n                \n            \n\n        \n    \n\n    apps/server/src/shared/testing/cleanup-collections.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cleanupCollections\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (em: EntityManager): Promise => {\n\tconst allCollections = await em.getConnection('write').listCollections();\n\tawait Promise.all(\n\t\tallCollections.map(async (collectionName) => {\n\t\t\tawait em.getConnection().deleteMany(collectionName, {});\n\t\t})\n\t);\n}\n                    \n                \n\n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n\tmaxWorkers: 2, // limited for not taking all workers within of a single github action\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.addServer('/api/v3/') // add default path as server to have correct urls ald let 'try out' work\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/course.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : CourseFactory.define(Course, ({ sequence, params }) => {\n\tlet school: School;\n\tif (params?.school) {\n\t\tschool = params.school as School;\n\t} else {\n\t\tschool = schoolFactory.build();\n\t}\n\n\treturn {\n\t\tname: `course #${sequence}`,\n\t\tdescription: `course #${sequence} description`,\n\t\tcolor: '#FFFFFF',\n\t\tschool,\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oneDay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : 24 * 60 * 60 * 1000\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/coursegroup.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseGroupFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(CourseGroup, () => {\n\treturn {\n\t\tcourse: courseFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/news.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(CourseNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: courseFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(SchoolNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: schoolFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamNewsFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(TeamNews, ({ sequence }) => {\n\treturn {\n\t\ttitle: `news ${sequence}`,\n\t\tcontent: `content of news ${sequence}`,\n\t\tdisplayAt: new Date(),\n\t\tschool: schoolFactory.build(),\n\t\tcreator: userFactory.build(),\n\t\ttarget: teamFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create default response for all unknown errors\n\t\treturn createErrorResponseForUnknownError();\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/mail/mail.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRabbitMqModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms: number) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/course.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n\n\n        \n    \n\n    apps/server/src/server.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultMikroOrmOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MikroOrmModuleSyncOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t},\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverModules\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\tCoreModule,\n\tAuthModule,\n\tTaskModule,\n\tNewsModule,\n\tUserModule,\n\tImportUserModule,\n\tLearnroomModule,\n\tMailModule.forRoot({\n\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t}),\n\tFilesModule,\n\tRocketChatModule.forRoot({\n\t\turi: Configuration.get('ROCKET_CHAT_URI') as string,\n\t\tadminId: Configuration.get('ROCKET_CHAT_ADMIN_ID') as string,\n\t\tadminToken: Configuration.get('ROCKET_CHAT_ADMIN_TOKEN') as string,\n\t\tadminUser: Configuration.get('ROCKET_CHAT_ADMIN_USER') as string,\n\t\tadminPassword: Configuration.get('ROCKET_CHAT_ADMIN_PASSWORD') as string,\n\t}),\n]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/file.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        directoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Directory, ({ sequence }) => {\n\treturn {\n\t\tstorageFileName: `directory-${sequence}`,\n\t\tbucket: 'test-bucket',\n\t\tstorageProvider: storageProviderFactory.build(),\n\t\tcreator: userFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(File, ({ sequence }) => {\n\treturn {\n\t\tstorageFileName: `file-${sequence}`,\n\t\tbucket: 'test-bucket',\n\t\tstorageProvider: storageProviderFactory.build(),\n\t\tcreator: userFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/console/test/bootstrap.console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/dashboard/dashboard.repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateEmptyDashboard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (userId: EntityId) => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tconst dashboard = new DashboardEntity(new ObjectId().toString(), { grid: gridArray, userId });\n\treturn dashboard;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/import-user.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        importUserFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ImportUserFactory.define(ImportUser, ({ sequence }) => {\n\treturn {\n\t\tschool: schoolFactory.build(),\n\t\tsystem: systemFactory.build(),\n\t\tldapDn: `uid=john${sequence},cn=schueler,cn=users,ou=1,dc=training,dc=ucs`,\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tldapId: uuidv4() as unknown as string,\n\t\tfirstName: `John${sequence}`,\n\t\tlastName: `Doe${sequence}`,\n\t\temail: `user-${sequence}@example.com`,\n\t\troleNames: [RoleName.STUDENT],\n\t\tclassNames: ['firstClass'],\n\t\tflagged: false,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/lesson.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lessonFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : LessonFactory.define(Lesson, ({ sequence, params }) => {\n\tlet course: Course;\n\tif (params.course) {\n\t\tcourse = params.course as Course;\n\t} else {\n\t\tcourse = courseFactory.build();\n\t}\n\n\treturn {\n\t\tname: `lesson #${sequence}`,\n\t\tcourse,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/map-user-to-current-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mapUserToCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (user: User): ICurrentUser => {\n\tconst currentUser: Partial = {\n\t\tuserId: user.id,\n\t\troles: user.roles.getItems().map((r) => r.id),\n\t\tschoolId: user.school.id,\n\t\taccountId: new ObjectId().toHexString(),\n\t};\n\treturn currentUser as ICurrentUser; // TODO is partial!\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/role.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        roleFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Role, ({ sequence }) => {\n\treturn {\n\t\tname: `role #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/school.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schoolFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(School, ({ sequence }) => {\n\treturn { name: `school #${sequence}` };\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/setup-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupEntities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise => {\n\tconst orm = await MikroORM.init({ type: 'mongo', dbName: 'dummy', entities: ALL_ENTITIES });\n\treturn orm;\n}\n                    \n                \n\n            \n                \n                    Test-Setup to make all entities available without a database connection.\nTeardown: 'await orm.close()' in after-hook!\n\n                \n            \n\n        \n    \n\n    apps/server/src/shared/testing/factory/storageprovider.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        storageProviderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(\n\tStorageProvider,\n\t() => {\n\t\treturn {\n\t\t\tendpointUrl: 'http://localhost',\n\t\t\taccessKeyId: 'accessKeyId',\n\t\t\tsecretAccessKey: 'secret',\n\t\t};\n\t}\n)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/submission.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        submissionFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SubmissionFactory.define(Submission, ({ sequence }) => {\n\treturn {\n\t\ttask: taskFactory.build(),\n\t\tstudent: userFactory.build(),\n\t\tcomment: `submission comment #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/system.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        systemFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(System, ({ sequence }) => {\n\treturn {\n\t\ttype: 'ldap',\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/task.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        taskFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : TaskFactory.define(Task, ({ sequence }) => {\n\t// private is by default in constructor true, but in the most test cases we need private: false\n\treturn { name: `task #${sequence}`, private: false, availableDate: yesterday };\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yesterday\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(Date.now() - 86400000)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/team.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        teamFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : BaseFactory.define(Team, ({ sequence }) => {\n\treturn {\n\t\tname: `team #${sequence}`,\n\t};\n})\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : jwtWhitelist\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/file-system/file-system.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : fsp\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/testing/factory/user.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : UserFactory.define(User, ({ sequence }) => {\n\treturn {\n\t\tfirstName: 'John',\n\t\tlastName: `Doe ${sequence}`,\n\t\temail: `user-${sequence}@example.com`,\n\t\troles: [],\n\t\tschool: schoolFactory.build(),\n\t};\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\nRabbitMQ (configure using RABBITMQ_URL, see default.schema.json)\n\npreconditions\n\nHave a MongoDB started, run mongod \nHave some seed data in datase, use npm run setup to reset the db and apply seed data\nHave RabbitMQ started, run docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.9-management. This starts RabbitMQ on port 5672 and a web admin console at localhost:15672 (use guest:guest to login).\n\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:start starts the nest application on localhost:3030\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to build and serve the documentation\n\nnest:docs:build builds code documentation and module relations into /documentation folder\nnest:docs:serve builds code documentation and module relations into /documentation folder and serves it on port :8080 with hot reload on changes\n\nHow to start the server console\nThe console offers management capabilities of the application.\n\nnest:console after nest:build in production or\nnest:console:dev for development\n\nTo run a specific command run npm run nest:console:dev -- command . The --is required for npm to send params to the console. Use --helpto get an overview about existing commands.\nHow to test the nest-application with jest\n NestJS must not use _.test.[ts|js] as filename but instead either *.spec.ts for unit-tests beside tested files or *.e2e-spec.ts in test folder for end-to-end tests. This ensures legacy/feathers/mocha tests can be separated from jest test suites.\nThe application must pass the following statement which executes separate checks:\n\nnest:test executes all jest (NestJS) tests with coverage and eslint\n\nTo test a subset, use\n\nnest:test:all execute unit and e2e tests \n\nnest:test:e2e execute e2e tests only\n\nnest:test:spec execute unit tests (without e2e) only\n\nnest:test:cov executes all jest tests with coverage check\n\nnest:test:watch executes changed tests again on save\n\nnest:test:debug executes tests with debugging\n\nnest:lint run eslint to report linter issues and apply formatting\n\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting\n\n\nQuality gates\nWith coverage on tests and static code analysis we ensure some quality gates which are all handled by running nest:test:\n\nESLint with prettier ensures formatting and static code analysis to pass, see .eslintrc.js for details.\nTests ensure functional requirements via unit & e2e tests.\nCoverage on tests ensures a coverage of 80% on NestJS code, see jest.config.ts for details.\n\nGates are part of pull request checks.\nOpenAPI documentation\nThe NestJS applicaiton serves a documentation at :3030/v3/docs. The JSON-representation can be found at /v3/docs-json to be used for generating a client application.\nLegacy/feathers Swagger UI documentation when running the server locally, it is served at :3030/docs/.\nLegacy (feathers) testing with mocha\n\nnpm run test\nTo run a single test, use npm run mocha-single -- .\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\nhttps://min.io/\nhttps://www.rabbitmq.com/\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '@src/core/logger';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '@src/core/logger';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                                  (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                                    (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                                     (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as NewsListResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nStrict settings: Property Initialization\nDue to different ways of how instances are generated while we focus on having strict settings enabled by default, we have the following exceptions for strict property initialization defined:\n\nreponse dtos (generated in controllers by mappers based on entities) will get constructors added for setting all or at least all required properties via constructors\nrequest dtos will use ! on properties ang do not get constructors added. The validity must be defined by and match with class validator decorators on properties. The application then will generate valid instances on input data. \nfor entity id and _id the developer must know if the values are present or not depending on persistence state of an entity\nall other classes should use complete constructors, and avoid use of ! on properties, especially all providers, and entities for application use and testing\nlegacy code might have got some ! added which should be removed and get constructors added correctly.\n\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
