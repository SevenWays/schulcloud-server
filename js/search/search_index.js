var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/ApiValidationError.html",[0,0.147,1,3.519]],["body/classes/ApiValidationError.html",[0,0.176,1,5.422,2,1.175,3,0.119,4,0.099,5,0.073,6,7.739,7,6.038,8,1.846,9,6.708,10,0.285,11,0.96,12,3.48,13,3.532,14,5.148,15,4.521,16,3.073,17,0.393,18,1.314,19,7.064,20,7.064,21,1.327,22,6.038,23,6.619,24,0.881,25,6.038,26,0.842,27,0.005,28,0.514,29,0.514,30,7.651,31,1.832,32,3.666,33,5.409,34,5.422,35,5.409,36,0.951,37,5.409,38,5.409,39,5.409,40,5.409,41,1.278,42,5.409,43,3.763,44,0.242,45,4.684,46,1.025,47,5.409,48,0.112,49,4.994,50,2.07,51,4.994,52,3.686,53,4.389,54,2.814,55,4.436,56,4.436,57,2.941,58,5.409,59,0.004,60,0.004]],["title/classes/ApiValidationErrorResponse.html",[0,0.147,61,4.154]],["body/classes/ApiValidationErrorResponse.html",[0,0.183,1,6.74,2,1.219,3,0.123,4,0.103,5,0.075,8,1.889,10,0.296,11,0.982,13,3.615,15,4.627,16,2.851,17,0.345,21,1.377,24,0.711,26,0.874,27,0.005,28,0.533,29,0.533,30,7.783,43,5.414,44,0.271,48,0.116,52,3.773,53,5.541,54,2.919,56,4.602,59,0.004,60,0.004,61,6.552,62,8.689,63,6.264,64,1.818,65,5.319,66,4.493,67,5.116,68,5.035,69,7.922,70,6.264,71,7.186,72,6.264,73,4.859,74,5.61,75,6.264,76,1.537,77,6.264,78,6.264,79,6.264,80,7.922,81,7.922,82,6.264,83,1.17,84,1.48,85,7.922,86,6.264]],["title/interfaces/AppendedAttachment.html",[87,0.551,88,3.244]],["body/interfaces/AppendedAttachment.html",[3,0.132,4,0.11,5,0.081,8,2.291,10,0.316,11,1.025,27,0.005,28,0.57,36,1.15,48,0.125,59,0.004,60,0.004,87,1.087,88,5.786,89,1.974,90,4.499,91,6.041,92,6.45,93,4.499,94,4.499,95,5.337,96,4.499,97,4.499,98,4.499,99,5.786,100,4.328,101,4.499,102,5.337,103,5.548,104,5.548,105,5.337,106,4.686,107,4.328,108,4.499,109,4.499,110,4.499]],["title/modules/AuthModule.html",[111,1.302,112,3.691]],["body/modules/AuthModule.html",[0,0.196,3,0.132,4,0.11,5,0.081,27,0.005,44,0.31,46,1.14,48,0.125,59,0.004,60,0.004,111,2.144,112,7.465,113,2.585,114,3.555,115,6.014,116,6.014,117,6.014,118,6.858,119,7.593,120,7.192,121,4.123,122,3.064,123,2.83,124,6.714,125,3.423,126,3.626,127,8.273,128,5.208,129,6.714,130,6.014,131,6.014,132,6.714,133,4.933,134,5.553,135,6.714,136,6.014,137,6.714]],["title/modules/AuthorizationModule.html",[111,1.302,138,3.519]],["body/modules/AuthorizationModule.html",[0,0.198,3,0.134,4,0.111,5,0.082,27,0.005,44,0.293,46,1.154,48,0.126,59,0.004,60,0.004,111,2.16,113,2.616,114,3.582,121,4.154,122,3.101,123,2.865,125,3.448,126,3.652,138,7.168,139,6.087,140,6.087,141,6.087,142,6.087,143,6.878,144,6.635,145,6.878,146,6.796,147,3.97,148,6.796,149,6.796,150,3.648,151,6.087]],["title/injectables/AuthorizationService.html",[144,3.244,152,0.901]],["body/injectables/AuthorizationService.html",[0,0.133,3,0.09,4,0.075,5,0.055,10,0.215,17,0.319,18,1.087,21,1.001,24,0.721,26,1.121,27,0.005,28,0.684,29,0.684,36,0.977,41,1.398,44,0.251,46,0.774,48,0.085,59,0.003,60,0.003,76,1.421,83,0.946,84,0.851,144,4.136,145,6.15,150,2.445,151,4.081,152,1.149,153,1.513,154,4.556,155,2.493,156,6.633,157,5.736,158,7.405,159,4.556,160,4.556,161,4.556,162,3.056,163,4.858,164,4.725,165,5.777,166,4.288,167,4.556,168,3.86,169,2.636,170,6.404,171,4.712,172,2.065,173,3.955,174,2.306,175,4.487,176,6.404,177,4.556,178,4.556,179,4.081,180,4.556,181,3.913,182,4.705,183,5.736,184,4.136,185,5.296,186,1.322,187,2.746,188,1.754,189,4.516,190,4.487,191,2.353,192,4.556,193,4.556,194,3.768,195,4.556,196,4.556,197,4.556,198,6.404,199,4.556,200,4.556,201,2.219,202,4.556,203,6.404,204,4.556,205,4.556]],["title/classes/BaseEntity.html",[0,0.147,206,3.373]],["body/classes/BaseEntity.html",[0,0.256,2,1.242,3,0.126,4,0.105,5,0.077,10,0.301,11,1.087,13,2.913,17,0.318,24,0.72,27,0.005,36,0.976,44,0.25,48,0.149,59,0.004,60,0.004,84,1.637,172,2.163,206,5.885,207,5.717,208,3.875,209,2.076,210,3.667,211,2.24,212,4.11,213,6.383,214,4.11,215,6.383,216,3.103,217,2.02,218,1.965,219,2.913,220,4.951,221,4.951,222,3.033,223,5.278,224,5.278,225,5.717,226,4.122,227,3.519,228,5.717,229,3.62,230,4.951,231,3.977,232,2.415,233,3.339,234,2.415,235,5.717,236,5.278,237,5.717,238,4.122,239,3.847,240,4.951,241,5.278,242,2.501,243,2.581,244,5.717,245,2.546]],["title/classes/BaseEntityWithTimestamps.html",[0,0.147,222,1.901]],["body/classes/BaseEntityWithTimestamps.html",[0,0.25,2,1.186,3,0.12,4,0.1,5,0.073,10,0.288,11,1.064,13,2.781,17,0.309,24,0.811,27,0.005,36,0.955,44,0.243,48,0.145,59,0.004,60,0.004,84,1.745,172,2.126,206,5.226,207,5.458,208,3.81,209,2.041,210,3.605,211,2.387,212,4.041,214,4.041,216,3.2,217,1.962,218,1.876,219,2.781,220,4.726,221,4.726,222,3.246,223,5.039,224,5.039,225,5.458,226,3.935,227,3.36,228,5.458,229,3.455,230,4.726,231,3.797,232,2.306,233,3.188,234,2.306,235,5.458,236,5.039,237,5.458,238,3.935,239,3.672,240,4.726,241,5.039,242,3.361,243,2.751,244,5.458,245,3.421,246,6.093,247,2.227,248,2.293,249,6.093,250,6.093,251,2.902,252,1.993,253,6.093]],["title/classes/BaseFile.html",[0,0.147,254,3.373]],["body/classes/BaseFile.html",[0,0.234,2,1.03,3,0.104,4,0.087,5,0.085,8,2.042,10,0.25,11,0.881,17,0.372,24,0.843,27,0.005,29,0.728,32,3.239,36,0.994,44,0.267,48,0.149,50,1.815,59,0.004,60,0.004,84,1.327,87,0.58,169,2.38,172,2.014,208,2.993,209,1.604,210,2.112,211,2.399,212,2.368,214,2.368,216,3.457,217,1.335,218,1.63,222,3.552,242,2.782,243,2.629,245,2.832,247,2.032,248,2.092,251,2.522,252,1.732,254,5.748,255,4.108,256,4.267,257,5.998,258,6.64,259,5.296,260,5.296,261,2.434,262,5.296,263,2.579,264,2.579,265,2.579,266,2.579,267,2.276,268,2.151,269,5.063,270,4.108,271,2.639,272,5.217,273,4.975,274,4.768,275,2.981,276,3.816,277,3.192,278,3.625,279,2.687,280,4.425,281,3.3,282,3.175,283,4.108,284,2.232,285,4.108,286,1.97,287,4.108,288,4.108,289,4.108,290,4.108,291,4.108,292,4.108,293,4.108,294,4.108,295,4.108,296,4.108,297,3.3]],["title/injectables/BaseRepo.html",[152,0.901,298,3.373]],["body/injectables/BaseRepo.html",[0,0.14,3,0.095,4,0.079,5,0.058,10,0.226,12,1.671,17,0.376,18,1.127,21,1.054,24,0.86,26,1.32,27,0.005,28,0.805,29,0.805,41,1.563,44,0.238,46,0.814,48,0.089,59,0.003,60,0.003,76,1.174,83,1.318,152,1.191,153,1.593,155,2.651,172,2.099,174,2.517,181,4.001,186,1.392,191,2.398,206,3.22,217,1.209,219,2.189,298,4.457,299,4.796,300,6.372,301,3.877,302,5.149,303,5.149,304,4.651,305,3.473,306,5.149,307,5.149,308,5.149,309,2.891,310,4.298,311,4.796,312,3.233,313,4.796,314,4.651,315,6.926,316,4.796,317,5.149,318,4.796,319,5.149,320,4.796,321,4.651,322,4.796,323,5.149,324,4.796,325,3.829,326,5.149,327,4.796,328,5.149,329,4.796,330,5.149,331,4.796,332,3.967,333,4.796,334,4.796,335,6.372,336,6.638,337,6.638,338,6.638,339,7.612,340,7.612,341,4.796,342,6.638]],["title/injectables/BsonConverter.html",[152,0.901,343,3.519]],["body/injectables/BsonConverter.html",[0,0.173,3,0.117,4,0.097,5,0.071,10,0.279,17,0.303,18,1.296,24,0.685,26,1.065,27,0.005,28,0.65,29,0.65,41,1.476,44,0.238,46,1.004,48,0.11,59,0.004,60,0.004,64,2.216,76,1.351,83,1.128,152,1.369,153,1.963,189,3.636,343,5.348,344,5.911,345,6.313,346,6.313,347,7.634,348,5.911,349,7.634,350,6.975,351,6.261,352,6.56,353,9.77,354,6.77,355,8.005,356,7.391,357,5.888,358,8.937,359,7.634,360,5.911,361,7.634,362,5.922,363,6.12,364,5.911,365,5.922,366,5.911]],["title/classes/BusinessError.html",[0,0.147,9,3.373]],["body/classes/BusinessError.html",[0,0.234,2,1.029,3,0.104,4,0.087,5,0.064,8,1.692,9,4.763,10,0.25,11,0.88,12,3.51,13,4.409,14,5.656,15,4.997,16,3.305,17,0.396,18,1.205,19,7.075,20,7.075,21,1.559,24,0.856,26,0.738,27,0.005,28,0.45,29,0.45,31,2.152,34,6.574,36,1.023,41,1.172,43,4.988,44,0.25,45,6.636,46,0.898,48,0.098,50,1.812,53,2.998,55,5.882,59,0.004,60,0.004,64,1.535,68,4.717,83,1.048,84,0.988,278,4.086,367,5.287,368,4.763,369,4.275,370,4.97,371,4.023,372,4.581,373,4.581,374,3.536,375,7.075,376,5.287,377,6.636,378,7.094,379,2.635,380,5.287,381,5.287,382,5.287,383,5.287,384,5.287,385,5.287,386,5.287,387,5.287,388,5.287,389,3.55,390,5.287,391,4.736,392,7.094,393,5.287,394,4.144,395,7.094,396,7.094,397,5.287]],["title/modules/ConsoleWriterModule.html",[111,1.302,398,3.691]],["body/modules/ConsoleWriterModule.html",[0,0.21,3,0.142,4,0.118,5,0.086,27,0.005,44,0.269,46,1.221,48,0.134,59,0.004,60,0.004,111,2.235,113,2.767,114,3.706,121,4.298,122,3.281,123,3.03,125,3.568,147,4.108,398,7.39,399,6.439,400,6.439,401,6.439,402,6.681,403,6.439,404,5.282,405,7.189,406,3.859,407,5.945]],["title/injectables/ConsoleWriterService.html",[152,0.901,402,3.244]],["body/injectables/ConsoleWriterService.html",[0,0.197,3,0.177,4,0.11,5,0.081,10,0.318,11,1.029,17,0.329,18,1.408,24,0.744,26,0.94,27,0.005,28,0.574,29,0.574,36,1,41,1.114,44,0.28,46,1.145,48,0.125,59,0.004,60,0.004,152,1.488,153,2.239,247,1.929,248,1.986,325,3.866,402,5.356,403,8.046,404,6.6,406,4.452,408,6.741,409,2.807,410,9.373,411,8.294,412,6.741,413,4.526,414,8.294,415,8.983,416,6.741,417,3.077,418,8.983,419,6.741,420,3.283,421,3.527,422,6.741,423,6.741]],["title/modules/CoreModule.html",[111,1.302,424,3.691]],["body/modules/CoreModule.html",[0,0.184,3,0.124,4,0.103,5,0.076,27,0.005,44,0.295,46,1.07,48,0.117,54,3.706,59,0.004,60,0.004,64,1.828,111,2.371,113,2.425,114,3.416,121,3.962,122,2.875,123,2.655,126,3.484,374,3.962,424,7.474,425,5.642,426,5.642,427,7.078,428,7.078,429,6.003,430,7.078,431,6.299,432,5.338,433,7.95,434,5.338,435,6.167,436,5.841,437,7.95,438,4.792,439,6.167,440,5.338,441,7.95,442,4.644,443,5.841,444,7.121,445,7.95,446,6.167,447,6.299,448,6.299,449,6.299,450,6.299]],["title/classes/Course.html",[0,0.147,451,1.934]],["body/classes/Course.html",[0,0.119,2,0.793,3,0.08,4,0.067,5,0.049,8,1.41,10,0.399,11,0.733,17,0.367,18,1.004,21,1.3,24,0.866,26,0.825,27,0.005,28,0.742,29,0.503,31,1.794,32,2.889,36,1.044,41,0.977,44,0.253,48,0.076,50,1.397,59,0.003,60,0.003,64,2.354,76,1.351,83,0.873,84,1.67,87,0.447,162,2.351,169,2.123,172,1.391,173,1.751,208,2.493,209,1.335,210,1.625,211,2.395,212,1.822,214,1.822,216,3.164,217,1.027,218,1.254,222,3.302,232,2.238,242,2.317,243,1.742,245,2.358,247,2.682,248,2.633,251,1.941,252,2.854,261,2.027,263,1.985,264,1.985,265,1.985,266,1.985,267,1.751,268,1.655,271,2.031,275,1.516,284,3.768,286,2.2,312,1.985,438,2.456,451,2.277,452,3.37,453,5.097,454,3.502,455,4.602,456,5.61,457,5.35,458,6.84,459,4.33,460,6.315,461,5.913,462,1.718,463,5.297,464,5.297,465,4.075,466,5.297,467,4.075,468,4.075,469,2.817,470,4.075,471,4.425,472,6.96,473,4.587,474,4.075,475,6.234,476,4.075,477,6.234,478,4.075,479,4.075,480,4.587,481,4.075,482,2.311,483,2.187,484,2.539,485,3.564,486,4.345,487,3.65,488,3.161,489,3.65,490,2.736,491,3.65,492,3.65,493,3.37,494,2.855,495,2.994,496,2.855,497,3.65,498,3.65,499,2.994,500,3.37,501,1.86,502,1.985,503,2.539,504,4.495,505,3.564,506,2.456,507,5.297,508,3.65,509,3.161,510,2.539,511,3.161,512,3.161,513,3.65,514,3.65,515,3.65,516,3.65,517,5.297,518,3.65,519,3.65,520,3.65,521,3.65,522,3.65,523,3.65]],["title/classes/CourseGroup.html",[0,0.147,524,3.13]],["body/classes/CourseGroup.html",[0,0.161,2,1.073,3,0.109,4,0.09,5,0.066,8,1.74,10,0.26,11,0.905,17,0.369,18,1.239,21,1.212,24,0.864,26,0.769,27,0.005,28,0.469,29,0.469,32,3.292,36,0.614,41,0.911,44,0.282,48,0.136,50,1.89,59,0.004,60,0.004,83,0.814,84,1.625,87,0.604,169,2.028,172,1.716,208,3.075,209,1.647,210,3.47,211,2.375,212,2.465,214,2.465,216,1.952,217,1.838,218,1.697,219,2.516,222,3.588,242,2.858,243,2.148,245,2.909,247,2.339,248,2.408,251,2.626,252,2.674,263,2.685,264,2.685,265,2.685,266,2.685,267,2.369,268,2.239,271,2.748,275,2.051,284,3.667,286,2.713,451,3.706,455,5.243,462,2.324,471,3.816,473,5.658,482,3.126,501,2.516,504,4.711,511,4.276,512,4.276,524,4.545,525,4.938,526,7.792,527,7.194,528,7.294,529,4.261,530,5.11,531,5.513,532,5.513,533,3.22,534,4.05,535,3.862,536,3.862,537,4.938]],["title/injectables/CourseGroupRepo.html",[152,0.901,538,4.499]],["body/injectables/CourseGroupRepo.html",[0,0.196,3,0.132,4,0.11,5,0.081,10,0.317,12,2.339,17,0.328,18,1.405,21,1.476,24,0.743,26,1.154,27,0.005,28,0.704,29,0.704,41,1.109,44,0.28,46,1.14,48,0.125,59,0.004,60,0.004,76,1.188,83,0.992,152,1.484,153,2.23,155,2.39,162,2.882,174,2.174,186,1.949,188,2.585,191,1.867,217,1.692,219,3.064,309,4.047,310,4.897,312,4.03,451,2.585,524,4.184,534,6.079,538,7.41,539,6.714,540,8.273,541,6.714,542,8.273,543,6.714,544,5.796,545,4.184,546,5.343,547,6.714]],["title/classes/CourseNews.html",[0,0.147,548,3.13]],["body/classes/CourseNews.html",[0,0.202,2,0.651,3,0.066,4,0.122,5,0.04,8,1.779,10,0.158,11,0.633,16,2.829,17,0.383,18,0.867,24,0.855,26,0.467,27,0.005,28,0.589,29,0.735,32,3.606,36,1.045,41,0.552,44,0.263,48,0.139,50,1.146,59,0.003,60,0.003,83,0.494,84,1.394,87,0.367,162,2.133,163,3.984,164,3.919,166,2.61,169,2.274,172,1.755,190,2.343,208,2.152,209,1.398,210,1.334,211,2.398,212,1.495,214,1.495,216,3.292,217,0.843,218,1.03,222,2.975,229,3.511,234,2.342,242,2,243,2.197,245,2.036,247,1.771,248,1.823,251,1.593,252,1.094,256,3.718,263,1.629,264,1.629,265,1.629,266,1.629,267,1.437,268,1.358,271,1.667,275,2.303,277,2.016,278,2.605,279,1.265,280,3.857,284,3.315,286,1.244,297,2.084,394,1.954,451,2.383,454,3.454,462,2.61,469,2.431,483,1.795,484,2.084,503,3.857,510,2.084,529,2.982,533,1.954,548,3.181,549,2.457,550,3.827,551,4.109,552,3.83,553,3.719,554,5.09,555,4.651,556,4.818,557,2.514,558,3.96,559,3.344,560,2.766,561,3.427,562,4.317,563,3.576,564,2.766,565,2.766,566,3.75,567,4.317,568,3.75,569,3.576,570,2.605,571,3.181,572,3.576,573,2.766,574,2.766,575,2.766,576,3.511,577,3.857,578,2.766,579,2.766,580,3.085,581,2.766,582,3.427,583,2.766,584,3.75,585,2.766,586,3.75,587,5.227,588,2.766,589,2.486,590,2.457,591,3.857,592,2.457,593,1.707,594,2.245,595,2.084,596,2.016,597,2.457,598,2.457,599,2.457,600,2.457,601,1.897,602,2.457,603,2.457,604,2.457,605,2.457,606,2.457,607,2.457,608,2.457,609,2.457,610,3.75,611,2.949,612,3.015,613,2.885,614,2.885,615,3.015,616,3.616,617,3.616,618,2.457,619,3.75,620,2.457,621,2.457,622,2.16,623,2.16,624,2.457]],["title/injectables/CourseRepo.html",[152,0.901,625,3.519]],["body/injectables/CourseRepo.html",[0,0.205,3,0.103,4,0.086,5,0.063,8,1.245,10,0.247,12,1.819,17,0.338,18,1.194,21,1.148,24,0.764,26,1.187,27,0.005,28,0.724,29,0.724,41,1.314,44,0.266,46,0.887,48,0.097,59,0.004,60,0.004,76,1.738,83,1.257,84,0.976,152,1.262,153,1.735,155,2.568,162,3.025,173,4.185,174,2.405,186,1.516,188,2.01,191,2.212,217,1.316,219,2.383,309,3.147,310,4.453,312,3.426,451,2.01,455,4.24,456,5.168,457,4.928,459,4.827,502,4.458,545,3.254,546,5.911,625,4.928,626,4.677,627,6.301,628,6.301,629,6.301,630,5.222,631,5.817,632,5.222,633,5.817,634,5.222,635,5.817,636,5.222,637,3.557,638,3.658,639,6.579,640,4.677,641,6.301,642,7.624,643,3.836,644,4.677,645,7.125,646,4.318,647,3.885]],["title/classes/CourseScope.html",[0,0.147,639,4.154]],["body/classes/CourseScope.html",[0,0.205,2,1.013,3,0.103,4,0.085,5,0.063,8,1.674,10,0.246,11,0.871,12,1.813,17,0.337,18,1.192,24,0.763,26,0.979,27,0.005,28,0.597,29,0.597,32,3.005,41,1.16,44,0.265,46,0.884,48,0.097,59,0.004,60,0.004,76,1.737,83,1.256,84,0.972,152,1.259,155,2.116,162,2.877,173,4.084,174,2.087,186,1.511,188,2.004,191,2.208,217,1.312,219,2.376,247,1.489,248,1.533,310,3.673,312,2.535,325,2.426,409,2.657,451,2.004,455,4.231,456,5.157,457,4.918,459,4.821,502,4.454,545,3.244,546,5.906,625,3.647,626,4.662,631,4.305,633,4.305,635,4.305,637,4.179,638,3.647,639,7.34,640,6.287,641,6.287,642,7.614,643,3.824,644,4.662,645,7.114,646,4.305,647,4.051,648,5.157,649,5.157,650,7.02,651,5.157,652,3.647,653,4.038,654,5.13,655,4.038,656,5.205,657,3.824,658,4.918,659,4.038]],["title/classes/CreateNewsParams.html",[0,0.147,660,3.691]],["body/classes/CreateNewsParams.html",[0,0.211,2,1.059,3,0.107,4,0.089,5,0.065,10,0.257,11,0.897,16,3.242,17,0.357,24,0.809,27,0.005,29,0.615,36,1.069,44,0.254,48,0.101,59,0.004,60,0.004,64,2.786,76,0.963,163,3.956,164,4.048,165,4.895,171,3.882,172,2.309,187,3.28,209,1.633,211,2.302,243,2.13,550,3.811,551,4.034,552,4.388,553,4.36,580,2.712,660,5.313,661,8.296,662,4.5,663,3.169,664,5.609,665,3.987,666,6.477,667,4.874,668,5.441,669,5.609,670,4.358,671,5.609,672,5.313,673,5.609,674,4.67,675,5.066,676,5.441,677,5.441,678,4.358,679,4.358,680,5.216,681,5.441,682,5.441,683,5.967,684,5.609,685,4.358,686,5.441,687,5.441,688,4.388,689,4.224,690,2.294,691,6.477,692,5.313,693,6.988,694,3.086,695,3.812,696,3.086]],["title/controllers/DashboardController.html",[697,2.246,698,4.154]],["body/controllers/DashboardController.html",[0,0.152,3,0.103,4,0.085,5,0.063,10,0.246,12,1.816,17,0.338,18,1.193,24,0.713,26,0.98,27,0.005,28,0.598,29,0.598,31,2.775,36,1.019,41,1.313,44,0.292,46,0.885,48,0.097,59,0.004,60,0.004,76,1.619,83,1.174,155,2.567,174,2.404,188,2.007,189,2.483,191,2.21,211,2.031,647,2.379,663,4.097,690,2.198,697,2.331,698,5.811,699,2.539,700,5.213,701,3.249,702,4.566,703,8.506,704,7.12,705,7.949,706,4.67,707,6.222,708,5.213,709,5.213,710,5.344,711,6.598,712,5.213,713,5.213,714,7.619,715,5.213,716,4.342,717,4.342,718,7.035,719,7.027,720,5.213,721,4.312,722,5.84,723,3.83,724,7.12,725,3.5,726,3.83,727,5.569,728,3.367,729,5.84,730,4.67,731,4.312,732,5.213,733,5.213,734,3.83,735,5.213,736,5.213,737,4.044,738,7.949,739,5.213,740,6.294,741,4.379,742,2.799,743,5.213,744,5.213,745,5.213,746,5.213,747,5.213,748,5.213,749,4.67]],["title/classes/DashboardEntity.html",[0,0.147,750,2.934]],["body/classes/DashboardEntity.html",[0,0.182,2,0.537,3,0.054,4,0.045,5,0.033,10,0.295,11,0.545,16,3.122,17,0.368,18,0.746,21,0.607,24,0.801,26,1.103,27,0.005,28,0.673,29,0.673,31,2.854,36,1.06,41,1.346,44,0.137,46,0.469,48,0.159,59,0.002,60,0.002,76,1.628,83,1.406,84,1.477,87,0.482,162,2.625,201,2.668,209,2.016,234,1.045,248,1.295,261,2.141,286,1.027,325,3.55,394,4.242,409,2.85,462,2.309,502,1.345,557,2.536,593,2.796,596,2.65,601,1.566,704,3.938,716,3.187,717,3.187,750,2.568,751,1.854,752,4.024,753,4.004,754,4.588,755,4.396,756,4.375,757,5.336,758,4.396,759,4.396,760,4.396,761,4.396,762,4.396,763,3.537,764,4.375,765,2.761,766,2.761,767,3.301,768,2.761,769,2.761,770,2.761,771,3.23,772,5.914,773,2.761,774,4.736,775,5.914,776,2.761,777,4.377,778,2.761,779,3.23,780,5.914,781,2.761,782,3.23,783,2.761,784,3.764,785,3.23,786,2.761,787,4.878,788,3.23,789,2.761,790,3.23,791,2.761,792,3.23,793,2.761,794,1.783,795,1.935,796,2.029,797,3.08,798,2.839,799,3.08,800,4.375,801,4.033,802,4.591,803,5.724,804,3.23,805,1.721,806,2.36,807,1.783,808,2.029,809,1.783,810,4.493,811,2.029,812,1.854,813,2.029,814,4.92,815,3.23,816,3.23,817,2.568,818,3.23,819,2.029,820,3.08,821,3.23,822,3.23,823,3.23,824,2.029,825,3.23,826,2.029,827,3.759,828,4.658,829,3.23,830,3.23,831,2.029,832,2.029,833,2.029,834,2.029,835,2.029,836,3.23,837,2.029,838,1.187,839,3.23,840,1.935,841,3.23,842,2.029,843,3.23,844,2.029,845,2.029,846,1.345,847,2.029,848,1.854,849,2.029,850,3.08,851,5.009,852,3.08,853,3.23,854,2.029,855,1.664,856,2.029,857,2.029,858,2.029,859,2.029,860,2.029,861,2.029,862,2.029,863,2.141,864,2.029,865,2.029,866,2.029,867,3.23,868,2.029,869,4.024,870,2.029,871,3.23,872,2.029,873,2.029,874,3.23,875,2.65,876,3.23,877,2.029,878,2.029,879,2.029,880,2.029,881,2.029,882,2.029,883,2.029,884,4.024,885,2.029,886,2.029]],["title/classes/DashboardGridElementModel.html",[0,0.147,887,3.519]],["body/classes/DashboardGridElementModel.html",[0,0.221,2,0.924,3,0.094,4,0.078,5,0.057,8,1.951,10,0.224,11,0.818,16,2.943,17,0.369,21,1.044,24,0.858,26,0.662,27,0.005,28,0.404,29,0.404,31,2.481,32,3.095,36,1.065,44,0.236,48,0.141,50,2.596,57,2.313,59,0.003,60,0.003,84,1.606,172,1.924,173,2.041,208,2.779,209,2.06,210,2.629,211,2.413,212,2.123,214,2.123,216,3.385,217,1.661,218,1.462,219,2.167,222,3.573,232,1.797,242,2.583,243,1.942,245,2.629,247,2.167,248,2.23,251,2.262,252,1.553,263,2.313,264,2.313,265,2.313,266,2.313,267,2.041,275,3.043,279,2.865,379,2.367,453,2.774,471,3.962,486,3.489,501,3.456,502,2.313,550,1.797,702,4.613,763,5.283,810,4.739,814,4.89,828,4.391,887,4.619,888,3.927,889,6.262,890,6.262,891,4.749,892,6.765,893,5.452,894,6.262,895,4.749,896,5.452,897,4.749,898,4.749,899,4.749,900,4.749,901,3.489,902,3.927,903,3.927,904,3.327,905,6.262,906,6.262,907,3.927,908,3.927,909,2.367,910,2.959,911,3.067,912,3.489,913,3.067,914,3.927,915,3.927,916,2.959,917,3.684,918,3.489,919,2.619,920,3.927,921,3.684,922,3.067,923,3.927,924,3.327,925,3.927]],["title/classes/DashboardGridElementResponse.html",[0,0.147,926,3.691]],["body/classes/DashboardGridElementResponse.html",[0,0.229,2,0.988,3,0.1,4,0.083,5,0.061,10,0.24,11,0.856,16,3.486,17,0.38,24,0.834,27,0.005,31,2.553,36,1.105,44,0.159,48,0.146,59,0.004,60,0.004,64,2.896,172,1.195,178,4.448,209,2.164,211,2.373,252,1.661,453,4.582,567,3.165,678,5.072,679,5.072,688,4.859,690,2.141,696,4.773,702,3.706,707,3.559,716,3.524,717,3.524,753,5.552,774,4.773,787,5.882,801,5.435,802,5.072,827,3.807,924,3.559,926,6.183,927,4.201,928,6.487,929,6.487,930,6.487,931,6.361,932,5.079,933,6.528,934,3.732,935,5.71,936,5.079,937,5.079,938,6.487,939,5.079,940,5.079,941,5.079,942,5.079,943,3.41]],["title/classes/DashboardGridSubElementResponse.html",[0,0.147,933,3.897]],["body/classes/DashboardGridSubElementResponse.html",[0,0.237,2,1.057,3,0.107,4,0.089,5,0.065,10,0.257,11,0.896,16,3.53,17,0.367,24,0.776,27,0.005,31,2.191,36,1.116,44,0.17,48,0.151,59,0.004,60,0.004,64,2.908,172,1.278,178,4.096,209,2.194,211,2.21,453,4.74,567,3.385,678,5.213,679,5.213,688,4.904,690,2.29,696,4.905,702,3.878,707,3.806,716,2.773,717,2.773,753,5.551,774,4.096,787,5.881,801,5.586,802,5.213,827,2.996,924,3.806,926,5.962,927,4.493,928,4.493,929,4.493,930,4.493,931,6.06,933,6.709,935,4.493,938,6.711,943,3.647,944,5.433,945,5.433,946,5.433,947,5.433]],["title/classes/DashboardMapper.html",[0,0.147,731,4.154]],["body/classes/DashboardMapper.html",[0,0.19,2,1.264,3,0.128,4,0.106,5,0.078,10,0.307,17,0.258,18,1.376,24,0.583,26,0.906,27,0.005,28,0.552,29,0.552,41,1.073,44,0.253,48,0.121,59,0.004,60,0.004,76,1.637,83,1.197,84,1.514,186,1.885,557,3.588,663,3.551,702,3.486,707,6.481,731,6.702,750,5.403,784,3.914,850,4.55,852,4.55,926,5.954,948,6.494,949,5.441,950,8.104,951,6.494,952,4.36,953,4.36,954,6.494,955,6.494,956,6.494,957,8.104,958,6.494,959,6.494,960,2.737,961,6.494,962,6.494,963,6.494,964,6.494,965,6.494,966,6.494,967,6.494,968,8.104,969,6.494,970,5.816,971,6.494,972,6.494]],["title/classes/DashboardModelEntity.html",[0,0.147,922,3.244]],["body/classes/DashboardModelEntity.html",[0,0.228,2,0.984,3,0.1,4,0.083,5,0.061,8,2.003,10,0.239,11,0.854,16,2.477,17,0.333,21,1.111,24,0.814,26,0.705,27,0.005,28,0.43,29,0.43,31,2.088,32,3.179,36,1.066,44,0.244,48,0.146,50,2.682,57,2.463,59,0.004,60,0.004,84,1.642,172,1.976,173,2.173,208,2.901,209,2.095,210,2.745,211,2.245,212,2.261,214,2.261,216,3.284,217,1.735,218,1.557,219,2.308,222,3.622,232,1.913,242,2.697,243,2.027,245,2.745,247,2.239,248,2.305,251,2.408,252,1.654,263,2.463,264,2.463,265,2.463,266,2.463,267,2.173,275,3.125,279,2.604,453,2.954,471,4.094,486,3.715,501,3.571,502,2.463,550,1.913,702,4.509,763,5.425,810,4.315,814,5.054,828,4.201,887,3.543,888,4.182,889,4.182,890,4.182,892,6.471,893,4.182,894,5.692,896,4.182,901,3.715,902,4.182,903,4.182,904,3.543,905,6.471,906,6.471,907,4.182,908,4.182,909,2.52,910,3.151,911,3.266,912,3.715,913,3.266,914,4.182,915,4.182,916,3.151,917,3.922,918,3.715,919,2.788,920,4.182,921,3.922,922,4.445,923,5.692,924,5.482,925,4.182,973,5.056,974,5.056]],["title/classes/DashboardModelMapper.html",[0,0.147,975,3.897]],["body/classes/DashboardModelMapper.html",[0,0.111,2,0.738,3,0.075,4,0.062,5,0.046,10,0.179,17,0.339,18,0.953,24,0.766,26,1.19,27,0.005,28,0.726,29,0.726,41,1.409,44,0.209,48,0.071,59,0.003,60,0.003,76,1.685,83,1.321,84,1.637,155,2.605,172,1.32,174,2.455,186,1.101,191,2.53,217,0.956,218,1.168,275,1.411,301,2.216,305,1.985,310,4.938,312,4.675,409,2.087,557,4.024,593,2.864,702,3.585,716,1.937,717,1.937,750,4.311,753,3.094,756,2.658,775,4.955,777,4.747,784,2.287,787,4.311,803,4.955,805,4.162,807,2.45,810,4.069,828,4.228,838,1.63,840,2.658,863,3.595,887,6.138,904,5.171,911,2.45,922,5.511,943,2.547,970,5.982,975,4.353,976,3.794,977,6.679,978,5.612,979,6.679,980,5.612,981,6.679,982,5.612,983,5.612,984,3.794,985,3.794,986,5.612,987,3.794,988,6.82,989,3.794,990,3.794,991,5.612,992,3.794,993,3.794,994,3.794,995,5.612,996,3.794,997,5.612,998,3.794,999,3.398,1000,3.138,1001,3.794,1002,5.612,1003,3.794,1004,3.794,1005,3.794,1006,3.794,1007,3.794,1008,3.794,1009,3.794,1010,3.794,1011,3.794,1012,3.794,1013,2.943,1014,3.794,1015,4.907,1016,3.794,1017,2.788,1018,3.794,1019,3.794,1020,3.794,1021,2.943,1022,3.794,1023,2.943,1024,5.612,1025,3.794,1026,3.794,1027,3.794,1028,3.794,1029,3.794,1030,3.794,1031,3.794,1032,3.794,1033,3.794,1034,3.794,1035,3.962,1036,3.794,1037,3.794,1038,3.794,1039,6.679,1040,3.794,1041,3.794,1042,3.794,1043,3.794,1044,3.794,1045,3.794,1046,3.794,1047,3.794,1048,3.794,1049,3.794,1050,3.794,1051,3.794,1052,3.794,1053,3.794,1054,3.794,1055,3.794,1056,3.794,1057,5.612,1058,3.794,1059,3.794,1060,3.794,1061,3.794]],["title/injectables/DashboardRepo.html",[152,0.901,1062,3.691]],["body/injectables/DashboardRepo.html",[0,0.183,3,0.087,4,0.072,5,0.053,10,0.209,12,1.539,17,0.314,18,1.064,21,0.971,24,0.751,26,1.105,27,0.005,28,0.674,29,0.674,41,1.309,44,0.261,46,0.75,48,0.117,57,2.152,59,0.003,60,0.003,76,1.667,83,1.284,84,1.798,87,0.484,152,1.124,153,1.468,155,2.564,162,2.576,172,1.474,174,2.504,186,1.282,191,2.485,209,1.415,210,1.762,217,1.113,219,2.016,232,1.672,278,2.255,298,2.966,301,3.66,304,4.39,309,2.663,310,4.146,312,3.052,314,4.39,321,5.102,332,3.654,702,4.665,716,4.271,717,4.271,750,5.335,753,2.436,777,3.777,784,5.043,805,2.753,806,2.372,817,2.581,828,4.665,846,4.075,922,2.853,975,3.427,988,5.182,1000,3.654,1062,4.604,1063,3.654,1064,5.613,1065,6.92,1066,4.418,1067,6.523,1068,4.418,1069,4.418,1070,4.418,1071,4.418,1072,3.957,1073,5.182,1074,3.654,1075,5.182,1076,5.182,1077,6.92,1078,4.207,1079,6.554,1080,7.957,1081,7.392,1082,3.654,1083,4.207,1084,3.654,1085,3.654,1086,3.654,1087,3.654,1088,3.654,1089,3.654,1090,3.654,1091,3.654,1092,3.654,1093,4.861,1094,3.654,1095,5.613,1096,5.613,1097,3.957,1098,5.613,1099,3.957,1100,6.523,1101,3.957,1102,5.613,1103,3.957,1104,3.957]],["title/classes/DashboardResponse.html",[0,0.147,707,3.519]],["body/classes/DashboardResponse.html",[0,0.242,2,1.1,3,0.111,4,0.093,5,0.068,10,0.267,11,0.92,16,3.368,17,0.349,24,0.666,27,0.005,31,2.249,36,1.1,44,0.176,48,0.154,59,0.004,60,0.004,64,2.938,172,1.744,178,4.693,209,2.211,211,1.895,252,1.849,453,4.331,567,4.62,678,5.295,679,5.295,688,4.929,690,2.383,696,4.982,702,4.716,707,5.195,716,2.885,717,2.885,753,5.448,774,4.205,787,5.771,801,4.789,802,4.469,827,3.117,924,5.798,926,6.454,927,4.674,928,4.674,929,4.674,930,4.674,931,3.96,933,6.419,934,4.153,935,4.674,938,6.132,943,4.978,1105,5.652,1106,5.652]],["title/injectables/DashboardUc.html",[152,0.901,729,3.691]],["body/injectables/DashboardUc.html",[0,0.168,3,0.114,4,0.094,5,0.069,10,0.272,12,2.006,17,0.331,18,1.275,21,1.266,24,0.794,26,1.165,27,0.005,28,0.71,29,0.71,36,0.93,41,1.379,44,0.261,46,0.978,48,0.107,59,0.004,60,0.004,76,1.565,83,1.233,152,1.346,153,1.913,155,2.618,162,2.95,174,2.472,186,1.672,191,2.551,409,1.8,702,5.051,710,4.878,714,7.925,729,5.515,741,3.588,742,3.091,750,3.364,772,5.941,774,4.736,780,6.434,828,3.091,1062,5.515,1065,7.318,1093,6.864,1107,5.759,1108,8.351,1109,8.351,1110,5.759,1111,5.759,1112,5.759,1113,5.759,1114,5.759,1115,5.759,1116,5.759,1117,3.471,1118,5.158,1119,5.759,1120,5.759,1121,7.506,1122,5.759,1123,7.506,1124,5.759,1125,5.759]],["title/classes/DatabaseManagementConsole.html",[0,0.147,1126,3.897]],["body/classes/DatabaseManagementConsole.html",[0,0.145,2,0.964,3,0.098,4,0.081,5,0.06,10,0.234,17,0.307,18,1.152,21,1.088,24,0.695,26,1.08,27,0.005,28,0.659,29,0.709,36,0.551,41,1.121,44,0.242,48,0.168,59,0.003,60,0.003,64,2.727,76,1.632,83,1.002,87,0.543,122,3.097,155,2.401,174,2.188,188,1.906,191,1.887,211,1.734,252,2.853,261,1.698,275,2.88,276,2.359,279,1.874,282,3.461,402,5.378,404,3.638,406,4.47,407,4.095,409,1.547,417,2.26,960,2.86,1035,2.658,1126,5.264,1127,7.459,1128,4.436,1129,6.078,1130,6.786,1131,4.436,1132,5.958,1133,4.952,1134,5.612,1135,6.078,1136,4.813,1137,5.612,1138,4.49,1139,6.155,1140,6.118,1141,4.952,1142,6.078,1143,5.834,1144,4.952,1145,6.049,1146,4.095,1147,3.841,1148,3.841,1149,4.999,1150,3.742,1151,6.934,1152,4.986,1153,4.522,1154,4.722,1155,3.848,1156,6.078,1157,6.078,1158,4.436,1159,5.264,1160,6.078,1161,6.078,1162,4.095,1163,3.086,1164,5.264,1165,4.436,1166,4.436]],["title/controllers/DatabaseManagementController.html",[697,2.246,1167,4.154]],["body/controllers/DatabaseManagementController.html",[0,0.171,3,0.115,4,0.096,5,0.07,10,0.276,17,0.301,18,1.287,24,0.799,26,1.058,27,0.005,28,0.645,29,0.645,36,1.052,41,1.47,44,0.237,46,0.993,48,0.109,59,0.004,60,0.004,76,1.575,83,1.315,155,2.683,174,2.562,188,2.252,189,2.786,191,2.475,211,2.274,697,2.615,699,2.849,701,3.645,863,4.748,1129,7.973,1132,5.434,1147,4.537,1148,4.537,1167,6.271,1168,9.222,1169,5.849,1170,5.849,1171,7.582,1172,6.791,1173,8.901,1174,5.849,1175,7.582,1176,5.849,1177,6.904,1178,7.582,1179,5.849,1180,5.239,1181,7.582,1182,5.849,1183,7.582,1184,5.849,1185,4.297,1186,5.849,1187,5.849,1188,5.849,1189,5.849,1190,5.849,1191,5.849,1192,5.849]],["title/modules/DatabaseManagementModule.html",[111,1.302,1193,3.691]],["body/modules/DatabaseManagementModule.html",[0,0.21,3,0.142,4,0.118,5,0.087,27,0.005,44,0.27,46,1.223,48,0.134,59,0.004,60,0.004,111,2.237,113,2.773,114,3.711,121,4.304,122,3.288,123,3.037,126,3.784,147,4.113,1138,3.591,1193,7.393,1194,6.453,1195,6.453,1196,6.453,1197,6.947,1198,6.453,1199,7.204,1200,7.204]],["title/injectables/DatabaseManagementService.html",[152,0.901,1197,3.373]],["body/injectables/DatabaseManagementService.html",[0,0.127,3,0.086,4,0.072,5,0.053,10,0.206,17,0.361,18,1.055,21,0.96,24,0.843,26,1.27,27,0.005,28,0.788,29,0.775,36,1.125,41,1.504,44,0.226,46,0.741,48,0.081,59,0.003,60,0.003,76,1.682,83,1.345,152,1.115,153,1.45,155,2.684,174,2.563,188,1.681,191,2.476,217,1.1,219,1.993,275,3.387,279,2.738,309,2.631,310,4.124,312,3.027,350,4.354,363,4.673,365,5.612,409,2.463,838,3.109,863,3.027,1139,4.013,1172,5.566,1177,6.909,1180,5.566,1197,4.172,1198,8.515,1201,4.366,1202,6.214,1203,5.139,1204,6.214,1205,6.214,1206,6.214,1207,7.883,1208,6.214,1209,4.566,1210,5.38,1211,4.366,1212,6.214,1213,4.366,1214,6.214,1215,4.366,1216,6.214,1217,4.366,1218,6.214,1219,4.366,1220,6.214,1221,4.366,1222,4.366,1223,6.214,1224,4.366,1225,4.366,1226,4.366,1227,4.366,1228,2.82,1229,4.366,1230,4.366,1231,7.235,1232,4.366,1233,6.214,1234,4.366,1235,4.366,1236,4.366,1237,4.366,1238,6.214,1239,4.366,1240,4.366,1241,4.366,1242,4.366,1243,6.214,1244,4.366,1245,4.366,1246,4.366,1247,4.366,1248,4.366,1249,4.366]],["title/injectables/DatabaseManagementUc.html",[152,0.901,1132,3.244]],["body/injectables/DatabaseManagementUc.html",[0,0.072,3,0.048,4,0.124,5,0.097,10,0.116,11,0.496,17,0.3,18,0.679,21,0.879,24,0.754,26,1.013,27,0.005,28,0.715,29,0.727,31,1.213,36,1.057,41,1.433,44,0.227,46,0.417,48,0.119,54,1.144,59,0.003,60,0.002,64,1.161,76,1.687,83,1.189,84,0.945,87,0.269,126,1.752,147,1.904,152,0.717,153,0.815,155,2.342,174,1.989,178,3.308,189,3.059,191,2.472,201,1.196,233,1.284,243,1.49,247,0.702,248,0.723,252,0.803,261,2.36,275,3.402,276,3.923,279,0.929,301,1.434,343,5.086,345,2.03,346,2.03,350,5.086,352,3.916,354,1.648,356,3.307,357,1.479,362,5.631,363,2.582,365,3.924,368,2.685,379,3.201,409,2.918,413,4.623,436,4.285,485,2.41,593,2.041,674,1.585,680,3.515,838,1.055,846,1.196,960,3.299,1015,2.938,1035,4.202,1132,2.582,1138,4.26,1139,5.802,1140,5.059,1143,5.086,1149,2.582,1150,2.789,1154,3.642,1163,4.877,1164,5.341,1177,5.871,1197,4.874,1203,3.307,1209,2.938,1250,7.378,1251,2.199,1252,4.531,1253,3.998,1254,5.224,1255,3.998,1256,3.998,1257,3.998,1258,4.531,1259,3.998,1260,5.224,1261,2.455,1262,4.824,1263,3.998,1264,3.581,1265,2.455,1266,4.086,1267,5.224,1268,4.824,1269,5.32,1270,5.311,1271,2.455,1272,3.581,1273,3.581,1274,2.455,1275,4.561,1276,2.801,1277,3.581,1278,2.455,1279,5.224,1280,3.102,1281,4.824,1282,6.503,1283,3.581,1284,2.455,1285,5.752,1286,2.455,1287,5.752,1288,2.455,1289,3.581,1290,3.307,1291,2.938,1292,4.824,1293,3.581,1294,2.455,1295,3.581,1296,3.581,1297,3.634,1298,3.102,1299,2.455,1300,2.455,1301,3.307,1302,1.904,1303,1.904,1304,2.03,1305,1.53,1306,2.03,1307,2.03,1308,5.311,1309,5.311,1310,3.307,1311,2.199,1312,2.199,1313,3.581,1314,3.581,1315,3.581,1316,2.199,1317,2.199,1318,2.199,1319,2.199,1320,5.224,1321,2.199,1322,2.199,1323,2.199,1324,1.904,1325,2.199,1326,2.199,1327,2.199,1328,2.03,1329,2.199,1330,5.224,1331,3.717,1332,2.336,1333,2.199,1334,2.199,1335,1.479,1336,1.585,1337,2.199,1338,3.581,1339,3.581,1340,2.199,1341,2.199,1342,2.199,1343,1.392,1344,3.581,1345,2.03,1346,2.199,1347,2.199,1348,3.102,1349,3.581,1350,2.199,1351,3.581,1352,3.581,1353,2.199,1354,2.199,1355,2.205,1356,2.199,1357,2.199,1358,1.904,1359,2.199,1360,1.72,1361,1.904,1362,1.648,1363,1.479,1364,2.199,1365,2.03,1366,1.648,1367,2.199,1368,2.199,1369,2.199,1370,2.199,1371,2.199,1372,2.582,1373,2.199,1374,2.199,1375,2.199,1376,2.199,1377,2.199,1378,3.581,1379,2.199,1380,2.199,1381,2.199,1382,2.03,1383,1.392,1384,1.648,1385,2.199,1386,2.199,1387,2.199,1388,2.199,1389,2.938,1390,2.199,1391,3.102,1392,2.199,1393,2.199,1394,2.199,1395,2.199]],["title/classes/DefaultGridReference.html",[0,0.147,805,3.13]],["body/classes/DefaultGridReference.html",[0,0.195,2,0.605,3,0.061,4,0.051,5,0.037,10,0.279,11,0.598,16,3.359,17,0.343,18,0.819,21,0.683,24,0.648,26,0.434,27,0.005,28,0.265,29,0.265,31,2.807,36,1.092,41,0.514,44,0.151,46,0.528,48,0.164,59,0.002,60,0.002,76,1.665,83,1.431,84,1.539,87,0.529,162,2.788,201,2.881,209,2.069,234,1.176,248,1.421,261,2.285,286,1.157,325,3.56,394,4.461,409,2.386,462,1.311,502,1.514,557,2.707,593,3.019,596,2.908,601,1.763,716,3.402,717,3.402,750,1.816,751,2.087,752,2.284,753,3.676,754,3.546,756,2.178,757,4.345,763,3.82,764,3.381,767,2.908,771,2.284,772,5.127,774,4.092,775,5.53,777,4.018,779,2.284,780,4.845,782,2.284,784,3.565,785,2.284,787,4.941,788,2.284,790,2.284,792,2.284,794,2.008,795,2.178,796,2.284,797,3.381,798,3.117,799,3.381,800,5.056,801,4.305,802,5.305,803,6.001,804,5.302,805,3.007,806,3.175,807,2.008,808,2.284,809,2.008,810,4.664,811,2.284,812,2.087,813,2.284,814,5.146,815,3.546,816,3.546,817,2.819,818,3.546,819,2.284,820,3.381,821,3.546,822,3.546,823,3.546,824,2.284,825,3.546,826,2.284,827,3.979,828,4.798,829,3.546,830,3.546,831,2.284,832,2.284,833,2.284,834,2.284,835,2.284,836,3.546,837,2.284,838,1.336,839,3.546,840,2.178,841,3.546,842,2.284,843,3.546,844,2.284,845,2.284,846,1.514,847,2.284,848,2.087,849,2.284,850,3.381,851,5.302,852,3.381,853,3.546,854,2.284,855,1.874,856,2.284,857,2.284,858,2.284,859,2.284,860,2.284,861,2.284,862,2.284,863,2.35,864,2.284,865,2.284,866,2.284,867,3.546,868,2.284,869,4.345,870,2.284,871,3.546,872,2.284,873,2.284,874,3.546,875,2.908,876,3.546,877,2.284,878,2.284,879,2.284,880,2.284,881,2.284,882,2.284,883,2.284,884,4.345,885,2.284,886,2.284,1396,4.826,1397,3.109,1398,3.109,1399,3.109]],["title/classes/DefaultGridReferenceModel.html",[0,0.147,904,3.519]],["body/classes/DefaultGridReferenceModel.html",[0,0.226,2,0.961,3,0.097,4,0.081,5,0.059,8,1.984,10,0.233,11,0.84,16,2.993,17,0.357,21,1.085,24,0.843,26,0.689,27,0.005,28,0.42,29,0.42,31,2.054,32,3.147,36,1.083,44,0.241,48,0.144,50,2.65,57,2.405,59,0.003,60,0.003,84,1.554,172,1.957,173,2.122,208,2.855,209,2.082,210,2.701,211,2.355,212,2.208,214,2.208,216,3.371,217,1.707,218,1.52,219,2.253,222,3.604,232,1.868,242,2.653,243,1.995,245,2.701,247,1.938,248,1.995,251,2.352,252,1.615,263,2.405,264,2.405,265,2.405,266,2.405,267,2.122,275,2.875,279,2.925,453,4.515,471,3.543,486,3.628,501,3.527,502,2.405,550,1.868,702,4.149,763,5.371,810,4.262,814,4.992,828,4.678,887,3.459,888,4.083,889,4.083,890,4.083,892,6.878,893,4.083,894,6.392,896,4.083,901,3.628,902,4.083,903,4.083,904,4.745,905,6.392,906,6.392,907,4.083,908,4.083,909,2.461,910,3.077,911,3.189,912,3.628,913,3.189,914,5.6,915,4.083,916,3.077,917,3.83,918,3.628,919,2.722,920,4.083,921,3.83,922,3.189,923,4.083,924,3.459,925,4.083,1400,4.937,1401,4.937,1402,4.937,1403,4.937]],["title/controllers/DelayController.html",[697,2.246,1404,4.154]],["body/controllers/DelayController.html",[0,0.191,3,0.129,4,0.107,5,0.079,10,0.309,18,1.383,24,0.587,27,0.005,41,1.081,44,0.277,46,1.111,48,0.122,52,3.117,59,0.004,60,0.004,76,1.441,83,1.203,84,1.223,125,2.707,155,2.362,174,2.329,191,1.819,211,1.672,247,2.33,443,5.983,697,3.641,699,3.966,1404,7.331,1405,7.294,1406,5.862,1407,7.671,1408,6.544,1409,5.705,1410,4.759,1411,5.259,1412,4.757,1413,6.316,1414,5.412,1415,5.862,1416,4.227,1417,5.862,1418,6.734,1419,5.862,1420,5.862,1421,6.544,1422,5.076,1423,3.262,1424,5.862,1425,5.705,1426,5.076,1427,3.34,1428,4.394,1429,4.808]],["title/classes/DeleteFilesConsole.html",[0,0.147,1430,4.154]],["body/classes/DeleteFilesConsole.html",[0,0.174,2,1.158,3,0.117,4,0.098,5,0.092,10,0.281,11,0.951,17,0.337,18,1.302,21,1.308,24,0.762,26,1.07,27,0.005,28,0.652,29,0.652,31,2.573,41,0.983,44,0.265,48,0.111,59,0.004,60,0.004,64,2.463,76,1.053,84,1.433,155,2.261,174,2.015,188,2.292,191,1.655,211,1.521,243,1.753,276,4.268,305,4.439,406,4.81,409,2.651,417,2.717,494,6.278,1137,4.923,1145,6.016,1430,6.342,1431,8.96,1432,5.953,1433,5.384,1434,6.869,1435,5.953,1436,6.975,1437,7.669,1438,7.669,1439,7.851,1440,7.599,1441,8.026,1442,7.016,1443,8.484,1444,5.953,1445,8.484,1446,5.332,1447,3.588,1448,5.332,1449,5.953,1450,5.953,1451,5.332,1452,5.953,1453,5.953,1454,5.953,1455,5.332]],["title/injectables/DeleteFilesUc.html",[152,0.901,1436,3.691]],["body/injectables/DeleteFilesUc.html",[0,0.17,3,0.115,4,0.095,5,0.091,10,0.275,17,0.3,18,1.283,21,1.279,24,0.678,26,1.054,27,0.005,28,0.643,29,0.643,36,0.648,41,0.961,44,0.262,46,0.988,48,0.108,59,0.004,60,0.004,76,1.572,123,2.453,152,1.355,153,1.933,155,2.236,169,2.101,174,1.986,188,2.24,189,2.771,191,2.333,243,2.472,276,4.385,409,1.818,611,3.599,612,3.681,613,3.522,614,3.522,838,2.5,1433,5.448,1434,6.769,1436,5.552,1451,7.957,1456,8.392,1457,5.819,1458,5.819,1459,6.933,1460,5.819,1461,7.557,1462,5.819,1463,7.557,1464,7.347,1465,6.769,1466,5.819,1467,3.399,1468,5.819,1469,7.557,1470,5.819,1471,7.557,1472,5.819,1473,7.557,1474,6.94,1475,7.557,1476,5.212,1477,4.812,1478,4.077,1479,5.212,1480,5.819,1481,4.275,1482,5.212,1483,5.819,1484,5.819,1485,7.557,1486,4.513,1487,5.819,1488,4.077]],["title/classes/Directory.html",[0,0.147,281,3.13]],["body/classes/Directory.html",[0,0.233,2,1.021,3,0.103,4,0.086,5,0.085,8,2.034,10,0.248,11,0.875,17,0.372,24,0.841,27,0.005,29,0.726,32,3.544,36,0.991,44,0.266,48,0.148,50,1.798,59,0.004,60,0.004,84,1.318,87,0.575,169,2.371,172,2.006,208,2.975,209,1.594,210,2.092,211,2.393,212,2.345,214,2.345,216,3.451,217,1.322,218,1.615,222,3.468,242,2.765,243,2.621,245,2.814,247,2.019,248,2.078,251,2.499,252,1.716,254,6.288,255,4.069,256,4.25,257,5.975,258,6.615,261,2.419,263,2.555,264,2.555,265,2.555,266,2.555,267,2.254,268,2.131,269,5.047,270,4.069,271,2.615,272,5.185,273,4.944,274,4.738,275,2.966,276,3.798,277,3.162,278,3.602,279,2.67,280,4.397,281,4.397,282,3.155,283,4.069,284,2.211,285,4.069,286,1.952,287,4.069,288,4.069,289,4.069,290,4.069,291,4.069,292,4.069,293,4.069,294,4.069,295,4.069,296,4.069,297,3.269,1489,4.699,1490,4.699,1491,4.699]],["title/injectables/DurationLoggingInterceptor.html",[152,0.901,1492,4.499]],["body/injectables/DurationLoggingInterceptor.html",[0,0.186,3,0.126,4,0.104,5,0.077,10,0.301,11,0.993,12,3.05,17,0.253,18,1.36,24,0.719,26,0.889,27,0.005,28,0.542,29,0.542,41,1.052,44,0.287,46,1.082,48,0.118,59,0.004,60,0.004,64,1.849,76,1.127,83,0.941,84,1.496,152,1.436,153,2.116,247,1.823,248,1.876,409,2.736,440,5.376,613,4.082,674,4.114,806,3.42,1413,6.211,1425,5.61,1433,5.21,1492,7.172,1493,8.757,1494,6.37,1495,8.007,1496,6.211,1497,5.376,1498,7.172,1499,7.172,1500,7.126,1501,8.229,1502,6.37,1503,3.513,1504,7.844,1505,8.007,1506,6.37,1507,5.268,1508,6.37,1509,5.706,1510,5.268,1511,6.37,1512,8.007,1513,6.37,1514,6.37,1515,6.37]],["title/classes/EncryptedStringType.html",[0,0.147,1516,3.897]],["body/classes/EncryptedStringType.html",[0,0.152,2,1.016,3,0.103,4,0.086,5,0.063,8,1.678,10,0.247,11,0.872,17,0.382,18,1.194,21,1.148,24,0.764,26,1.11,27,0.005,28,0.677,29,0.677,36,1.133,41,1.162,44,0.248,48,0.097,50,1.79,59,0.004,60,0.004,64,1.516,76,1.245,83,1.352,84,1.314,217,1.316,218,1.607,232,1.976,248,2.696,252,2.994,379,2.602,409,2.486,420,2.543,838,3.023,1138,3.506,1372,4.543,1516,5.456,1517,5.222,1518,6.301,1519,6.301,1520,7.125,1521,6.603,1522,7.955,1523,7.034,1524,7.034,1525,7.034,1526,7.034,1527,7.034,1528,5.845,1529,7.034,1530,8.921,1531,5.222,1532,7.034,1533,5.222,1534,3.658,1535,3.372,1536,3.254,1537,4.05,1538,5.222,1539,5.222,1540,7.034,1541,5.222,1542,5.222,1543,7.034,1544,5.573,1545,5.138,1546,6.171,1547,7.034,1548,7.034,1549,5.222,1550,6.301,1551,7.034,1552,5.222]],["title/modules/EncryptionModule.html",[111,1.302,1553,3.897]],["body/modules/EncryptionModule.html",[0,0.204,3,0.138,4,0.114,5,0.084,17,0.277,18,1.185,24,0.626,26,0.974,27,0.005,28,0.594,29,0.594,36,0.777,41,1.153,44,0.264,46,1.185,48,0.158,59,0.004,60,0.004,83,1.031,87,0.765,111,2.363,113,2.687,125,2.887,147,3.324,557,3.441,1136,3.399,1427,3.562,1428,4.686,1528,6.702,1553,7.076,1554,6.252,1555,5.772,1556,6.224,1557,7.845,1558,6.979,1559,6.391,1560,6.252,1561,6.252,1562,6.252,1563,6.252]],["title/interfaces/EncryptionModuleOptions.html",[87,0.551,1557,4.154]],["body/interfaces/EncryptionModuleOptions.html",[0,0.207,3,0.14,4,0.116,5,0.085,10,0.334,11,1.06,17,0.281,27,0.005,36,1.022,44,0.267,46,1.203,48,0.159,59,0.004,60,0.004,83,1.046,87,0.776,89,2.086,111,2.379,125,2.93,147,3.373,557,2.876,1427,3.615,1428,4.755,1528,6.745,1553,6.63,1554,6.344,1556,5.204,1557,7.592,1559,5.988,1560,6.344,1561,8.538,1562,6.344,1563,6.344]],["title/modules/ErrorModule.html",[111,1.302,427,3.691]],["body/modules/ErrorModule.html",[0,0.209,3,0.141,4,0.118,5,0.086,27,0.005,44,0.288,46,1.218,48,0.133,59,0.004,60,0.004,64,2.082,111,2.232,113,2.762,125,2.967,184,5.563,247,2.464,417,3.931,427,6.328,442,5.031,446,7.426,1154,4.884,1416,4.633,1427,3.661,1564,7.173,1565,7.715,1566,5.367,1567,6.681,1568,7.173,1569,7.173,1570,5.564]],["title/classes/ErrorResponse.html",[0,0.147,43,3.13]],["body/classes/ErrorResponse.html",[0,0.191,2,1.276,3,0.129,4,0.107,5,0.079,12,3.233,13,4.236,15,5.183,16,3.193,17,0.379,21,1.792,24,0.589,26,0.915,27,0.005,28,0.558,29,0.558,31,2.691,36,1.12,43,5.08,44,0.205,45,5.086,46,1.113,48,0.122,54,4.136,59,0.004,60,0.004,64,2.367,65,5.957,66,4.623,67,5.265,68,4.495,391,5.873,485,4.914,1266,4.594,1571,6.557,1572,6.557,1573,6.557,1574,6.557,1575,5.873,1576,6.557,1577,4.235,1578,5.873,1579,4.086,1580,3.268,1581,4.086,1582,4.594]],["title/injectables/FeathersAuthProvider.html",[145,3.519,152,0.901]],["body/injectables/FeathersAuthProvider.html",[0,0.131,3,0.088,4,0.073,5,0.054,10,0.212,17,0.346,18,1.075,21,0.985,24,0.784,26,1.218,27,0.005,28,0.743,29,0.743,36,0.937,41,1.39,44,0.263,46,0.761,48,0.083,59,0.003,60,0.003,76,1.672,83,1.29,84,0.837,87,0.491,145,4.436,152,1.136,153,1.489,155,2.626,162,3.126,163,4.253,164,4.473,165,4.807,166,3.547,169,2.549,173,3.857,174,2.483,175,4.436,186,1.301,187,2.702,188,1.726,191,2.339,201,2.183,206,4.251,208,1.89,210,2.928,217,1.13,219,2.046,282,2.004,409,2.294,420,3.575,454,1.756,469,4.007,647,2.046,794,4.089,1409,4.436,1410,2.406,1583,8.975,1584,4.015,1585,6.331,1586,6.575,1587,6.331,1588,6.331,1589,6.575,1590,4.483,1591,5.863,1592,4.483,1593,6.331,1594,4.483,1595,4.015,1596,4.483,1597,6.331,1598,4.483,1599,6.331,1600,4.483,1601,4.483,1602,4.483,1603,4.483,1604,4.015,1605,6.331,1606,4.015,1607,6.331,1608,6.331,1609,4.483,1610,4.483,1611,4.483,1612,6.331,1613,6.331,1614,6.331,1615,4.483,1616,3.294,1617,4.483,1618,4.483,1619,4.483,1620,5.236,1621,4.015,1622,4.483,1623,4.483,1624,2.793]],["title/interfaces/FeathersError.html",[87,0.551,1625,3.691]],["body/interfaces/FeathersError.html",[3,0.145,4,0.12,5,0.088,8,2.084,10,0.347,11,1.083,13,4.404,17,0.401,27,0.005,31,2.828,36,1.113,48,0.137,54,4.072,59,0.004,60,0.004,87,0.805,89,2.164,1625,6.419,1626,7.346,1627,7.346,1628,8.643]],["title/modules/FeathersModule.html",[111,1.302,143,3.519]],["body/modules/FeathersModule.html",[0,0.195,3,0.132,4,0.11,5,0.08,27,0.005,44,0.258,46,1.136,48,0.124,59,0.004,60,0.004,64,1.941,111,2.422,113,3.446,114,3.546,121,4.113,122,3.052,123,2.819,125,3.414,143,6.943,147,3.931,150,4.805,420,4.02,421,4.318,1275,4.974,1412,4.821,1591,6.884,1604,5.99,1629,5.99,1630,5.99,1631,5.99,1632,6.688,1633,5.541,1634,4.821,1635,4.551,1636,4.43,1637,5.782,1638,5.782,1639,5.782,1640,5.782,1641,6.825]],["title/interfaces/FeathersService.html",[87,0.551,1642,4.154]],["body/interfaces/FeathersService.html",[0,0.151,3,0.102,4,0.085,5,0.062,10,0.245,17,0.337,18,1.188,24,0.711,26,0.976,27,0.005,28,0.595,29,0.595,34,4.903,36,0.577,41,1.156,44,0.277,46,0.88,48,0.158,57,2.524,59,0.004,60,0.004,67,3.346,76,1.238,83,0.765,84,0.968,87,0.568,89,1.526,111,1.342,113,1.995,150,4.253,152,1.255,162,2.612,174,2.229,186,1.504,189,3.774,201,2.524,209,1.58,239,3.123,374,3.488,379,3.488,409,1.619,420,4.624,421,2.711,611,3.333,612,3.408,613,3.262,614,3.262,615,3.408,616,4.088,637,3.129,710,5.334,909,4.229,1117,3.123,1275,3.123,1332,3.027,1412,5.176,1416,3.346,1591,3.479,1624,3.229,1633,3.479,1634,5.176,1635,2.857,1636,4.757,1637,3.63,1638,3.63,1639,3.63,1640,3.63,1641,4.285,1642,7.017,1643,6.553,1644,4.019,1645,7.6,1646,5.697,1647,6.268,1648,7.72,1649,5.181,1650,6.268,1651,5.181,1652,4.641,1653,3.346,1654,4.285,1655,5.428,1656,5.787,1657,4.285,1658,3.479,1659,4.641,1660,4.641,1661,4.641,1662,6.268,1663,4.641,1664,3.807,1665,4.519,1666,4.285,1667,3.479,1668,4.641,1669,4.641,1670,4.641,1671,4.019,1672,3.479,1673,4.641]],["title/injectables/FeathersServiceProvider.html",[152,0.901,1591,3.373]],["body/injectables/FeathersServiceProvider.html",[0,0.151,3,0.102,4,0.085,5,0.062,10,0.245,17,0.337,18,1.189,21,1.141,24,0.712,26,0.977,27,0.005,28,0.596,29,0.596,34,4.908,36,0.883,41,0.857,44,0.277,46,0.881,48,0.158,57,2.527,59,0.004,60,0.004,64,1.506,67,3.351,76,1.239,83,0.766,84,0.969,87,0.569,111,1.345,113,2.697,150,4.558,152,1.256,153,1.724,162,2.157,174,1.841,186,1.506,189,3.777,201,2.527,209,1.172,239,3.128,374,3.491,409,1.622,420,4.626,421,3.665,611,3.337,612,3.412,613,3.265,614,3.265,615,3.412,616,4.092,637,3.132,710,4.632,909,2.586,1117,3.128,1275,4.222,1297,3.234,1332,3.031,1412,4.959,1416,3.351,1591,4.703,1624,3.234,1633,4.703,1634,4.959,1635,3.862,1636,5.166,1637,4.908,1638,4.908,1639,4.908,1640,4.908,1641,5.793,1642,7.022,1643,6.558,1644,4.025,1645,6.274,1646,4.703,1647,4.648,1648,6.558,1650,4.648,1652,4.648,1653,3.351,1654,4.292,1655,5.434,1656,5.793,1657,4.292,1658,4.703,1659,4.648,1660,4.648,1661,6.274,1662,6.274,1663,4.648,1664,3.813,1665,4.524,1666,4.292,1667,3.484,1668,4.648,1669,4.648,1670,4.648,1671,4.025,1672,3.484,1673,4.648,1674,7.005,1675,5.189,1676,5.189,1677,5.189]],["title/classes/File.html",[0,0.147,5,0.06]],["body/classes/File.html",[0,0.225,2,0.955,3,0.097,4,0.08,5,0.093,8,1.979,10,0.232,11,0.836,17,0.386,21,1.079,24,0.872,26,0.685,27,0.005,28,0.418,29,0.74,32,3.483,36,1.025,44,0.259,48,0.143,50,1.683,59,0.003,60,0.003,84,1.26,87,0.538,169,2.307,172,1.952,208,2.843,209,1.523,210,1.958,211,2.459,212,2.195,214,2.195,216,3.469,217,1.237,218,1.511,222,3.4,242,2.642,243,2.561,245,2.69,247,1.93,248,1.987,251,2.338,252,1.606,254,6.179,255,3.808,256,4.135,257,5.813,258,6.435,261,2.312,263,2.391,264,2.391,265,2.391,266,2.391,267,2.109,268,1.993,269,5.316,270,3.808,271,2.446,272,6.096,273,5.813,274,5.57,275,2.867,276,3.67,277,2.958,278,3.443,279,2.552,280,4.203,281,3.059,282,3.016,283,5.232,284,2.843,285,5.232,286,2.509,287,3.808,288,3.808,289,3.808,290,3.808,291,3.808,292,3.808,293,3.808,294,3.808,295,3.808,296,3.808,297,3.059,462,2.069,1489,4.397,1490,4.397,1491,4.397,1678,6.745,1679,4.909,1680,4.909]],["title/injectables/FileStorageAdapter.html",[152,0.901,1681,3.691]],["body/injectables/FileStorageAdapter.html",[0,0.189,3,0.128,4,0.106,5,0.118,10,0.306,17,0.257,18,1.374,24,0.582,26,0.904,27,0.005,28,0.551,29,0.551,41,1.071,44,0.276,46,1.101,48,0.121,59,0.004,60,0.004,76,1.562,83,0.957,84,1.512,152,1.452,153,2.153,155,2.352,174,2.127,186,1.881,191,1.802,269,5.005,273,5.671,274,5.926,279,3.063,1681,5.947,1682,5.805,1683,7.25,1684,7.25,1685,6.481,1686,7.905,1687,8.094,1688,5.36,1689,6.481,1690,5.805,1691,4.039,1692,7.25,1693,5.36,1694,6.481,1695,6.481,1696,5.36,1697,6.481,1698,6.481,1699,6.481,1700,5.027,1701,6.481,1702,5.027,1703,6.481,1704,6.481,1705,6.481,1706,4.762,1707,6.481]],["title/injectables/FileSystemAdapter.html",[152,0.901,1262,3.519]],["body/injectables/FileSystemAdapter.html",[0,0.103,3,0.069,4,0.058,5,0.112,10,0.166,11,0.659,17,0.34,18,0.902,21,1.405,24,0.802,26,1.162,27,0.005,28,0.708,29,0.708,36,1.125,41,1.476,44,0.238,46,0.598,48,0.066,59,0.003,60,0.003,64,2.065,76,1.419,83,1.185,152,0.952,153,1.17,155,2.577,174,2.417,189,3.966,191,2.122,234,1.333,276,2.529,281,3.309,351,3.72,389,3.565,409,1.997,413,6.094,485,5.165,552,3.465,673,4.119,1021,2.733,1035,4.601,1140,3.902,1149,3.43,1163,5.731,1209,3.902,1262,3.72,1281,2.468,1297,5.949,1309,5.884,1310,7.088,1324,6.223,1335,5.165,1363,2.124,1366,4.777,1545,3.43,1708,7.507,1709,7.507,1710,3.156,1711,7.186,1712,5.31,1713,5.31,1714,5.31,1715,6.391,1716,6.391,1717,5.31,1718,6.391,1719,6.391,1720,5.31,1721,5.31,1722,3.523,1723,4.984,1724,5.31,1725,3.523,1726,4.119,1727,7.114,1728,7.633,1729,5.31,1730,5.31,1731,4.392,1732,3.565,1733,7.114,1734,8.57,1735,5.31,1736,3.523,1737,6.391,1738,3.523,1739,5.31,1740,4.119,1741,6.391,1742,3.523,1743,3.309,1744,6.391,1745,5.285,1746,7.114,1747,4.756,1748,5.31,1749,3.523,1750,5.31,1751,5.31,1752,4.119,1753,6.391,1754,3.523,1755,3.902,1756,3.309,1757,3.902,1758,5.31,1759,3.523,1760,3.523,1761,3.156,1762,4.756,1763,3.523,1764,3.523,1765,4.756,1766,3.523,1767,3.523,1768,3.523,1769,6.391,1770,3.523,1771,3.523,1772,3.523,1773,3.523,1774,3.523,1775,5.31,1776,3.523,1777,3.523,1778,2.589,1779,2.733,1780,3.523,1781,3.523,1782,3.523]],["title/modules/FileSystemModule.html",[111,1.302,1783,3.691]],["body/modules/FileSystemModule.html",[0,0.21,3,0.142,4,0.118,5,0.104,27,0.005,44,0.269,46,1.221,48,0.134,59,0.004,60,0.004,111,2.235,113,2.767,114,3.706,121,4.298,122,3.281,123,3.03,125,3.568,147,4.108,1262,7.248,1708,5.945,1709,5.945,1783,7.39,1784,6.439,1785,6.439,1786,6.439,1787,7.189,1788,7.189]],["title/modules/FilesModule.html",[111,1.302,1789,3.519]],["body/modules/FilesModule.html",[0,0.192,3,0.13,4,0.108,5,0.079,27,0.005,44,0.304,46,1.116,48,0.122,59,0.004,60,0.004,111,2.115,113,2.529,114,3.508,121,4.068,122,2.998,123,2.769,125,3.377,126,3.577,429,6.067,1430,6.751,1436,7.154,1447,3.96,1459,7.154,1467,3.838,1681,7.154,1789,7.219,1790,5.885,1791,6.57,1792,5.885,1793,7.553,1794,6.57,1795,5.885,1796,6.57,1797,6.57,1798,5.885]],["title/injectables/FilesRepo.html",[152,0.901,1459,3.691]],["body/injectables/FilesRepo.html",[0,0.131,3,0.089,4,0.074,5,0.108,8,1.513,10,0.212,11,0.787,12,1.566,17,0.383,18,1.077,21,0.988,24,0.873,26,1.334,27,0.005,28,0.813,29,0.813,32,3.529,41,1.579,44,0.263,46,0.763,48,0.084,59,0.003,60,0.003,76,1.301,83,0.664,152,1.138,153,1.493,155,2.641,172,1.879,174,2.451,181,3.889,186,1.305,188,1.73,191,2.22,217,1.133,219,2.051,243,2.165,247,1.286,248,1.324,254,5.362,257,3.149,269,3.597,276,3.021,298,6.48,300,5.702,301,3.705,302,4.921,303,4.921,304,4.444,305,3.319,306,4.921,307,4.921,308,4.921,310,4.178,312,3.58,314,3.149,315,6.713,317,3.487,319,3.487,321,3.149,323,3.487,325,2.957,326,3.487,328,3.487,330,3.487,1459,4.661,1681,6.421,1683,5.682,1684,5.682,1795,4.026,1799,4.495,1800,6.585,1801,6.343,1802,4.495,1803,4.495,1804,4.495,1805,6.343,1806,4.495,1807,6.343,1808,3.717,1809,3.717,1810,3.717,1811,3.717,1812,3.717,1813,3.717,1814,3.717,1815,3.717,1816,3.717,1817,4.495,1818,3.717,1819,4.026,1820,4.495,1821,6.343,1822,4.026,1823,4.495,1824,4.495,1825,4.495,1826,4.661,1827,4.495,1828,4.026,1829,4.495,1830,4.495]],["title/interfaces/GlobalConstants.html",[87,0.551,1831,4.154]],["body/interfaces/GlobalConstants.html",[3,0.139,4,0.115,5,0.085,10,0.332,11,1.056,17,0.363,27,0.005,29,0.809,36,1.133,44,0.22,48,0.131,59,0.004,60,0.004,76,1.506,87,0.771,89,2.073,1138,3.508,1831,7.571,1832,6.304,1833,8.056,1834,8.056,1835,8.056,1836,7.042,1837,7.038,1838,7.627,1839,5.171]],["title/classes/GlobalErrorFilter.html",[0,0.147,1567,3.897]],["body/classes/GlobalErrorFilter.html",[0,0.155,1,4.995,2,0.688,3,0.07,4,0.058,5,0.043,9,4.787,10,0.167,11,0.661,12,2.232,13,3.254,15,3.112,16,2.305,17,0.319,18,1.088,24,0.575,26,0.743,27,0.005,28,0.545,29,0.453,41,1.178,43,5.662,44,0.268,46,0.601,48,0.066,52,1.685,53,3.021,54,4.778,59,0.003,60,0.003,61,2.926,65,2.376,66,5.221,68,1.951,73,2.745,74,3.169,76,1.757,83,1.401,84,1.501,87,0.388,150,3.439,189,2.537,216,1.252,234,1.339,247,1.012,248,1.042,252,1.157,282,1.582,315,5.395,325,2.986,363,4.939,369,3.211,375,5.896,409,2.002,417,2.431,421,1.851,557,2.602,611,2.537,612,2.595,613,2.483,614,2.483,615,1.723,806,2.86,1017,2.6,1303,2.745,1348,2.745,1355,3.533,1433,4.866,1478,2.479,1481,5.618,1510,2.926,1566,4.765,1567,4.132,1625,5.238,1628,3.169,1635,1.951,1653,2.285,1691,3.992,1723,2.479,1826,6.127,1840,5.896,1841,2.745,1842,6.407,1843,5.739,1844,5.63,1845,5.327,1846,3.538,1847,5.327,1848,6.407,1849,7.13,1850,3.538,1851,6.407,1852,3.538,1853,3.538,1854,3.169,1855,3.538,1856,3.538,1857,3.169,1858,3.169,1859,3.169,1860,2.926,1861,2.6,1862,3.732,1863,3.169,1864,4.302,1865,2.376,1866,3.169,1867,3.169,1868,4.772,1869,3.169,1870,2.926,1871,3.169,1872,3.169,1873,3.169,1874,3.169,1875,3.169,1876,4.406,1877,3.538,1878,3.538,1879,4.406,1880,3.538,1881,3.538,1882,3.538,1883,4.406,1884,3.538,1885,3.538,1886,5.327,1887,3.538,1888,3.538,1889,4.772,1890,2.6,1891,3.169,1892,2.376,1893,2.285,1894,4.772,1895,2.926,1896,4.772,1897,3.169,1898,4.132,1899,3.169,1900,3.169,1901,2.926,1902,3.169,1903,3.169,1904,3.169,1905,2.745,1906,2.6,1907,2.745,1908,2.6,1909,3.169,1910,3.169,1911,3.169,1912,3.169,1913,6.849,1914,3.169,1915,6.849,1916,3.169,1917,2.926,1918,3.169,1919,3.538,1920,3.538,1921,3.538,1922,5.327,1923,3.538,1924,3.538]],["title/classes/GlobalValidationPipe.html",[0,0.147,1925,4.154]],["body/classes/GlobalValidationPipe.html",[0,0.252,1,4.332,2,1.203,3,0.122,4,0.101,5,0.074,8,1.874,11,0.767,17,0.343,21,1.898,23,5.773,24,0.555,27,0.005,44,0.245,46,1.05,48,0.115,50,2.119,53,5.154,59,0.004,60,0.004,64,1.795,68,3.409,73,4.796,83,0.913,84,1.155,211,2.008,234,2.973,247,2.248,279,3.268,282,2.764,305,3.235,368,5.275,442,4.59,647,2.822,663,3.785,688,3.011,694,4.456,710,3.612,913,3.993,960,2.606,1150,4.332,1153,3.612,1155,3.506,1580,3.082,1665,3.993,1672,4.151,1925,6.498,1926,7.857,1927,6.183,1928,6.498,1929,6.095,1930,6.498,1931,6.498,1932,4.736,1933,8.637,1934,6.183,1935,5.505,1936,4.796,1937,6.183,1938,4.332,1939,6.183,1940,6.183,1941,6.183,1942,6.183,1943,4.796,1944,4.332,1945,4.543,1946,6.183,1947,4.543,1948,6.183,1949,5.113,1950,5.538,1951,6.183,1952,6.183]],["title/classes/GridElement.html",[0,0.147,828,2.696]],["body/classes/GridElement.html",[0,0.18,2,0.526,3,0.053,4,0.044,5,0.032,10,0.291,11,0.536,16,3.297,17,0.369,18,0.734,21,0.594,24,0.815,26,1.094,27,0.005,28,0.667,29,0.667,31,2.78,36,1.076,41,1.425,44,0.135,46,0.459,48,0.158,59,0.002,60,0.002,76,1.621,83,1.401,84,1.466,87,0.474,162,2.795,201,2.629,209,2.029,234,1.022,248,1.272,261,2.466,286,1.607,325,3.77,394,4.201,409,2.36,462,1.821,502,1.316,557,3.503,593,3.671,596,2.604,601,1.532,716,3.148,717,3.148,750,1.578,751,1.814,752,1.985,753,3.401,754,3.174,756,1.893,757,5.285,763,2.79,764,3.027,767,2.604,771,1.985,772,4.829,774,3.825,775,5.431,777,3.717,779,1.985,780,4.528,782,1.985,784,3.253,785,1.985,787,4.725,788,1.985,790,1.985,792,1.985,794,1.745,795,1.893,796,1.985,797,3.027,798,2.79,799,3.027,800,4.321,801,3.983,802,4.551,803,6.403,804,3.174,805,1.683,806,2.898,807,1.745,808,1.985,809,1.745,810,4.831,811,1.985,812,1.814,813,1.985,814,4.877,815,3.174,816,3.174,817,2.523,818,4.955,819,4.531,820,3.782,821,4.955,822,3.966,823,4.955,824,3.174,825,3.966,826,1.985,827,4.164,828,4.919,829,3.174,830,3.174,831,1.985,832,3.174,833,3.174,834,3.174,835,3.174,836,3.174,837,1.985,838,1.161,839,3.174,840,1.893,841,3.174,842,1.985,843,3.174,844,1.985,845,1.985,846,1.316,847,3.174,848,1.814,849,1.985,850,3.027,851,4.955,852,3.027,853,3.174,854,1.985,855,1.628,856,1.985,857,1.985,858,1.985,859,1.985,860,1.985,861,1.985,862,1.985,863,2.104,864,1.985,865,1.985,866,1.985,867,3.174,868,1.985,869,3.966,870,1.985,871,3.174,872,1.985,873,1.985,874,3.174,875,2.604,876,3.174,877,1.985,878,1.985,879,1.985,880,1.985,881,1.985,882,1.985,883,1.985,884,3.966,885,1.985,886,1.985,1953,3.869,1954,4.32,1955,4.32,1956,4.32,1957,4.32,1958,3.869,1959,3.869,1960,2.523,1961,4.32,1962,2.701,1963,2.701,1964,2.701,1965,2.42,1966,2.701,1967,2.701,1968,2.701,1969,2.701,1970,2.701,1971,2.701,1972,2.701,1973,2.701,1974,2.701,1975,2.701,1976,2.701]],["title/interfaces/HtmlMailContent.html",[87,0.551,105,3.244]],["body/interfaces/HtmlMailContent.html",[3,0.129,4,0.107,5,0.079,8,2.274,10,0.308,11,1.009,17,0.323,27,0.005,28,0.556,29,0.692,36,1.158,48,0.121,59,0.004,60,0.004,87,1.081,88,5.253,89,1.924,90,4.385,91,5.72,92,5.461,93,4.385,94,4.385,95,5.253,96,4.385,97,4.385,98,4.385,99,5.987,100,4.218,101,4.385,102,5.253,103,6.403,104,6.403,105,5.72,106,4.612,107,4.218,108,4.385,109,4.385,110,4.385]],["title/interfaces/ICollectionFilePath.html",[87,0.551,1308,4.154]],["body/interfaces/ICollectionFilePath.html",[0,0.09,3,0.061,4,0.13,5,0.092,10,0.146,11,0.595,17,0.19,21,0.678,24,0.277,27,0.005,28,0.565,29,0.501,31,1.455,36,1.029,41,1.258,44,0.248,46,0.524,48,0.123,54,1.438,59,0.003,60,0.002,76,1.74,83,1.274,84,1.1,87,0.338,89,0.909,126,1.352,147,1.47,152,0.861,155,1.916,174,1.745,178,2.721,189,3.425,191,2.592,201,1.503,233,1.615,243,1.413,252,1.009,261,1.645,275,3.403,276,3.627,279,1.168,301,1.803,343,4.124,345,2.552,346,2.552,350,5.568,352,3.952,354,2.072,356,3.968,357,1.86,362,5.579,363,1.993,365,4.566,368,2.072,409,2.696,413,5.112,436,3.525,485,2.892,593,1.575,674,1.993,680,2.892,838,1.326,846,1.503,960,3.209,1015,3.525,1035,3.861,1132,1.993,1138,4.095,1139,5.763,1140,4.878,1143,4.652,1149,1.993,1150,2.646,1154,3.338,1163,4.137,1164,4.566,1177,6.815,1197,3.952,1203,3.968,1250,2.764,1251,2.764,1252,2.764,1254,2.764,1258,2.764,1260,2.764,1262,4.124,1264,2.764,1266,3.362,1267,5.273,1268,3.968,1269,4.917,1270,4.868,1272,2.764,1273,2.764,1275,4.334,1276,2.162,1277,2.764,1279,4.298,1280,2.394,1281,4.124,1282,6.82,1283,2.764,1285,5.273,1287,5.273,1289,2.764,1290,2.552,1291,2.268,1292,3.968,1293,2.764,1295,2.764,1296,2.764,1297,2.99,1298,2.394,1301,2.552,1302,2.394,1303,2.394,1304,2.552,1305,1.923,1306,2.552,1307,2.552,1308,6.297,1309,6.795,1310,3.968,1311,2.764,1312,2.764,1313,4.298,1314,4.298,1315,4.298,1316,2.764,1317,2.764,1318,2.764,1319,2.764,1320,5.947,1321,2.764,1322,2.764,1323,2.764,1324,2.394,1325,2.764,1326,2.764,1327,2.764,1328,2.552,1329,2.764,1330,5.947,1331,4.325,1332,2.803,1333,2.764,1334,2.764,1335,1.86,1336,1.993,1337,2.764,1338,4.298,1339,4.298,1340,2.764,1341,2.764,1342,2.764,1343,1.75,1344,4.298,1345,2.552,1346,2.764,1347,2.764,1348,3.722,1349,4.298,1350,2.764,1351,4.298,1352,4.298,1353,2.764,1354,2.764,1355,2.646,1356,2.764,1357,2.764,1358,2.394,1359,2.764,1360,2.162,1361,2.394,1362,2.072,1363,1.86,1364,2.764,1365,2.552,1366,2.072,1367,2.764,1368,2.764,1369,2.764,1370,2.764,1371,2.764,1372,3.099,1373,2.764,1374,2.764,1375,2.764,1376,2.764,1377,2.764,1378,4.298,1379,2.764,1380,2.764,1381,2.764,1382,2.552,1383,1.75,1384,2.072,1385,2.764,1386,2.764,1387,2.764,1388,2.764,1389,3.525,1390,2.764,1391,3.722,1392,2.764,1393,2.764,1394,2.764,1395,2.764]],["title/interfaces/ICourseGroupProperties.html",[87,0.551,527,4.154]],["body/interfaces/ICourseGroupProperties.html",[0,0.188,3,0.127,4,0.106,5,0.078,8,1.537,10,0.304,11,1,17,0.366,27,0.005,29,0.686,44,0.297,48,0.15,50,2.209,59,0.004,60,0.004,83,0.952,84,1.204,87,0.706,89,1.898,169,2.565,172,1.897,210,3.216,217,2.032,218,1.984,219,2.941,222,3.052,252,2.108,267,2.769,268,2.617,271,3.212,275,2.397,284,3.4,286,2.397,451,3.887,455,5.725,471,3.371,473,4.998,482,3.654,501,2.941,504,4.162,511,4.998,512,4.998,524,4.015,525,5.772,526,5.772,527,7.28,529,3.764,530,4.515,533,3.764,534,4.734,535,4.515,536,4.515,537,5.772]],["title/interfaces/ICourseProperties.html",[87,0.551,460,4.154]],["body/interfaces/ICourseProperties.html",[0,0.141,3,0.096,4,0.079,5,0.058,8,1.156,10,0.423,11,0.829,17,0.376,21,1.065,27,0.005,28,0.761,29,0.832,31,1.47,36,1.097,44,0.27,48,0.09,50,1.661,59,0.003,60,0.003,64,2.598,76,1.46,83,0.987,84,1.43,87,0.531,89,1.427,162,2.058,169,2.669,172,1.573,216,2.921,217,1.221,218,1.492,222,2.529,232,2.529,247,2.19,252,2.503,261,1.661,267,2.082,268,1.968,271,2.415,275,1.802,284,3.478,286,1.802,312,2.36,438,2.92,451,1.865,452,4.007,453,5.459,454,3.761,455,5.217,456,6.36,457,6.065,458,4.34,459,3.791,460,6.329,463,4.34,464,4.34,466,4.34,469,2.308,471,4.004,473,3.758,475,5.987,477,5.987,480,3.758,482,2.748,483,2.601,484,3.019,485,4.029,486,4.911,487,4.34,488,3.758,489,4.34,490,3.253,491,4.34,492,4.34,493,4.007,494,3.394,495,3.56,496,3.394,497,4.34,498,4.34,499,3.56,500,4.007,501,2.211,502,2.36,503,3.019,504,4.943,505,4.029,506,2.92,507,5.987,508,4.34,509,3.758,510,3.019,511,3.758,512,3.758,513,4.34,514,4.34,515,4.34,516,4.34,517,5.987,518,4.34,519,4.34,520,4.34,521,4.34,522,4.34,523,4.34]],["title/interfaces/ICreateNews.html",[87,0.551,1977,3.691]],["body/interfaces/ICreateNews.html",[3,0.118,4,0.098,5,0.072,10,0.283,11,0.955,16,3.233,17,0.399,27,0.005,29,0.724,36,1.059,44,0.28,48,0.173,59,0.004,60,0.004,64,1.74,87,1.043,89,1.766,162,2.621,163,3.752,164,4.243,165,5.131,172,1.41,209,1.354,243,2.507,261,2.055,451,3.277,454,3.335,502,2.92,550,3.66,551,4.332,552,4.376,553,4.823,580,2.988,589,4.146,591,3.736,1960,4.5,1977,5.66,1978,4.65,1979,6.9,1980,5.37,1981,5.37,1982,5.37,1983,4.2,1984,4.2,1985,4.025,1986,4.405,1987,3.872,1988,5.37,1989,4.405,1990,4.025]],["title/interfaces/ICurrentUser.html",[87,0.551,742,2.696]],["body/interfaces/ICurrentUser.html",[3,0.12,4,0.1,5,0.073,10,0.288,11,0.966,17,0.385,27,0.005,28,0.519,36,1.166,44,0.191,48,0.168,59,0.004,60,0.004,87,0.941,89,1.798,166,3.285,169,2.515,173,3.887,182,5.726,209,2.158,242,2.392,243,2.295,245,2.435,469,4.627,742,4.183,1991,4.735,1992,5.842,1993,5,1994,5.46,1995,5.582,1996,4.508,1997,6.645,1998,5.46,1999,5.048,2000,5.46,2001,3.942,2002,3.942,2003,4.485]],["title/interfaces/IDashboardRepo.html",[87,0.551,1093,3.897]],["body/interfaces/IDashboardRepo.html",[0,0.189,3,0.091,4,0.076,5,0.056,10,0.219,12,1.615,17,0.257,18,1.101,24,0.671,26,0.905,27,0.005,28,0.552,29,0.552,41,1.235,44,0.266,46,0.787,48,0.121,57,2.259,59,0.003,60,0.003,76,1.684,83,1.304,84,1.813,87,0.508,89,1.366,152,1.163,155,2.157,162,2.623,172,1.091,174,2.5,186,1.346,191,2.519,209,1.464,210,1.85,217,1.169,219,2.116,232,1.755,278,2.367,298,3.114,304,4.543,310,3.392,312,2.259,314,3.249,321,5.238,332,3.835,702,4.739,716,4.349,717,4.349,750,5.157,753,2.557,777,3.908,784,5.135,805,2.89,806,2.489,817,2.709,828,4.739,846,4.15,922,2.995,975,3.597,988,5.363,1000,3.835,1062,3.407,1063,3.835,1064,5.808,1065,7.046,1067,6.697,1072,4.154,1073,5.363,1074,3.835,1075,5.363,1076,5.363,1077,7.046,1078,4.354,1079,6.696,1080,8.026,1081,7.494,1082,3.835,1083,4.354,1084,3.835,1085,3.835,1086,3.835,1087,3.835,1088,3.835,1089,3.835,1090,3.835,1091,3.835,1092,3.835,1093,5.8,1094,3.835,1095,5.808,1096,5.808,1097,4.154,1098,5.808,1099,4.154,1100,6.697,1101,4.154,1102,5.808,1103,4.154,1104,4.154,2004,4.637,2005,4.637,2006,4.637]],["title/interfaces/IErrorType.html",[87,0.551,377,3.897]],["body/interfaces/IErrorType.html",[3,0.145,4,0.121,5,0.089,10,0.348,11,1.085,12,3.251,16,3.474,17,0.401,27,0.005,36,1.141,48,0.137,55,7.095,59,0.004,60,0.004,87,0.807,89,2.168,377,6.785,2007,7.362,2008,7.362]],["title/interfaces/IFileProperties.html",[87,0.551,272,3.691]],["body/interfaces/IFileProperties.html",[0,0.244,3,0.113,4,0.094,5,0.09,8,1.99,10,0.271,11,0.93,17,0.38,27,0.005,29,0.752,36,1.082,44,0.276,48,0.155,50,1.971,59,0.004,60,0.004,87,0.63,89,1.693,169,2.55,172,2.08,216,3.329,217,1.449,218,1.77,222,2.837,243,2.604,254,5.602,255,4.459,256,4.571,257,6.426,258,5.816,261,1.971,267,2.47,268,2.335,269,5.619,270,4.459,271,2.865,272,6.13,273,6.426,274,6.158,275,3.104,276,3.974,277,3.465,278,3.827,279,2.837,280,4.672,281,3.582,282,3.352,283,4.459,284,2.423,285,4.459,286,2.139,287,4.459,288,4.459,289,4.459,290,4.459,291,4.459,292,4.459,293,4.459,294,4.459,295,4.459,296,4.459,297,3.582]],["title/interfaces/IFindOptions.html",[87,0.551,2009,3.519]],["body/interfaces/IFindOptions.html",[3,0.14,4,0.116,5,0.085,10,0.335,11,1.061,17,0.365,27,0.005,29,0.812,31,2.596,48,0.177,59,0.004,60,0.004,87,0.938,89,2.09,580,3.537,1389,6.288,1987,4.584,2009,5.996,2010,5.505,2011,5.505,2012,5.749,2013,5.41,2014,7.889,2015,7.4,2016,4.146,2017,4.146,2018,5.215,2019,7.077]],["title/interfaces/IGridElement.html",[87,0.551,775,3.373]],["body/interfaces/IGridElement.html",[0,0.191,3,0.059,4,0.049,5,0.036,10,0.309,11,0.584,16,3.192,17,0.346,18,0.799,24,0.676,26,0.808,27,0.005,28,0.493,29,0.493,31,2.838,36,1.069,41,1.245,44,0.147,46,0.511,48,0.162,59,0.002,60,0.002,76,1.655,83,1.425,84,1.522,87,0.516,89,0.887,162,2.637,201,2.823,209,1.971,234,1.14,248,1.386,261,2.584,286,1.12,325,3.904,394,4.402,409,2.355,462,1.269,502,1.467,557,2.661,593,2.958,596,2.837,601,1.708,716,3.344,717,3.344,750,1.759,751,2.022,752,2.213,753,3.613,754,3.459,756,2.11,757,5.538,763,3.04,764,3.298,767,2.837,771,2.213,772,5.06,774,4.032,775,5.624,777,3.949,779,2.213,780,4.773,782,2.213,784,3.493,785,2.213,787,4.893,788,2.213,790,2.213,792,2.213,794,1.945,795,2.11,796,2.213,797,3.298,798,3.04,799,3.298,800,4.591,801,4.232,802,4.746,803,6.109,804,3.459,805,1.877,806,2.527,807,1.945,808,2.213,809,1.945,810,4.618,811,2.213,812,2.022,813,2.213,814,5.086,815,3.459,816,3.459,817,2.75,818,5.224,819,4.814,820,3.298,821,5.224,822,4.258,823,5.224,824,3.459,825,4.258,826,2.213,827,3.92,828,4.761,829,3.459,830,3.459,831,2.213,832,2.213,833,2.213,834,2.213,835,2.213,836,3.459,837,2.213,838,1.294,839,3.459,840,2.11,841,3.459,842,2.213,843,3.459,844,2.213,845,2.213,846,1.467,847,3.459,848,2.022,849,2.213,850,3.298,851,5.224,852,3.298,853,3.459,854,2.213,855,1.815,856,2.213,857,2.213,858,2.213,859,2.213,860,2.213,861,2.213,862,2.213,863,2.293,864,2.213,865,2.213,866,2.213,867,3.459,868,2.213,869,4.258,870,2.213,871,3.459,872,2.213,873,2.213,874,3.459,875,2.837,876,3.459,877,2.213,878,2.213,879,2.213,880,2.213,881,2.213,882,2.213,883,2.213,884,4.258,885,2.213,886,2.213,1691,4.083,1953,4.216,1958,4.216,1959,4.216,1965,2.697,2020,3.011,2021,3.011,2022,3.011,2023,3.011,2024,3.011,2025,3.011]],["title/interfaces/IGridElementReference.html",[87,0.551,803,3.373]],["body/interfaces/IGridElementReference.html",[0,0.199,3,0.064,4,0.053,5,0.039,10,0.287,11,0.619,16,3.249,17,0.321,27,0.005,31,2.831,36,1.069,44,0.156,46,0.551,48,0.166,59,0.003,60,0.003,76,1.678,83,1.44,84,1.561,87,0.547,89,0.956,162,2.693,201,2.961,209,2.01,234,1.229,248,1.47,261,2.338,286,1.208,325,3.623,394,4.54,409,2.429,462,1.369,502,1.582,557,2.77,593,3.103,596,3.008,601,1.842,716,3.482,717,3.482,750,1.897,751,2.18,752,2.386,753,3.761,754,3.667,756,2.275,757,4.466,763,3.223,764,3.497,767,3.008,771,2.386,772,5.218,774,4.175,775,5.609,777,4.111,779,2.386,780,4.943,782,2.386,784,3.663,785,2.386,787,5.005,788,2.386,790,2.386,792,2.386,794,2.097,795,2.275,796,2.386,797,3.497,798,3.223,799,3.497,800,4.779,801,4.406,802,4.879,803,6.063,804,5.409,805,2.024,806,2.679,807,2.097,808,2.386,809,2.097,810,4.724,811,2.386,812,2.18,813,2.386,814,5.228,815,3.667,816,3.667,817,2.915,818,3.667,819,2.386,820,3.497,821,3.667,822,3.667,823,3.667,824,2.386,825,3.667,826,2.386,827,4.059,828,4.848,829,3.667,830,3.667,831,2.386,832,2.386,833,2.386,834,2.386,835,2.386,836,3.667,837,2.386,838,1.395,839,3.667,840,2.275,841,3.667,842,2.386,843,3.667,844,2.386,845,2.386,846,1.582,847,2.386,848,2.18,849,2.386,850,3.497,851,5.409,852,3.497,853,3.667,854,2.386,855,1.957,856,2.386,857,2.386,858,2.386,859,2.386,860,2.386,861,2.386,862,2.386,863,2.431,864,2.386,865,2.386,866,2.386,867,3.667,868,2.386,869,4.466,870,2.386,871,3.667,872,2.386,873,2.386,874,3.667,875,3.008,876,3.667,877,2.386,878,2.386,879,2.386,880,2.386,881,2.386,882,2.386,883,2.386,884,4.466,885,2.386,886,2.386,1691,3.11]],["title/interfaces/ILessonProperties.html",[87,0.551,2026,4.154]],["body/interfaces/ILessonProperties.html",[0,0.191,3,0.129,4,0.107,5,0.079,8,1.558,10,0.308,11,1.009,17,0.368,27,0.005,28,0.811,29,0.692,36,1.032,44,0.277,48,0.121,50,2.239,59,0.004,60,0.004,87,0.716,89,1.924,172,1.913,216,3.135,217,1.646,218,2.011,222,3.078,252,2.136,261,3.036,267,2.807,268,2.653,282,2.92,284,2.753,286,2.43,451,3.895,501,2.981,505,3.937,506,3.937,529,3.815,530,4.576,533,3.815,535,4.576,536,4.576,2026,7.325,2027,5.85,2028,6.159,2029,4.576,2030,3.815,2031,7.285,2032,5.85]],["title/interfaces/ILogger.html",[87,0.551,1844,3.519]],["body/interfaces/ILogger.html",[3,0.122,4,0.102,5,0.075,10,0.293,15,5.486,17,0.373,18,1.337,24,0.843,26,1.31,27,0.005,28,0.799,29,0.847,36,1.153,41,1.551,48,0.115,54,3.671,59,0.004,60,0.004,87,0.68,89,1.828,379,4.783,1503,5.663,1844,5.518,2033,6.206,2034,6.109,2035,5.288,2036,7.876,2037,7.876,2038,6.206,2039,6.206,2040,7.054,2041,7.155,2042,6.206,2043,7.054,2044,6.206,2045,6.206,2046,6.206,2047,7.054,2048,6.206,2049,5.558,2050,5.558]],["title/interfaces/INewsProperties.html",[87,0.551,587,3.519]],["body/interfaces/INewsProperties.html",[0,0.221,3,0.079,4,0.138,5,0.048,8,1.808,10,0.189,11,0.725,16,3.027,17,0.382,27,0.005,28,0.497,29,0.757,36,1.092,44,0.278,48,0.15,50,1.375,59,0.003,60,0.003,83,0.593,84,1.289,87,0.44,89,1.182,162,2.839,163,3.692,164,3.438,166,1.691,169,2.523,172,1.896,190,2.811,209,0.906,216,3.074,217,1.011,218,1.235,222,2.212,229,3.912,234,2.61,243,2.233,256,4.192,267,1.724,268,1.629,271,1.999,275,2.175,277,2.418,278,2.984,279,1.518,280,4.299,284,2.908,286,1.492,297,2.5,394,2.343,451,2.251,454,3.702,462,1.691,469,1.911,483,2.153,484,2.5,503,3.643,510,2.5,529,2.343,533,2.343,548,2.5,549,2.947,550,3.665,551,4.298,552,4.097,553,4.326,554,5.92,555,5.41,556,5.433,557,1.629,561,2.693,562,3.643,563,2.811,566,2.947,567,3.643,568,2.947,569,2.811,570,2.048,571,2.5,572,2.811,576,4.299,577,4.723,580,2.914,582,2.693,584,2.947,586,2.947,587,5.311,589,2.848,590,2.947,591,5.021,592,2.947,593,2.048,594,2.693,595,2.5,596,2.418,597,2.947,598,2.947,599,2.947,600,2.947,601,2.275,602,2.947,603,2.947,604,2.947,605,2.947,606,2.947,607,2.947,608,2.947,609,2.947,610,4.296,611,3.286,612,3.36,613,3.215,614,3.215,615,3.36,616,4.029,617,4.029,618,2.947,619,4.296,620,2.947,621,2.947,622,2.591,623,2.591,624,2.947]],["title/interfaces/INewsScope.html",[87,0.551,1989,3.691]],["body/interfaces/INewsScope.html",[3,0.121,4,0.1,5,0.074,10,0.289,11,0.968,16,2.2,17,0.394,27,0.005,29,0.813,36,0.869,44,0.283,48,0.174,59,0.004,60,0.004,64,1.775,87,1.048,89,1.801,162,2.645,163,3.8,164,4.283,165,5.455,172,1.439,209,1.381,243,1.801,261,2.946,451,3.308,454,3.366,502,2.978,550,3.618,551,4.358,552,2.978,553,3.283,580,3.048,589,4.185,591,3.811,1960,4.558,1977,4.493,1978,4.744,1979,5.477,1980,5.477,1981,5.477,1982,5.477,1983,4.284,1984,4.284,1985,4.106,1986,4.493,1987,3.95,1988,6.989,1989,5.733,1990,6.077]],["title/interfaces/IPagination.html",[87,0.551,2015,3.897]],["body/interfaces/IPagination.html",[3,0.14,4,0.116,5,0.085,10,0.335,11,1.061,17,0.365,27,0.005,29,0.812,31,3.008,48,0.177,59,0.004,60,0.004,87,0.938,89,2.09,580,3.537,1389,6.288,1987,4.584,2009,4.973,2010,5.505,2011,5.505,2012,4.278,2013,4.025,2014,7.077,2015,7.127,2016,5.572,2017,5.572,2018,5.215,2019,7.077]],["title/interfaces/IResolvedUser.html",[87,0.551,1997,3.691]],["body/interfaces/IResolvedUser.html",[3,0.119,4,0.099,5,0.072,10,0.284,11,0.958,17,0.396,27,0.005,28,0.512,36,1.163,44,0.188,48,0.167,59,0.004,60,0.004,87,0.935,89,1.772,166,3.922,169,1.673,173,2.585,182,4.421,209,2.186,242,3.525,243,2.804,245,3.588,469,4.535,742,3.23,1991,4.667,1992,3.886,1993,4.981,1994,4.215,1995,4.981,1996,4.25,1997,6.265,1998,4.215,1999,4.976,2000,6.303,2001,5.81,2002,5.81,2003,4.421]],["title/interfaces/IRole.html",[87,0.551,2000,3.519]],["body/interfaces/IRole.html",[3,0.128,4,0.107,5,0.078,10,0.307,11,1.006,17,0.367,27,0.005,28,0.788,36,1.16,44,0.203,48,0.172,59,0.004,60,0.004,87,0.969,89,1.916,166,3.42,169,1.809,173,2.796,182,4.78,209,2.225,242,2.549,243,2.39,245,2.595,469,4.211,742,3.493,1991,5.047,1992,4.202,1993,4.626,1994,4.558,1995,5.165,1996,4.407,1997,5.961,1998,4.558,1999,5.381,2000,6.194,2001,4.202,2002,4.202,2003,4.78]],["title/interfaces/IRoleProperties.html",[87,0.551,2051,4.154]],["body/interfaces/IRoleProperties.html",[0,0.178,3,0.12,4,0.1,5,0.073,8,1.456,10,0.405,11,0.966,17,0.359,27,0.005,28,0.813,29,0.77,36,1.095,44,0.243,48,0.145,50,2.092,59,0.004,60,0.004,84,1.604,87,0.669,89,1.798,166,3.939,172,1.833,216,3.039,217,1.538,218,1.879,222,2.949,232,2.31,268,2.479,275,2.271,284,2.573,286,2.271,471,4.492,482,4.42,501,2.786,505,3.679,506,3.679,570,3.116,580,3.884,694,3.462,1152,4.485,1577,5.033,1691,3.804,1740,4.735,1945,4.485,1993,5.237,1996,4.658,2051,7.1,2052,5.468,2053,5.468,2054,4.735,2055,4.485,2056,6.045,2057,6.981,2058,5.468,2059,5.468,2060,4.735]],["title/interfaces/IStorageProviderProperties.html",[87,0.551,2061,4.154]],["body/interfaces/IStorageProviderProperties.html",[0,0.187,3,0.126,4,0.105,5,0.077,8,1.528,10,0.303,11,0.997,17,0.376,27,0.005,29,0.684,36,1.151,44,0.274,48,0.119,50,2.196,59,0.004,60,0.004,87,0.702,89,1.887,172,1.891,216,3.357,217,1.615,218,1.972,222,3.041,268,2.602,269,3.633,284,2.701,286,2.383,501,2.924,1516,6.233,1696,7.842,1700,7.355,1702,7.505,2061,7.261,2062,5.739,2063,7.842,2064,5.739,2065,5.739,2066,5.739,2067,5.739,2068,5.739,2069,5.739,2070,5.739,2071,5.739,2072,5.739,2073,5.739]],["title/interfaces/ISubmissionProperties.html",[87,0.551,2074,4.154]],["body/interfaces/ISubmissionProperties.html",[0,0.136,3,0.092,4,0.077,5,0.111,8,1.114,10,0.22,11,0.808,17,0.388,27,0.005,29,0.827,31,2.591,36,1.048,44,0.276,48,0.087,50,1.601,59,0.003,60,0.003,76,1.153,83,0.69,84,1.402,87,0.512,89,1.375,169,2.575,172,1.533,216,2.875,217,1.177,218,1.438,222,2.466,252,2.656,261,1.601,267,2.007,268,1.896,271,2.327,275,1.737,284,3.729,286,1.737,462,1.968,471,3.926,482,2.648,501,2.131,504,3.016,524,6.055,562,2.91,601,2.648,838,3.225,875,3.927,1624,5.323,2074,6.206,2075,4.183,2076,7.651,2077,7.064,2078,7.651,2079,8.132,2080,6.199,2081,8.132,2082,4.641,2083,7.659,2084,4.183,2085,4.183,2086,4.183,2087,3.135,2088,3.016,2089,4.183,2090,4.183,2091,3.862,2092,4.183,2093,4.183,2094,5.389,2095,5.836,2096,4.183,2097,3.016,2098,4.183,2099,6.722,2100,6.722,2101,5.836,2102,4.183,2103,4.183,2104,4.183,2105,4.183,2106,4.183,2107,4.183,2108,4.183,2109,3.622,2110,4.183,2111,4.183,2112,4.183]],["title/interfaces/ITaskProperties.html",[87,0.551,2113,4.154]],["body/interfaces/ITaskProperties.html",[0,0.129,3,0.087,4,0.072,5,0.053,8,1.052,10,0.208,11,0.776,17,0.385,27,0.005,28,0.777,29,0.841,36,0.995,44,0.279,48,0.116,50,1.512,59,0.003,60,0.003,64,2.112,76,0.781,83,1.17,84,1.17,87,0.484,89,1.299,162,1.927,169,2.538,172,1.473,191,1.227,216,2.96,217,1.112,218,1.358,222,2.369,232,2.754,233,2.308,239,2.659,243,2.689,252,2.38,261,3.063,267,1.896,268,1.792,271,2.199,275,1.641,279,1.67,282,1.973,284,3.338,286,1.641,409,2.715,451,3.625,453,4.251,459,3.55,471,3.275,480,3.422,482,2.502,483,2.368,499,3.242,501,2.014,504,2.85,505,2.659,506,2.659,529,2.577,530,3.091,533,2.577,535,5.098,536,3.091,562,2.749,571,3.901,901,3.242,1138,3.12,1139,2.85,1331,3.242,1624,2.749,1757,3.242,2030,5.501,2082,3.049,2087,5.615,2088,5.115,2097,5.401,2113,6.018,2114,3.649,2115,6.487,2116,5.859,2117,5.859,2118,3.952,2119,3.952,2120,6.018,2121,3.649,2122,3.242,2123,3.952,2124,3.952,2125,2.433,2126,3.952,2127,3.422,2128,3.649,2129,2.749,2130,5.608,2131,3.422,2132,3.952,2133,3.649,2134,3.952,2135,3.952,2136,7.094,2137,3.952,2138,5.608,2139,3.952,2140,3.952,2141,3.952,2142,3.952,2143,3.952,2144,3.952,2145,5.608,2146,3.952,2147,3.952,2148,3.952,2149,3.952,2150,3.091,2151,3.952]],["title/interfaces/ITaskStatus.html",[87,0.551,2152,4.154]],["body/interfaces/ITaskStatus.html",[0,0.198,3,0.133,4,0.111,5,0.081,10,0.32,11,1.031,17,0.382,27,0.005,31,3.067,44,0.211,48,0.126,59,0.004,60,0.004,87,0.742,89,1.994,261,3.362,459,5.323,2082,4.693,2109,5.25,2129,5.849,2152,7.762,2153,6.063,2154,6.063,2155,6.576,2156,6.576,2157,6.576,2158,6.063,2159,4.973,2160,5.812,2161,6.063,2162,6.063]],["title/interfaces/IUserProperties.html",[87,0.551,2163,4.154]],["body/interfaces/IUserProperties.html",[0,0.172,3,0.116,4,0.096,5,0.071,8,1.402,10,0.436,11,0.943,17,0.382,27,0.005,28,0.718,29,0.759,36,1.122,44,0.278,48,0.141,50,2.016,59,0.004,60,0.004,84,1.098,87,0.644,89,1.732,169,1.635,172,1.79,216,3.157,217,1.482,218,1.81,222,2.879,252,1.923,267,2.527,268,2.388,275,2.187,284,3.207,286,2.187,454,3.897,469,2.801,471,3.076,482,3.334,484,3.664,501,2.683,503,3.664,509,4.561,510,3.664,1577,4.914,1993,4.95,1995,3.435,1996,4.445,2001,5.966,2002,5.966,2056,4.561,2060,4.561,2163,6.975,2164,5.266,2165,6.472,2166,5.266,2167,5.266,2168,5.266,2169,5.266,2170,5.266,2171,5.266,2172,5.266,2173,5.266,2174,5.266,2175,5.266]],["title/interfaces/InlineAttachment.html",[87,0.551,95,3.244]],["body/interfaces/InlineAttachment.html",[3,0.13,4,0.108,5,0.079,8,2.282,10,0.312,11,1.016,17,0.262,27,0.005,28,0.562,36,1.154,48,0.123,59,0.004,60,0.004,87,1.084,88,5.291,89,1.946,90,4.437,91,6.012,92,6.424,93,4.437,94,4.437,95,5.751,96,4.437,97,6.249,98,4.437,99,5.751,100,4.268,101,4.437,102,5.291,103,5.501,104,5.501,105,5.291,106,4.646,107,4.268,108,4.437,109,4.437,110,4.437]],["title/modules/InterceptorModule.html",[111,1.302,428,3.691]],["body/modules/InterceptorModule.html",[0,0.196,3,0.132,4,0.11,5,0.081,27,0.005,44,0.28,46,1.14,48,0.125,59,0.004,60,0.004,64,1.949,73,5.208,111,2.144,113,2.585,125,2.778,231,5.155,232,2.541,305,3.513,421,4.897,428,6.079,442,4.833,443,6.589,960,3.488,1150,4.562,1336,5.343,1416,4.336,1425,5.796,1427,4.223,1570,6.418,2125,4.562,2176,6.714,2177,6.842,2178,6.418,2179,5.155,2180,9.36,2181,5.796,2182,6.842,2183,7.741,2184,4.508]],["title/injectables/JwtAuthGuard.html",[152,0.901,2185,4.154]],["body/injectables/JwtAuthGuard.html",[0,0.225,3,0.152,4,0.126,5,0.093,8,1.841,27,0.005,44,0.281,46,1.31,48,0.144,59,0.005,60,0.005,128,5.986,152,1.613,153,2.564,2185,7.438,2186,7.717,2187,7.717,2188,7.717,2189,7.717]],["title/interfaces/JwtConstants.html",[87,0.551,133,3.691]],["body/interfaces/JwtConstants.html",[3,0.131,4,0.109,5,0.08,10,0.314,11,1.02,17,0.37,27,0.005,36,1.122,44,0.208,48,0.153,59,0.004,60,0.004,76,1.455,87,0.729,89,1.958,133,6.853,150,3.569,173,2.857,232,2.516,279,2.516,1013,5.157,1035,3.569,1960,4.803,1992,5.311,2190,5.955,2191,8.585,2192,7.435,2193,7.365,2194,6.648,2195,6.648,2196,6.8,2197,5.498,2198,4.884,2199,4.463,2200,6.648,2201,5.955,2202,5.955,2203,5.955,2204,6.648,2205,5.955,2206,4.884,2207,5.157,2208,6.648,2209,5.498,2210,6.648,2211,5.498,2212,5.955,2213,6.648,2214,6.648,2215,5.955,2216,5.955]],["title/interfaces/JwtPayload.html",[87,0.551,2217,4.154]],["body/interfaces/JwtPayload.html",[3,0.129,4,0.107,5,0.079,8,1.942,10,0.309,11,1.01,17,0.386,27,0.005,31,2.95,36,1.139,44,0.204,48,0.122,59,0.004,60,0.004,87,0.717,89,1.928,186,1.9,232,3.51,742,4.759,2201,8.309,2202,8.309,2203,8.309,2205,8.309,2206,6.815,2207,7.195,2211,6.734,2212,7.294,2217,6.734,2218,6.544,2219,6.544,2220,6.734]],["title/injectables/JwtStrategy.html",[119,3.897,152,0.901]],["body/injectables/JwtStrategy.html",[0,0.171,3,0.116,4,0.096,5,0.071,8,1.4,10,0.277,12,2.647,17,0.302,18,1.29,21,1.29,24,0.682,26,1.06,27,0.005,28,0.647,29,0.647,41,0.97,44,0.301,46,0.997,48,0.109,50,2.012,59,0.004,60,0.004,76,1.345,83,0.867,119,5.895,120,7.072,128,4.553,131,5.257,133,4.312,134,4.854,136,5.257,152,1.363,153,1.95,155,2.246,169,1.632,173,2.522,174,1.997,188,2.26,191,2.113,232,2.876,233,4.409,282,2.624,409,1.834,1343,3.329,1366,3.941,1932,3.538,1943,4.553,1992,3.791,1996,2.925,2178,5.895,2207,5.895,2217,7.371,2221,5.869,2222,5.869,2223,6.949,2224,5.869,2225,7.599,2226,5.869,2227,7.983,2228,5.869,2229,4.553,2230,5.257,2231,5.658,2232,5.869,2233,5.869,2234,5.869,2235,5.869,2236,5.869,2237,5.869,2238,5.869,2239,5.869,2240,5.869,2241,5.869,2242,5.257,2243,5.869,2244,4.908,2245,5.869,2246,5.869,2247,4.854,2248,5.869,2249,5.257,2250,2.996,2251,5.257,2252,5.869,2253,5.869]],["title/injectables/JwtValidationAdapter.html",[120,3.691,152,0.901]],["body/injectables/JwtValidationAdapter.html",[0,0.164,3,0.111,4,0.092,5,0.068,10,0.266,17,0.293,18,1.255,24,0.663,26,1.031,27,0.005,28,0.629,29,0.629,36,1.115,41,1.221,44,0.231,46,0.955,48,0.105,59,0.004,60,0.004,64,1.632,76,1.308,120,5.43,152,1.326,153,1.868,155,2.491,174,2.304,189,3.52,191,2.055,209,1.98,231,5.463,233,3.867,282,2.514,351,5.178,611,3.52,612,3.6,613,3.445,614,3.445,615,3.6,616,4.317,670,4.454,1153,4.317,1383,4.191,1497,5.886,1943,5.733,1992,5.662,1994,5.178,1995,4.317,2207,7.586,2220,6.112,2231,6.491,2254,7.394,2255,5.037,2256,7.39,2257,7.39,2258,7.39,2259,5.624,2260,7.39,2261,5.624,2262,7.39,2263,6.112,2264,5.43,2265,7.39,2266,7.39,2267,6.62,2268,6.62,2269,5.624,2270,7.39,2271,5.624,2272,5.624,2273,7.39,2274,5.624,2275,5.624,2276,5.624,2277,5.624]],["title/modules/LearnroomModule.html",[111,1.302,2278,3.691]],["body/modules/LearnroomModule.html",[0,0.205,3,0.139,4,0.115,5,0.085,27,0.005,44,0.297,46,1.195,48,0.131,59,0.004,60,0.004,111,2.206,113,2.709,114,3.659,121,4.244,122,3.212,123,2.967,125,3.522,126,3.084,698,7.571,699,4.147,729,7.273,730,6.304,1062,6.256,1118,6.304,1427,3.592,1570,5.459,2278,7.273,2279,6.304,2280,6.304,2281,7.038,2282,7.038,2283,7.038]],["title/classes/Lesson.html",[0,0.147,2030,2.934]],["body/classes/Lesson.html",[0,0.166,2,1.105,3,0.112,4,0.093,5,0.068,8,1.774,10,0.268,11,0.923,17,0.372,21,1.249,24,0.87,26,0.792,27,0.005,28,0.777,29,0.483,32,3.331,36,0.98,44,0.259,48,0.106,50,1.947,59,0.004,60,0.004,84,1.39,87,0.623,172,1.75,208,3.136,209,1.68,210,2.266,211,2.441,212,2.54,214,2.54,216,3.318,217,1.432,218,1.749,222,3.614,242,2.915,243,2.191,245,2.967,247,2.373,248,2.443,251,2.706,252,2.433,261,1.947,263,2.767,264,2.767,265,2.767,266,2.767,267,2.441,268,2.307,282,3.326,284,3.136,286,2.768,451,3.73,462,2.395,501,2.593,505,3.424,506,3.424,529,4.346,530,5.212,533,3.318,535,3.98,536,3.98,2026,7.279,2027,5.088,2028,5.685,2029,3.98,2030,4.346,2031,6.664,2032,5.088,2284,7.439,2285,5.681,2286,5.681]],["title/injectables/LessonRepo.html",[152,0.901,2287,3.691]],["body/injectables/LessonRepo.html",[0,0.184,3,0.124,4,0.103,5,0.076,10,0.298,12,2.198,17,0.363,18,1.352,21,1.387,24,0.714,26,1.11,27,0.005,28,0.677,29,0.677,41,1.042,44,0.286,46,1.072,48,0.117,59,0.004,60,0.004,76,1.408,83,0.932,84,1.179,152,1.428,153,2.096,155,2.323,162,2.819,174,2.091,186,1.832,188,2.429,217,1.59,218,1.943,232,3.012,252,2.064,261,2.163,309,3.803,310,4.79,312,3.877,379,3.145,544,4.421,637,3.559,646,5.219,1291,6.406,1960,4.649,2013,4.514,2028,4.076,2029,5.577,2030,4.649,2287,5.848,2288,6.311,2289,7.96,2290,6.311,2291,7.96,2292,6.311,2293,4.514,2294,6.583,2295,6.583,2296,6.311,2297,6.311,2298,6.311,2299,6.311]],["title/classes/LessonScope.html",[0,0.147,2295,4.154]],["body/classes/LessonScope.html",[0,0.178,2,1.188,3,0.12,4,0.1,5,0.073,8,1.859,10,0.288,11,0.966,17,0.371,18,1.323,24,0.839,26,1.198,27,0.005,28,0.73,29,0.73,32,3.249,41,1.418,44,0.243,48,0.114,59,0.004,60,0.004,83,1.151,162,2.784,186,1.772,247,1.746,248,1.798,261,2.943,325,2.845,409,2.826,451,2.35,544,5.46,637,4.343,643,5.726,647,2.786,648,5.726,649,5.726,651,5.726,652,4.277,653,4.735,654,5.545,655,4.735,657,4.485,658,5.46,659,4.735,2028,3.942,2030,3.566,2295,7.903,2300,8.585,2301,5.048,2302,6.981,2303,7.793,2304,6.981,2305,6.104,2306,7.793,2307,6.104,2308,7.793,2309,5.468]],["title/injectables/Logger.html",[152,0.901,1433,2.849]],["body/injectables/Logger.html",[0,0.194,3,0.131,4,0.109,5,0.08,8,1.964,18,1.131,27,0.005,44,0.257,46,1.131,48,0.124,59,0.004,60,0.004,152,1.477,153,2.213,184,4.302,189,3.921,234,2.521,247,1.906,374,3.32,420,3.244,637,3.681,806,4.419,960,3.47,1383,3.778,1423,3.32,1433,5.439,1503,4.927,1546,5.167,1581,4.151,1637,4.667,1665,4.302,1756,4.151,1778,4.894,1844,6.54,1932,4.015,2035,5.999,2310,6.661,2311,9.334,2312,6.661,2313,6.661,2314,4.667,2315,5.966,2316,5.167,2317,5.509,2318,4.472,2319,7.374,2320,4.894,2321,6.661,2322,6.661,2323,4.894,2324,5.966,2325,4.302,2326,6.661,2327,6.661,2328,6.661]],["title/modules/LoggerModule.html",[111,1.302,429,3.13]],["body/modules/LoggerModule.html",[0,0.211,3,0.143,4,0.119,5,0.087,27,0.005,44,0.27,46,1.229,48,0.135,59,0.004,60,0.004,111,2.243,113,2.785,114,3.72,121,4.315,122,3.302,123,3.05,125,3.581,147,4.124,429,6.276,1433,5.871,2329,6.481,2330,6.481,2331,6.481,2332,7.235,2333,7.235]],["title/interfaces/Mail.html",[87,0.551,106,2.849]],["body/interfaces/Mail.html",[3,0.121,4,0.101,5,0.074,8,2.162,10,0.29,11,0.97,17,0.38,27,0.005,28,0.522,29,0.838,36,1.163,48,0.114,59,0.004,60,0.004,87,1.066,88,5.051,89,1.808,90,4.121,91,5.559,92,5.251,93,4.121,94,4.121,95,5.051,96,4.121,97,4.121,98,4.121,99,5.559,100,3.964,101,4.121,102,5.853,103,5.251,104,5.251,105,5.853,106,5.427,107,5.853,108,6.085,109,6.085,110,6.085]],["title/interfaces/MailAttachment.html",[87,0.551,91,3.244]],["body/interfaces/MailAttachment.html",[3,0.128,4,0.106,5,0.078,8,2.206,10,0.307,11,1.005,17,0.35,27,0.005,28,0.787,36,1.162,48,0.121,59,0.004,60,0.004,87,1.079,88,5.234,89,1.913,90,4.36,91,5.974,92,5.441,93,6.211,94,6.211,95,5.234,96,4.36,97,4.36,98,4.36,99,5.705,100,4.194,101,4.36,102,5.234,103,5.441,104,5.441,105,5.234,106,4.596,107,4.194,108,4.36,109,4.36,110,4.36]],["title/interfaces/MailContent.html",[87,0.551,99,3.244]],["body/interfaces/MailContent.html",[3,0.128,4,0.107,5,0.078,8,2.208,10,0.307,11,1.006,17,0.322,27,0.005,28,0.554,29,0.69,36,1.153,48,0.121,59,0.004,60,0.004,87,1.08,88,5.978,89,1.916,90,4.368,91,5.71,92,5.447,93,4.368,94,4.368,95,5.978,96,4.368,97,4.368,98,4.368,99,5.978,100,5.978,101,6.215,102,5.24,103,5.447,104,5.447,105,5.24,106,4.601,107,4.202,108,4.368,109,4.368,110,4.368]],["title/modules/MailModule.html",[111,1.302,2334,3.519]],["body/modules/MailModule.html",[0,0.186,3,0.125,4,0.104,5,0.076,17,0.347,18,1.08,24,0.571,26,0.887,27,0.005,28,0.68,29,0.541,36,0.974,41,1.05,44,0.273,46,1.08,48,0.118,59,0.004,60,0.004,76,1.415,83,1.181,87,0.697,111,2.267,113,2.448,125,2.63,126,2.786,147,3.029,557,3.248,1136,3.895,1427,3.245,1428,4.269,1555,5.258,1556,5.876,1559,6.13,2334,6.13,2335,4.932,2336,7.593,2337,6.358,2338,7.236,2339,4.672,2340,4.269,2341,6.428,2342,5.695,2343,5.876,2344,5.876,2345,5.876,2346,6.204,2347,5.258,2348,5.258,2349,5.258,2350,5.258,2351,6.614,2352,4.932,2353,5.258,2354,5.695,2355,5.695,2356,5.695]],["title/interfaces/MailModuleOptions.html",[87,0.551,2336,4.154]],["body/interfaces/MailModuleOptions.html",[0,0.183,3,0.124,4,0.103,5,0.075,10,0.296,11,0.984,17,0.374,27,0.005,28,0.534,36,1.111,44,0.271,46,1.066,48,0.117,59,0.004,60,0.004,76,1.403,83,1.172,87,0.688,89,1.848,111,2.253,125,2.596,126,2.75,147,2.989,557,2.549,1136,3.056,1427,3.203,1428,4.213,1556,4.611,1559,5.557,2334,5.557,2335,4.868,2336,7.192,2338,7.192,2339,4.611,2340,4.213,2341,6.39,2342,5.621,2343,6.924,2344,6.924,2345,6.924,2346,6.152,2347,5.19,2348,5.19,2349,5.19,2350,5.19,2351,6.559,2352,4.868,2353,5.19,2354,5.621,2355,5.621,2356,5.621]],["title/injectables/MailService.html",[152,0.901,2341,3.691]],["body/injectables/MailService.html",[0,0.191,3,0.129,4,0.107,5,0.079,10,0.308,12,2.833,17,0.323,18,1.381,21,1.788,24,0.73,26,1.135,27,0.005,28,0.692,29,0.692,36,0.906,41,1.079,44,0.277,46,1.109,48,0.121,59,0.004,60,0.004,87,0.716,106,5.257,152,1.459,153,2.17,155,2.36,174,2.137,191,1.816,279,2.471,409,2.542,960,3.428,1117,3.937,1136,4.314,1411,5.72,2339,4.799,2340,4.385,2341,5.976,2344,4.799,2345,4.799,2357,5.85,2358,6.726,2359,6.532,2360,8.708,2361,7.666,2362,6.532,2363,7.285,2364,6.532,2365,5.85,2366,5.85,2367,5.85,2368,5.85,2369,5.066]],["title/interfaces/MailServiceOptions.html",[87,0.551,2361,4.154]],["body/interfaces/MailServiceOptions.html",[0,0.199,3,0.135,4,0.112,5,0.082,10,0.322,11,1.036,12,2.91,17,0.332,21,1.5,27,0.005,36,1.094,44,0.282,46,1.159,48,0.127,59,0.004,60,0.004,87,0.748,89,2.01,106,4.739,152,1.499,155,1.818,174,1.793,191,1.897,279,2.582,409,2.611,960,2.876,1117,4.113,1136,3.323,1411,4.407,2339,5.013,2340,4.581,2341,5.013,2344,6.916,2345,6.916,2357,6.112,2360,8.09,2361,7.469,2363,6.112,2365,6.112,2366,6.112,2367,6.112,2368,6.112,2369,5.293]],["title/modules/ManagementModule.html",[111,1.302,2370,3.691]],["body/modules/ManagementModule.html",[0,0.16,3,0.108,4,0.09,5,0.066,17,0.217,27,0.005,36,0.609,44,0.311,46,0.928,48,0.102,59,0.004,60,0.004,83,0.808,84,1.022,111,2.109,113,2.105,114,3.117,121,3.616,122,2.495,123,2.305,125,3.368,126,3.179,169,1.52,181,2.663,186,1.587,217,1.828,218,1.683,232,2.069,343,6.498,357,3.296,402,5.99,406,2.935,611,2.604,612,2.663,613,2.549,614,2.549,615,2.663,699,3.533,794,3.532,1126,5.627,1132,5.99,1147,4.242,1148,4.242,1167,6.733,1193,6.814,1197,6.227,1304,4.522,1305,3.407,1306,4.522,1307,4.522,1423,2.725,1635,3.015,1783,6.814,1833,6,1834,6,1835,6,1905,4.242,1906,4.018,1907,4.242,2370,7.464,2371,4.898,2372,4.898,2373,5.468,2374,5.468,2375,4.242,2376,4.242,2377,6.498,2378,6.498,2379,5.627,2380,4.898,2381,5.468,2382,5.468,2383,5.468,2384,5.468,2385,5.468,2386,4.522,2387,5.468,2388,4.018,2389,4.018,2390,4.018,2391,4.898,2392,6.498,2393,4.898,2394,4.242,2395,3.532,2396,5.468]],["title/modules/MongoMemoryDatabaseModule.html",[111,1.302,2397,3.897]],["body/modules/MongoMemoryDatabaseModule.html",[0,0.147,3,0.099,4,0.082,5,0.06,12,1.751,17,0.272,18,0.853,21,1.105,24,0.615,26,0.701,27,0.005,28,0.428,29,0.428,41,1.132,44,0.289,46,0.853,48,0.156,59,0.003,60,0.003,76,1.601,83,1.238,111,2.171,113,1.935,125,2.079,126,2.203,147,2.394,155,2.337,174,2.05,181,2.448,186,1.459,191,2.438,217,1.727,218,1.547,220,3.899,232,1.902,357,5.285,379,2.505,409,2.438,442,2.936,483,2.698,557,2.784,806,2.698,838,2.16,909,2.505,910,3.132,1117,4.131,1136,4.081,1210,3.246,1228,3.246,1416,3.246,1423,3.416,1427,3.499,1497,4.602,1555,4.157,1556,5.036,1559,5.871,1892,3.375,2264,3.693,2325,3.246,2375,6.5,2376,3.899,2379,5.317,2389,5.036,2397,6.051,2398,6.451,2399,6.805,2400,6.987,2401,4.502,2402,7.505,2403,5.026,2404,8.769,2405,5.026,2406,6.14,2407,6.14,2408,6.987,2409,8.106,2410,5.026,2411,6.14,2412,4.502,2413,6.14,2414,4.502,2415,4.502,2416,4.502,2417,4.157,2418,3.693,2419,3.693,2420,4.157,2421,3.521,2422,4.502,2423,4.157,2424,3.899,2425,4.502,2426,4.502,2427,4.502,2428,4.502,2429,4.502,2430,4.502,2431,5.026,2432,3.521,2433,5.026,2434,4.502,2435,6.855,2436,5.669,2437,3.521,2438,3.693,2439,4.502,2440,5.026,2441,5.026]],["title/classes/MoveElementParams.html",[0,0.147,711,3.897]],["body/classes/MoveElementParams.html",[0,0.272,2,1.288,3,0.131,4,0.108,5,0.08,10,0.313,11,1.105,17,0.325,24,0.736,27,0.005,29,0.563,31,2.703,44,0.256,48,0.153,59,0.004,60,0.004,64,1.922,211,2.096,371,3.755,550,2.506,663,2.902,665,3.651,688,4.663,689,4.791,690,2.791,692,6.027,694,3.755,711,6.363,716,3.38,717,3.38,774,3.755,827,3.651,848,4.446,1035,3.555,1932,3.991,1985,4.446,2250,3.38,2442,5.931,2443,7.918,2444,8.203,2445,6.622,2446,6.622,2447,7.982,2448,8.343,2449,5.476,2450,5.476,2451,5.476,2452,4.446,2453,5.136,2454,7.37,2455,5.476]],["title/classes/MoveElementPosition.html",[0,0.147,2443,4.154]],["body/classes/MoveElementPosition.html",[0,0.274,2,1.205,3,0.122,4,0.101,5,0.075,10,0.292,11,1.128,17,0.343,24,0.776,27,0.005,29,0.774,31,2.91,44,0.246,48,0.146,59,0.004,60,0.004,64,2.283,211,2.209,371,4.461,550,2.977,663,3.447,665,4.337,688,4.572,689,4.595,690,2.611,692,5.78,694,3.513,711,4.805,716,4.412,717,4.412,774,4.461,827,4.337,848,5.804,1035,4.223,1932,4.741,1985,5.281,2250,4.015,2442,5.548,2443,7.521,2447,7.743,2448,8.145,2449,5.123,2450,6.506,2451,6.506,2452,5.281,2453,6.102,2454,7.149,2455,6.506,2456,6.194,2457,6.194,2458,7.866,2459,6.194,2460,6.194]],["title/classes/News.html",[0,0.147,550,1.901]],["body/classes/News.html",[0,0.203,2,0.658,3,0.067,4,0.123,5,0.041,8,1.788,10,0.16,11,0.638,16,2.842,17,0.385,18,0.874,21,0.743,24,0.862,26,0.718,27,0.005,28,0.672,29,0.752,32,2.636,36,1.047,41,0.559,44,0.264,48,0.139,50,1.159,59,0.003,60,0.003,83,0.499,84,1.401,87,0.371,162,2.145,163,3.999,164,3.936,166,2.627,169,2.283,172,1.764,190,2.369,208,2.17,209,1.573,210,1.349,211,2.381,212,1.512,214,1.512,216,3.299,217,0.852,218,1.041,222,3.107,229,3.534,234,2.358,242,2.017,243,2.208,245,2.053,247,1.783,248,1.836,251,1.611,252,1.106,256,3.736,263,1.647,264,1.647,265,1.647,266,1.647,267,1.453,268,1.373,271,1.685,275,2.592,277,2.038,278,2.627,279,1.28,280,3.884,284,3.329,286,1.915,297,2.107,394,1.975,451,1.982,454,3.464,462,2.937,469,2.452,483,1.815,484,2.107,503,3.884,510,2.107,529,1.975,533,1.975,548,2.107,549,2.484,550,3.693,551,4.121,552,3.846,553,3.74,554,5.119,555,4.678,556,4.842,557,2.531,558,3.993,561,3.456,562,4.341,563,3.606,566,3.782,567,4.341,568,3.782,569,3.606,570,2.627,571,3.208,572,3.606,576,3.534,577,3.884,580,3.106,582,3.456,584,3.782,586,3.782,587,5.752,589,2.507,590,2.484,591,4.341,592,2.484,593,2.627,594,3.456,595,3.208,596,2.038,597,2.484,598,2.484,599,2.484,600,2.484,601,1.918,602,2.484,603,2.484,604,2.484,605,2.484,606,2.484,607,2.484,608,2.484,609,2.484,610,3.782,611,2.969,612,3.036,613,2.905,614,2.905,615,3.036,616,3.641,617,3.641,618,2.484,619,3.782,620,2.484,621,2.484,622,2.184,623,2.184,624,2.484,2461,5.147,2462,3.381,2463,3.381,2464,3.381,2465,3.381,2466,3.381,2467,3.381,2468,3.381,2469,3.381,2470,3.381,2471,3.381,2472,3.381,2473,3.381]],["title/controllers/NewsController.html",[697,2.246,2474,4.154]],["body/controllers/NewsController.html",[0,0.114,3,0.077,4,0.064,5,0.047,10,0.184,11,0.711,12,1.36,17,0.331,18,0.973,24,0.715,26,1.112,27,0.005,28,0.678,29,0.678,36,1.004,41,1.317,44,0.276,46,0.663,48,0.073,59,0.003,60,0.003,66,3.25,76,1.621,83,1.177,84,0.729,155,2.57,169,2.456,171,3.077,172,1.348,174,2.408,186,1.133,188,1.503,189,2.73,191,2.216,209,1.294,211,2.037,454,2.932,546,3.702,550,3.714,570,2.926,589,2.792,594,3.848,637,3.563,647,3.099,660,5.498,663,3.773,690,1.646,697,1.746,699,1.902,701,2.433,706,3.497,710,4.867,721,3.229,722,4.99,723,2.869,724,5.134,725,2.621,726,2.869,727,5.584,728,2.522,734,2.869,737,6.182,740,6.083,741,6.116,742,5.211,1185,4.99,1269,3.702,1335,3.455,1355,4.126,1362,5.594,1633,2.621,1743,4.663,1928,3.229,2013,4.244,2242,5.134,2474,4.74,2475,3.904,2476,4.99,2477,6.791,2478,5.584,2479,3.904,2480,3.904,2481,3.904,2482,5.732,2483,3.904,2484,7.463,2485,3.229,2486,5.498,2487,5.243,2488,4.758,2489,3.904,2490,4.74,2491,3.904,2492,5.732,2493,3.904,2494,5.134,2495,5.732,2496,3.904,2497,5.805,2498,5.732,2499,3.904,2500,4.56,2501,3.497,2502,2.869,2503,3.029,2504,3.497,2505,3.497,2506,3.904,2507,3.497,2508,3.497,2509,3.497,2510,3.497,2511,6.188,2512,3.229,2513,3.497,2514,3.497,2515,3.497,2516,3.497,2517,3.497,2518,3.029,2519,3.229,2520,3.904,2521,3.904,2522,3.904,2523,3.904,2524,5.732,2525,3.904]],["title/classes/NewsFilterQuery.html",[0,0.147,2486,3.691]],["body/classes/NewsFilterQuery.html",[0,0.224,2,1.16,3,0.118,4,0.098,5,0.072,10,0.282,11,0.952,17,0.337,24,0.762,27,0.005,29,0.808,36,0.998,44,0.28,48,0.111,59,0.004,60,0.004,64,2.693,76,1.055,163,4.519,164,4.232,165,5.118,171,4.121,187,3.594,209,1.734,211,2.17,261,2.632,550,3.594,551,4.179,580,2.972,675,5.379,678,4.627,679,4.627,680,5.404,683,6.239,684,5.955,685,4.627,689,5.238,690,2.514,692,6.588,693,5.955,694,3.382,695,4.178,696,3.382,1291,5.641,1990,5.701,2486,5.641,2526,8.031,2527,5.341,2528,5.963,2529,5.379,2530,6.877,2531,5.963,2532,5.963,2533,5.963,2534,5.963,2535,6.877,2536,5.963,2537,7.678,2538,5.963,2539,7.678,2540,6.877,2541,5.963,2542,5.963]],["title/classes/NewsListResponse.html",[0,0.147,2488,3.519]],["body/classes/NewsListResponse.html",[0,0.186,2,0.883,3,0.089,4,0.131,5,0.055,8,1.523,10,0.214,11,0.792,16,2.298,17,0.371,21,0.997,24,0.759,26,0.633,27,0.005,28,0.629,29,0.719,31,2.994,32,3.034,36,1.024,44,0.274,48,0.119,59,0.003,60,0.003,64,2.88,76,1.307,163,2.21,164,3.183,165,2.735,166,2.692,169,2.229,171,2.436,172,2.253,178,2.573,187,2.735,209,1.811,211,2.049,242,1.778,243,2.176,245,1.81,252,1.484,256,2.261,379,3.183,451,1.747,454,3.142,550,3.624,551,3.939,552,3.11,553,2.436,555,3.046,556,2.93,576,2.573,577,2.827,580,3.183,589,2.21,593,3.259,669,3.52,670,2.735,671,3.52,672,3.334,678,3.849,679,3.849,680,3.849,683,4.692,684,3.52,685,2.735,688,4.779,689,4.684,690,1.913,695,3.179,696,3.621,728,2.93,875,2.735,934,5.892,960,3.563,1276,3.179,1756,2.827,1936,3.52,2016,5.121,2017,5.121,2478,3.179,2488,4.474,2502,6.617,2543,3.52,2544,6.31,2545,5.266,2546,4.953,2547,4.537,2548,4.537,2549,4.064,2550,4.064,2551,4.064,2552,4.692,2553,6.111,2554,4.692,2555,5.429,2556,5.281,2557,5.281,2558,4.064,2559,2.735,2560,3.752,2561,3.334,2562,4.953,2563,3.52,2564,3.52]],["title/classes/NewsMapper.html",[0,0.147,2503,3.897]],["body/classes/NewsMapper.html",[0,0.145,2,0.968,3,0.098,4,0.081,5,0.06,10,0.235,16,2.449,17,0.331,18,1.156,24,0.749,26,1.164,27,0.005,28,0.71,29,0.71,41,1.378,44,0.282,48,0.093,59,0.003,60,0.003,76,1.476,83,1.232,84,0.929,163,3.315,164,3.867,165,4.102,169,1.383,186,1.444,187,2.998,454,1.949,550,3.306,551,3.172,552,3.315,553,3.654,557,3.988,647,3.106,660,6.13,663,4.121,710,3.976,749,6.096,949,4.57,952,3.34,953,3.34,1977,5.701,1986,5.701,1989,6.13,1990,3.34,2486,6.13,2497,6.471,2502,6.13,2503,5.28,2565,4.974,2566,6.806,2567,6.806,2568,6.806,2569,6.806,2570,4.974,2571,6.806,2572,4.974,2573,6.806,2574,4.974,2575,6.806,2576,4.974,2577,4.114,2578,7.759,2579,4.114,2580,4.114,2581,4.455,2582,4.974,2583,4.974,2584,4.974,2585,4.974,2586,4.974,2587,4.455,2588,4.974,2589,4.974,2590,4.974,2591,4.974,2592,4.974,2593,4.455,2594,4.974,2595,4.455,2596,6.806,2597,4.974,2598,4.974,2599,4.974,2600,4.974,2601,4.974,2602,4.974,2603,4.974,2604,4.974,2605,4.114,2606,4.974,2607,4.114,2608,4.974,2609,4.455,2610,4.455,2611,6.806,2612,4.974,2613,4.974,2614,4.974,2615,6.806,2616,6.806,2617,4.974,2618,4.974]],["title/modules/NewsModule.html",[111,1.302,2619,3.691]],["body/modules/NewsModule.html",[0,0.18,3,0.122,4,0.101,5,0.074,27,0.005,44,0.304,46,1.05,48,0.115,59,0.004,60,0.004,111,2.036,113,2.38,114,3.376,121,3.916,122,2.822,123,2.606,125,3.25,126,3.443,138,6.718,147,3.742,227,3.409,429,5.975,699,3.827,1210,3.993,1935,4.332,2474,7.516,2478,4.332,2500,6.813,2501,5.538,2619,7.489,2620,5.538,2621,6.183,2622,5.538,2623,5.538,2624,6.718,2625,6.183,2626,7.143,2627,6.183,2628,6.183,2629,5.538,2630,6.183,2631,6.183,2632,6.183,2633,6.183,2634,4.151,2635,3.993,2636,7.038,2637,6.183,2638,6.183,2639,6.183,2640,4.332]],["title/injectables/NewsRepo.html",[152,0.901,2624,3.519]],["body/injectables/NewsRepo.html",[0,0.107,3,0.072,4,0.06,5,0.044,8,1.303,10,0.173,11,0.677,17,0.368,18,0.927,24,0.841,26,1.277,27,0.005,28,0.779,29,0.779,32,3.352,41,1.532,44,0.263,46,0.621,48,0.068,59,0.003,60,0.003,76,1.567,83,0.965,84,0.683,152,0.98,153,1.215,155,2.604,162,2.232,172,1.705,174,2.406,178,3.706,181,3.531,186,1.062,189,3.113,191,2.41,209,1.233,217,1.376,218,1.126,247,1.046,248,1.077,256,2.722,261,2.24,277,4.369,298,6.225,300,5.07,301,3.19,302,4.236,303,4.236,304,3.826,305,2.857,306,4.236,307,4.236,308,4.236,314,2.563,315,6.529,317,2.837,319,2.837,321,2.563,323,2.837,325,2.546,326,2.837,328,2.837,330,2.837,350,3.826,379,2.722,389,4.867,409,2.042,454,3.188,483,1.963,545,2.279,546,3.527,548,4.073,550,3.546,551,4.129,556,3.527,594,4.867,622,4.221,623,4.221,637,2.442,647,2.492,654,4.682,665,3.011,909,2.722,943,4.867,1136,4.315,1154,2.074,1302,2.837,1616,4.802,1800,5.854,1808,3.025,1809,3.025,1810,3.025,1811,3.025,1812,3.025,1813,3.025,1814,3.025,1815,3.025,1816,3.025,1818,3.025,1826,4.802,1828,4.892,1990,4.867,2009,5.907,2012,3.292,2013,3.097,2476,4.802,2529,2.563,2624,3.826,2641,3.658,2642,5.461,2643,4.892,2644,3.658,2645,5.326,2646,3.658,2647,5.461,2648,3.658,2649,7.249,2650,7.249,2651,4.892,2652,3.658,2653,3.658,2654,4.892,2655,3.658,2656,4.517,2657,3.658,2658,3.658,2659,5.461,2660,3.658,2661,5.461,2662,3.658,2663,3.658,2664,5.461,2665,3.658,2666,3.658,2667,3.025,2668,3.658,2669,2.687,2670,2.279,2671,6.536,2672,3.658,2673,3.658,2674,3.658]],["title/classes/NewsResponse.html",[0,0.147,2502,3.691]],["body/classes/NewsResponse.html",[0,0.163,2,0.734,3,0.074,4,0.143,5,0.045,8,0.9,10,0.178,11,0.693,16,2.828,17,0.391,24,0.861,27,0.005,28,0.626,29,0.7,31,2.019,36,1.075,44,0.257,48,0.104,59,0.003,60,0.003,64,2.862,76,1.178,163,3.242,164,3.318,165,4.012,166,3.312,169,2.368,171,3,172,2.338,178,3.169,187,2.274,209,2.017,211,2.45,242,2.608,243,2.424,245,2.655,256,3.318,451,2.152,454,3.427,550,3.76,551,4.236,552,3.827,553,3.573,555,4.469,556,4.299,576,2.139,577,2.351,580,3.318,589,2.722,593,3.757,669,4.335,670,3.368,671,4.335,672,4.106,678,4.436,679,4.436,680,4.436,683,4.891,684,4.335,685,3.368,688,4.634,689,4.299,690,1.59,695,2.643,696,3.775,728,2.437,875,2.274,931,6.367,960,2.356,1276,3.915,1756,3.482,1936,4.335,2016,3.264,2017,3.264,2478,3.915,2488,2.643,2502,5.774,2543,2.926,2544,3.915,2545,2.351,2546,2.926,2552,4.891,2553,5.505,2554,4.891,2555,5.774,2556,5.505,2557,5.505,2558,3.379,2559,3.368,2560,4.622,2561,4.106,2562,5.709,2563,2.926,2564,2.926,2675,3.773,2676,3.773,2677,3.773,2678,3.773,2679,3.773,2680,3.773,2681,3.773,2682,3.773,2683,3.773,2684,5.006,2685,3.773,2686,3.773,2687,2.926,2688,3.773,2689,3.773,2690,3.773,2691,3.773,2692,3.773,2693,3.773]],["title/classes/NewsScope.html",[0,0.147,2656,4.154]],["body/classes/NewsScope.html",[0,0.16,2,1.066,3,0.108,4,0.09,5,0.066,8,1.732,10,0.259,11,0.901,17,0.358,18,1.233,24,0.81,26,1.137,27,0.005,28,0.693,29,0.693,32,3.083,41,1.346,44,0.271,48,0.102,59,0.004,60,0.004,76,1.285,83,1.204,84,1.023,163,2.668,168,3.301,186,1.59,217,1.38,218,1.686,243,1.613,247,1.567,248,1.613,261,2.793,325,2.553,409,2.711,550,2.748,551,2.553,553,2.94,637,4.149,638,3.837,643,5.336,647,3.719,648,5.336,649,5.336,651,5.336,652,3.837,653,4.248,654,5.831,655,4.248,657,4.024,658,5.088,659,4.248,674,5.262,838,2.353,846,2.668,863,2.668,1154,3.106,1545,3.537,1616,4.024,1621,4.906,1822,4.906,1990,4.876,2301,4.529,2645,6.375,2656,7.674,2694,7.298,2695,7.262,2696,7.262,2697,7.262,2698,5.477,2699,7.262,2700,5.477,2701,4.529,2702,5.088,2703,5.477,2704,5.477,2705,5.477,2706,7.262,2707,5.477,2708,5.477,2709,5.477,2710,5.477,2711,5.477]],["title/interfaces/NewsTargetFilter.html",[87,0.551,2645,3.691]],["body/interfaces/NewsTargetFilter.html",[3,0.145,4,0.121,5,0.089,10,0.348,11,1.086,17,0.348,27,0.005,44,0.273,48,0.137,59,0.004,60,0.004,87,0.809,89,2.173,162,2.975,163,4.706,164,4.816,186,2.142,187,4.447,551,3.439,1620,7.991,2645,6.435,2694,6.609,2712,7.378]],["title/injectables/NewsUc.html",[152,0.901,2500,3.373]],["body/injectables/NewsUc.html",[0,0.077,3,0.052,4,0.043,5,0.032,10,0.124,11,0.524,17,0.34,18,0.717,21,0.577,24,0.754,26,1.147,27,0.005,28,0.7,29,0.7,36,0.59,41,1.457,44,0.242,46,0.446,48,0.049,59,0.002,60,0.002,64,0.762,76,1.626,83,1.215,84,0.989,144,4.821,152,0.757,153,0.872,155,2.542,162,3.06,163,4.005,164,3.024,165,4.499,166,3.667,169,1.974,171,1.409,173,4.136,174,2.317,186,0.762,187,1.582,188,1.011,189,4.201,191,2.61,209,1.857,243,1.787,247,1.902,248,1.56,252,1.732,256,1.309,261,1.815,305,1.374,363,1.696,379,2.104,409,2.82,454,1.029,462,1.78,469,3.166,545,1.636,550,3.736,551,3.31,553,4.167,557,2.151,570,3.962,571,2.631,611,1.251,612,1.279,613,1.224,614,1.224,637,3.471,675,4.251,685,1.582,695,1.839,710,4.68,838,1.128,909,2.104,1015,3.102,1136,3.459,1154,1.489,1155,1.489,1343,1.489,1355,2.328,1362,2.835,1433,3.441,1448,2.352,1476,2.352,1477,2.171,1510,2.171,1586,3.782,1595,3.782,1616,5.485,1620,3.492,1624,3.3,1706,1.929,1756,1.636,1844,3.71,1977,4.458,1986,4.458,1989,5.485,1990,4.463,1995,2.466,2009,4.251,2013,1.489,2018,1.929,2125,2.92,2320,3.102,2478,3.71,2500,2.835,2512,3.492,2581,2.352,2587,2.352,2593,5.434,2595,5.434,2610,3.782,2624,4.975,2629,2.352,2645,3.102,2713,2.352,2714,4.222,2715,4.222,2716,4.222,2717,4.222,2718,5.296,2719,2.625,2720,4.222,2721,4.222,2722,2.625,2723,4.222,2724,2.625,2725,4.222,2726,2.625,2727,4.222,2728,4.743,2729,4.743,2730,3.555,2731,4.222,2732,2.625,2733,4.222,2734,2.625,2735,2.625,2736,4.222,2737,2.625,2738,3.102,2739,2.625,2740,5.296,2741,2.625,2742,4.222,2743,2.625,2744,2.352,2745,2.625,2746,2.625,2747,3.492,2748,5.017,2749,2.625,2750,2.352,2751,2.625,2752,6.067,2753,2.625,2754,4.222,2755,2.625,2756,4.222,2757,2.625,2758,5.434,2759,2.625,2760,2.625,2761,2.625,2762,4.222,2763,2.352,2764,4.222,2765,2.625,2766,2.625,2767,4.222,2768,2.625,2769,2.625,2770,5.296,2771,2.625,2772,4.222,2773,2.625,2774,2.625,2775,2.625,2776,2.625,2777,2.625,2778,2.625,2779,2.352,2780,4.222,2781,2.625,2782,2.625,2783,2.625,2784,4.222,2785,2.625,2786,2.625,2787,2.625,2788,2.625,2789,2.625]],["title/interfaces/Options.html",[87,0.551,1136,2.447]],["body/interfaces/Options.html",[0,0.159,3,0.107,4,0.089,5,0.065,10,0.257,11,0.897,17,0.287,27,0.005,29,0.767,36,0.904,44,0.254,48,0.161,59,0.004,60,0.004,64,2.689,76,1.672,83,1.068,87,0.596,89,1.603,122,2.483,155,1.927,174,1.9,188,2.095,191,2.01,252,2.656,261,2.784,275,3.446,276,2.592,279,2.059,282,3.631,402,4.67,404,3.998,406,4.646,407,4.5,409,1.7,417,2.483,960,2.294,1035,2.921,1126,4.221,1127,4.874,1128,4.874,1132,5.245,1134,4.5,1135,4.874,1136,4.511,1138,4.313,1139,6.104,1140,5.313,1142,4.874,1143,5.066,1145,6.219,1146,4.5,1147,4.221,1148,4.221,1149,5.982,1150,3.987,1151,7.275,1152,5.313,1153,4.744,1154,4.908,1155,4.101,1156,6.477,1157,6.477,1158,4.874,1159,5.609,1160,6.477,1161,6.477,1162,4.5,1163,3.391,1164,5.609,1165,4.874,1166,4.874]],["title/classes/PaginationQuery.html",[0,0.147,2487,3.519]],["body/classes/PaginationQuery.html",[0,0.238,2,1.273,3,0.129,4,0.107,5,0.079,10,0.309,11,1.01,17,0.323,24,0.731,27,0.005,29,0.789,31,2.95,44,0.254,48,0.122,59,0.004,60,0.004,64,2.364,211,2.081,247,2.33,248,2.398,673,6.316,689,5.178,690,2.759,694,3.711,838,3.499,846,3.966,943,5.467,1949,6.734,2016,5.178,2017,5.573,2449,5.412,2454,5.412,2487,5.705,2790,6.544,2791,7.195,2792,6.544,2793,4.49,2794,8.143,2795,8.143,2796,8.143,2797,6.544,2798,6.544,2799,7.294,2800,6.544,2801,8.865,2802,5.862,2803,6.544,2804,6.544]],["title/classes/PaginationResponse.html",[0,0.147,2544,3.519]],["body/classes/PaginationResponse.html",[0,0.181,2,1.208,3,0.122,4,0.102,5,0.075,10,0.293,11,0.977,17,0.391,21,1.364,24,0.843,26,0.866,27,0.005,28,0.528,29,0.799,31,3.158,44,0.194,48,0.115,59,0.004,60,0.004,211,2.325,278,4.645,315,5.288,379,3.925,688,4.674,690,2.616,934,6.357,960,3.647,2016,5.695,2017,5.695,2544,5.518,2545,5.853,2805,6.206,2806,7.876,2807,6.206,2808,6.206,2809,6.206,2810,6.206,2811,6.206,2812,6.206,2813,6.206,2814,6.206]],["title/injectables/ParseObjectIdPipe.html",[152,0.901,727,3.519]],["body/injectables/ParseObjectIdPipe.html",[0,0.202,3,0.137,4,0.114,5,0.083,10,0.328,17,0.275,18,1.433,24,0.623,26,0.968,27,0.005,28,0.59,29,0.59,36,1.08,41,1.146,44,0.284,46,1.178,48,0.129,59,0.004,60,0.004,76,1.227,83,1.025,84,1.296,152,1.514,153,2.304,162,2.135,186,2.013,201,3.378,210,3.366,217,1.748,219,3.166,248,2.486,727,5.913,795,4.86,806,3.723,1938,5.913,2559,5.087,2815,8.44,2816,6.213,2817,8.44,2818,6.936,2819,8.44,2820,8.44,2821,6.936,2822,6.936]],["title/classes/PatchGroupParams.html",[0,0.147,718,4.154]],["body/classes/PatchGroupParams.html",[0,0.249,2,1.372,3,0.139,4,0.116,5,0.085,10,0.333,11,1.057,16,3.507,17,0.28,24,0.633,27,0.005,28,0.725,36,0.949,44,0.266,48,0.131,59,0.004,60,0.004,64,2.475,211,1.802,663,3.736,666,6.317,688,4.152,690,2.973,693,6.613,694,4,718,7.051,753,5.249,787,5.56,827,5.249,2823,7.053,2824,7.636,2825,7.053]],["title/interfaces/PlainTextMailContent.html",[87,0.551,102,3.244]],["body/interfaces/PlainTextMailContent.html",[3,0.129,4,0.107,5,0.079,8,2.274,10,0.308,11,1.009,17,0.323,27,0.005,28,0.556,29,0.692,36,1.158,48,0.121,59,0.004,60,0.004,87,1.081,88,5.253,89,1.924,90,4.385,91,5.72,92,5.461,93,4.385,94,4.385,95,5.253,96,4.385,97,4.385,98,4.385,99,5.987,100,4.218,101,4.385,102,5.72,103,6.403,104,6.403,105,5.253,106,4.612,107,4.218,108,4.385,109,4.385,110,4.385]],["title/classes/ResolvedUser.html",[0,0.147,2244,3.244]],["body/classes/ResolvedUser.html",[0,0.178,2,1.19,3,0.121,4,0.1,5,0.074,10,0.289,11,0.968,17,0.394,24,0.883,27,0.005,36,1.115,44,0.244,48,0.145,59,0.004,60,0.004,166,3.622,186,1.775,209,1.941,211,2.514,242,3.366,243,2.666,245,3.427,469,4.093,688,5.023,690,2.578,806,4.188,1993,4.496,1996,4.283,1997,6.313,2000,5.467,2001,5.55,2002,5.55,2244,5.039,2826,5.477,2827,6.115,2828,6.115,2829,6.115,2830,6.115,2831,6.115,2832,6.115,2833,6.115,2834,6.115]],["title/classes/ResolvedUserMapper.html",[0,0.147,2835,4.154]],["body/classes/ResolvedUserMapper.html",[0,0.188,2,1.251,3,0.127,4,0.105,5,0.077,10,0.304,17,0.255,18,1.368,24,0.577,26,0.897,27,0.005,28,0.685,29,0.547,36,0.979,41,1.062,44,0.251,48,0.12,59,0.004,60,0.004,76,1.138,83,0.95,84,1.202,166,3.886,169,2.639,186,1.867,209,1.452,247,1.84,248,1.894,557,3.572,663,3.53,949,5.408,952,4.318,953,4.318,1993,4.601,1996,4.595,2244,5.954,2605,5.319,2607,5.319,2609,5.761,2835,6.662,2836,6.431,2837,7.215,2838,6.431,2839,4.989,2840,5.761,2841,5.761,2842,5.761,2843,5.761,2844,6.431,2845,6.431,2846,6.431,2847,6.431,2848,6.431,2849,5.761,2850,6.431,2851,5.761]],["title/classes/Role.html",[0,0.147,1996,2.504]],["body/classes/Role.html",[0,0.156,2,1.039,3,0.105,4,0.087,5,0.064,8,1.703,10,0.38,11,0.885,17,0.365,21,1.173,24,0.858,26,0.745,27,0.005,28,0.784,29,0.454,32,3.25,36,1.047,44,0.223,48,0.133,50,1.83,59,0.004,60,0.004,84,1.721,87,0.585,166,3.62,172,1.68,208,3.009,209,1.612,210,2.129,211,2.404,212,2.386,214,2.386,216,3.169,217,1.345,218,1.643,222,3.559,232,2.02,242,2.797,243,2.103,245,2.847,247,2.457,248,2.529,251,2.542,252,1.746,263,2.6,264,2.6,265,2.6,266,2.6,268,2.168,275,1.986,284,2.25,286,2.656,462,2.25,471,4.493,482,4.049,501,2.436,505,3.217,506,3.217,570,2.724,580,3.558,694,3.027,1152,3.922,1577,4.611,1691,3.326,1740,4.14,1945,3.922,1993,5.064,1996,4.28,2051,7.102,2052,4.781,2053,4.781,2054,4.14,2055,3.922,2056,6.24,2057,6.394,2058,4.781,2059,4.781,2060,4.14,2852,7.139,2853,4.781,2854,5.338,2855,5.338,2856,5.338]],["title/injectables/RoleRepo.html",[152,0.901,2857,3.691]],["body/injectables/RoleRepo.html",[0,0.17,3,0.115,4,0.095,5,0.07,10,0.274,11,0.936,12,2.023,17,0.352,18,1.282,21,1.277,24,0.826,26,1.238,27,0.005,28,0.802,29,0.755,36,0.934,41,1.385,44,0.262,46,0.986,48,0.108,59,0.004,60,0.004,76,1.484,83,1.115,152,1.354,153,1.93,155,2.622,162,2.956,166,2.449,174,2.478,186,1.686,188,2.236,191,2.331,209,1.894,217,1.464,219,2.651,309,3.501,310,4.645,312,3.676,838,2.496,1996,4.786,2857,5.546,2858,5.809,2859,9.202,2860,6.761,2861,7.548,2862,7.548,2863,7.548,2864,6.761,2865,5.809,2866,7.548,2867,5.809,2868,7.548,2869,5.809,2870,5.809,2871,7.548,2872,7.548,2873,5.809]],["title/injectables/RoleUC.html",[152,0.901,2874,3.691]],["body/injectables/RoleUC.html",[0,0.191,3,0.129,4,0.107,5,0.079,10,0.309,12,2.279,17,0.323,18,1.383,21,1.438,24,0.731,26,1.136,27,0.005,28,0.693,29,0.693,36,0.729,41,1.081,44,0.277,46,1.111,48,0.122,59,0.004,60,0.004,76,1.158,83,0.967,84,1.223,152,1.46,153,2.174,155,2.362,166,4.022,174,2.14,186,1.9,188,2.519,191,1.819,1015,4.808,1467,3.823,1993,4.26,1996,4.623,2003,4.808,2857,7.147,2874,5.983,2875,6.544,2876,8.143,2877,6.544,2878,6.544,2879,8.143,2880,6.544,2881,6.544,2882,6.544,2883,6.544,2884,6.544,2885,6.544,2886,6.544]],["title/classes/School.html",[0,0.147,454,1.968]],["body/classes/School.html",[0,0.193,2,1.288,3,0.131,4,0.108,5,0.08,8,1.956,10,0.313,11,1.017,17,0.387,21,1.455,24,0.836,26,0.924,27,0.005,28,0.815,29,0.563,32,3.104,36,1.037,44,0.256,48,0.123,50,2.27,59,0.004,60,0.004,172,1.93,206,6.428,208,3.458,209,1.852,210,2.641,211,2.277,212,2.961,214,2.961,216,3.155,217,1.669,218,2.039,268,2.689,286,3.051,454,3.214,462,2.791,501,3.022,505,3.991,506,3.991,1960,4.791,1983,4.639,2887,6.622,2888,8.203,2889,5.931,2890,5.931]],["title/classes/SchoolInfoMapper.html",[0,0.147,2577,4.154]],["body/classes/SchoolInfoMapper.html",[0,0.207,2,1.378,3,0.14,4,0.116,5,0.085,10,0.334,17,0.281,18,1.451,24,0.636,26,0.988,27,0.005,28,0.603,29,0.603,41,1.17,44,0.267,48,0.132,59,0.004,60,0.004,76,1.253,83,1.046,84,1.323,186,2.056,454,3.735,557,3.728,663,3.745,949,5.738,952,4.755,953,4.755,2552,7.004,2577,7.068,2891,8.547,2892,5.857,2893,8.547,2894,5.857,2895,7.083,2896,7.083,2897,5.857,2898,7.083]],["title/classes/SchoolInfoResponse.html",[0,0.147,2552,3.691]],["body/classes/SchoolInfoResponse.html",[0,0.204,2,1.358,3,0.138,4,0.114,5,0.084,10,0.33,11,1.051,17,0.336,24,0.76,27,0.005,28,0.827,36,1.056,44,0.218,48,0.13,59,0.004,60,0.004,64,2.648,172,2.232,209,2.195,211,2.165,454,3.716,678,5.106,679,5.106,688,4.443,690,2.942,696,3.958,931,4.89,2552,6.224,2687,5.414,2899,9.122,2900,5.772,2901,5.772,2902,5.772]],["title/classes/SchoolNews.html",[0,0.147,622,3.244]],["body/classes/SchoolNews.html",[0,0.202,2,0.651,3,0.066,4,0.122,5,0.04,8,1.779,10,0.158,11,0.633,16,2.829,17,0.383,18,0.867,24,0.855,26,0.467,27,0.005,28,0.589,29,0.735,32,3.606,36,1.045,41,0.552,44,0.263,48,0.139,50,1.146,59,0.003,60,0.003,83,0.494,84,1.394,87,0.367,162,2.133,163,3.984,164,3.919,166,2.61,169,2.274,172,1.755,190,2.343,208,2.152,209,1.398,210,1.334,211,2.398,212,1.495,214,1.495,216,3.292,217,0.843,218,1.03,222,2.975,229,3.511,234,2.342,242,2,243,2.197,245,2.036,247,1.771,248,1.823,251,1.593,252,1.094,256,3.718,263,1.629,264,1.629,265,1.629,266,1.629,267,1.437,268,1.358,271,1.667,275,2.303,277,2.016,278,2.605,279,1.265,280,3.857,284,3.315,286,1.244,297,2.084,394,1.954,451,1.965,454,3.512,462,2.61,469,2.431,483,1.795,484,2.084,503,4.317,510,2.084,529,1.954,533,1.954,548,2.084,549,2.457,550,3.827,551,4.109,552,3.83,553,3.719,554,5.09,555,4.651,556,4.818,557,2.514,558,3.96,560,2.766,561,3.427,562,4.317,563,3.576,564,2.766,565,2.766,566,3.75,567,4.317,568,3.75,569,3.576,570,2.605,571,3.181,572,3.576,573,2.766,574,2.766,575,2.766,576,3.511,577,3.857,578,2.766,579,2.766,580,3.085,581,2.766,582,3.427,583,2.766,584,3.75,585,2.766,586,3.75,587,5.227,588,2.766,589,2.486,590,2.457,591,3.857,592,2.457,593,1.707,594,2.245,595,2.084,596,2.016,597,2.457,598,2.457,599,2.457,600,2.457,601,1.897,602,2.457,603,2.457,604,2.457,605,2.457,606,2.457,607,2.457,608,2.457,609,2.457,610,3.75,611,2.949,612,3.015,613,2.885,614,2.885,615,3.015,616,3.616,617,3.616,618,2.457,619,3.75,620,2.457,621,2.457,622,3.297,623,2.16,624,2.457,2903,3.344]],["title/classes/Scope.html",[0,0.147,637,2.246]],["body/classes/Scope.html",[0,0.175,2,1.164,3,0.118,4,0.098,5,0.072,10,0.283,11,0.954,17,0.377,18,1.307,21,1.315,24,0.834,26,1.073,27,0.005,28,0.655,29,0.655,41,0.989,44,0.24,48,0.111,59,0.004,60,0.004,76,1.059,83,1.137,217,1.508,218,1.842,247,1.712,248,1.763,325,3.587,409,2.971,637,3.44,647,4.339,648,6.249,649,6.249,651,5.654,652,6.661,654,6.391,657,5.654,658,6.29,838,2.572,846,2.915,875,3.607,1209,5.654,2701,7.034,2904,5.36,2905,7.695,2906,7.695,2907,6.893,2908,5.985,2909,5.985,2910,5.985,2911,5.985,2912,5.985,2913,5.985,2914,7.695,2915,7.695,2916,5.985,2917,5.985,2918,5.985]],["title/classes/ServerConsole.html",[0,0.147,2919,4.154]],["body/classes/ServerConsole.html",[0,0.177,2,1.181,3,0.12,4,0.099,5,0.073,10,0.287,17,0.308,18,1.319,21,1.334,24,0.769,26,1.083,27,0.005,28,0.661,29,0.661,36,0.954,41,1.283,44,0.242,48,0.113,52,2.892,59,0.004,60,0.004,64,2.708,83,1.147,123,3.274,188,2.337,211,1.984,325,4.207,402,5.83,406,5.273,417,2.771,1131,5.438,1134,6.423,1137,6.423,1145,6.407,1407,7.465,1410,5.273,1423,4.268,1646,6.06,1667,5.749,2179,5.625,2380,5.438,2919,6.423,2920,6.071,2921,7.766,2922,6.071,2923,6.324,2924,6.071,2925,7.766,2926,6.024,2927,6.071,2928,6.956,2929,6.071,2930,6.071]],["title/modules/ServerConsoleModule.html",[111,1.302,2931,3.691]],["body/modules/ServerConsoleModule.html",[0,0.195,3,0.132,4,0.109,5,0.08,27,0.005,44,0.305,46,1.133,48,0.124,59,0.004,60,0.004,111,2.136,113,2.569,114,3.542,121,4.108,122,3.046,123,2.813,125,3.41,126,3.612,398,7.181,404,4.904,406,4.425,417,3.046,1146,5.52,1635,3.68,1789,6.848,2293,3.785,2370,7.181,2919,6.817,2931,7.459,2932,5.978,2933,6.674,2934,6.674,2935,8.243,2936,6.674,2937,6.674,2938,5.978,2939,6.674]],["title/controllers/ServerController.html",[697,2.246,2940,4.154]],["body/controllers/ServerController.html",[0,0.213,3,0.144,4,0.119,5,0.088,10,0.344,18,1.476,24,0.654,27,0.005,36,0.968,41,1.203,44,0.227,46,1.237,48,0.135,52,3.469,59,0.004,60,0.004,83,1.076,211,1.861,247,2.487,697,3.886,699,3.547,1407,7.957,1409,6.089,1410,4.665,1411,5.613,1412,5.077,1422,5.649,1423,3.629,2940,7.187,2941,7.282,2942,7.282]],["title/modules/ServerModule.html",[111,1.302,2943,3.691]],["body/modules/ServerModule.html",[0,0.151,3,0.102,4,0.085,5,0.062,17,0.205,27,0.005,36,0.943,44,0.314,46,0.876,48,0.096,57,2.512,59,0.004,60,0.004,83,0.762,84,0.964,111,1.807,112,6.7,113,1.985,114,2.998,118,6.389,121,3.477,122,2.354,123,2.174,126,3.057,169,1.434,181,2.512,186,1.497,217,1.758,218,1.588,232,1.952,234,1.952,279,1.952,357,4.204,424,6.7,611,2.457,612,2.512,613,2.404,614,2.404,615,2.512,699,3.398,794,3.331,1136,3.398,1534,3.613,1535,3.331,1536,3.214,1537,4.001,1789,6.389,1833,5.769,1834,5.769,1835,5.769,1905,4.001,1906,3.789,1907,4.001,2034,4.001,2278,6.7,2293,2.925,2334,6.199,2343,3.789,2344,3.789,2345,3.789,2375,4.001,2376,4.001,2377,6.248,2378,6.248,2379,5.411,2386,4.265,2389,3.789,2390,3.789,2391,4.619,2392,6.248,2393,4.619,2394,4.001,2395,3.331,2619,6.7,2938,4.619,2940,6.537,2943,7.508,2944,4.619,2945,4.619,2946,6.7,2947,5.157,2948,5.157,2949,5.157,2950,3.789,2951,5.157,2952,5.157,2953,5.157,2954,5.157,2955,5.157,2956,5.157,2957,5.157,2958,5.157,2959,5.157,2960,5.157,2961,3.613,2962,5.157,2963,4.619,2964,4.265,2965,5.157]],["title/classes/StorageProvider.html",[0,0.147,269,2.849]],["body/classes/StorageProvider.html",[0,0.162,2,1.078,3,0.109,4,0.091,5,0.067,8,1.745,10,0.262,11,0.907,17,0.387,21,1.218,24,0.875,26,0.773,27,0.005,28,0.471,29,0.697,32,3.298,36,1.119,44,0.256,48,0.103,50,1.899,59,0.004,60,0.004,84,1.367,87,0.607,172,1.722,208,3.085,209,1.653,210,2.21,211,2.462,212,2.477,214,2.477,216,3.452,217,1.396,218,1.706,222,3.592,242,2.867,243,2.155,245,2.919,247,2.094,248,2.155,251,2.639,252,1.812,263,2.698,264,2.698,265,2.698,266,2.698,268,2.25,269,4.15,284,2.335,286,2.722,462,2.335,501,2.528,1516,6.356,1696,7.208,1700,6.761,1702,7.221,2061,7.208,2062,4.962,2063,7.208,2064,4.962,2065,4.962,2066,4.962,2067,4.962,2068,4.962,2069,4.962,2070,4.962,2071,4.962,2072,4.962,2073,4.962,2966,7.318,2967,5.54,2968,5.54,2969,5.54,2970,5.54]],["title/injectables/StorageProviderRepo.html",[152,0.901,1793,3.897]],["body/injectables/StorageProviderRepo.html",[0,0.153,3,0.103,4,0.086,5,0.063,8,1.679,10,0.247,17,0.382,18,1.196,24,0.874,26,1.345,27,0.005,28,0.82,29,0.82,32,3.648,41,1.609,44,0.249,46,0.888,48,0.097,59,0.004,60,0.004,76,0.925,83,0.772,152,1.263,153,1.737,155,2.655,162,2.622,172,2.004,174,2.459,181,4.148,186,1.518,191,1.454,209,1.59,269,4.515,298,6.647,300,6.175,301,4.113,302,5.462,303,5.462,304,4.934,305,3.684,306,5.462,307,5.462,308,5.462,314,3.664,315,6.832,317,4.057,319,4.057,321,3.664,323,4.057,325,3.282,326,4.057,328,4.057,330,4.057,1793,5.462,1808,4.325,1809,4.325,1810,4.325,1811,4.325,1812,4.325,1813,4.325,1814,4.325,1815,4.325,1816,4.325,1818,4.325,2643,6.307,2651,6.307,2971,5.23,2972,5.23,2973,5.23]],["title/classes/Submission.html",[0,0.147,2088,3.244]],["body/classes/Submission.html",[0,0.117,2,0.778,3,0.079,4,0.065,5,0.091,8,1.391,10,0.189,11,0.723,17,0.378,18,0.99,21,0.879,24,0.869,26,0.558,27,0.005,28,0.34,29,0.586,31,2.295,32,2.863,36,0.99,41,0.66,44,0.262,48,0.074,50,1.37,59,0.003,60,0.003,76,1.032,83,0.59,84,1.661,87,0.438,169,2.237,172,1.372,208,2.458,209,1.317,210,1.594,211,2.436,212,1.787,214,1.787,216,3.147,217,1.007,218,1.231,222,3.282,242,2.285,243,1.717,245,2.326,247,2.302,248,2.37,251,1.904,252,2.908,261,1.999,263,1.947,264,1.947,265,1.947,266,1.947,267,1.718,268,1.623,271,1.992,275,1.487,284,3.98,286,2.169,462,2.458,471,4.395,482,2.267,501,1.824,504,3.766,524,5.741,562,3.634,601,2.267,838,2.958,875,3.514,1624,5.54,2074,6.258,2075,3.58,2076,6.778,2077,6.258,2078,6.778,2079,7.525,2080,5.637,2081,7.525,2082,4.33,2083,7.353,2084,3.58,2085,3.58,2086,3.58,2087,2.684,2088,3.766,2089,5.223,2090,5.223,2091,4.822,2092,5.223,2093,5.223,2094,4.822,2095,6.778,2096,5.223,2097,2.582,2098,5.223,2099,7.525,2100,6.166,2101,5.223,2102,3.58,2103,3.58,2104,3.58,2105,3.58,2106,3.58,2107,3.58,2108,3.58,2109,3.101,2110,3.58,2111,3.58,2112,3.58,2974,3.997,2975,3.997,2976,3.997,2977,3.997,2978,3.997,2979,3.997,2980,3.997,2981,3.997,2982,3.997,2983,3.997,2984,3.997]],["title/injectables/SubmissionRepo.html",[152,0.901,2985,4.499]],["body/injectables/SubmissionRepo.html",[0,0.163,3,0.11,4,0.091,5,0.067,10,0.263,12,1.943,17,0.347,18,1.248,21,1.226,24,0.784,26,1.219,27,0.005,28,0.744,29,0.744,41,1.358,44,0.273,46,0.947,48,0.104,59,0.004,60,0.004,76,1.546,83,1.214,152,1.318,153,1.853,155,2.602,162,3.034,173,3.903,174,2.451,186,1.619,188,2.147,191,2.43,217,1.852,218,1.717,219,2.545,232,2.11,309,3.361,310,4.572,312,3.58,409,2.569,455,3.361,524,4.58,545,3.475,546,4.747,627,6.583,631,6.078,637,2.493,647,3.354,654,3.602,863,3.58,1861,4.098,2080,3.907,2082,2.716,2083,4.612,2087,4.935,2088,3.602,2293,3.163,2985,6.583,2986,5.577,2987,7.35,2988,7.35,2989,5.577,2990,7.35,2991,5.577,2992,7.35,2993,5.577,2994,7.35,2995,5.577,2996,7.35,2997,5.577,2998,7.35,2999,5.577]],["title/injectables/SymetricKeyEncryptionService.html",[152,0.901,1528,3.691]],["body/injectables/SymetricKeyEncryptionService.html",[0,0.193,3,0.13,4,0.108,5,0.079,10,0.312,12,2.302,17,0.353,18,1.391,21,1.452,24,0.799,26,1.242,27,0.005,28,0.758,29,0.758,36,1.144,41,1.353,44,0.256,46,1.122,48,0.123,59,0.004,60,0.004,83,1.21,152,1.469,153,2.195,409,2.065,490,4.437,960,3.454,1117,3.983,1411,6.297,1520,7.338,1528,6.019,1550,7.338,1706,6.019,3000,6.609,3001,6.609,3002,6.609,3003,8.193,3004,6.609,3005,8.193,3006,6.609,3007,6.609,3008,5.919,3009,6.609,3010,6.609,3011,6.609,3012,6.609,3013,6.609]],["title/classes/TargetInfoMapper.html",[0,0.147,2579,4.154]],["body/classes/TargetInfoMapper.html",[0,0.206,2,1.375,3,0.139,4,0.116,5,0.085,10,0.334,17,0.28,18,1.449,24,0.634,26,0.986,27,0.005,28,0.601,29,0.601,41,1.167,44,0.266,48,0.131,59,0.004,60,0.004,76,1.25,83,1.044,84,1.32,187,4.26,551,3.294,557,3.725,591,5.936,663,3.741,949,5.731,953,4.745,2553,5.845,2554,6.999,2579,7.06,2892,5.845,2894,5.845,2897,5.845,3014,8.536,3015,8.536,3016,7.068,3017,7.068,3018,7.068]],["title/classes/TargetInfoResponse.html",[0,0.147,2554,3.691]],["body/classes/TargetInfoResponse.html",[0,0.204,2,1.358,3,0.138,4,0.114,5,0.084,10,0.33,11,1.051,17,0.336,24,0.76,27,0.005,28,0.827,36,1.056,44,0.218,48,0.13,59,0.004,60,0.004,64,2.648,172,2.232,209,2.195,211,2.165,551,4.421,678,5.106,679,5.106,688,4.443,690,2.942,696,3.958,931,4.89,2554,6.224,2687,5.414,2900,5.772,2901,5.772,2902,5.772,3019,9.122]],["title/classes/Task.html",[0,0.147,2082,2.447]],["body/classes/Task.html",[0,0.109,2,0.728,3,0.074,4,0.061,5,0.045,8,1.324,10,0.177,11,0.688,17,0.377,18,0.943,21,0.822,24,0.871,26,0.774,27,0.005,28,0.758,29,0.793,32,2.773,36,0.946,41,1.094,44,0.265,48,0.103,50,1.282,59,0.003,60,0.003,64,1.922,76,0.662,83,1.082,84,1.532,87,0.41,162,2.256,169,2.177,172,1.306,173,1.607,191,1.04,208,2.34,209,1.254,210,1.491,211,2.405,212,1.672,214,1.672,216,3.21,217,0.942,218,1.151,222,3.213,232,2.506,233,1.956,239,2.254,242,2.175,243,2.569,245,2.214,247,2.24,248,2.306,251,1.781,252,2.561,261,2.911,263,1.821,264,1.821,265,1.821,266,1.821,267,1.607,268,1.519,271,1.864,275,1.391,279,2.101,282,1.672,284,3.677,286,2.065,409,2.446,451,3.358,453,3.868,459,4.156,462,1.576,471,3.834,480,4.306,482,2.12,483,2.007,499,2.747,501,1.706,504,3.586,505,2.254,506,2.254,529,3.243,530,3.89,533,2.184,535,4.639,536,2.62,562,3.459,571,3.459,901,2.747,1138,2.767,1139,2.415,1331,2.747,1624,2.33,1757,2.747,2030,5.096,2082,3.569,2087,4.92,2088,3.586,2097,4.733,2113,6.06,2114,3.092,2115,5.684,2116,5.134,2117,5.134,2118,3.349,2119,3.349,2120,6.06,2121,3.092,2122,4.079,2123,4.973,2124,4.973,2125,2.062,2126,4.973,2127,2.9,2128,4.591,2129,4.566,2130,4.973,2131,2.9,2132,3.349,2133,3.092,2134,3.349,2135,6.564,2136,6.564,2137,3.349,2138,4.973,2139,3.349,2140,3.349,2141,3.349,2142,3.349,2143,3.349,2144,3.349,2145,4.973,2146,3.349,2147,3.349,2148,3.349,2149,3.349,2150,2.62,2151,3.349,3020,3.739,3021,3.739,3022,3.739,3023,3.739,3024,3.739,3025,3.739,3026,3.739,3027,3.739,3028,3.739,3029,3.739,3030,3.739,3031,3.739,3032,3.739]],["title/injectables/TaskAuthorizationService.html",[152,0.901,3033,3.691]],["body/injectables/TaskAuthorizationService.html",[0,0.179,3,0.121,4,0.101,5,0.074,10,0.29,12,2.142,17,0.311,18,1.33,21,1.351,24,0.703,26,1.092,27,0.005,28,0.666,29,0.666,41,1.016,44,0.269,46,1.044,48,0.146,59,0.004,60,0.004,76,1.385,83,0.908,152,1.404,153,2.043,155,2.296,162,2.792,169,2.177,173,2.642,174,2.057,186,1.785,188,2.367,191,2.177,282,2.749,534,4.518,570,4.629,580,3.065,625,6.708,807,5.057,809,5.057,827,4.317,911,5.057,1658,5.257,1664,5.753,1743,3.832,1755,4.518,2028,3.971,2029,4.308,3033,5.753,3034,5.508,3035,7.83,3036,6.149,3037,6.149,3038,7.83,3039,7.5,3040,6.149,3041,6.475,3042,7.013,3043,7.013,3044,5.508,3045,4.77,3046,6.149,3047,5.508,3048,6.149,3049,6.149,3050,7.83,3051,6.149,3052,5.508]],["title/controllers/TaskController.html",[697,2.246,3053,4.154]],["body/controllers/TaskController.html",[0,0.179,3,0.121,4,0.101,5,0.074,10,0.29,12,2.142,17,0.244,18,1.33,24,0.552,26,0.858,27,0.005,28,0.523,29,0.523,41,1.016,44,0.307,46,1.044,48,0.114,59,0.004,60,0.004,76,1.605,83,1.157,84,1.149,155,2.296,174,2.057,186,1.785,188,2.367,191,1.71,211,1.571,647,3.573,663,2.695,690,2.592,697,2.749,699,2.995,701,3.832,723,4.518,725,4.128,726,4.518,728,3.971,734,4.518,741,5.651,742,4.868,863,3.814,2016,4.574,2017,4.574,2476,6.329,2485,5.085,2487,6.967,2545,4.879,3053,6.475,3054,6.149,3055,4.308,3056,6.149,3057,6.329,3058,6.149,3059,4.77,3060,5.085,3061,6.149,3062,6.149,3063,6.149,3064,6.149,3065,6.149,3066,6.149,3067,6.149,3068,6.149,3069,6.149]],["title/classes/TaskListResponse.html",[0,0.147,3059,3.897]],["body/classes/TaskListResponse.html",[0,0.214,2,1.083,3,0.11,4,0.091,5,0.067,8,1.751,10,0.263,11,0.91,17,0.37,21,1.224,24,0.815,26,0.777,27,0.005,28,0.625,29,0.772,31,3.107,32,3.305,36,1.011,44,0.229,48,0.137,52,2.652,59,0.004,60,0.004,64,1.616,209,1.257,211,2.232,242,2.181,243,2.572,245,2.221,252,1.821,261,2.517,379,3.659,459,3.158,663,2.44,665,3.07,688,4.754,689,5.101,690,2.347,728,3.596,802,3.356,919,3.07,934,6.417,960,3.826,2016,5.445,2017,5.445,2082,2.712,2115,4.319,2117,3.901,2129,3.469,2155,3.901,2156,3.901,2157,3.901,2160,3.596,2544,6.66,2545,5.656,2546,5.695,2549,4.987,2550,4.987,2551,4.987,2563,4.319,2564,4.319,3059,5.695,3070,4.987,3071,7.373,3072,5.568,3073,5.568,3074,7.222,3075,4.605,3076,4.987]],["title/classes/TaskMapper.html",[0,0.147,3060,4.154]],["body/classes/TaskMapper.html",[0,0.189,2,1.261,3,0.128,4,0.106,5,0.078,10,0.306,17,0.257,18,1.374,24,0.582,26,0.904,27,0.005,28,0.551,29,0.551,41,1.071,44,0.253,48,0.121,59,0.004,60,0.004,76,1.562,83,0.957,84,1.211,186,1.881,459,3.675,557,3.584,663,3.547,949,5.434,952,4.351,953,4.351,2082,3.157,2129,4.039,2155,4.541,2156,4.541,2157,4.541,2159,6.792,2160,4.186,2605,5.36,2607,5.36,2897,5.36,3060,6.694,3071,7.171,3077,6.481,3078,8.094,3079,6.481,3080,8.094,3081,6.481,3082,6.481,3083,6.481,3084,6.481,3085,6.481,3086,6.481,3087,6.481,3088,6.481,3089,6.481,3090,6.481,3091,6.481,3092,6.481,3093,6.481,3094,6.481,3095,6.481,3096,6.481,3097,6.481,3098,6.481,3099,6.481,3100,6.481,3101,6.481,3102,6.481]],["title/modules/TaskModule.html",[111,1.302,2946,3.691]],["body/modules/TaskModule.html",[0,0.19,3,0.128,4,0.107,5,0.078,27,0.005,44,0.308,46,1.105,48,0.121,59,0.004,60,0.004,111,2.102,113,2.505,114,3.486,121,4.044,122,2.969,123,2.743,125,3.356,126,2.851,625,6.805,638,4.558,699,3.952,1447,3.921,1467,3.8,2287,7.136,2946,7.562,3033,7.136,3044,5.828,3053,7.312,3057,7.136,3103,5.828,3104,5.828,3105,7.136,3106,6.506,3107,6.506,3108,6.506]],["title/injectables/TaskRepo.html",[152,0.901,3105,3.691]],["body/injectables/TaskRepo.html",[0,0.14,3,0.095,4,0.079,5,0.058,10,0.227,12,1.673,17,0.363,18,1.128,21,1.056,24,0.684,26,1.063,27,0.005,28,0.648,29,0.648,41,1.258,44,0.269,46,0.816,48,0.089,59,0.003,60,0.003,64,1.394,76,1.527,83,0.981,84,1.241,152,1.192,153,1.596,155,2.378,162,2.657,174,2.16,178,4.662,186,1.394,188,1.849,189,3.629,191,2.118,217,1.21,218,1.479,243,1.415,252,2.173,261,1.647,309,2.895,310,4.301,312,3.236,379,3.797,409,2.381,451,1.849,502,4.004,544,3.365,545,2.993,546,4.291,637,2.971,647,3.032,654,5.309,909,3.312,1136,4.611,1291,6.558,1302,3.726,1960,4.802,2009,6.411,2012,4.005,2013,4.32,2017,2.806,2029,4.655,2030,4.45,2082,4.004,2087,3.225,2097,5.309,2116,3.365,2122,3.529,2294,5.495,2654,5.952,2744,4.302,3055,4.655,3105,4.882,3109,4.803,3110,7.618,3111,6.645,3112,4.803,3113,4.803,3114,4.803,3115,5.495,3116,5.952,3117,8.629,3118,6.645,3119,4.803,3120,5.495,3121,3.972,3122,4.302,3123,3.972,3124,4.803,3125,4.803,3126,4.803,3127,4.803,3128,4.803,3129,4.803,3130,4.803,3131,4.803,3132,4.803,3133,4.803,3134,4.803,3135,4.803,3136,4.803,3137,4.803,3138,4.803,3139,6.645,3140,4.803,3141,6.645,3142,4.803,3143,4.803,3144,4.803,3145,4.803,3146,4.803]],["title/classes/TaskResponse.html",[0,0.147,3071,3.897]],["body/classes/TaskResponse.html",[0,0.207,2,1.026,3,0.104,4,0.086,5,0.063,8,1.257,10,0.249,11,0.878,17,0.393,24,0.876,27,0.005,28,0.68,29,0.83,31,2.784,36,1.086,44,0.221,48,0.132,52,3.372,59,0.004,60,0.004,64,2.48,209,1.805,211,2.493,242,3.131,243,2.807,245,3.188,261,2.427,459,2.989,663,3.102,665,3.903,688,4.907,689,5.207,690,2.222,728,3.404,802,4.817,919,3.903,960,2.984,1960,3.079,2016,4.135,2017,4.135,2082,3.448,2115,6.2,2117,5.6,2129,3.284,2155,3.693,2156,3.693,2157,3.693,2160,5.162,2544,4.96,2545,3.284,2546,4.088,2563,4.088,2564,4.088,3059,4.088,3070,4.721,3071,6.914,3074,7.066,3075,5.854,3076,7.159,3147,5.271,3148,7.079,3149,5.271,3150,5.271,3151,5.271,3152,5.271,3153,5.271,3154,5.271,3155,5.271,3156,5.271,3157,5.271,3158,5.271]],["title/classes/TaskScope.html",[0,0.147,3120,4.154]],["body/classes/TaskScope.html",[0,0.135,2,0.902,3,0.091,4,0.076,5,0.056,8,1.546,10,0.219,11,0.927,17,0.373,18,1.101,24,0.854,26,1.264,27,0.005,28,0.771,29,0.787,32,2.829,41,1.497,44,0.202,48,0.086,59,0.003,60,0.003,76,0.82,83,1.304,162,3.011,173,2.786,186,1.346,232,1.755,238,2.995,243,2.202,247,1.327,248,1.366,252,1.517,261,2.921,279,2.454,282,2.073,325,2.162,379,2.311,409,2.759,451,2.496,544,4.543,637,3.947,638,3.249,643,6.26,647,2.959,648,4.764,649,4.764,651,4.764,652,3.249,653,3.597,654,4.829,655,3.597,657,3.407,658,4.543,659,3.597,1544,3.249,1624,5.309,2030,4.367,2082,2.259,2097,2.995,2116,3.249,2117,5.672,2122,4.764,2129,4.041,2301,3.835,2302,5.808,2304,5.808,2309,4.154,2518,3.597,3120,8.142,3121,5.363,3123,5.363,3159,9.062,3160,6.484,3161,6.484,3162,6.484,3163,6.484,3164,6.484,3165,4.637,3166,6.484,3167,4.637,3168,4.637,3169,6.484,3170,4.637,3171,6.484,3172,4.637,3173,6.484,3174,4.637,3175,4.637,3176,6.484,3177,4.637,3178,3.407,3179,3.407,3180,3.407,3181,4.637,3182,4.637]],["title/injectables/TaskUC.html",[152,0.901,3057,3.691]],["body/injectables/TaskUC.html",[0,0.099,3,0.067,4,0.056,5,0.041,10,0.161,12,2.18,17,0.327,18,0.879,21,1.137,24,0.761,26,1.148,27,0.005,28,0.7,29,0.7,41,1.36,44,0.235,46,0.578,48,0.096,59,0.003,60,0.003,66,3.965,76,1.76,83,1.216,84,1.479,144,4.043,152,0.928,153,1.131,155,2.315,162,2.844,166,1.436,173,4.046,174,2.081,185,4.28,186,0.989,191,2.358,201,1.659,232,1.289,234,1.289,243,1.844,261,1.774,282,3.362,373,2.199,409,3.053,420,1.659,459,3.965,544,4.899,545,3.225,570,3.195,580,1.697,628,4.636,629,4.636,633,4.28,635,4.28,638,2.386,741,3.225,742,4.418,838,2.69,846,2.521,1467,1.989,1577,3.342,1579,2.122,1672,2.286,2012,3.119,2013,5.239,2015,6.871,2018,2.502,2028,3.342,2082,4.231,2091,4.28,2116,3.626,2117,4.899,2122,2.502,2129,4.357,2131,2.642,2155,4.899,2156,4.899,2157,4.899,2159,5.525,2287,6.047,2476,3.802,2485,4.28,2545,4.357,2763,3.05,3033,5.137,3039,2.816,3047,3.05,3052,4.636,3055,3.626,3057,3.802,3105,5.818,3121,4.28,3122,3.05,3123,2.816,3183,3.05,3184,5.175,3185,5.175,3186,6.992,3187,5.175,3188,3.405,3189,3.405,3190,5.175,3191,3.405,3192,5.175,3193,3.405,3194,3.405,3195,3.405,3196,3.405,3197,3.405,3198,5.175,3199,6.263,3200,3.405,3201,3.405,3202,3.05,3203,3.05,3204,3.05,3205,2.816,3206,2.816,3207,3.405,3208,2.642,3209,5.175,3210,3.405,3211,3.405,3212,3.405,3213,3.405,3214,5.175,3215,3.405,3216,5.175,3217,5.175,3218,3.405,3219,5.175,3220,5.175,3221,3.405,3222,6.992,3223,5.175,3224,3.405,3225,3.405,3226,5.175,3227,3.405,3228,3.405,3229,3.405,3230,6.26,3231,3.405,3232,3.405,3233,3.405,3234,6.992,3235,5.175,3236,3.405,3237,3.405,3238,3.405,3239,3.405,3240,3.405,3241,3.405,3242,3.405,3243,3.405,3244,3.405,3245,3.405,3246,3.405,3247,3.405,3248,3.405,3249,3.405,3250,5.175,3251,3.405,3252,2.816]],["title/classes/TaskWithStatusVo.html",[0,0.147,2159,3.691]],["body/classes/TaskWithStatusVo.html",[0,0.198,2,1.322,3,0.134,4,0.111,5,0.082,10,0.321,11,1.034,17,0.358,21,1.494,24,0.809,26,0.948,27,0.005,28,0.578,29,0.578,31,2.735,44,0.212,48,0.126,59,0.004,60,0.004,87,0.745,261,2.857,459,3.854,2082,4.983,2109,5.272,2129,4.235,2152,8.119,2153,8.419,2154,6.087,2155,4.761,2156,4.761,2157,4.761,2158,6.087,2159,6.124,2160,6.422,2161,7.466,2162,6.087,3253,8.335,3254,6.796]],["title/classes/Team.html",[0,0.147,589,2.447]],["body/classes/Team.html",[0,0.193,2,1.288,3,0.131,4,0.108,5,0.08,8,1.956,10,0.313,11,1.017,17,0.387,21,1.455,24,0.836,26,0.924,27,0.005,28,0.815,29,0.563,32,3.104,36,1.037,44,0.256,48,0.123,50,2.27,59,0.004,60,0.004,172,1.93,206,6.428,208,3.458,209,1.852,210,2.641,211,2.277,212,2.961,214,2.961,216,3.155,217,1.669,218,2.039,268,2.689,286,3.051,462,2.791,501,3.022,505,3.991,506,3.991,589,3.995,1960,4.791,1984,4.639,2889,5.931,2890,5.931,3255,6.622,3256,8.203]],["title/classes/TeamNews.html",[0,0.147,623,3.244]],["body/classes/TeamNews.html",[0,0.202,2,0.651,3,0.066,4,0.122,5,0.04,8,1.779,10,0.158,11,0.633,16,2.829,17,0.383,18,0.867,24,0.855,26,0.467,27,0.005,28,0.589,29,0.735,32,3.606,36,1.045,41,0.552,44,0.263,48,0.139,50,1.146,59,0.003,60,0.003,83,0.494,84,1.394,87,0.367,162,2.133,163,3.984,164,3.919,166,2.61,169,2.274,172,1.755,190,2.343,208,2.152,209,1.398,210,1.334,211,2.398,212,1.495,214,1.495,216,3.292,217,0.843,218,1.03,222,2.975,229,3.511,234,2.342,242,2,243,2.197,245,2.036,247,1.771,248,1.823,251,1.593,252,1.094,256,3.718,263,1.629,264,1.629,265,1.629,266,1.629,267,1.437,268,1.358,271,1.667,275,2.303,277,2.016,278,2.605,279,1.265,280,3.857,284,3.315,286,1.244,297,2.084,394,1.954,451,1.965,454,3.454,462,2.61,469,2.431,483,1.795,484,2.084,503,3.857,510,2.084,529,1.954,533,1.954,548,2.084,549,2.457,550,3.827,551,4.109,552,3.83,553,3.719,554,5.09,555,4.651,556,4.818,557,2.514,558,3.96,560,2.766,561,3.427,562,4.317,563,3.576,564,2.766,565,2.766,566,3.75,567,4.317,568,3.75,569,3.576,570,2.605,571,3.181,572,3.576,573,2.766,574,2.766,575,2.766,576,3.511,577,3.857,578,2.766,579,2.766,580,3.085,581,2.766,582,3.427,583,2.766,584,3.75,585,2.766,586,3.75,587,5.227,588,2.766,589,3.015,590,2.457,591,3.857,592,2.457,593,1.707,594,2.245,595,2.084,596,2.016,597,2.457,598,2.457,599,2.457,600,2.457,601,1.897,602,2.457,603,2.457,604,2.457,605,2.457,606,2.457,607,2.457,608,2.457,609,2.457,610,3.75,611,2.949,612,3.015,613,2.885,614,2.885,615,3.015,616,3.616,617,3.616,618,2.457,619,3.75,620,2.457,621,2.457,622,2.16,623,3.297,624,3.75,3257,3.344]],["title/controllers/TeamNewsController.html",[697,2.246,2626,4.154]],["body/controllers/TeamNewsController.html",[0,0.167,3,0.113,4,0.094,5,0.069,10,0.27,12,1.989,17,0.227,18,1.267,24,0.513,26,0.797,27,0.005,28,0.486,29,0.486,36,0.926,41,0.943,44,0.303,46,0.97,48,0.106,59,0.004,60,0.004,66,4.233,76,1.471,83,0.843,84,1.067,155,2.216,169,2.075,174,1.961,186,1.657,188,2.198,189,2.72,191,1.587,211,1.459,546,4.821,550,2.824,589,4.457,637,3.718,647,3.795,663,2.502,690,2.407,697,2.553,699,2.781,701,3.558,723,4.195,725,3.834,726,4.195,727,5.23,728,3.688,734,4.195,737,4.429,741,5.703,742,4.734,1154,3.238,1335,5.012,1391,4.429,1447,3.441,1984,4,2013,5.001,2250,2.914,2486,6.48,2487,6.179,2488,4,2490,6.173,2500,5.583,2503,4.429,2504,5.114,2505,5.114,2511,4.722,2512,4.722,2513,5.114,2514,5.114,2515,5.114,2516,5.114,2517,5.114,2626,6.173,3258,7.464,3259,5.71,3260,8.316,3261,5.71,3262,7.464,3263,5.71,3264,8.316,3265,5.71,3266,5.71,3267,5.114,3268,5.71,3269,5.71]],["title/classes/TestBootstrapConsole.html",[0,0.147,3270,4.499]],["body/classes/TestBootstrapConsole.html",[0,0.2,2,1.333,3,0.135,4,0.112,5,0.082,8,1.998,10,0.323,18,1.422,24,0.615,27,0.005,36,0.763,41,1.132,44,0.262,48,0.156,59,0.004,60,0.004,76,1.482,83,1.237,126,3.002,155,1.826,174,2.377,191,1.905,406,4.497,417,3.127,611,3.263,612,3.337,613,3.193,614,3.193,615,3.337,616,4.002,1021,5.315,1355,5.197,1410,3.678,1414,5.666,1415,6.137,1426,5.315,1429,5.034,2635,4.425,2926,6.498,3270,7.503,3271,6.137,3272,9.048,3273,6.851,3274,7.503,3275,6.851,3276,5.666,3277,6.137,3278,6.137,3279,6.137,3280,6.137]],["title/injectables/TimeoutInterceptor.html",[152,0.901,2183,4.154]],["body/injectables/TimeoutInterceptor.html",[0,0.161,3,0.109,4,0.091,5,0.067,10,0.261,11,0.907,17,0.325,18,1.241,24,0.813,26,1.02,27,0.005,28,0.622,29,0.741,31,2.822,41,1.208,44,0.272,46,0.939,48,0.103,59,0.004,60,0.004,64,1.606,83,1.287,134,4.574,152,1.311,153,1.837,247,1.583,248,1.629,325,2.578,409,2.559,557,3.325,611,2.635,612,2.694,613,4.06,614,2.578,615,2.694,616,3.231,697,3.268,806,2.969,1209,5.371,1335,4.406,1413,5.67,1418,6.045,1425,5.121,1482,4.954,1498,6.548,1499,6.548,1500,6.757,1501,7.802,1503,3.05,1504,7.334,1507,4.574,1509,4.954,1635,4.031,1636,3.924,1656,4.574,1819,7.334,1826,4.064,2125,3.05,2181,6.519,2183,6.045,2438,5.371,3281,5.531,3282,7.31,3283,5.371,3284,5.121,3285,6.045,3286,8.188,3287,8.188,3288,5.531,3289,5.531,3290,6.771,3291,5.531,3292,5.531,3293,5.531,3294,5.531,3295,5.531,3296,7.31,3297,7.31,3298,5.531,3299,7.31,3300,5.531,3301,5.531,3302,5.531,3303,5.531,3304,5.531,3305,5.531,3306,7.31,3307,5.531,3308,5.531]],["title/classes/UpdateNewsParams.html",[0,0.147,2497,3.897]],["body/classes/UpdateNewsParams.html",[0,0.264,2,1.192,3,0.121,4,0.1,5,0.074,10,0.289,11,1.123,16,3.366,17,0.341,24,0.772,27,0.005,29,0.665,36,1.009,44,0.244,48,0.114,59,0.004,60,0.004,64,2.629,172,2.25,211,2.198,243,2.301,550,3.724,552,4.557,553,4.616,662,5.067,663,3.423,665,4.307,667,5.487,669,6.059,670,4.708,671,6.059,672,5.739,689,5.29,690,2.583,691,6.997,692,6.654,693,6.671,694,3.474,1035,4.193,1932,4.708,1985,5.245,2450,6.46,2451,6.46,2452,5.245,2453,6.059,2497,6.059,3309,9.057,3310,7.812,3311,6.126,3312,6.126,3313,6.126]],["title/classes/User.html",[0,0.147,169,1.397]],["body/classes/User.html",[0,0.148,2,0.985,3,0.1,4,0.083,5,0.061,8,1.643,10,0.415,11,0.854,17,0.38,21,1.113,24,0.869,26,0.706,27,0.005,28,0.715,29,0.748,32,3.181,36,1.078,44,0.262,48,0.128,50,1.736,59,0.004,60,0.004,84,1.57,87,0.555,169,1.916,172,1.621,208,2.904,209,1.556,210,2.02,211,2.447,212,2.264,214,2.264,216,3.285,217,1.276,218,1.559,222,3.512,242,2.699,243,2.029,245,2.748,247,2.241,248,2.307,251,2.412,252,2.561,263,2.466,264,2.466,265,2.466,266,2.466,267,2.176,268,2.057,275,1.884,284,3.543,286,2.563,454,3.7,462,2.135,469,3.282,471,3.605,482,2.872,484,3.156,501,2.311,503,3.156,509,3.928,510,3.156,1577,4.45,1993,4.745,1995,2.958,1996,3.434,2001,5.429,2002,5.429,2056,3.928,2060,3.928,2163,6.951,2164,4.536,2165,5.889,2166,4.536,2167,4.536,2168,4.536,2169,4.536,2170,4.536,2171,4.536,2172,4.536,2173,4.536,2174,4.536,2175,4.536,2853,4.536,3314,6.89,3315,5.064,3316,5.064,3317,5.064,3318,5.064,3319,6.89,3320,5.064,3321,5.064,3322,5.064]],["title/controllers/UserController.html",[697,2.246,3323,4.154]],["body/controllers/UserController.html",[0,0.198,3,0.134,4,0.111,5,0.082,10,0.32,12,2.362,17,0.269,18,1.414,24,0.609,26,0.946,27,0.005,28,0.577,29,0.577,41,1.12,44,0.306,46,1.152,48,0.126,59,0.004,60,0.004,83,1.002,155,2.4,169,1.886,174,2.187,186,1.969,188,2.611,211,1.733,690,2.859,697,3.032,699,3.303,701,4.226,723,4.983,725,4.554,726,4.983,734,4.983,741,5.613,742,5.042,1447,4.088,2244,4.38,3323,6.885,3324,6.782,3325,6.782,3326,8.325,3327,6.782,3328,6.311,3329,6.782,3330,6.782,3331,6.782,3332,6.782,3333,6.782]],["title/injectables/UserFacade.html",[152,0.901,2223,3.691]],["body/injectables/UserFacade.html",[0,0.198,3,0.134,4,0.111,5,0.082,10,0.321,12,2.367,17,0.331,18,1.415,21,1.494,24,0.748,26,1.163,27,0.005,28,0.709,29,0.709,41,1.123,44,0.293,46,1.154,48,0.126,59,0.004,60,0.004,76,1.202,83,1.004,152,1.495,153,2.258,155,2.402,162,2.894,173,2.92,174,2.19,186,1.973,188,2.616,191,1.889,952,4.563,2223,6.124,2244,5.823,3328,6.878,3334,6.796,3335,8.335,3336,6.796,3337,6.796,3338,8.335,3339,6.796,3340,6.796,3341,6.796]],["title/classes/UserInfoMapper.html",[0,0.147,2580,4.154]],["body/classes/UserInfoMapper.html",[0,0.205,2,1.369,3,0.139,4,0.115,5,0.085,10,0.332,17,0.279,18,1.446,24,0.632,26,0.982,27,0.005,28,0.599,29,0.599,41,1.163,44,0.266,48,0.131,59,0.004,60,0.004,76,1.245,83,1.04,84,1.315,169,2.708,186,2.043,557,3.718,663,3.731,949,5.717,952,4.725,953,4.725,2555,6.989,2580,7.042,2837,7.627,2839,5.459,2840,6.304,2841,6.304,2842,6.304,2843,6.304,2892,5.82,2894,5.82,3342,8.515]],["title/classes/UserInfoResponse.html",[0,0.147,2555,3.691]],["body/classes/UserInfoResponse.html",[0,0.193,2,1.286,3,0.13,4,0.108,5,0.079,10,0.312,11,1.016,17,0.353,24,0.799,27,0.005,28,0.792,29,0.792,36,1.086,44,0.206,48,0.123,59,0.004,60,0.004,64,2.702,169,2.711,172,1.927,209,2.161,211,2.275,678,4.938,679,4.938,688,3.99,689,5.201,690,2.786,696,3.748,2001,5.751,2002,5.751,2555,6.019,2684,7.338,2687,5.126,2730,5.501,2900,5.465,2901,5.465,2902,5.465,3343,9.308,3344,7.338,3345,6.609]],["title/modules/UserModule.html",[111,1.302,118,3.519]],["body/modules/UserModule.html",[0,0.19,3,0.128,4,0.106,5,0.078,27,0.005,44,0.297,46,1.103,48,0.121,59,0.004,60,0.004,111,2.1,113,2.5,114,3.482,118,7.231,121,4.039,122,2.964,123,2.737,125,3.352,147,3.86,697,2.903,699,3.947,1447,3.914,1467,3.793,2223,7.504,2857,7.133,2874,7.133,3323,7.306,3328,6.802,3346,5.816,3347,5.816,3348,5.816,3349,6.802,3350,6.494,3351,6.494]],["title/injectables/UserRepo.html",[152,0.901,3349,3.519]],["body/injectables/UserRepo.html",[0,0.198,3,0.134,4,0.111,5,0.082,10,0.321,12,2.367,17,0.331,18,1.415,21,1.494,24,0.748,26,1.163,27,0.005,28,0.709,29,0.709,41,1.123,44,0.281,46,1.154,48,0.126,59,0.004,60,0.004,76,1.202,83,1.004,152,1.495,153,2.258,155,2.402,162,2.894,169,2.507,174,2.19,186,1.973,188,2.616,191,1.889,209,1.882,217,1.713,219,3.101,309,4.096,310,4.918,312,4.06,2860,7.466,2864,7.466,3349,5.84,3352,6.796,3353,6.796,3354,6.796,3355,6.796]],["title/injectables/UserUC.html",[152,0.901,3328,3.519]],["body/injectables/UserUC.html",[0,0.182,3,0.123,4,0.102,5,0.075,10,0.295,12,2.753,17,0.314,18,1.342,21,1.372,24,0.709,26,1.103,27,0.005,28,0.672,29,0.672,41,1.031,44,0.3,46,1.06,48,0.116,59,0.004,60,0.004,76,1.613,83,0.922,152,1.418,153,2.073,155,2.311,162,2.807,169,1.735,173,2.681,174,2.077,186,1.811,188,2.402,191,2.197,232,2.361,409,1.95,420,3.039,1467,4.617,1993,4.135,1995,3.645,2244,5.602,2835,5.161,2874,7.172,3328,5.537,3349,6.734,3356,6.24,3357,7.903,3358,6.24,3359,6.24,3360,7.903,3361,6.24,3362,5.161,3363,6.24,3364,6.24,3365,4.372,3366,5.161,3367,5.161,3368,5.161,3369,5.161,3370,6.24,3371,6.24,3372,5.589,3373,6.24,3374,5.589,3375,6.24,3376,6.24]],["title/classes/ValidationError.html",[0,0.147,23,3.691]],["body/classes/ValidationError.html",[0,0.177,2,1.181,3,0.12,4,0.099,5,0.073,8,1.852,9,6.714,10,0.287,11,0.963,12,3.483,13,3.544,14,5.751,15,5.45,16,3.081,17,0.394,18,1.319,19,7.082,20,7.082,21,1.334,23,5.706,24,0.882,26,0.847,27,0.005,28,0.517,29,0.517,31,1.841,32,3.671,33,5.438,34,6.536,35,5.438,36,1.063,37,5.438,38,5.438,39,5.438,40,5.438,41,1.283,42,5.438,43,3.783,44,0.242,45,4.709,46,1.031,47,5.438,48,0.113,49,5.021,50,2.081,53,3.443,54,2.83,55,4.461,58,5.438,59,0.004,60,0.004,379,3.026,3377,6.071,3378,6.071,3379,6.071,3380,6.071]],["title/classes/ValidationErrorDetailResponse.html",[0,0.147,71,4.154]],["body/classes/ValidationErrorDetailResponse.html",[0,0.218,2,1.455,3,0.147,4,0.123,5,0.09,12,2.604,17,0.297,21,1.643,24,0.671,26,1.043,27,0.005,28,0.636,29,0.636,36,1.118,48,0.139,49,6.183,54,4.115,59,0.004,60,0.004,68,5.18,71,7.301,3381,8.828,3382,7.477,3383,7.477,3384,7.477,3385,7.301]],["title/modules/ValidationModule.html",[111,1.302,430,3.691]],["body/modules/ValidationModule.html",[0,0.219,3,0.148,4,0.123,5,0.09,27,0.005,44,0.294,46,1.272,48,0.139,59,0.004,60,0.004,111,2.29,113,2.885,125,3.1,430,6.495,444,7.918,1416,4.84,1427,3.825,1570,5.813,1925,7.31,3386,7.493,3387,7.493,3388,7.493]],["title/changelog.html",[3389,3.255,3390,2.94,3391,3.759]],["body/changelog.html",[0,0.059,2,0.813,3,0.012,4,0.01,5,0.062,10,0.028,13,1.677,14,0.956,15,0.342,24,0.181,27,0.001,28,0.171,29,0.135,31,0.337,41,0.262,44,0.063,52,2.808,53,1.926,54,2.623,56,1.165,57,0.772,59,0.001,60,0.001,64,0.17,68,2.17,83,0.234,84,1.077,87,0.122,106,0.899,111,0.801,114,0.478,122,0.507,123,0.469,125,0.242,126,0.257,147,0.279,150,1.292,155,0.156,166,1.659,168,0.67,169,2.072,171,0.315,172,0.474,173,0.478,174,0.417,175,0.779,178,0.332,181,1.507,182,1.165,189,0.279,191,0.163,201,0.285,208,0.247,209,0.455,221,0.455,226,0.379,227,3.25,230,0.455,233,2.302,234,1.888,236,3.04,238,0.718,239,0.67,242,0.23,243,1.083,247,0.972,248,0.467,256,0.79,274,1.353,275,0.75,276,1.989,279,0.222,281,0.693,282,0.497,301,0.342,305,3.016,335,0.455,350,1.111,352,0.746,357,0.353,363,0.718,369,0.353,370,0.411,371,1.143,372,1.786,373,0.718,374,1.005,389,0.746,406,1.082,413,0.393,417,1.262,420,3.853,421,1.618,432,0.746,436,0.431,438,2.517,440,2.28,442,0.342,451,1.921,454,2.872,455,2.517,457,2.926,469,0.279,483,0.597,485,0.956,494,1.111,495,1.768,496,0.411,502,1.347,524,0.365,534,0.431,550,0.421,551,0.273,552,0.982,569,1.111,570,2.008,576,0.899,582,0.393,589,1.347,611,0.96,612,0.541,613,0.273,615,0.772,617,0.342,637,0.262,647,1.262,664,1.23,665,0.613,670,1.666,673,0.455,674,4.509,680,0.67,685,1.215,701,0.365,702,1.292,710,0.342,721,2.286,725,0.393,767,0.353,774,0.332,787,0.342,798,1.024,807,0.379,810,0.323,812,0.393,817,0.649,827,1.111,838,0.478,846,0.772,863,0.285,909,1.005,912,0.817,913,1.554,916,0.365,918,0.431,919,2.027,921,0.455,943,0.746,960,1.943,1013,0.455,1017,0.431,1035,1.292,1078,0.393,1083,0.393,1094,0.919,1136,0.285,1138,1.378,1139,1.302,1143,1.686,1145,0.393,1149,0.718,1150,1.872,1153,0.926,1154,1.143,1155,0.63,1159,0.862,1210,1.302,1228,1.302,1269,1.302,1275,2.047,1276,1.111,1280,1.867,1281,0.779,1292,0.485,1297,0.693,1298,0.455,1305,1.723,1324,0.455,1331,0.817,1332,0.342,1335,0.67,1343,1.143,1345,1.311,1355,2.17,1358,0.455,1361,1.23,1362,2.28,1363,1.666,1366,0.746,1372,1.302,1382,0.485,1383,5.112,1384,1.353,1409,4.039,1410,2.475,1411,1.024,1412,1.807,1422,0.455,1423,2.574,1427,0.809,1439,0.485,1441,5.04,1442,0.919,1447,0.353,1464,5.168,1467,0.926,1474,2.286,1477,0.485,1478,1.412,1479,0.525,1481,0.431,1486,0.862,1488,1.111,1497,0.746,1503,0.323,1521,1.23,1530,0.525,1534,2.575,1535,0.379,1536,0.988,1537,0.455,1544,1.412,1545,1.024,1546,0.455,1577,0.379,1579,1.256,1580,0.554,1581,0.693,1582,0.779,1606,0.996,1634,0.649,1635,0.323,1636,1.823,1638,2.167,1646,2.28,1653,0.379,1655,0.455,1664,2.273,1665,1.024,1671,1.23,1688,0.485,1690,3.524,1691,0.365,1693,0.919,1706,2.031,1723,0.411,1726,0.862,1731,0.485,1732,1.065,1740,0.862,1743,0.988,1745,0.485,1752,0.455,1756,0.988,1757,0.431,1778,6.394,1779,0.862,1836,0.485,1839,0.817,1860,0.485,1861,0.817,1862,1.111,1865,0.746,1890,0.817,1893,0.379,1908,1.165,1917,0.485,1929,0.455,1930,0.485,1931,1.667,1932,1.451,1935,2.926,1936,3.576,1943,0.862,1944,0.411,1945,2.031,1949,0.485,1983,3.497,1984,1.412,1985,0.393,1987,0.379,1993,1.777,1994,2.379,1995,4.387,1996,1.2,1998,0.779,2012,0.67,2013,0.899,2016,0.342,2029,1.111,2030,1.177,2035,1.065,2054,0.455,2077,0.919,2080,1.111,2082,1.79,2087,1.616,2088,0.718,2094,0.485,2097,1.024,2121,1.311,2125,1.706,2128,0.485,2133,0.485,2150,1.111,2160,0.718,2165,1.412,2179,0.365,2181,0.411,2182,3.254,2184,0.746,2192,0.455,2198,0.431,2199,1.856,2206,1.165,2209,0.485,2211,0.485,2220,0.485,2227,1.42,2229,2.634,2231,2.28,2250,1.411,2264,1.165,2293,4.922,2294,0.919,2314,0.411,2316,0.455,2325,2.193,2340,1.616,2358,1.667,2369,0.455,2388,0.431,2390,0.817,2394,1.563,2395,0.379,2399,1.165,2419,0.431,2421,0.411,2424,0.455,2436,0.919,2437,2.379,2438,0.817,2452,1.856,2478,2.167,2518,0.455,2529,0.411,2535,3.524,2559,1.215,2561,2.273,2562,0.455,2634,1.616,2635,1.024,2636,4.91,2640,0.779,2667,0.485,2670,0.365,2702,0.779,2728,2.156,2730,1.065,2738,0.817,2791,5.157,2793,1.111,2802,0.996,2824,0.996,2923,0.411,2950,2.495,2961,1.686,3041,1.99,3042,1.805,3043,1.805,3045,3.239,3055,2.379,3075,0.485,3115,0.919,3179,0.431,3180,0.817,3205,0.919,3206,0.919,3252,0.919,3283,1.165,3290,0.485,3344,1.42,3366,2.808,3367,0.485,3368,0.919,3385,0.919,3391,2.771,3392,0.586,3393,1.412,3394,0.919,3395,0.525,3396,0.586,3397,0.586,3398,1.586,3399,0.779,3400,4.422,3401,8.536,3402,4.406,3403,0.586,3404,8.703,3405,0.586,3406,3.639,3407,0.586,3408,2.541,3409,7.59,3410,1.586,3411,0.586,3412,8.703,3413,1.586,3414,0.586,3415,1.112,3416,1.586,3417,3.935,3418,0.586,3419,0.586,3420,0.586,3421,0.586,3422,0.455,3423,0.586,3424,0.996,3425,1.481,3426,2.954,3427,0.586,3428,1.112,3429,1.42,3430,0.586,3431,0.586,3432,0.586,3433,0.525,3434,0.586,3435,0.586,3436,0.586,3437,0.586,3438,2.771,3439,0.586,3440,0.525,3441,2.407,3442,0.586,3443,1.805,3444,0.586,3445,0.586,3446,0.485,3447,1.42,3448,0.586,3449,0.996,3450,0.485,3451,3.292,3452,1.112,3453,0.586,3454,6.009,3455,0.586,3456,2.765,3457,1.112,3458,1.311,3459,0.779,3460,0.586,3461,0.586,3462,0.586,3463,0.586,3464,1.937,3465,0.586,3466,0.586,3467,3.396,3468,0.586,3469,0.455,3470,0.586,3471,0.586,3472,0.586,3473,1.112,3474,0.525,3475,0.586,3476,0.586,3477,2.407,3478,0.586,3479,0.586,3480,1.165,3481,0.919,3482,1.111,3483,0.525,3484,0.586,3485,1.165,3486,2.575,3487,5.481,3488,0.586,3489,0.586,3490,2.015,3491,1.586,3492,2.7,3493,0.586,3494,0.586,3495,0.586,3496,0.586,3497,0.586,3498,0.393,3499,0.586,3500,0.586,3501,0.586,3502,0.586,3503,0.586,3504,0.586,3505,0.586,3506,0.862,3507,1.112,3508,0.586,3509,0.996,3510,0.586,3511,3.675,3512,2.771,3513,0.586,3514,6.019,3515,3.093,3516,0.586,3517,0.525,3518,0.586,3519,0.586,3520,0.586,3521,0.586,3522,0.431,3523,0.586,3524,0.586,3525,0.586,3526,0.586,3527,1.112,3528,0.586,3529,0.586,3530,0.586,3531,1.112,3532,0.586,3533,0.862,3534,0.586,3535,0.586,3536,1.112,3537,0.586,3538,3.524,3539,0.586,3540,0.586,3541,0.586,3542,0.586,3543,1.112,3544,1.586,3545,0.586,3546,0.525,3547,0.586,3548,0.586,3549,0.586,3550,2.286,3551,0.586,3552,0.586,3553,1.112,3554,0.586,3555,0.431,3556,2.015,3557,0.525,3558,1.481,3559,0.586,3560,1.586,3561,0.586,3562,6.114,3563,0.586,3564,0.586,3565,0.586,3566,0.586,3567,5.627,3568,0.586,3569,4.132,3570,0.996,3571,0.586,3572,0.586,3573,0.586,3574,3.093,3575,2.286,3576,0.586,3577,0.586,3578,0.586,3579,0.586,3580,1.586,3581,0.586,3582,9.192,3583,0.586,3584,0.485,3585,1.805,3586,1.586,3587,1.112,3588,0.586,3589,0.586,3590,1.937,3591,0.525,3592,0.586,3593,1.112,3594,0.586,3595,0.586,3596,1.805,3597,0.485,3598,1.42,3599,0.586,3600,0.586,3601,0.586,3602,0.586,3603,0.586,3604,1.42,3605,0.586,3606,0.586,3607,0.586,3608,0.586,3609,1.99,3610,3.093,3611,2.771,3612,0.586,3613,0.586,3614,0.525,3615,0.586,3616,0.586,3617,0.586,3618,0.586,3619,0.779,3620,1.586,3621,0.919,3622,0.586,3623,0.586,3624,0.411,3625,0.586,3626,0.586,3627,0.586,3628,0.525,3629,1.586,3630,0.586,3631,5.627,3632,0.586,3633,1.112,3634,2.407,3635,0.586,3636,0.586,3637,0.586,3638,0.586,3639,1.42,3640,2.407,3641,0.586,3642,2.407,3643,0.586,3644,2.015,3645,1.112,3646,2.399,3647,0.586,3648,0.586,3649,2.015,3650,0.586,3651,4.129,3652,0.586,3653,0.586,3654,1.112,3655,2.015,3656,3.453,3657,0.586,3658,1.112,3659,0.525,3660,0.525,3661,0.455,3662,0.525,3663,1.99,3664,2.634,3665,1.481,3666,0.411,3667,1.112,3668,0.586,3669,0.586,3670,1.42,3671,0.586,3672,0.586,3673,0.586,3674,0.586,3675,1.586,3676,0.586,3677,0.586,3678,5.627,3679,2.156,3680,1.112,3681,1.112,3682,1.112,3683,1.805,3684,0.586,3685,0.586,3686,0.586,3687,0.586,3688,1.805,3689,1.112,3690,0.586,3691,0.586,3692,1.586,3693,0.586,3694,0.485,3695,0.779,3696,2.156,3697,0.525,3698,1.23,3699,0.586,3700,2.771,3701,0.586,3702,1.586,3703,2.558,3704,0.586,3705,0.586,3706,0.586,3707,1.112,3708,0.586,3709,1.112,3710,0.586,3711,0.586,3712,2.015,3713,2.407,3714,1.667,3715,0.919,3716,0.586,3717,0.586,3718,3.292,3719,0.586,3720,0.586,3721,0.586,3722,0.586,3723,0.586,3724,1.586,3725,0.919,3726,0.586,3727,0.586,3728,3.396,3729,1.112,3730,2.407,3731,0.586,3732,0.586,3733,0.586,3734,1.805,3735,0.525,3736,0.586,3737,0.586,3738,0.586,3739,0.485,3740,0.586,3741,0.586,3742,0.586,3743,0.586,3744,2.765,3745,2.015,3746,0.586,3747,0.996,3748,2.771,3749,0.485,3750,2.015,3751,1.112,3752,0.996,3753,1.412,3754,0.996,3755,0.996,3756,1.302,3757,0.586,3758,0.586,3759,0.525,3760,0.586,3761,0.485,3762,0.431,3763,0.485,3764,0.586,3765,0.525,3766,0.586,3767,2.015,3768,0.586,3769,6.457,3770,0.586,3771,0.586,3772,0.919,3773,0.586,3774,0.586,3775,0.586,3776,1.586,3777,0.586,3778,1.311,3779,0.586,3780,0.586,3781,0.586,3782,0.586,3783,1.112,3784,0.586,3785,0.586,3786,1.112,3787,0.586,3788,2.015,3789,0.919,3790,0.586,3791,0.586,3792,0.586,3793,2.286,3794,0.586,3795,0.586,3796,0.586,3797,0.586,3798,0.586,3799,3.042,3800,0.586,3801,0.525,3802,0.586,3803,3.74,3804,1.112,3805,1.165,3806,1.112,3807,0.586,3808,0.586,3809,3.941,3810,0.586,3811,0.586,3812,0.586,3813,0.586,3814,3.935,3815,3.396,3816,0.586,3817,4.807,3818,0.586,3819,0.586,3820,0.586,3821,2.407,3822,0.586,3823,0.586,3824,1.667,3825,0.485,3826,0.586,3827,0.525,3828,0.586,3829,1.805,3830,0.586,3831,0.586,3832,1.586,3833,0.586,3834,1.805,3835,0.586,3836,0.586,3837,1.586,3838,0.996,3839,0.996,3840,1.112,3841,1.112,3842,1.805,3843,1.112,3844,0.525,3845,0.586,3846,1.112,3847,1.112,3848,1.586,3849,1.112,3850,1.805,3851,0.586,3852,0.996,3853,0.586,3854,1.112,3855,0.996,3856,0.586,3857,2.771,3858,2.765,3859,1.112,3860,0.586,3861,2.156,3862,0.586,3863,2.765,3864,3.093,3865,0.586,3866,0.586,3867,1.112,3868,0.586,3869,0.586,3870,0.586,3871,0.586,3872,0.525,3873,0.586,3874,0.586,3875,0.586,3876,0.586,3877,0.586,3878,0.586,3879,0.586,3880,0.586,3881,0.586,3882,1.112,3883,3.292,3884,1.42,3885,0.919,3886,0.586,3887,0.586,3888,1.112,3889,1.112,3890,0.586,3891,1.667,3892,0.586,3893,0.586,3894,0.586,3895,0.586,3896,0.586,3897,0.586,3898,2.015,3899,3.675,3900,0.586,3901,0.586,3902,0.586,3903,0.485,3904,0.586,3905,0.586,3906,0.586,3907,1.112,3908,0.996,3909,1.112,3910,0.996,3911,1.112,3912,0.586,3913,0.586,3914,0.586,3915,0.586,3916,0.586,3917,1.112,3918,0.586,3919,0.586,3920,0.996,3921,0.586,3922,0.586,3923,1.42,3924,1.805,3925,0.586,3926,0.586,3927,0.586,3928,0.586,3929,0.586,3930,0.586,3931,0.586,3932,2.765,3933,1.112,3934,0.586,3935,0.586,3936,0.586,3937,0.586,3938,0.586,3939,0.586,3940,0.996,3941,0.586,3942,0.586,3943,0.586,3944,0.586,3945,0.586,3946,0.996,3947,0.586,3948,0.586,3949,2.407,3950,1.112,3951,0.586,3952,1.586,3953,0.586,3954,0.586,3955,0.586,3956,1.112,3957,0.586,3958,0.586,3959,1.112,3960,0.586,3961,0.586,3962,0.862,3963,1.112,3964,2.765,3965,0.586,3966,0.586,3967,0.586,3968,0.485,3969,0.586,3970,1.112,3971,0.996,3972,0.586,3973,0.586,3974,0.586,3975,0.586,3976,2.407,3977,0.525,3978,0.586,3979,0.586,3980,0.525,3981,2.015,3982,0.919,3983,0.586,3984,1.112,3985,1.586,3986,0.586,3987,0.586,3988,0.586,3989,0.586,3990,1.112,3991,0.586,3992,0.485,3993,0.586,3994,0.586,3995,0.586,3996,1.586,3997,0.586,3998,0.586,3999,1.112,4000,0.586,4001,0.586,4002,0.586,4003,0.525,4004,1.112,4005,0.586,4006,1.586,4007,0.586,4008,0.586,4009,1.165,4010,1.112,4011,1.481,4012,0.586,4013,0.586,4014,0.586,4015,0.586,4016,1.586,4017,1.563,4018,0.586,4019,0.525,4020,0.586,4021,1.586,4022,0.586,4023,0.586,4024,0.586,4025,1.586,4026,0.586,4027,0.586,4028,1.112,4029,0.586,4030,1.42,4031,1.112,4032,0.586,4033,0.586,4034,0.586,4035,0.586,4036,0.586,4037,0.455,4038,0.862,4039,0.455,4040,0.586,4041,0.586,4042,0.525,4043,0.996,4044,0.586,4045,0.586,4046,0.586,4047,0.586,4048,1.586,4049,0.586,4050,0.586,4051,0.586,4052,2.015,4053,0.586,4054,1.112,4055,1.112,4056,0.586,4057,0.586,4058,0.586,4059,1.112,4060,0.586,4061,0.586,4062,0.586,4063,0.525,4064,0.525,4065,0.586,4066,0.586,4067,0.586,4068,0.525,4069,0.586,4070,0.586,4071,0.586,4072,0.586,4073,0.586,4074,0.586,4075,0.586,4076,0.586,4077,0.525,4078,0.586,4079,0.586,4080,0.586,4081,0.586,4082,0.586,4083,1.112,4084,0.586,4085,0.586,4086,1.112,4087,0.586,4088,0.919,4089,1.481,4090,0.586,4091,1.112,4092,0.525,4093,0.586,4094,0.525,4095,0.586,4096,1.112,4097,0.586,4098,0.586,4099,0.485,4100,0.586,4101,2.407,4102,0.586,4103,0.586,4104,0.586,4105,0.586,4106,0.525,4107,0.586,4108,0.586,4109,0.586,4110,0.586,4111,0.586,4112,0.455,4113,0.586,4114,0.586,4115,0.586,4116,0.586,4117,0.586,4118,0.586,4119,0.817,4120,1.112,4121,0.586,4122,1.586,4123,0.586,4124,0.586,4125,0.586,4126,0.586,4127,0.586,4128,0.586,4129,0.586,4130,0.586,4131,0.586,4132,1.112,4133,0.485,4134,1.112,4135,0.525,4136,1.311,4137,0.586,4138,0.586,4139,0.485,4140,0.586,4141,8.473,4142,0.586,4143,0.586,4144,0.485,4145,0.586,4146,0.586,4147,0.586,4148,0.586,4149,0.586,4150,2.765,4151,0.586,4152,1.165,4153,0.586,4154,0.586,4155,0.586,4156,0.586,4157,0.586,4158,2.015,4159,1.805,4160,1.481,4161,1.42,4162,2.407,4163,1.112,4164,1.112,4165,3.042,4166,1.563,4167,0.996,4168,1.112,4169,1.112,4170,0.919,4171,1.112,4172,0.586,4173,0.586,4174,2.771,4175,0.485,4176,0.411,4177,0.586,4178,0.455,4179,0.411,4180,0.455,4181,0.586,4182,0.586,4183,0.525,4184,0.586,4185,0.586,4186,0.586,4187,0.586,4188,0.586,4189,1.112,4190,0.586,4191,0.586,4192,1.112,4193,0.586,4194,0.586,4195,0.586,4196,0.525,4197,0.586,4198,0.586,4199,0.996,4200,0.485,4201,0.586,4202,1.586,4203,0.586,4204,0.525,4205,1.112,4206,0.586,4207,0.586,4208,0.525,4209,0.586,4210,1.112,4211,0.586,4212,0.586,4213,0.586,4214,0.586,4215,0.586,4216,0.996,4217,0.996,4218,2.015,4219,1.667,4220,0.586,4221,0.586,4222,0.586,4223,1.311,4224,0.586,4225,0.586,4226,0.586,4227,1.112,4228,1.586,4229,0.586,4230,0.586,4231,0.586,4232,0.586,4233,1.112,4234,0.586,4235,0.525,4236,1.112,4237,0.586,4238,0.525,4239,0.586,4240,0.586,4241,0.586,4242,1.112,4243,1.112,4244,0.586,4245,0.586,4246,0.586,4247,0.586,4248,0.586,4249,1.586,4250,1.586,4251,0.411,4252,1.99,4253,0.586,4254,1.112,4255,0.586,4256,0.586,4257,1.112,4258,1.586,4259,0.996,4260,0.586,4261,0.586,4262,0.525,4263,0.586,4264,0.586,4265,0.586,4266,0.586,4267,0.586,4268,0.586,4269,0.586,4270,0.586,4271,0.586,4272,0.586,4273,0.586,4274,0.586,4275,1.112,4276,0.525,4277,0.485,4278,0.586,4279,0.485,4280,0.586,4281,0.485,4282,0.586,4283,1.311,4284,0.586,4285,0.586,4286,0.586,4287,1.112,4288,0.586,4289,0.586,4290,0.586,4291,0.919,4292,0.586,4293,0.586,4294,0.586,4295,0.586,4296,0.586,4297,0.525,4298,0.586,4299,1.112,4300,0.586,4301,0.586,4302,1.112,4303,1.112,4304,1.586,4305,1.805,4306,1.112,4307,1.311,4308,0.919,4309,0.586,4310,0.525,4311,0.586,4312,0.817,4313,0.586,4314,0.586,4315,0.586,4316,0.586,4317,0.586,4318,0.525,4319,0.586,4320,1.112,4321,1.586,4322,0.996,4323,0.586,4324,0.586,4325,0.586,4326,1.112,4327,1.112,4328,0.586,4329,0.586,4330,0.586,4331,0.586,4332,0.586,4333,0.586,4334,0.586,4335,0.586,4336,0.586,4337,0.525,4338,0.525,4339,0.586,4340,0.586,4341,1.586,4342,0.586,4343,1.112,4344,0.586,4345,0.996,4346,0.586,4347,1.112,4348,0.586,4349,1.112,4350,0.586,4351,0.919,4352,0.586,4353,0.525,4354,0.586,4355,0.586,4356,0.525,4357,1.586,4358,2.015,4359,1.112,4360,0.996,4361,1.112,4362,0.919,4363,1.112,4364,0.586,4365,1.112,4366,0.525,4367,0.586,4368,1.112,4369,0.996,4370,0.586,4371,0.525,4372,0.586,4373,0.525,4374,0.586,4375,0.586,4376,1.112,4377,0.586,4378,0.586,4379,0.586,4380,0.586,4381,0.525,4382,0.586,4383,0.586,4384,0.586,4385,0.586,4386,0.586,4387,0.586,4388,0.586,4389,0.586,4390,0.586,4391,0.586,4392,0.586,4393,0.586,4394,0.586,4395,0.586,4396,0.919,4397,0.586,4398,0.586,4399,0.586,4400,0.586,4401,0.586,4402,0.586,4403,0.586,4404,0.586,4405,0.586,4406,0.586,4407,0.485,4408,0.586,4409,0.485,4410,0.586,4411,0.586,4412,0.525,4413,0.586,4414,0.586,4415,0.586,4416,0.586,4417,0.586,4418,0.586,4419,0.586,4420,0.586,4421,0.586,4422,0.485,4423,0.586,4424,0.586,4425,0.586,4426,0.586,4427,1.586,4428,0.586,4429,1.112,4430,1.586,4431,1.112,4432,1.112,4433,1.112,4434,1.112,4435,0.586,4436,0.586,4437,0.586,4438,0.586,4439,0.586,4440,0.586,4441,0.525,4442,0.586,4443,1.112,4444,0.586,4445,0.586,4446,0.455,4447,0.586,4448,0.485,4449,0.586,4450,1.112,4451,0.586,4452,0.455,4453,0.586,4454,0.586,4455,0.586,4456,0.586,4457,0.485,4458,0.586,4459,1.586,4460,1.586,4461,0.586,4462,0.996,4463,0.586,4464,0.586,4465,0.586,4466,0.586,4467,0.586,4468,0.586,4469,0.525,4470,0.586,4471,0.586,4472,1.112,4473,0.525,4474,0.525,4475,0.525,4476,0.586,4477,0.586,4478,0.586,4479,0.586,4480,0.586,4481,0.586,4482,0.586,4483,0.586,4484,0.586,4485,1.112,4486,1.112,4487,0.586,4488,0.525,4489,0.586,4490,0.586,4491,0.586,4492,1.112,4493,0.586,4494,0.586,4495,1.112,4496,0.586,4497,1.112,4498,0.586,4499,0.586,4500,2.015,4501,0.586,4502,0.586,4503,0.586,4504,0.586,4505,0.586,4506,0.862,4507,0.525,4508,1.112,4509,0.586,4510,0.586,4511,0.586,4512,0.586,4513,0.586,4514,0.586,4515,0.586,4516,0.586,4517,0.586,4518,0.586,4519,0.586,4520,0.586,4521,0.586,4522,1.586,4523,0.586,4524,0.586,4525,0.586,4526,0.586,4527,0.586,4528,0.586,4529,0.586,4530,1.112,4531,1.112,4532,0.586,4533,0.586,4534,0.586,4535,2.015,4536,4.4,4537,1.112,4538,0.919,4539,0.996,4540,1.112,4541,1.112,4542,0.586,4543,1.112,4544,0.996,4545,1.112,4546,1.112,4547,1.112,4548,1.112,4549,2.015,4550,1.112,4551,2.015,4552,1.112,4553,1.112,4554,0.919,4555,1.586,4556,1.112,4557,0.586,4558,0.485,4559,0.862,4560,1.112,4561,0.586,4562,2.407,4563,1.112,4564,0.586,4565,0.485,4566,0.586,4567,2.015,4568,0.586,4569,0.586,4570,0.586,4571,0.586,4572,0.525,4573,0.586,4574,0.586,4575,0.586,4576,1.112,4577,1.112,4578,1.112,4579,0.586,4580,0.586,4581,0.586,4582,0.586,4583,0.586,4584,1.112,4585,1.112,4586,0.586,4587,0.586,4588,0.586,4589,0.455,4590,0.586,4591,0.586,4592,0.586,4593,1.112,4594,0.586,4595,1.586,4596,1.42,4597,0.586,4598,0.586,4599,0.485,4600,1.112,4601,1.112,4602,0.586,4603,0.455,4604,0.586,4605,0.586,4606,1.586,4607,1.112,4608,1.112,4609,0.586,4610,1.112,4611,0.586,4612,0.586,4613,0.586,4614,2.015,4615,0.586,4616,0.586,4617,0.586,4618,0.586,4619,0.586,4620,0.586,4621,0.586,4622,1.112,4623,0.586,4624,0.586,4625,0.586,4626,0.525,4627,0.586,4628,1.112,4629,0.586,4630,0.586,4631,0.485,4632,0.586,4633,1.112,4634,0.586,4635,0.525,4636,0.586,4637,1.112,4638,1.112,4639,0.586,4640,0.586,4641,0.525,4642,1.112,4643,0.586,4644,0.586,4645,1.112,4646,1.112,4647,0.586,4648,0.586,4649,0.586,4650,1.112,4651,1.112,4652,0.586,4653,0.586,4654,1.112,4655,0.586,4656,0.586,4657,0.586,4658,1.112,4659,0.586,4660,0.586,4661,0.525,4662,0.586,4663,2.015,4664,0.485,4665,0.586,4666,1.112,4667,0.455,4668,1.112,4669,0.586,4670,2.407,4671,1.112,4672,0.455,4673,0.586,4674,0.586,4675,0.485,4676,0.586,4677,0.586,4678,0.586,4679,0.586,4680,0.586,4681,0.586,4682,0.586,4683,0.586,4684,0.586,4685,0.586,4686,0.586,4687,0.586,4688,0.996,4689,0.586,4690,0.586,4691,0.586,4692,0.586,4693,0.485,4694,0.586,4695,0.586,4696,0.525,4697,0.586,4698,0.525,4699,0.586,4700,0.586,4701,0.586,4702,0.485,4703,0.455,4704,0.586,4705,0.586,4706,0.525,4707,1.586,4708,0.586,4709,0.525,4710,0.525,4711,0.586,4712,0.525,4713,0.586,4714,0.586,4715,0.586,4716,0.586,4717,0.586,4718,2.015,4719,0.586,4720,0.586,4721,0.525,4722,0.586,4723,1.42,4724,0.586,4725,0.586,4726,0.586,4727,0.586,4728,0.525,4729,0.586,4730,0.586,4731,1.112,4732,0.586,4733,0.586,4734,0.586,4735,0.455,4736,1.112,4737,0.586,4738,0.586,4739,0.586,4740,0.586,4741,1.586,4742,1.112,4743,1.112,4744,0.586,4745,0.525,4746,1.112,4747,0.525,4748,1.586,4749,0.586,4750,0.586,4751,0.586,4752,0.586,4753,0.586,4754,1.112,4755,1.112,4756,1.112,4757,1.112,4758,1.42,4759,1.112,4760,0.586,4761,1.112,4762,0.586,4763,1.112,4764,0.525,4765,1.586,4766,0.586,4767,0.586,4768,0.586,4769,0.586,4770,2.407,4771,0.586,4772,0.525,4773,0.586,4774,0.586,4775,0.586,4776,0.525,4777,0.586,4778,0.919,4779,0.586,4780,0.455,4781,0.586,4782,0.586,4783,0.586,4784,0.586,4785,1.112,4786,0.586,4787,0.586,4788,0.586,4789,0.586,4790,0.586,4791,0.586,4792,0.586,4793,0.485,4794,0.586,4795,0.586,4796,1.112,4797,0.525]],["title/dependencies.html",[114,2.596,4407,3.471]],["body/dependencies.html",[0,0.176,4,0.069,5,0.073,17,0.166,27,0.005,46,0.711,52,1.994,59,0.003,60,0.003,114,1.799,128,3.247,130,3.75,150,3.794,155,1.607,174,2.032,181,2.039,209,0.945,217,1.781,218,1.289,219,1.911,362,3.247,372,4.565,406,2.247,417,1.911,420,2.039,432,2.811,434,2.811,490,2.811,561,4.049,577,2.609,611,2.872,690,1.765,694,4.008,722,3.076,767,2.523,1023,3.247,1228,2.704,1303,3.247,1362,2.811,1416,2.704,1507,3.462,1535,2.704,1536,3.758,1537,3.247,1636,3.237,1653,4.994,1654,3.462,1688,3.462,1743,2.609,1765,3.75,2165,2.933,2199,2.811,2230,6.331,2231,2.811,2267,3.75,2339,3.076,2340,2.811,2343,3.076,2376,3.247,2437,2.933,2729,3.75,2926,3.247,2961,6.426,3008,3.75,3459,2.933,3509,3.75,3517,3.75,3570,3.75,3585,3.75,3885,4.987,3910,3.75,4042,3.75,4043,3.75,4088,4.987,4092,3.75,4196,3.75,4216,3.75,4217,3.75,4262,3.75,4297,3.75,4312,4.431,4322,3.75,4507,3.75,4745,3.75,4798,6.03,4799,8.797,4800,4.187,4801,4.187,4802,4.187,4803,4.187,4804,4.187,4805,4.187,4806,6.03,4807,4.187,4808,7.733,4809,4.187,4810,4.187,4811,4.187,4812,4.187,4813,4.187,4814,4.187,4815,4.187,4816,4.187,4817,4.187,4818,4.187,4819,3.462,4820,4.187,4821,4.187,4822,6.03,4823,4.187,4824,4.187,4825,4.187,4826,4.187,4827,4.187,4828,4.187,4829,4.187,4830,6.03,4831,4.187,4832,6.03,4833,4.187,4834,4.187,4835,4.187,4836,8.196,4837,4.187,4838,4.187,4839,4.187,4840,4.187,4841,3.75,4842,4.187,4843,4.187,4844,4.187,4845,4.187,4846,6.03,4847,4.187,4848,7.068,4849,4.187,4850,4.187,4851,6.03,4852,4.187,4853,6.03,4854,6.03,4855,4.187,4856,4.187,4857,4.187,4858,4.187,4859,3.076,4860,4.187,4861,4.187,4862,4.187,4863,4.187,4864,4.187,4865,6.03,4866,4.187,4867,4.187,4868,4.187,4869,4.187,4870,4.187,4871,4.187,4872,4.187,4873,4.187,4874,4.187,4875,4.187,4876,4.187,4877,4.187,4878,4.187,4879,4.187,4880,4.187,4881,4.187,4882,4.187,4883,6.03,4884,5.401,4885,4.187,4886,4.187,4887,4.187,4888,4.187,4889,3.75,4890,4.187,4891,4.187,4892,6.03,4893,4.187,4894,4.187,4895,4.187,4896,4.187,4897,4.187,4898,4.187,4899,4.187,4900,4.187,4901,4.187,4902,4.187,4903,4.187,4904,4.187,4905,6.03,4906,4.187,4907,4.187,4908,4.187,4909,4.187,4910,4.187,4911,6.03,4912,3.75,4913,4.187,4914,4.187,4915,4.187,4916,4.187,4917,4.187,4918,4.187,4919,4.187,4920,4.187,4921,3.75,4922,4.187,4923,4.187,4924,4.187,4925,4.187,4926,4.187,4927,4.187,4928,4.187,4929,4.187,4930,3.462,4931,4.187,4932,4.187,4933,4.187,4934,4.187,4935,4.187,4936,4.187,4937,4.187,4938,4.187,4939,4.187,4940,4.187,4941,4.187]],["title/miscellaneous/enumerations.html",[4942,2.71,4943,5.411]],["body/miscellaneous/enumerations.html",[10,0.343,27,0.005,59,0.004,60,0.004,164,4.326,248,2.969,451,2.797,454,2.847,502,3.539,589,3.539,1389,6.377,1743,4.528,1755,5.339,1978,5.637,1983,5.091,1984,5.091,2010,5.637,2011,6.733,2018,6.377,2019,7.178,3034,6.509,3039,7.178,3183,6.509,3199,7.774,3202,6.509,3203,6.509,3204,6.509,3205,6.009,4942,4.693,4943,6.509,4944,6.509,4945,6.509,4946,7.266,4947,7.266]],["title/miscellaneous/functions.html",[4942,2.71,4948,4.438]],["body/miscellaneous/functions.html",[9,4.839,10,0.256,17,0.343,26,1.205,27,0.005,28,0.735,29,0.735,36,0.962,41,1.486,43,4.492,52,2.579,54,3.776,59,0.004,60,0.004,66,3.071,172,1.274,181,3.946,226,3.497,234,2.049,238,3.497,248,2.123,261,1.856,269,4.595,279,2.049,282,2.421,379,2.699,413,6.039,561,6.338,595,3.374,663,2.373,716,4.409,717,4.409,838,2.327,846,2.638,1423,3.592,1464,4.478,1546,4.201,1625,5.296,1634,4.21,1658,3.636,1682,4.85,1686,4.85,1692,4.85,1711,6.456,1726,4.201,1731,4.478,1747,4.85,1840,4.478,1841,6.7,1876,4.478,1879,4.478,1883,4.478,1901,5.961,1906,5.953,1908,5.296,1938,5.05,2179,3.374,2317,4.478,2529,3.794,2540,7.257,2923,5.676,3074,6.7,3276,7.649,3451,4.85,3908,4.85,4003,4.85,4159,6.456,4362,4.478,4554,4.478,4706,4.85,4859,3.979,4942,3.497,4948,3.979,4949,5.415,4950,5.415,4951,7.208,4952,7.257,4953,7.208,4954,7.208,4955,5.415,4956,5.415,4957,7.208,4958,5.415,4959,7.208,4960,5.415,4961,5.415,4962,5.415,4963,7.143,4964,4.85,4965,7.208,4966,4.85,4967,5.415,4968,4.85,4969,4.478,4970,3.979,4971,7.208,4972,7.208,4973,4.85,4974,5.415,4975,4.85,4976,7.257,4977,5.415,4978,5.415,4979,4.478,4980,4.85,4981,7.208,4982,5.415,4983,5.415]],["title/index.html",[10,0.198,3389,3.255,3390,2.94]],["body/index.html",[13,3.375,14,2.738,15,2.654,16,1.635,27,0.005,28,0.544,31,2.243,52,3.044,54,2.979,57,3.113,59,0.003,60,0.004,64,1.319,67,2.934,84,0.849,114,1.952,150,4.539,184,2.934,209,1.026,220,3.524,226,5.182,227,3.524,230,4.958,231,2.831,233,2.377,234,1.719,238,2.934,247,1.3,305,2.377,373,4.128,374,4.858,417,3.859,438,2.738,440,3.05,496,3.183,550,2.419,572,3.183,576,2.577,617,3.734,665,2.505,670,2.738,701,4.608,909,2.264,1013,3.524,1083,3.05,1150,4.836,1163,2.831,1266,3.183,1275,3.852,1281,5.622,1297,5.732,1305,2.831,1355,4.077,1360,3.183,1372,4.128,1383,3.625,1409,3.183,1410,2.439,1423,3.186,1503,2.505,1534,3.183,1535,2.934,1536,3.983,1582,5.181,1634,2.654,1636,3.431,1653,5.182,1655,3.524,1665,4.128,1743,2.831,1893,4.128,1898,3.524,1944,3.183,2012,2.738,2125,2.505,2184,3.05,2395,2.934,2423,3.757,2529,3.183,2669,4.696,2670,2.831,2730,3.05,2799,4.07,3179,3.338,3393,3.183,3394,3.757,3408,4.776,3426,4.965,3433,4.07,3464,3.183,3474,5.725,3486,3.183,3498,3.05,3569,4.958,3582,4.07,3590,3.183,3598,8.07,3609,3.757,3619,3.183,3646,3.524,3659,5.725,3661,4.958,3666,3.183,3698,3.524,3761,3.757,3763,3.757,3923,4.07,3971,6.623,4011,4.696,4089,3.338,4119,3.338,4133,5.286,4152,4.696,4160,3.338,4178,3.524,4179,5.622,4251,3.183,4279,6.115,4281,5.286,4310,4.07,4452,3.524,4475,4.07,4558,3.757,4559,4.958,4599,3.757,4702,3.757,4735,3.524,4776,4.07,4778,3.757,4859,3.338,4984,3.524,4985,7.253,4986,4.696,4987,3.524,4988,3.757,4989,3.524,4990,5.286,4991,4.291,4992,3.05,4993,4.07,4994,4.543,4995,5.725,4996,5.725,4997,4.543,4998,4.543,4999,4.543,5000,3.524,5001,4.07,5002,6.392,5003,4.07,5004,4.07,5005,3.338,5006,7.394,5007,5.181,5008,4.07,5009,4.543,5010,4.07,5011,5.286,5012,4.543,5013,3.757,5014,4.543,5015,4.543,5016,4.543,5017,4.07,5018,3.524,5019,4.543,5020,4.07,5021,6.392,5022,6.392,5023,8.456,5024,8.024,5025,4.543,5026,4.543,5027,6.392,5028,4.07,5029,4.543,5030,3.757,5031,6.392,5032,4.543,5033,4.07,5034,6.392,5035,3.338,5036,4.07,5037,4.543,5038,4.543,5039,3.524,5040,4.543,5041,4.07,5042,4.543,5043,3.757,5044,4.958,5045,4.543,5046,4.543,5047,4.07,5048,4.543,5049,3.05,5050,3.757]],["title/license.html",[3389,3.255,3390,2.94,5051,3.759]],["body/license.html",[0,0.029,4,0.149,5,0.022,13,3.912,14,0.603,18,0.17,24,0.09,27,0.001,31,0.556,44,0.031,57,1.525,59,0.001,60,0.001,67,1.183,83,0.148,84,0.907,87,0.493,89,0.746,100,0.647,106,0.568,107,2.649,123,0.422,166,2.298,168,1.888,169,1.815,171,1.681,172,0.431,178,1.039,183,2.269,184,3.975,216,0.354,221,3.491,234,2.783,239,5.895,243,0.295,276,1.492,305,0.959,325,0.467,351,0.701,369,0.603,371,1.039,374,0.499,389,0.672,409,0.313,420,0.892,421,1.639,434,0.672,439,0.777,454,0.392,485,0.603,488,1.965,493,0.828,552,0.488,567,0.624,570,2.783,571,0.624,595,2.274,613,0.467,614,0.467,637,0.448,665,1.397,670,1.888,672,0.736,675,2.194,685,0.603,722,0.736,809,0.647,817,2.132,846,1.778,855,0.603,863,0.892,909,0.913,910,0.624,917,0.777,918,0.736,960,1.068,1017,1.346,1078,3.021,1083,1.701,1136,0.488,1152,2.682,1153,1.829,1155,1.039,1269,1.183,1275,2.472,1301,0.828,1305,2.274,1332,3.335,1335,1.527,1336,3.837,1343,2.326,1365,0.828,1372,1.636,1383,1.436,1384,0.672,1411,5.251,1412,2.835,1423,2.845,1427,2.094,1440,0.897,1442,1.515,1465,2.269,1488,2.194,1503,0.552,1544,3.4,1579,1.952,1580,3.164,1582,3.4,1633,1.701,1653,1.183,1672,0.672,1706,0.736,1732,0.672,1752,3.765,1865,1.23,1932,0.603,1935,0.701,1945,2.301,1947,1.346,1995,3.335,2012,1.104,2017,1.07,2055,3.014,2160,0.647,2196,0.828,2199,1.701,2247,0.828,2250,3.033,2264,4.366,2293,1.776,2314,0.701,2318,0.672,2320,0.736,2388,0.736,2390,0.736,2395,0.647,2418,3.306,2420,0.828,2421,2.874,2424,1.965,2437,2.194,2453,4.009,2519,0.828,2529,4.163,2559,4.433,2635,0.647,2669,1.346,2670,2.556,2730,0.672,2738,0.736,2791,1.965,2907,0.897,2923,1.284,2928,0.897,3178,1.346,3208,0.777,3252,2.095,3267,1.641,3284,2.194,3367,2.095,3368,3.018,3369,0.828,3372,0.897,3395,0.897,3399,1.775,3400,2.301,3401,1.641,3408,2.649,3426,3.021,3429,0.897,3443,0.897,3446,1.515,3449,2.269,3450,1.515,3458,0.828,3464,3.4,3482,2.194,3538,0.897,3550,0.828,3555,0.736,3569,0.777,3596,0.897,3619,2.194,3621,0.828,3661,6.841,3663,6.968,3665,5.558,3666,1.775,3679,0.897,3694,1.515,3703,1.515,3714,0.828,3718,0.897,3725,1.515,3735,2.805,3739,1.515,3747,0.897,3753,0.701,3759,2.269,3761,0.828,3778,2.59,3789,0.828,3793,1.515,3799,1.641,3803,1.641,3805,0.736,3825,0.828,3838,1.641,3850,0.897,3872,0.897,3885,1.515,3924,0.897,3940,0.897,3962,2.831,3980,1.641,3982,0.828,3992,1.515,4009,0.736,4017,0.777,4019,0.897,4037,0.777,4038,2.831,4063,0.897,4094,0.897,4112,0.777,4119,1.346,4135,1.641,4139,1.515,4144,0.828,4160,0.736,4166,3.491,4178,6.357,4179,3.82,4180,1.965,4183,6.941,4200,1.515,4235,0.897,4277,0.828,4291,0.828,4305,0.897,4307,1.515,4308,1.515,4337,0.897,4360,0.897,4362,0.828,4396,0.828,4422,0.828,4446,1.421,4538,1.515,4559,2.429,4565,1.515,4599,1.515,4603,1.965,4635,1.641,4667,1.965,4672,0.777,4675,3.392,4693,4.721,4696,0.897,4703,0.777,4709,6.131,4710,1.641,4712,1.641,4721,0.897,4758,0.897,4764,1.641,4780,4.428,4859,0.736,4966,2.805,4968,0.897,4970,2.301,4973,0.897,4975,0.897,4976,0.897,4985,0.828,4988,0.828,4992,3.661,5005,5.23,5007,0.701,5008,2.269,5013,3.721,5033,0.897,5035,1.861,5044,1.965,5049,0.672,5051,8.823,5052,6.845,5053,6.692,5054,1.001,5055,2.533,5056,8.062,5057,5.535,5058,5.942,5059,3.65,5060,1.001,5061,1.001,5062,1.832,5063,3.65,5064,2.533,5065,2.533,5066,5.942,5067,1.001,5068,1.001,5069,1.641,5070,3.65,5071,3.721,5072,1.832,5073,1.832,5074,5.686,5075,4.853,5076,1.001,5077,1.001,5078,4.102,5079,1.641,5080,0.897,5081,0.897,5082,5.113,5083,8.782,5084,2.533,5085,2.269,5086,1.001,5087,1.001,5088,3.132,5089,5.169,5090,1.001,5091,5.169,5092,1.001,5093,3.65,5094,0.777,5095,0.828,5096,5.847,5097,0.897,5098,0.897,5099,5.453,5100,5.709,5101,3.65,5102,5.942,5103,1.001,5104,1.832,5105,1.001,5106,1.001,5107,2.269,5108,1.001,5109,1.001,5110,1.001,5111,1.001,5112,1.001,5113,1.001,5114,3.132,5115,2.533,5116,1.001,5117,1.001,5118,5.887,5119,1.965,5120,1.001,5121,2.095,5122,2.533,5123,1.001,5124,2.269,5125,0.777,5126,1.832,5127,1.832,5128,2.533,5129,1.001,5130,5.089,5131,3.65,5132,3.65,5133,4.102,5134,2.533,5135,1.832,5136,1.001,5137,1.001,5138,1.001,5139,2.533,5140,1.001,5141,1.001,5142,1.832,5143,1.001,5144,1.832,5145,1.001,5146,1.001,5147,3.132,5148,0.897,5149,1.832,5150,8.743,5151,2.533,5152,5.169,5153,2.805,5154,1.421,5155,1.001,5156,1.832,5157,2.533,5158,5.169,5159,5.453,5160,1.001,5161,3.132,5162,1.832,5163,3.132,5164,2.805,5165,1.001,5166,2.533,5167,7.834,5168,1.641,5169,1.001,5170,4.853,5171,1.001,5172,2.269,5173,2.874,5174,1.001,5175,6.527,5176,2.269,5177,1.832,5178,5.709,5179,4.102,5180,1.001,5181,1.832,5182,4.5,5183,1.001,5184,6.154,5185,1.832,5186,1.001,5187,0.828,5188,1.001,5189,2.533,5190,1.001,5191,1.001,5192,1.001,5193,0.828,5194,2.533,5195,2.805,5196,1.001,5197,1.001,5198,1.001,5199,1.641,5200,5.453,5201,0.897,5202,0.828,5203,2.269,5204,2.533,5205,2.533,5206,1.001,5207,3.269,5208,0.897,5209,1.284,5210,2.269,5211,1.001,5212,1.001,5213,1.001,5214,1.641,5215,1.001,5216,7.089,5217,2.269,5218,0.736,5219,1.832,5220,1.832,5221,3.018,5222,1.001,5223,1.001,5224,1.001,5225,1.832,5226,1.001,5227,1.515,5228,1.001,5229,3.018,5230,1.001,5231,0.828,5232,4.5,5233,2.59,5234,1.001,5235,3.269,5236,1.001,5237,1.832,5238,1.001,5239,1.001,5240,1.001,5241,1.001,5242,1.001,5243,2.533,5244,1.001,5245,1.832,5246,1.832,5247,1.832,5248,1.001,5249,6.154,5250,1.641,5251,1.001,5252,1.001,5253,0.897,5254,1.001,5255,1.001,5256,1.001,5257,2.533,5258,0.897,5259,1.001,5260,5.847,5261,0.777,5262,1.001,5263,1.001,5264,3.65,5265,3.674,5266,1.001,5267,1.001,5268,2.533,5269,1.001,5270,1.001,5271,3.132,5272,1.001,5273,1.001,5274,1.001,5275,1.001,5276,1.001,5277,1.001,5278,1.832,5279,1.001,5280,1.001,5281,1.001,5282,1.832,5283,1.001,5284,1.001,5285,1.001,5286,1.001,5287,1.001,5288,1.832,5289,1.346,5290,4.63,5291,1.001,5292,4.102,5293,1.001,5294,1.001,5295,2.533,5296,3.132,5297,3.132,5298,3.132,5299,1.001,5300,3.269,5301,3.269,5302,1.001,5303,2.533,5304,1.001,5305,1.832,5306,1.001,5307,1.641,5308,3.65,5309,1.832,5310,3.132,5311,3.132,5312,1.001,5313,2.533,5314,3.269,5315,1.001,5316,1.001,5317,3.721,5318,1.832,5319,0.736,5320,1.001,5321,0.897,5322,2.533,5323,1.001,5324,1.001,5325,2.269,5326,1.001,5327,1.001,5328,1.001,5329,1.001,5330,1.001,5331,2.533,5332,1.001,5333,0.897,5334,2.269,5335,1.832,5336,4.102,5337,6.589,5338,2.533,5339,1.832,5340,1.832,5341,1.832,5342,3.132,5343,0.897,5344,1.001,5345,1.001,5346,1.001,5347,3.674,5348,1.832,5349,1.001,5350,1.001,5351,1.001,5352,1.001,5353,1.832,5354,1.001,5355,1.832,5356,1.001,5357,1.001,5358,3.566,5359,1.001,5360,5.113,5361,1.001,5362,1.001,5363,1.001,5364,1.832,5365,1.001,5366,2.682,5367,3.132,5368,1.832,5369,0.897,5370,1.001,5371,1.001,5372,1.001,5373,1.001,5374,1.832,5375,1.001,5376,1.001,5377,0.828,5378,2.805,5379,1.001,5380,1.832,5381,1.001,5382,1.001,5383,2.269,5384,1.001,5385,1.001,5386,1.001,5387,1.001,5388,3.132,5389,1.001,5390,1.001,5391,0.897,5392,0.897,5393,0.897,5394,1.001,5395,1.001,5396,1.001,5397,3.65,5398,1.001,5399,1.001,5400,3.132,5401,1.001,5402,1.001,5403,1.001,5404,1.001,5405,1.001,5406,1.001,5407,3.132,5408,1.001,5409,1.001,5410,2.533,5411,1.001,5412,0.828,5413,2.533,5414,1.001,5415,1.001,5416,1.001,5417,1.001,5418,1.001,5419,1.001,5420,1.001,5421,0.897,5422,1.001,5423,0.736,5424,1.832,5425,0.897,5426,1.001,5427,3.132,5428,1.001,5429,1.001,5430,1.832,5431,2.533,5432,2.533,5433,0.828,5434,1.832,5435,1.001,5436,4.5,5437,1.001,5438,1.001,5439,1.832,5440,1.001,5441,1.001,5442,1.001,5443,3.132,5444,2.533,5445,1.001,5446,3.65,5447,1.001,5448,1.001,5449,1.001,5450,1.001,5451,0.897,5452,1.001,5453,1.832,5454,1.832,5455,1.641,5456,2.533,5457,0.897,5458,1.001,5459,2.533,5460,1.001,5461,1.515,5462,1.001,5463,1.832,5464,1.001,5465,1.001,5466,1.832,5467,7.565,5468,2.533,5469,1.001,5470,3.65,5471,5.453,5472,2.533,5473,1.001,5474,1.001,5475,1.001,5476,3.132,5477,1.001,5478,1.001,5479,1.001,5480,1.001,5481,1.001,5482,1.001,5483,1.001,5484,1.001,5485,1.001,5486,3.132,5487,1.832,5488,1.001,5489,1.001,5490,2.533,5491,1.001,5492,1.832,5493,2.533,5494,1.832,5495,1.001,5496,1.001,5497,1.001,5498,1.832,5499,2.533,5500,0.897,5501,1.001,5502,1.001,5503,1.832,5504,1.001,5505,0.897,5506,1.001,5507,1.001,5508,1.001,5509,2.533,5510,1.832,5511,0.897,5512,1.001,5513,1.001,5514,3.132,5515,1.001,5516,2.533,5517,1.001,5518,1.001,5519,1.832,5520,1.001,5521,1.001,5522,1.001,5523,2.533,5524,1.832,5525,1.832,5526,1.001,5527,1.832,5528,4.5,5529,1.641,5530,2.533,5531,3.132,5532,0.897,5533,1.001,5534,1.832,5535,1.001,5536,2.533,5537,1.001,5538,1.001,5539,1.001,5540,1.001,5541,1.001,5542,1.001,5543,2.533,5544,1.832,5545,1.001,5546,0.897,5547,1.001,5548,1.001,5549,1.832,5550,1.832,5551,1.001,5552,1.641,5553,1.001,5554,1.001,5555,0.828,5556,1.001,5557,2.533,5558,1.001,5559,1.001,5560,1.001,5561,1.001,5562,1.832,5563,2.533,5564,1.001,5565,1.001,5566,1.001,5567,1.001,5568,1.832,5569,1.001,5570,1.001,5571,1.001,5572,1.001,5573,1.001,5574,1.001,5575,1.001,5576,1.001,5577,0.777,5578,1.001,5579,1.001,5580,1.001,5581,3.132,5582,1.001,5583,1.001,5584,1.832,5585,1.001,5586,1.001,5587,1.001,5588,1.001,5589,1.001,5590,1.001,5591,1.001,5592,0.828,5593,1.001,5594,1.001,5595,1.001,5596,0.897,5597,1.832,5598,1.001,5599,1.001,5600,1.001,5601,1.001,5602,1.832,5603,1.001,5604,1.001,5605,0.897,5606,0.897,5607,0.701,5608,1.001,5609,1.832,5610,1.832,5611,1.001,5612,1.001,5613,1.001,5614,1.001,5615,2.533,5616,1.515,5617,1.001,5618,1.832,5619,1.832,5620,1.001,5621,0.828,5622,0.897,5623,1.001,5624,0.897,5625,1.001,5626,1.001,5627,1.832,5628,1.001,5629,2.533,5630,1.001,5631,1.001,5632,1.001,5633,1.001,5634,1.001,5635,1.001,5636,1.001,5637,1.001,5638,1.001,5639,0.897,5640,1.001,5641,0.828,5642,1.001,5643,1.001,5644,1.001,5645,1.001,5646,1.001,5647,1.001,5648,1.001,5649,1.001,5650,1.001,5651,1.001,5652,1.001,5653,0.777,5654,0.897,5655,1.832,5656,1.641,5657,1.001,5658,1.001,5659,1.001,5660,1.001,5661,1.001,5662,1.001,5663,0.897,5664,0.777,5665,1.001,5666,0.828,5667,1.001,5668,1.001,5669,1.001,5670,1.001,5671,1.001]],["title/modules.html",[113,2.638]],["body/modules.html",[27,0.004,59,0.004,60,0.004,112,4.78,113,2.505,118,4.558,138,4.558,143,4.558,398,4.78,424,4.78,427,4.78,428,4.78,429,4.054,430,4.78,1193,4.78,1332,5.674,1553,5.047,1783,4.78,1789,4.558,2199,6.949,2278,4.78,2334,4.558,2370,4.78,2397,5.047,2619,4.78,2931,4.78,2943,4.78,2946,4.78,5672,10.351,5673,10.351,5674,9.372,5675,9.713]],["title/overview.html",[3522,5.034]],["body/overview.html",[2,0.796,27,0.005,59,0.003,60,0.003,89,1.205,112,6.7,113,1.574,114,2.548,115,3.663,116,3.663,117,3.663,118,6.807,119,5.41,120,5.124,121,2.955,122,1.866,123,1.724,138,6.489,139,3.663,140,3.663,141,3.663,142,3.663,143,5.933,144,5.642,145,4.887,153,1.359,343,4.887,398,6.222,399,3.663,400,3.663,401,3.663,402,5.778,424,6.893,425,3.663,426,3.663,427,5.124,428,5.124,429,5.575,430,5.124,625,4.887,699,1.992,729,5.124,1132,4.505,1193,6.222,1194,3.663,1195,3.663,1196,3.663,1197,6.007,1262,6.12,1433,4.954,1436,5.124,1459,5.124,1591,5.865,1629,3.663,1630,3.663,1631,3.663,1681,5.124,1745,3.382,1783,6.222,1784,3.663,1785,3.663,1786,3.663,1789,6.76,1790,3.663,1792,3.663,1793,5.41,2223,6.418,2278,5.966,2279,3.663,2280,3.663,2287,5.124,2329,3.663,2330,3.663,2331,3.663,2334,4.887,2370,7.139,2371,3.663,2372,3.663,2500,5.865,2619,6.968,2620,3.663,2622,3.663,2623,3.663,2624,4.887,2857,5.124,2874,5.124,2931,6.574,2932,3.663,2943,7.258,2944,3.663,2945,3.663,2946,7.032,3033,5.124,3057,5.124,3103,3.663,3104,3.663,3105,5.124,3328,4.887,3346,3.663,3347,3.663,3348,3.663,3349,4.887,3438,3.663,3522,3.005,3591,3.663,3614,3.663,5676,4.09]],["title/todo.html",[232,1.588,3389,3.255,3390,2.94]],["body/todo.html",[0,0.127,5,0.052,11,0.539,13,1.982,17,0.246,21,0.955,27,0.005,28,0.527,36,0.484,52,3.436,53,2.463,54,2.886,56,3.191,57,4.049,59,0.003,60,0.003,68,2.395,89,1.279,111,2.154,123,2.61,126,1.903,147,2.069,150,3.324,155,1.922,169,1.721,171,2.332,172,2.139,174,1.141,181,2.116,186,1.261,209,1.398,223,5.966,226,3.999,227,5.013,232,1.644,233,3.774,234,2.976,247,2.25,256,2.165,276,3.96,281,2.707,305,4.969,312,3.016,352,4.157,357,2.618,368,4.157,421,2.272,432,4.157,438,3.732,442,2.537,443,3.191,446,3.369,494,5.055,550,1.644,612,3.016,617,2.537,663,2.713,665,3.414,697,1.942,701,2.707,863,2.116,909,3.596,910,2.707,913,2.805,916,3.858,1023,3.369,1117,2.618,1136,3.514,1138,2.165,1150,2.395,1153,2.537,1154,2.463,1155,2.463,1210,4.659,1269,2.805,1297,4.496,1336,2.805,1343,2.463,1363,2.618,1372,3.999,1410,4.774,1423,2.165,1433,2.463,1447,2.618,1467,2.537,1503,3.414,1518,3.891,1534,3.043,1536,3.858,1544,3.043,1566,2.707,1581,3.858,1634,4.214,1636,3.324,1666,5.12,1779,3.369,1839,3.191,1841,3.369,1862,3.043,1864,2.916,1892,5.582,1893,3.999,1929,6.449,1932,2.618,1935,3.043,2035,4.157,2150,3.043,2181,3.043,2197,3.592,2199,2.916,2229,3.369,2231,2.916,2247,5.12,2249,3.891,2250,2.217,2314,3.043,2325,2.805,2406,6.462,2418,3.191,2432,3.043,2437,3.043,2559,2.618,2561,3.191,2634,2.916,2635,2.805,2670,2.707,2961,5.055,3178,3.191,3365,5.51,3400,3.191,3409,3.891,3422,3.369,3425,3.191,3454,6.875,3498,2.916,3562,3.592,3575,3.592,3584,5.12,3624,3.043,3646,3.369,3651,3.891,3695,3.043,3715,3.592,3739,3.592,3749,3.592,3753,5.055,3754,3.891,3755,3.891,3778,3.592,3809,3.891,4017,3.369,4089,4.549,4161,3.891,4165,3.891,4251,3.043,4396,3.592,4407,3.592,4409,3.592,4452,3.369,4703,3.369,4735,3.369,4793,3.592,4884,3.891,4912,3.891,5030,3.592,5039,3.369,5049,2.916,5050,3.592,5094,3.369,5218,3.191,5253,3.891,5377,3.592,5653,4.803,5677,3.592,5678,4.344,5679,3.891,5680,3.891,5681,3.369,5682,3.592,5683,4.344,5684,4.344,5685,3.891,5686,4.344,5687,4.344,5688,4.344,5689,4.344,5690,4.344,5691,4.344,5692,4.344,5693,3.592,5694,4.344,5695,4.344,5696,4.344,5697,4.344,5698,4.344,5699,4.344,5700,4.344,5701,4.344,5702,4.344,5703,4.344,5704,4.344,5705,4.344,5706,4.344,5707,4.344,5708,3.891,5709,4.344,5710,4.344,5711,4.344,5712,4.344,5713,4.344,5714,3.891,5715,4.344,5716,4.344,5717,3.891,5718,3.891,5719,3.891,5720,4.344,5721,3.891,5722,4.344,5723,4.344,5724,4.344,5725,3.592,5726,4.344,5727,6.462,5728,4.344,5729,4.344,5730,4.344,5731,4.344,5732,4.344,5733,4.344,5734,4.344,5735,6.191,5736,3.891,5737,4.344]],["title/miscellaneous/typealiases.html",[4942,2.71,5738,6.041]],["body/miscellaneous/typealiases.html",[10,0.266,17,0.397,27,0.005,31,1.711,34,5.189,36,0.628,59,0.004,60,0.004,87,0.619,111,1.919,162,2.28,169,1.569,172,1.327,209,1.274,315,5.551,451,2.172,454,2.211,545,5.152,550,2.803,570,3.78,589,2.748,591,4.615,652,5.189,658,5.189,751,3.788,764,5.189,772,4.973,777,4.464,780,4.973,800,5.189,820,5.189,1136,3.607,1210,3.644,1521,4.377,1643,4.666,1644,6.414,1648,6.125,1657,6.125,1960,5.652,1978,4.377,1985,3.788,1986,5.442,1987,4.784,1991,4.377,1996,3.692,2000,3.953,2003,5.442,2010,4.377,2011,5.745,2014,6.125,2054,4.377,2114,4.666,2120,6.125,2250,2.88,2335,4.377,2346,5.745,2347,6.125,2389,4.146,2390,4.146,2398,4.666,2399,5.442,2402,6.634,2437,5.189,2543,4.377,2545,3.516,2557,6.125,2713,5.054,2747,4.666,2748,4.666,2826,5.054,2904,5.054,3903,4.666,4942,3.644,4944,6.634,4945,5.054,5369,5.054,5739,5.643,5740,7.407,5741,7.407,5742,5.643,5743,8.381,5744,7.407,5745,5.643,5746,7.407,5747,7.407,5748,5.643,5749,5.643,5750,5.054,5751,5.643,5752,5.054,5753,6.634,5754,5.054,5755,5.643,5756,7.407,5757,5.643,5758,7.407,5759,5.643,5760,5.054,5761,5.643,5762,5.054,5763,5.643,5764,5.643,5765,5.643,5766,3.953,5767,5.643,5768,5.054,5769,5.643,5770,5.643,5771,5.643]],["title/miscellaneous/variables.html",[3492,4.438,4942,2.71]],["body/miscellaneous/variables.html",[1,2.027,5,0.062,9,1.942,10,0.079,11,0.207,13,1.32,16,1.377,17,0.348,18,0.284,27,0.005,28,0.545,31,1.16,36,0.825,41,0.276,43,2.384,48,0.071,52,1.378,53,0.947,54,4.407,55,1.227,59,0.001,60,0.001,64,1.324,65,1.942,66,2.587,68,0.921,76,1.656,83,1.316,84,1.685,111,0.433,125,1.197,133,2.811,150,2.054,155,1.374,166,1.613,168,1.007,169,2.328,173,1.644,174,1.198,181,0.814,185,1.382,191,1.433,201,1.409,208,0.704,210,1.154,211,0.427,216,0.591,227,1.595,231,1.041,232,0.632,234,0.632,247,2.795,248,2.862,252,0.946,254,1.122,256,0.833,257,1.171,269,3.202,273,2.027,274,1.942,276,0.796,279,1.448,281,1.041,282,1.293,325,1.348,352,1.122,357,3.107,363,3.33,369,1.744,371,0.947,374,0.833,375,3.164,377,1.296,406,2.054,417,1.32,421,0.874,442,0.976,443,1.227,451,2.332,452,1.382,453,2.235,454,2.903,455,1.007,456,1.227,457,1.171,462,2.94,469,0.796,490,1.122,495,1.227,499,1.227,500,1.382,524,1.041,548,1.041,550,0.632,576,0.947,577,1.041,589,0.814,611,1.378,612,1.409,613,1.348,614,1.348,615,1.409,616,0.976,622,1.079,623,1.079,647,1.32,661,1.496,662,2.392,665,1.595,683,4.149,688,0.814,695,2.68,697,0.747,699,0.814,702,1.553,716,2.882,717,2.632,725,1.942,741,3.519,742,2.054,751,1.122,753,0.921,777,1.007,784,3.107,797,2.027,798,1.868,799,2.027,817,1.69,828,2.768,838,0.718,846,3.122,863,0.814,887,1.171,904,1.171,909,0.833,910,1.041,919,1.595,922,1.079,1017,1.227,1021,1.296,1035,0.897,1063,1.382,1073,2.392,1074,1.382,1075,2.392,1076,2.392,1077,4.264,1078,1.942,1079,3.772,1080,6.128,1081,5.01,1082,1.382,1083,1.942,1084,1.382,1085,1.382,1086,1.382,1087,1.382,1088,1.382,1089,1.382,1090,1.382,1091,1.382,1092,1.382,1117,1.007,1136,1.863,1138,0.833,1149,1.079,1150,0.921,1153,0.976,1155,0.947,1276,1.171,1281,1.171,1297,1.041,1336,1.079,1348,1.296,1355,2.109,1383,0.947,1404,1.382,1405,1.496,1406,3.427,1409,1.171,1410,2.054,1413,1.296,1417,2.591,1418,2.392,1419,1.496,1420,1.496,1423,1.442,1424,2.591,1425,2.027,1426,1.296,1427,1.953,1428,1.122,1429,1.227,1433,2.587,1478,1.171,1481,1.227,1500,1.296,1503,1.595,1535,1.079,1536,1.803,1545,1.079,1559,1.171,1566,2.842,1581,1.041,1625,2.125,1634,0.976,1635,0.921,1636,1.553,1664,1.227,1671,1.296,1672,1.122,1700,2.244,1702,1.296,1708,1.382,1709,1.382,1710,2.591,1723,1.171,1762,1.496,1779,1.296,1826,4.149,1831,1.382,1832,1.496,1836,1.382,1838,3.427,1839,1.227,1840,1.382,1841,4.972,1843,2.591,1844,2.68,1857,2.591,1858,1.496,1859,2.591,1860,1.382,1861,1.227,1862,4.49,1863,2.591,1864,2.569,1865,1.122,1866,2.591,1867,1.496,1868,2.591,1869,1.496,1870,1.382,1871,1.496,1872,1.496,1873,1.496,1874,1.496,1875,1.496,1876,1.382,1879,1.382,1883,1.382,1889,2.591,1890,1.227,1891,1.496,1892,1.122,1893,2.471,1894,2.591,1895,1.382,1896,2.591,1897,1.496,1898,2.244,1899,1.496,1900,1.496,1901,1.382,1902,2.591,1903,1.496,1904,1.496,1905,1.296,1906,1.227,1907,1.296,1908,1.227,1909,1.496,1910,1.496,1911,1.496,1912,1.496,1913,4.618,1914,2.591,1915,4.618,1916,1.496,1917,1.382,1918,1.496,1931,2.392,1938,1.171,1960,0.976,1987,1.868,1992,1.868,1993,3.17,1996,2.273,1998,1.171,2001,1.868,2002,1.868,2030,0.976,2055,1.227,2063,1.382,2082,0.814,2088,1.079,2125,0.921,2165,2.68,2190,1.496,2191,1.496,2192,2.244,2193,1.496,2209,1.382,2215,1.496,2216,1.496,2229,1.296,2231,3.462,2244,1.868,2254,1.496,2255,2.591,2268,1.496,2293,2.17,2318,1.122,2325,1.868,2335,1.296,2338,2.392,2343,1.227,2346,1.296,2348,2.392,2349,1.382,2350,1.382,2351,1.382,2352,1.296,2353,1.382,2375,2.244,2379,2.968,2389,2.125,2394,1.296,2395,1.868,2398,1.382,2399,2.811,2400,1.496,2401,2.591,2407,1.496,2409,4.085,2411,2.591,2412,1.496,2413,2.591,2414,1.496,2415,1.496,2416,1.496,2417,1.382,2418,1.227,2419,1.227,2420,1.382,2421,1.171,2422,1.496,2423,1.382,2424,1.296,2425,1.496,2426,1.496,2427,1.496,2428,1.496,2429,1.496,2430,1.496,2432,2.027,2452,1.122,2526,1.496,2527,2.591,2543,1.296,2556,2.392,2559,3.651,2634,1.122,2635,2.471,2701,2.392,2791,1.296,2839,1.296,2849,1.496,2851,1.496,2926,2.244,2931,1.227,2950,4.451,3271,1.496,3274,2.591,3276,3.164,3277,1.496,3278,1.496,3279,1.496,3280,1.496,3283,1.227,3290,2.392,3374,1.496,3425,3.351,3426,2.569,3459,2.68,3486,1.171,3492,1.227,3546,1.496,3590,3.956,3646,2.244,3660,1.496,3694,1.382,3695,1.171,3696,1.496,3697,2.591,3698,1.296,3734,2.591,3753,1.171,3844,1.496,4038,1.296,4119,1.227,4176,1.171,4277,1.382,4283,1.382,4338,2.591,4469,2.591,4473,1.496,4558,1.382,4841,1.496,4942,1.079,4948,2.125,4952,5.427,4963,1.382,4984,2.244,5011,1.382,5041,1.496,5187,1.382,5218,1.227,5682,1.382,5693,3.164,5717,2.591,5727,1.496,5743,2.591,5750,1.496,5752,2.591,5753,4.085,5754,3.427,5762,1.496,5768,1.496,5772,1.671,5773,4.561,5774,1.671,5775,4.085,5776,2.893,5777,2.893,5778,1.671,5779,2.893,5780,1.671,5781,1.671,5782,3.826,5783,1.671,5784,1.671,5785,2.893,5786,2.893,5787,1.671,5788,2.893,5789,1.671,5790,2.893,5791,4.561,5792,2.893,5793,3.826,5794,4.561,5795,2.893,5796,1.671,5797,3.826,5798,2.893,5799,1.671,5800,2.893,5801,1.671,5802,1.671,5803,2.893,5804,1.671,5805,2.893,5806,1.671,5807,1.671,5808,1.671,5809,1.671,5810,1.671,5811,2.893,5812,1.671,5813,1.671,5814,1.671,5815,1.671,5816,1.671,5817,1.671,5818,1.671,5819,1.496,5820,1.671,5821,1.671,5822,1.496,5823,1.671,5824,1.671,5825,1.671,5826,1.671,5827,1.671,5828,2.392,5829,1.496,5830,1.496,5831,1.496,5832,1.671,5833,1.671,5834,1.671,5835,2.591,5836,1.671,5837,1.671,5838,1.671,5839,1.671,5840,1.671,5841,1.496,5842,1.671,5843,3.427,5844,1.671,5845,1.496,5846,1.671,5847,1.671,5848,1.671,5849,1.671,5850,1.671,5851,1.671,5852,1.671,5853,1.671,5854,1.671,5855,1.671,5856,1.671,5857,1.671,5858,1.671,5859,1.671,5860,1.671,5861,1.671,5862,1.671,5863,1.671,5864,1.671,5865,1.671,5866,1.671,5867,1.671,5868,1.671,5869,1.671,5870,1.671,5871,1.671,5872,1.671,5873,1.671,5874,1.671,5875,1.671,5876,3.826,5877,1.671,5878,2.893,5879,1.496,5880,1.671,5881,2.893,5882,1.671,5883,2.893,5884,1.671,5885,1.671,5886,1.671,5887,1.671,5888,1.671,5889,1.671,5890,1.671,5891,1.671,5892,1.671,5893,1.671,5894,1.671,5895,1.671,5896,1.671,5897,1.671,5898,1.671,5899,1.671,5900,1.671,5901,1.671,5902,1.671,5903,1.671,5904,1.671]],["title/additional-documentation/nestjs-application.html",[374,1.796,417,1.645,1580,1.796,2793,1.987]],["body/additional-documentation/nestjs-application.html",[8,0.892,13,3.743,14,3.346,27,0.004,28,0.318,57,3.569,59,0.003,60,0.003,89,1.101,111,1.438,113,1.439,122,1.706,150,2.98,168,3.346,171,2.007,184,2.415,227,5.237,233,2.905,234,3.301,247,1.07,276,1.781,305,1.956,352,3.727,370,2.62,371,2.12,372,2.415,374,4.586,406,4.202,417,4.067,420,1.821,421,2.905,435,2.9,488,2.9,490,2.51,552,1.821,557,2.689,611,3.49,615,2.704,675,3.89,680,2.254,710,2.184,909,2.767,919,2.062,960,2.791,1035,3.934,1143,3.89,1145,3.727,1150,2.062,1153,2.184,1155,3.148,1159,4.306,1163,4.566,1210,2.415,1228,3.586,1266,2.62,1275,2.254,1328,3.092,1332,2.184,1336,4.277,1363,2.254,1383,2.12,1384,3.727,1410,4.403,1423,3.652,1429,2.747,1478,2.62,1488,3.89,1535,2.415,1536,2.33,1580,1.864,1581,2.33,1582,3.89,1634,3.243,1636,2.007,1653,2.415,1672,2.51,1732,2.51,1778,2.747,1862,5.134,1892,4.92,1898,2.9,1944,3.89,2034,2.9,2177,3.092,2184,3.727,2250,1.908,2316,2.9,2318,2.51,2340,4.92,2358,3.092,2395,3.586,2419,2.747,2434,3.349,2561,2.747,2634,5.256,2635,4.733,2640,2.62,2793,3.061,2963,3.349,2964,4.591,3284,3.89,3390,3.89,3393,2.62,3425,6.409,3426,6.513,3454,3.092,3459,2.62,3464,3.89,3481,4.591,3506,2.9,3522,2.747,3533,4.306,3550,3.092,3656,3.092,3663,3.092,3666,2.62,3688,3.349,3695,5.134,3698,4.306,3714,5.476,3715,4.591,3752,3.349,3756,5.056,3891,3.092,4088,3.092,4089,6.916,4119,5.752,4136,4.591,4251,2.62,4279,3.092,4283,4.591,4412,5.931,4474,3.349,4506,4.306,4554,3.092,4921,3.349,4930,3.092,4984,2.9,4985,3.092,4986,2.747,4987,2.9,4989,2.9,4992,2.51,4993,3.349,5000,5.136,5011,3.092,5030,3.092,5049,4.92,5057,3.092,5187,3.092,5208,4.973,5209,2.62,5217,3.349,5218,4.865,5260,3.349,5289,2.747,5358,2.747,5366,4.079,5423,2.747,5461,3.092,5505,3.349,5511,3.349,5621,4.591,5641,3.092,5664,2.9,5674,3.349,5714,4.973,5718,5.931,5719,5.931,5766,3.89,5775,3.349,5828,4.591,5829,4.973,5830,3.349,5831,3.349,5843,3.349,5905,3.739,5906,3.739,5907,3.739,5908,3.739,5909,3.739,5910,3.739,5911,3.739,5912,3.739,5913,3.739,5914,5.552,5915,3.739,5916,3.739,5917,3.739,5918,5.552,5919,7.328,5920,3.739,5921,3.739,5922,3.739,5923,3.092,5924,3.739,5925,7.328,5926,3.739,5927,3.349,5928,3.739,5929,3.739,5930,3.739,5931,8.203,5932,3.739,5933,3.739,5934,3.739,5935,3.739,5936,5.552,5937,3.739,5938,3.739,5939,3.739,5940,3.739,5941,5.552,5942,3.739,5943,3.739,5944,4.973,5945,5.552,5946,3.739,5947,3.739,5948,3.739,5949,3.739,5950,5.552,5951,3.739,5952,3.739,5953,2.9,5954,3.739,5955,3.739,5956,3.739,5957,3.739,5958,3.739,5959,3.739,5960,3.349,5961,3.739,5962,3.739,5963,3.739,5964,3.739,5965,3.739,5966,6.622,5967,4.973,5968,3.739,5969,3.739,5970,3.739,5971,3.739,5972,3.739,5973,3.739,5974,5.552,5975,3.739,5976,5.552,5977,4.591,5978,3.349,5979,3.739,5980,6.622,5981,5.552,5982,3.739,5983,3.739,5984,3.739,5985,3.349,5986,3.739,5987,3.349,5988,3.739,5989,3.739,5990,3.739,5991,3.739,5992,3.739,5993,3.739,5994,3.739,5995,3.739]],["title/additional-documentation/nestjs-application/software-architecture.html",[1580,1.796,2793,1.987,4991,2.419,5058,2.795]],["body/additional-documentation/nestjs-application/software-architecture.html",[2,0.643,4,0.04,5,0.04,13,3.515,14,1.991,15,0.809,24,0.454,26,0.461,27,0.002,28,0.209,31,0.42,50,0.841,52,3.668,53,2.593,54,3.106,56,1.017,57,1.609,59,0.001,60,0.001,65,1.647,66,1.391,68,2.204,83,0.204,84,0.617,87,0.704,89,0.723,114,1.965,123,1.034,126,0.607,147,0.659,166,1.034,168,1.991,169,2.063,171,4.587,172,0.777,175,0.97,181,0.674,184,2.581,194,1.145,201,0.674,209,1.236,226,5.425,227,0.763,229,0.785,232,0.524,233,1.284,234,3.004,238,0.894,239,1.991,247,0.396,248,0.973,278,0.707,279,0.524,305,0.724,369,5.745,370,0.97,371,2.266,372,4.573,374,3.9,389,0.929,406,0.743,420,3.967,421,2.091,434,3.915,435,1.903,438,3.298,439,1.074,440,4.31,442,0.809,451,0.533,455,1.479,483,0.743,495,1.017,502,1.609,551,1.143,552,1.195,570,1.252,576,1.874,589,0.674,593,0.707,614,0.645,617,1.433,637,0.619,647,1.824,664,1.074,670,1.479,674,0.894,680,3.048,685,1.479,696,0.785,767,1.991,809,0.894,812,0.929,855,0.834,863,0.674,910,0.863,911,0.894,912,1.802,913,3.766,916,0.863,919,2.788,960,3.768,1138,3.062,1150,1.353,1153,1.433,1155,1.391,1162,1.145,1163,0.863,1210,2.953,1228,0.894,1275,2.755,1280,2.563,1305,4.623,1332,1.433,1343,0.785,1355,2.204,1360,2.8,1363,2.409,1383,0.785,1410,1.773,1411,0.894,1412,4.757,1427,3.136,1439,3.781,1488,3.834,1496,4.98,1497,3.915,1503,4.315,1534,0.97,1535,2.134,1536,2.059,1544,2.315,1545,0.894,1566,0.863,1579,3.41,1580,1.647,1582,4.498,1634,1.93,1635,3.017,1636,4.746,1638,1.719,1646,2.218,1658,2.218,1723,0.97,1726,3.1,1732,0.929,1743,0.863,1755,1.017,1756,0.863,1778,1.017,1864,4.475,1865,0.929,1870,1.145,1890,1.017,1893,0.894,1938,0.97,1983,0.97,1993,1.284,1995,3.196,1996,0.69,1998,0.97,2012,0.834,2013,0.785,2016,0.809,2028,0.894,2035,2.218,2041,4.182,2055,2.427,2080,0.97,2097,1.584,2125,2.204,2127,1.074,2178,1.074,2179,2.49,2181,0.97,2182,5.081,2184,0.929,2192,1.074,2196,1.145,2198,3.716,2206,1.017,2250,2.976,2251,1.24,2263,1.145,2264,3.359,2293,1.391,2314,2.315,2318,1.647,2320,2.936,2323,1.802,2352,1.074,2369,1.074,2417,1.145,2418,3.359,2421,2.315,2438,1.017,2452,1.647,2494,2.197,2559,0.834,2640,0.97,2669,4.514,2670,3.151,2702,0.97,2738,1.017,2793,0.763,2923,0.97,3041,1.145,3045,1.074,3055,2.315,3115,1.145,3180,1.017,3206,1.145,3208,2.563,3283,1.017,3284,0.97,3285,1.145,3393,1.719,3394,2.029,3399,2.8,3400,2.427,3402,2.732,3406,2.029,3408,2.581,3440,1.24,3446,1.145,3447,2.197,3450,1.145,3464,1.719,3469,2.563,3480,6.936,3481,1.145,3482,3.203,3485,1.017,3486,1.719,3492,1.017,3498,1.647,3522,1.017,3533,1.074,3555,2.936,3557,1.24,3558,1.017,3575,1.145,3584,1.145,3590,0.97,3597,1.145,3604,1.24,3609,1.145,3611,2.959,3619,2.315,3624,0.97,3628,1.24,3639,2.197,3656,1.145,3662,1.24,3665,3.716,3700,2.959,3703,1.145,3725,1.145,3753,0.97,3756,0.894,3762,2.936,3763,1.145,3765,1.24,3772,2.732,3793,1.145,3801,1.24,3805,3.359,3824,1.145,3825,2.029,3827,1.24,3829,1.24,3839,1.24,3842,1.24,3861,1.24,3903,2.029,3946,2.197,3962,7.342,3968,2.029,4009,2.936,4011,6.172,4030,1.24,4037,1.903,4068,2.197,4089,1.802,4099,3.781,4112,1.903,4133,1.145,4139,1.145,4152,3.359,4160,2.427,4166,3.1,4174,3.58,4179,3.543,4180,1.074,4199,1.24,4200,2.029,4204,1.24,4219,2.029,4223,2.732,4238,5.75,4251,0.97,4252,1.145,4281,1.145,4308,1.145,4312,1.017,4318,4.095,4356,2.959,4373,2.197,4409,1.145,4422,1.145,4446,3.1,4448,1.145,4457,1.145,4506,1.074,4539,1.24,4544,1.24,4572,4.095,4589,1.903,4603,1.903,4631,1.145,4661,1.24,4664,1.145,4667,1.074,4672,2.563,4675,1.145,4688,1.24,4693,2.029,4723,1.24,4735,4.245,4747,1.24,4772,1.24,4780,1.903,4797,2.197,4930,2.029,4964,2.197,4969,2.029,4970,4.02,4980,1.24,4984,2.563,4986,1.802,4991,5.737,4992,3.07,5000,1.074,5001,2.197,5005,2.936,5007,0.97,5013,2.029,5018,7.001,5035,1.017,5039,1.074,5044,1.903,5057,2.029,5058,1.074,5069,2.197,5071,1.145,5074,1.24,5079,1.24,5082,1.24,5085,1.24,5094,1.074,5096,1.24,5107,1.24,5118,2.029,5119,3.923,5121,4.182,5124,2.197,5125,1.903,5148,1.24,5153,1.24,5154,4.98,5173,0.97,5176,1.24,5193,1.145,5195,2.959,5199,1.24,5201,1.24,5207,1.24,5209,2.315,5216,1.24,5221,5.855,5227,1.145,5229,1.145,5231,2.029,5233,1.145,5235,1.24,5261,3.1,5265,1.24,5289,1.017,5290,1.24,5307,1.24,5317,1.145,5319,1.017,5334,1.24,5337,1.24,5343,1.24,5347,2.197,5358,1.017,5360,1.24,5366,2.427,5378,1.24,5391,2.197,5392,4.095,5412,1.145,5421,3.58,5423,1.017,5425,1.24,5433,1.145,5451,1.24,5455,1.24,5457,1.24,5461,1.145,5500,4.53,5529,1.24,5546,1.24,5555,4.525,5577,5.34,5592,1.145,5605,1.24,5606,1.24,5607,4.498,5616,1.145,5654,1.24,5666,1.145,5677,2.029,5680,1.24,5681,3.923,5721,2.197,5736,1.24,5923,1.145,5953,1.074,5996,1.384,5997,1.384,5998,5.97,5999,6.144,6000,2.453,6001,3.304,6002,2.959,6003,4.822,6004,2.453,6005,2.959,6006,5.472,6007,1.384,6008,1.384,6009,3.1,6010,3.58,6011,1.384,6012,1.384,6013,1.384,6014,1.384,6015,2.453,6016,1.384,6017,1.384,6018,4.572,6019,1.384,6020,1.384,6021,3.304,6022,2.453,6023,1.384,6024,1.384,6025,1.384,6026,1.384,6027,1.384,6028,1.384,6029,1.384,6030,1.24,6031,2.453,6032,5.057,6033,1.384,6034,1.384,6035,2.453,6036,2.453,6037,3.997,6038,3.304,6039,3.997,6040,1.384,6041,3.58,6042,3.58,6043,1.384,6044,1.384,6045,1.384,6046,1.384,6047,1.384,6048,2.959,6049,1.384,6050,1.384,6051,1.384,6052,7.702,6053,1.384,6054,7.568,6055,1.384,6056,2.197,6057,1.384,6058,2.453,6059,1.145,6060,4.514,6061,6.144,6062,1.384,6063,2.959,6064,2.197,6065,2.453,6066,1.384,6067,1.384,6068,1.384,6069,1.384,6070,1.384,6071,3.305,6072,2.453,6073,1.384,6074,1.384,6075,1.384,6076,1.384,6077,1.24,6078,1.384,6079,1.384,6080,1.384,6081,1.24,6082,1.384,6083,1.384,6084,1.384,6085,1.24,6086,2.453,6087,1.384,6088,3.304,6089,1.384,6090,1.384,6091,1.384,6092,2.453,6093,1.384,6094,2.453,6095,3.304,6096,1.384,6097,1.384,6098,1.384,6099,2.453,6100,3.304,6101,1.384,6102,1.384,6103,1.384,6104,1.384,6105,1.384,6106,1.384,6107,1.24,6108,1.384,6109,2.453,6110,1.384,6111,1.384,6112,6.144,6113,1.384,6114,1.24,6115,1.145,6116,1.384,6117,1.384,6118,1.384,6119,1.384,6120,1.384,6121,1.384,6122,1.384,6123,3.304,6124,1.384,6125,2.453,6126,3.304,6127,1.384,6128,1.384,6129,1.384,6130,1.384,6131,2.453,6132,1.384,6133,1.384,6134,1.384,6135,2.197,6136,1.384,6137,1.24,6138,1.384,6139,1.384,6140,2.453,6141,1.384,6142,1.24,6143,1.384,6144,2.453,6145,1.384,6146,1.384,6147,1.384,6148,1.384,6149,1.24,6150,1.384,6151,1.384,6152,2.453,6153,1.384,6154,1.384,6155,1.384,6156,1.384,6157,1.384,6158,1.24,6159,1.384,6160,1.384,6161,1.384,6162,1.24,6163,3.304,6164,1.384,6165,1.384,6166,1.384,6167,1.384,6168,1.384,6169,2.453,6170,1.384,6171,1.384,6172,3.304,6173,1.384,6174,1.384,6175,2.453,6176,1.384,6177,2.453,6178,1.384,6179,1.384,6180,1.384,6181,1.384,6182,1.384,6183,1.384,6184,1.384,6185,2.453,6186,1.384,6187,1.384,6188,1.384,6189,1.384,6190,1.384,6191,1.384,6192,1.384,6193,1.384,6194,8.321,6195,1.384,6196,1.384,6197,1.24,6198,1.384,6199,1.384,6200,2.453,6201,1.384,6202,1.384,6203,1.384,6204,1.384,6205,1.384,6206,1.384,6207,1.24,6208,1.384,6209,1.384,6210,1.24,6211,1.384,6212,1.384,6213,1.384,6214,1.384,6215,2.453,6216,1.384,6217,1.384,6218,2.563,6219,1.384,6220,1.384,6221,1.145,6222,1.384,6223,1.384,6224,4.572,6225,1.384,6226,1.384,6227,1.384,6228,1.384,6229,1.384,6230,1.384,6231,1.384,6232,1.384,6233,1.384,6234,1.384,6235,1.384,6236,2.453,6237,1.384,6238,1.384,6239,2.453,6240,1.384,6241,1.384,6242,1.384,6243,2.453,6244,1.384,6245,1.384,6246,1.384,6247,1.384,6248,1.24,6249,2.453,6250,1.384,6251,2.453,6252,1.384,6253,1.384,6254,1.384,6255,1.24,6256,2.453]],["title/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[13,1.441,1580,1.574,2793,1.741,4991,2.12,6060,2.32]],["body/additional-documentation/nestjs-application/architecture-mapping-to-code.html",[0,0.242,2,0.489,3,0.05,4,0.041,5,0.1,11,0.637,13,1.859,17,0.162,21,0.552,24,0.685,27,0.005,28,0.65,44,0.127,48,0.129,52,3.315,53,2.914,57,1.984,59,0.002,60,0.002,66,1.424,67,3.818,68,1.385,76,1.046,83,0.759,84,0.761,87,0.275,89,1.2,111,2.38,113,3.193,114,1.079,125,1.685,126,1.785,138,1.76,143,3.6,144,2.631,145,4.142,147,3.315,150,3.488,152,0.45,155,1.085,168,1.514,169,1.807,171,3.174,172,1.724,174,1.07,175,1.76,181,3.843,188,0.967,191,1.133,209,0.567,211,1.661,216,0.889,227,2.834,229,3.946,231,3.684,234,3.525,240,1.948,241,2.077,247,0.719,276,2.448,278,2.079,301,1.467,335,1.948,351,2.854,354,1.686,355,2.25,368,1.686,369,3.563,371,2.914,373,2.631,374,1.252,413,1.686,417,2.966,420,4.119,421,3.093,432,3.45,442,2.379,454,2.013,483,2.759,496,2.854,550,1.945,552,1.984,576,2.31,615,1.223,617,1.467,647,1.146,660,1.845,663,3.212,665,1.385,675,3.6,680,2.455,685,1.514,694,2.914,697,3.414,699,3.165,710,1.467,722,1.845,727,1.76,737,1.948,741,2.538,742,2.187,767,2.455,810,1.385,855,1.514,863,2.503,909,1.252,910,2.538,913,3.319,916,1.565,919,1.385,960,3.326,1117,2.455,1138,1.252,1153,1.467,1155,2.31,1163,3.684,1185,1.845,1266,1.76,1268,2.077,1269,4.197,1270,4.25,1298,1.948,1305,1.565,1332,1.467,1335,1.514,1343,2.31,1355,3.26,1363,1.514,1383,2.914,1384,2.735,1410,2.187,1412,4.282,1423,1.252,1425,1.76,1447,1.514,1467,3.002,1496,3.986,1519,2.25,1566,1.565,1579,4.05,1580,2.561,1581,1.565,1584,2.25,1589,2.25,1591,4.672,1633,1.686,1634,3.796,1635,3.837,1637,3.6,1638,1.76,1639,1.76,1640,1.76,1644,1.948,1646,1.686,1658,1.686,1667,1.686,1757,1.845,1854,2.25,1862,1.76,1864,1.686,1893,3.319,1928,4.25,1929,3.16,1938,1.76,1944,1.76,1947,1.845,1987,1.622,2028,2.631,2082,1.223,2127,3.16,2150,1.76,2178,1.948,2179,2.538,2185,2.077,2198,1.845,2206,1.845,2231,1.686,2250,3.552,2263,2.077,2293,1.424,2323,2.993,2325,1.622,2388,3.776,2487,1.76,2507,2.25,2508,2.25,2509,2.25,2510,2.25,2511,2.077,2519,2.077,2559,2.455,2560,2.077,2634,1.686,2669,2.993,2670,1.565,2702,1.76,2730,1.686,2816,2.25,2950,1.845,2961,1.76,3116,2.25,3179,1.845,3180,1.845,3349,1.76,3362,5.374,3365,5.528,3366,2.077,3369,2.077,3399,1.76,3402,2.077,3406,4.889,3408,2.631,3422,3.986,3424,2.25,3459,4.553,3464,2.854,3469,1.948,3480,5.61,3482,1.76,3485,1.845,3492,1.845,3498,5.298,3558,1.845,3590,2.854,3597,4.25,3624,2.854,3666,1.76,3753,4.876,3756,2.631,3762,1.845,3805,3.776,3855,2.25,3883,2.25,3891,2.077,4009,2.993,4011,1.845,4038,1.948,4039,3.16,4166,1.948,4170,2.077,4175,2.077,4176,2.854,4179,1.76,4180,1.948,4219,4.25,4276,2.25,4345,2.25,4351,2.077,4353,2.25,4366,2.25,4381,2.25,4452,1.948,4559,1.948,4589,1.948,4641,2.25,4664,2.077,4963,2.077,4969,2.077,4970,1.845,4988,2.077,4991,3.45,4992,4.363,5000,1.948,5005,1.845,5007,1.76,5017,2.25,5018,3.986,5028,2.25,5035,1.845,5036,2.25,5043,2.077,5044,4.586,5047,2.25,5049,1.686,5050,2.077,5081,2.25,5095,2.077,5097,2.25,5125,1.948,5154,1.948,5168,2.25,5173,1.76,5193,2.077,5202,2.077,5203,2.25,5209,1.76,5227,2.077,5233,2.077,5261,1.948,5289,2.993,5300,2.25,5319,1.845,5358,1.845,5412,2.077,5423,1.845,5532,4.603,5577,3.16,5607,1.76,5624,2.25,5666,2.077,5681,4.586,5682,4.25,5693,4.25,5766,3.6,5819,2.25,5835,2.25,5841,2.25,5923,2.077,5927,2.25,5977,3.369,5998,2.25,6009,1.948,6042,2.25,6054,7.386,6056,2.25,6059,3.369,6060,4.775,6077,2.25,6085,2.25,6107,3.649,6114,4.603,6149,3.649,6207,3.649,6210,2.25,6218,1.948,6257,2.077,6258,2.25,6259,2.512,6260,5.139,6261,2.512,6262,6.565,6263,3.369,6264,2.512,6265,4.074,6266,5.912,6267,2.512,6268,2.512,6269,2.512,6270,2.512,6271,2.512,6272,2.512,6273,2.512,6274,4.074,6275,2.512,6276,2.512,6277,2.512,6278,2.25,6279,4.074,6280,2.512,6281,2.512,6282,2.512,6283,2.512,6284,2.25,6285,2.512,6286,2.512,6287,2.25,6288,4.074,6289,2.512,6290,2.077,6291,2.512,6292,2.512,6293,2.512,6294,2.512,6295,2.512,6296,2.512,6297,2.512,6298,2.512,6299,4.074,6300,4.074,6301,2.512,6302,2.25,6303,3.649,6304,2.512,6305,2.512,6306,2.512,6307,2.512,6308,2.512,6309,2.512,6310,2.512,6311,2.512,6312,2.512,6313,2.512,6314,2.512,6315,2.512,6316,2.512,6317,2.512,6318,2.512,6319,2.512,6320,2.512,6321,2.512,6322,2.512,6323,2.512,6324,2.512,6325,2.512,6326,2.512,6327,2.512,6328,2.512,6329,2.512,6330,2.512,6331,2.512,6332,2.512,6333,2.512,6334,2.512,6335,2.25,6336,2.512,6337,2.512,6338,2.25,6339,2.512,6340,2.512,6341,2.512,6342,2.512,6343,2.512,6344,2.512,6345,2.512,6346,2.512,6347,2.25,6348,2.512]],["title/additional-documentation/nestjs-application/domain-driven-design.html",[1580,1.574,2793,1.741,3365,2.212,6009,2.449,6349,2.828]],["body/additional-documentation/nestjs-application/domain-driven-design.html",[13,2.664,14,3.518,24,0.359,27,0.005,36,0.446,51,3.31,54,1.865,57,3.355,59,0.003,60,0.003,67,2.585,76,1.033,83,0.862,84,1.415,87,0.439,123,1.687,155,1.066,162,1.797,169,2.562,172,1.373,174,1.052,181,4.093,191,2.238,194,4.827,201,1.949,211,1.023,229,3.31,232,1.514,233,3.053,234,3.534,256,1.995,301,2.338,335,4.527,354,2.687,369,5.23,370,4.826,371,2.27,372,2.585,373,2.585,374,4.189,417,2.664,420,1.949,421,3.053,432,2.687,435,4.527,438,2.412,439,3.104,440,2.687,454,2.699,462,1.687,469,2.78,496,4.089,563,4.089,570,2.043,647,2.664,664,5.344,674,2.585,685,4.563,838,1.72,855,3.518,911,2.585,916,3.637,960,3.393,1035,2.148,1078,2.687,1145,2.687,1185,2.94,1336,2.585,1355,3.218,1360,2.804,1363,3.518,1366,2.687,1372,2.585,1383,3.31,1412,2.338,1478,2.804,1497,2.687,1503,2.207,1545,2.585,1566,2.494,1579,5.542,1635,5.001,1639,2.804,1640,2.804,1667,2.687,1691,2.494,1723,2.804,1756,4.293,1864,2.687,1944,2.804,1947,2.94,2082,1.949,2125,2.207,2131,3.104,2165,4.089,2250,3.516,2432,2.804,2640,2.804,2738,2.94,2750,3.585,2779,3.585,2839,3.104,2961,2.804,3055,2.804,3178,2.94,3365,6.784,3393,2.804,3399,2.804,3408,2.585,3426,2.687,3480,2.94,3482,2.804,3485,5.915,3498,2.687,3506,3.104,3555,4.288,3619,4.089,3624,4.089,3664,3.104,3665,2.94,3762,2.94,3834,6.17,3857,3.585,4009,5.061,4037,3.104,4039,3.104,4144,3.31,4152,2.94,4176,2.804,4178,4.527,4312,2.94,4446,3.104,4457,3.31,4631,3.31,4667,3.104,4780,3.104,4819,3.31,4859,2.94,4948,2.94,4970,2.94,4987,3.104,4991,5.084,4992,3.918,5005,2.94,5007,2.804,5095,4.827,5119,6.519,5125,3.104,5130,3.31,5173,2.804,5209,4.089,5319,2.94,5358,4.288,5366,4.288,5423,2.94,5555,3.31,5577,3.104,5596,3.585,5607,2.804,5641,3.31,5653,3.104,5663,5.228,5664,3.104,5677,3.31,5725,3.31,5766,2.804,5953,3.104,5977,3.31,6005,3.585,6009,4.527,6010,3.585,6054,6.245,6137,3.585,6142,3.585,6162,3.585,6197,3.585,6221,3.31,6257,3.31,6262,5.228,6278,5.228,6335,3.585,6338,3.585,6349,3.585,6350,4.002,6351,4.002,6352,4.002,6353,4.002,6354,4.002,6355,4.002,6356,4.002,6357,4.002,6358,5.836,6359,4.002,6360,4.002,6361,4.002,6362,4.002,6363,4.002,6364,4.002,6365,4.002,6366,4.002,6367,4.002,6368,4.002,6369,4.002,6370,4.002,6371,4.002,6372,4.002,6373,3.585,6374,4.002,6375,4.002,6376,3.585,6377,4.002,6378,3.585,6379,4.002,6380,4.002,6381,4.002,6382,4.002,6383,4.002,6384,4.002,6385,4.002,6386,5.228,6387,4.002,6388,4.002,6389,4.002,6390,4.002,6391,4.002,6392,4.002,6393,4.002,6394,4.002,6395,4.002,6396,4.002,6397,4.002,6398,4.002,6399,4.002,6400,4.002,6401,4.002,6402,4.002,6403,4.002,6404,4.002,6405,4.002,6406,4.002,6407,4.002,6408,4.002,6409,4.002,6410,4.002,6411,4.002,6412,4.002,6413,4.002,6414,4.002,6415,5.836,6416,4.002,6417,3.31,6418,4.002,6419,3.585,6420,4.002,6421,4.002,6422,4.002,6423,4.002,6424,3.31]],["title/additional-documentation/nestjs-application/cross-cutting-concerns.html",[434,2.12,1580,1.574,2793,1.741,5607,2.212,6003,2.611]],["body/additional-documentation/nestjs-application/cross-cutting-concerns.html",[0,0.195,13,3.487,14,2.912,15,2.822,16,1.738,17,0.327,21,1.062,23,4.901,27,0.005,28,0.411,31,2.023,36,1.056,44,0.239,48,0.09,51,3.995,52,3.177,53,4.333,54,4.03,59,0.004,60,0.003,65,3.243,66,2.74,68,4.768,87,0.731,111,2.241,126,2.923,152,0.866,155,1.287,168,2.912,184,4.935,224,3.995,227,2.664,229,4.333,231,3.01,234,3.118,247,2.474,278,2.466,351,3.385,354,3.243,369,5.212,370,3.385,371,3.783,372,3.12,374,2.408,409,1.51,417,3.044,420,3.249,429,4.157,432,3.243,434,4.479,438,2.912,440,5.533,446,3.747,485,4.021,595,3.01,670,4.021,960,2.036,1138,2.408,1154,2.74,1155,3.783,1290,3.995,1343,2.74,1423,2.408,1433,5.296,1446,4.327,1455,4.327,1486,5.175,1503,5.227,1565,4.327,1566,4.157,1567,3.747,1575,4.327,1579,3.01,1580,3.325,1581,4.761,1636,2.593,1637,3.385,1667,3.243,1798,4.327,1864,5.13,1865,6.27,1892,4.479,1895,3.995,2035,4.479,2040,4.327,2041,3.995,2043,4.327,2047,4.327,2049,4.327,2050,4.327,2125,3.678,2179,3.01,2198,3.549,2250,3.405,2293,2.74,2314,3.385,2315,4.327,2318,3.243,2323,4.901,2325,4.308,2518,5.175,2758,4.327,2923,3.385,3179,3.549,3180,3.549,3385,3.995,3408,3.12,3486,3.385,3558,3.549,3569,3.747,3756,3.12,4369,4.327,4986,3.549,5049,3.243,5214,4.327,5333,4.327,5607,3.385,5967,4.327,6003,5.517,6115,3.995,6158,4.327,6263,3.995,6287,4.327,6290,3.995,6347,4.327,6424,3.995,6425,4.831,6426,8.24,6427,4.831,6428,8.24,6429,4.327,6430,4.831,6431,4.831,6432,7.641,6433,4.831,6434,4.831,6435,4.831,6436,6.671,6437,4.831,6438,4.831,6439,4.831,6440,4.327,6441,4.831,6442,6.671,6443,4.831,6444,4.831,6445,4.831,6446,4.831,6447,4.831,6448,4.831,6449,4.831,6450,4.831,6451,4.831,6452,4.831,6453,4.831,6454,4.831]],["title/additional-documentation/nestjs-application/testing.html",[1580,2.092,2184,2.818,2793,2.314]],["body/additional-documentation/nestjs-application/testing.html",[0,0.092,2,0.359,13,2.907,17,0.193,24,0.438,26,0.257,27,0.005,28,0.351,41,0.305,44,0.098,52,0.879,54,3.732,59,0.002,60,0.002,65,2.768,66,3.105,68,1.017,76,1.389,83,0.809,84,0.589,111,1.939,113,1.213,114,1.772,123,0.778,125,1.706,126,1.807,144,2.035,155,2.235,156,1.653,157,1.653,163,0.899,166,0.778,168,4.376,169,1.146,171,0.99,172,0.434,173,0.793,174,1.567,175,2.207,179,1.653,181,2.008,191,2.361,201,2.008,217,0.465,227,5.254,229,1.787,231,1.15,233,2.157,234,3.25,238,2.035,240,1.431,247,1.395,248,1.436,279,0.698,282,0.825,310,1.648,312,2.008,354,3.676,368,1.239,369,2.485,371,1.787,373,2.035,374,2.729,417,0.842,420,2.375,421,3.333,429,1.15,436,1.356,438,1.899,451,0.71,469,0.879,485,1.112,490,2.115,494,1.293,548,1.15,550,2.257,582,1.239,595,1.15,613,0.86,614,0.86,617,2.408,637,1.409,663,0.809,696,1.046,697,2.18,699,0.899,798,1.192,810,1.017,817,2.848,846,2.667,855,1.112,863,2.667,916,1.15,919,1.737,960,3.154,999,1.653,1023,1.431,1078,2.768,1083,2.115,1138,3.729,1149,2.663,1150,1.017,1185,2.315,1228,1.192,1269,1.192,1297,1.15,1305,1.963,1332,1.84,1335,1.112,1343,1.046,1355,3.289,1358,1.431,1360,1.293,1361,1.431,1362,1.239,1363,3.3,1366,1.239,1384,4.004,1410,5.115,1412,3.198,1414,4.932,1423,0.92,1426,4.247,1427,2.795,1428,3.274,1429,4.023,1447,1.112,1467,4.677,1474,1.526,1481,2.315,1486,1.431,1496,1.431,1497,3.274,1500,1.431,1503,1.737,1521,2.444,1545,2.663,1566,2.569,1577,2.035,1578,2.822,1579,3.97,1581,1.15,1616,1.356,1633,1.239,1635,1.017,1636,2.213,1646,2.115,1658,1.239,1665,2.035,1667,4.507,1691,5.076,1693,1.526,1732,1.239,1743,1.15,1752,2.444,1755,1.356,1756,1.15,1761,4.367,1839,1.356,1861,1.356,1865,1.239,1890,1.356,1892,4.004,1893,3.149,1908,2.315,1930,1.526,1935,1.293,1947,1.356,1950,1.653,1992,1.192,1993,0.965,1994,1.293,2012,1.112,2013,1.787,2034,1.431,2035,1.239,2080,1.293,2116,2.207,2125,2.688,2150,1.293,2160,1.192,2177,1.526,2179,1.963,2181,2.207,2184,5.879,2197,1.526,2250,2.795,2293,1.046,2316,1.431,2317,1.526,2318,1.239,2319,1.653,2320,3.582,2323,1.356,2325,2.663,2386,1.526,2395,2.663,2397,2.444,2399,2.315,2408,1.653,2419,1.356,2421,1.293,2432,4.179,2436,2.606,2438,1.356,2439,1.653,2455,1.526,2476,2.315,2484,1.653,2488,1.293,2490,1.526,2500,1.239,2530,1.653,2545,1.15,2559,1.112,2562,1.431,2624,2.889,2634,3.676,2635,2.663,2640,3.836,2670,1.15,2702,3.416,2730,1.239,2747,1.526,2748,1.526,2943,2.315,2964,1.526,3045,1.431,3178,2.315,3208,1.431,3283,4.382,3284,1.293,3285,1.526,3362,1.526,3365,1.293,3390,1.293,3399,1.293,3400,1.356,3408,1.192,3422,1.431,3426,1.239,3458,1.526,3469,1.431,3480,5.148,3483,1.653,3485,2.315,3486,2.207,3498,3.274,3506,1.431,3512,1.653,3555,2.315,3558,4.382,3562,1.526,3590,2.207,3619,3.836,3621,1.526,3624,3.416,3661,2.444,3664,1.431,3665,1.356,3666,2.207,3670,1.653,3683,1.653,3695,2.207,3748,2.822,3749,3.41,3756,5.171,3762,1.356,3805,3.582,3852,2.822,3884,4.904,3920,5.706,3962,1.431,3977,1.653,3982,1.526,3992,1.526,4011,1.356,4017,1.431,4039,1.431,4077,1.653,4099,1.526,4106,1.653,4152,2.315,4160,3.029,4167,1.653,4170,1.526,4175,1.526,4176,2.207,4179,4.179,4208,1.653,4223,1.526,4251,2.207,4252,1.526,4291,3.41,4307,1.526,4312,1.356,4371,1.653,4448,1.526,4462,1.653,4488,3.693,4506,1.431,4538,1.526,4565,1.526,4589,1.431,4596,5.706,4603,2.444,4672,1.431,4698,1.653,4702,1.526,4728,1.653,4778,1.526,4819,1.526,4889,1.653,4948,4.681,4979,1.526,4987,4.247,4992,1.239,4995,1.653,4996,1.653,5004,1.653,5007,1.293,5010,1.653,5018,1.431,5035,2.315,5039,5.435,5043,1.526,5058,1.431,5071,1.526,5080,1.653,5094,1.431,5098,1.653,5118,1.526,5119,3.198,5121,1.526,5130,3.41,5154,1.431,5164,1.653,5172,1.653,5173,1.293,5202,1.526,5209,3.416,5210,1.653,5221,2.606,5229,1.526,5231,1.526,5250,1.653,5258,1.653,5261,1.431,5289,1.356,5301,1.653,5314,1.653,5317,1.526,5319,1.356,5325,1.653,5366,2.315,5377,1.526,5383,1.653,5393,6.504,5433,1.526,5552,1.653,5616,1.526,5621,1.526,5622,1.653,5639,4.367,5653,1.431,5681,3.198,5685,1.653,5708,1.653,5725,1.526,5760,1.653,5766,1.293,5822,1.653,5845,1.653,5879,2.822,5944,1.653,5953,5.208,5960,1.653,5978,1.653,6002,1.653,6030,1.653,6041,1.653,6048,2.822,6054,5.632,6059,1.526,6060,4.023,6063,1.653,6064,1.653,6071,1.526,6081,4.367,6115,1.526,6218,1.431,6221,3.41,6255,2.822,6257,4.032,6258,1.653,6263,1.526,6284,1.653,6290,1.526,6302,1.653,6303,1.653,6373,1.653,6376,2.822,6378,1.653,6386,1.653,6419,1.653,6424,2.606,6429,1.653,6440,1.653,6455,3.151,6456,1.845,6457,1.845,6458,1.845,6459,1.845,6460,1.845,6461,1.845,6462,1.845,6463,1.845,6464,1.845,6465,1.845,6466,1.845,6467,1.845,6468,1.845,6469,3.151,6470,1.845,6471,1.845,6472,1.845,6473,1.845,6474,1.845,6475,1.845,6476,1.845,6477,1.845,6478,1.845,6479,1.845,6480,1.845,6481,1.845,6482,1.845,6483,1.845,6484,1.845,6485,1.845,6486,1.845,6487,1.845,6488,1.845,6489,1.845,6490,1.845,6491,1.845,6492,1.845,6493,1.845,6494,1.845,6495,1.845,6496,4.123,6497,1.845,6498,4.123,6499,3.151,6500,5.475,6501,3.151,6502,4.123,6503,1.845,6504,1.845,6505,3.151,6506,1.845,6507,1.845,6508,1.845,6509,1.845,6510,1.845,6511,1.845,6512,1.845,6513,1.845,6514,5.964,6515,1.845,6516,1.845,6517,1.845,6518,1.845,6519,1.845,6520,1.845,6521,1.845,6522,1.845,6523,1.845,6524,1.845,6525,1.845,6526,1.845,6527,3.151,6528,1.845,6529,3.151,6530,1.845,6531,1.845,6532,1.845,6533,3.151,6534,1.845,6535,1.845,6536,4.123,6537,3.151,6538,3.151,6539,1.845,6540,1.845,6541,4.876,6542,1.845,6543,1.845,6544,1.845,6545,1.845,6546,1.845,6547,1.845,6548,1.845,6549,3.151,6550,3.151,6551,1.845,6552,3.151,6553,1.845,6554,1.845,6555,1.845,6556,1.845,6557,1.845,6558,3.151,6559,3.151,6560,1.845,6561,1.845,6562,1.845,6563,1.845,6564,3.151,6565,1.845,6566,1.845,6567,1.845,6568,1.845,6569,1.845,6570,1.845,6571,3.151,6572,4.876,6573,1.845,6574,1.845,6575,1.845,6576,1.845,6577,1.845,6578,1.845,6579,3.151,6580,1.845,6581,1.845,6582,1.845,6583,1.845,6584,1.845,6585,1.845,6586,1.845,6587,1.845,6588,1.845,6589,1.845,6590,3.151,6591,1.845,6592,1.845,6593,1.845,6594,1.845,6595,1.845,6596,1.845,6597,1.845,6598,1.845,6599,1.845,6600,1.845,6601,1.845,6602,1.845,6603,1.845,6604,1.845,6605,1.845,6606,1.845,6607,1.845,6608,1.845,6609,1.845,6610,1.845,6611,1.845,6612,1.845,6613,1.845,6614,1.845,6615,1.845,6616,1.845,6617,1.845,6618,1.845,6619,1.845,6620,1.845,6621,1.845,6622,1.845,6623,1.845]],["title/additional-documentation/nestjs-application/decisions.html",[1580,2.092,2793,2.314,6417,3.471]],["body/additional-documentation/nestjs-application/decisions.html",[2,1.575,27,0.004,52,3.087,59,0.004,60,0.004,172,1.525,181,3.942,209,1.464,211,1.656,217,1.633,226,4.186,234,3.34,239,3.906,275,2.411,357,3.906,372,4.186,417,2.958,615,3.942,637,2.898,767,3.906,810,3.574,911,5.227,919,4.463,960,2.732,1138,3.23,1228,5.7,1343,3.675,1422,5.027,1423,3.23,1427,3.308,1636,3.479,1639,5.671,1640,4.541,1665,4.186,1732,4.351,1932,3.906,2199,5.926,2250,3.308,2324,5.805,2432,4.541,2667,6.694,2670,4.039,2702,5.671,3393,4.541,3459,4.541,3482,4.541,3533,6.846,3756,4.186,3772,6.694,3824,5.36,3968,5.36,4064,5.805,4136,5.36,4259,5.805,4441,5.805,4626,5.805,4979,5.36,4986,4.762,4991,4.351,5173,4.541,5592,5.36,5664,5.027,6060,4.762,6071,5.36,6218,5.027,6248,5.805,6417,6.694,6624,6.481,6625,6.481,6626,6.481,6627,6.481,6628,6.481,6629,6.481,6630,6.481,6631,6.481,6632,6.481,6633,8.094,6634,6.481,6635,6.481,6636,6.481,6637,6.481,6638,6.481,6639,6.481,6640,6.481,6641,6.481,6642,6.481,6643,6.481,6644,6.481,6645,6.481,6646,6.481]],["title/additional-documentation/nestjs-application/vscode.html",[1580,2.092,2793,2.314,4989,3.255]],["body/additional-documentation/nestjs-application/vscode.html",[5,0.103,27,0.005,57,4.179,59,0.004,60,0.004,227,4.731,276,4.087,373,4.603,374,4.276,389,4.785,417,3.916,434,4.785,909,4.276,919,3.93,1391,5.529,1410,3.826,1488,4.994,2250,3.638,2388,5.237,2452,4.785,3284,4.994,3425,5.237,3664,5.529,3695,6.011,3756,4.603,3789,5.895,4112,5.529,4176,4.994,4351,7.096,4989,6.655,5020,7.685,5049,4.785,5218,5.237,5321,6.384,5656,8.245,5679,6.384,5766,4.994,5828,5.895,5985,6.384,5987,6.384,6647,7.128,6648,7.128,6649,7.128,6650,7.128,6651,7.128,6652,7.128,6653,7.128,6654,7.128,6655,7.128]],["title/additional-documentation/nestjs-application/git.html",[1580,2.092,2793,2.314,4990,3.471]],["body/additional-documentation/nestjs-application/git.html",[27,0.005,59,0.005,60,0.005,442,4.571,614,3.647,2125,4.315,2179,4.876,2293,4.438,2950,5.749,4703,6.07,4793,7.498,4990,7.916,5003,7.009,6135,7.009,6656,7.825,6657,7.825,6658,7.825,6659,7.825]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["0",{"_index":838,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"injectables/DeleteFilesUc.html":{},"classes/EncryptedStringType.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ISubmissionProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/RoleRepo.html":{},"classes/Scope.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["0.1.1",{"_index":4877,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":4913,"title":{},"body":{"dependencies.html":{}}}],["0.1.4",{"_index":4923,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":4839,"title":{},"body":{"dependencies.html":{}}}],["0.22.0",{"_index":4829,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":4838,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":4904,"title":{},"body":{"dependencies.html":{}}}],["0.4.17",{"_index":4935,"title":{},"body":{"dependencies.html":{}}}],["0.5.19",{"_index":4927,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":4897,"title":{},"body":{"dependencies.html":{}}}],["0.5.4",{"_index":4882,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":4888,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4926,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":4822,"title":{},"body":{"dependencies.html":{}}}],["0.8.1",{"_index":4891,"title":{},"body":{"dependencies.html":{}}}],["0.9.7",{"_index":4880,"title":{},"body":{"dependencies.html":{}}}],["0000d213816abba584714c0a",{"_index":1074,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["0000d224816abba584714c9c",{"_index":6597,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["0000d225816abba584714c9d",{"_index":6599,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["01",{"_index":3821,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3817,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":3814,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":3769,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3678,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":846,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/Scope.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["1.0.0",{"_index":4905,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":4916,"title":{},"body":{"dependencies.html":{}}}],["1.0.5",{"_index":4864,"title":{},"body":{"dependencies.html":{}}}],["1.0.56",{"_index":4850,"title":{},"body":{"dependencies.html":{}}}],["1.0a",{"_index":4900,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":6549,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.1.0",{"_index":4861,"title":{},"body":{"dependencies.html":{}}}],["1.1.1",{"_index":4941,"title":{},"body":{"dependencies.html":{}}}],["1.1.4",{"_index":4914,"title":{},"body":{"dependencies.html":{}}}],["1.15.2",{"_index":4833,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":4804,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":6550,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["1.2.0",{"_index":4830,"title":{},"body":{"dependencies.html":{}}}],["1.2.7",{"_index":4367,"title":{},"body":{"changelog.html":{}}}],["1.28.1",{"_index":4867,"title":{},"body":{"dependencies.html":{}}}],["1.3.3",{"_index":4805,"title":{},"body":{"dependencies.html":{}}}],["1.6.2",{"_index":4844,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2791,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["106",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":3803,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["110",{"_index":3617,"title":{},"body":{"changelog.html":{}}}],["111",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["112",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["119",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":3467,"title":{},"body":{"changelog.html":{}}}],["12.0.0",{"_index":4907,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":3568,"title":{},"body":{"changelog.html":{}}}],["121",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["124",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["1289",{"_index":4253,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":3429,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1316",{"_index":4450,"title":{},"body":{"changelog.html":{}}}],["137",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["138",{"_index":4288,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["14.14",{"_index":1780,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["1499",{"_index":3846,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":3799,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1508",{"_index":3875,"title":{},"body":{"changelog.html":{}}}],["154",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["155",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["15672:15672",{"_index":5916,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["1589",{"_index":4285,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":3793,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["16.2.0",{"_index":4862,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":4267,"title":{},"body":{"changelog.html":{}}}],["164",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":3949,"title":{},"body":{"changelog.html":{}}}],["1735",{"_index":4164,"title":{},"body":{"changelog.html":{}}}],["179",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["187",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":3443,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["1996",{"_index":5277,"title":{},"body":{"license.html":{}}}],["1:1",{"_index":6640,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["1:n",{"_index":6639,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["2",{"_index":817,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["2.1.0",{"_index":4920,"title":{},"body":{"dependencies.html":{}}}],["2.19.2",{"_index":4879,"title":{},"body":{"dependencies.html":{}}}],["2.2.6",{"_index":4901,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":4865,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4826,"title":{},"body":{"dependencies.html":{}}}],["2.8.1",{"_index":4847,"title":{},"body":{"dependencies.html":{}}}],["2.970.0",{"_index":4828,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3718,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2007",{"_index":5055,"title":{},"body":{"license.html":{}}}],["2020",{"_index":4141,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["213",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":3438,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["22.10.0",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["22.10.2",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["22.10.3",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["22.7.1",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["22.8.0",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["22.9.0",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["22.9.1",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["22.9.10",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["22.9.17",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["22.9.18",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["22.9.2",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["22.9.20",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["22.9.3",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["22.9.4",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["22.9.5",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["22.9.6",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["22.9.7",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["22.9.8",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["22.9.9",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":3707,"title":{},"body":{"changelog.html":{}}}],["23.0.0",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["23.1.4",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["23.2.0",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["23.2.1",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["23.2.4",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["23.4.0",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["23.4.3",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["23.4.5",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["23.4.7",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["23.5.0",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["23.5.4",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["23.6.0",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["23.6.1",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["23.6.2",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["23.6.3",{"_index":4567,"title":{},"body":{"changelog.html":{}}}],["23.6.4",{"_index":4563,"title":{},"body":{"changelog.html":{}}}],["231",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["232",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["233",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["237",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["239",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":3786,"title":{},"body":{"changelog.html":{}}}],["24.0.1",{"_index":4560,"title":{},"body":{"changelog.html":{}}}],["24.0.2",{"_index":4556,"title":{},"body":{"changelog.html":{}}}],["24.2.2",{"_index":4535,"title":{},"body":{"changelog.html":{}}}],["24.2.3",{"_index":4534,"title":{},"body":{"changelog.html":{}}}],["24.2.4",{"_index":4533,"title":{},"body":{"changelog.html":{}}}],["24.2.5",{"_index":4528,"title":{},"body":{"changelog.html":{}}}],["24.3.0",{"_index":4527,"title":{},"body":{"changelog.html":{}}}],["24.3.1",{"_index":4523,"title":{},"body":{"changelog.html":{}}}],["24.3.2",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["24.3.3",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["24.4.0",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["24.4.1",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["24.4.2",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["24.4.3",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["24.4.4",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["24.4.5",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["24.4.6",{"_index":4483,"title":{},"body":{"changelog.html":{}}}],["24.5.0",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["24.5.1",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["2418",{"_index":3822,"title":{},"body":{"changelog.html":{}}}],["2466",{"_index":3787,"title":{},"body":{"changelog.html":{}}}],["247",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["2491",{"_index":3652,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["25.0.0",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["25.0.1",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["25.0.10",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["25.0.11",{"_index":4432,"title":{},"body":{"changelog.html":{}}}],["25.0.12",{"_index":4429,"title":{},"body":{"changelog.html":{}}}],["25.0.2",{"_index":4464,"title":{},"body":{"changelog.html":{}}}],["25.0.3",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["25.0.4",{"_index":4456,"title":{},"body":{"changelog.html":{}}}],["25.0.5",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["25.0.6",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["25.0.7",{"_index":4449,"title":{},"body":{"changelog.html":{}}}],["25.0.8",{"_index":4442,"title":{},"body":{"changelog.html":{}}}],["25.0.9",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["25.1.0",{"_index":4410,"title":{},"body":{"changelog.html":{}}}],["25.1.1",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["25.1.10",{"_index":4379,"title":{},"body":{"changelog.html":{}}}],["25.1.11",{"_index":4377,"title":{},"body":{"changelog.html":{}}}],["25.1.12",{"_index":4375,"title":{},"body":{"changelog.html":{}}}],["25.1.13",{"_index":4374,"title":{},"body":{"changelog.html":{}}}],["25.1.2",{"_index":4401,"title":{},"body":{"changelog.html":{}}}],["25.1.3",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["25.1.4",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["25.1.5",{"_index":4394,"title":{},"body":{"changelog.html":{}}}],["25.1.6",{"_index":4391,"title":{},"body":{"changelog.html":{}}}],["25.1.7",{"_index":4387,"title":{},"body":{"changelog.html":{}}}],["25.1.8",{"_index":4385,"title":{},"body":{"changelog.html":{}}}],["25.1.9",{"_index":4383,"title":{},"body":{"changelog.html":{}}}],["25.2",{"_index":4157,"title":{},"body":{"changelog.html":{}}}],["25.2.0",{"_index":4335,"title":{},"body":{"changelog.html":{}}}],["25.2.1",{"_index":4333,"title":{},"body":{"changelog.html":{}}}],["25.2.2",{"_index":4330,"title":{},"body":{"changelog.html":{}}}],["25.2.3",{"_index":4329,"title":{},"body":{"changelog.html":{}}}],["25.2.4",{"_index":4325,"title":{},"body":{"changelog.html":{}}}],["25.2.5",{"_index":4324,"title":{},"body":{"changelog.html":{}}}],["25.2.6",{"_index":4323,"title":{},"body":{"changelog.html":{}}}],["25.3.0",{"_index":4185,"title":{},"body":{"changelog.html":{}}}],["25.3.1",{"_index":4181,"title":{},"body":{"changelog.html":{}}}],["25.3.2",{"_index":4172,"title":{},"body":{"changelog.html":{}}}],["25.3.3",{"_index":4155,"title":{},"body":{"changelog.html":{}}}],["25.3.4",{"_index":4153,"title":{},"body":{"changelog.html":{}}}],["25.3.5",{"_index":4148,"title":{},"body":{"changelog.html":{}}}],["25.3.6",{"_index":4145,"title":{},"body":{"changelog.html":{}}}],["25.3.7",{"_index":4140,"title":{},"body":{"changelog.html":{}}}],["25.3.8",{"_index":4137,"title":{},"body":{"changelog.html":{}}}],["25.3.9",{"_index":4132,"title":{},"body":{"changelog.html":{}}}],["25.4.1",{"_index":4131,"title":{},"body":{"changelog.html":{}}}],["25.5.0",{"_index":4109,"title":{},"body":{"changelog.html":{}}}],["25.5.1",{"_index":4108,"title":{},"body":{"changelog.html":{}}}],["25.5.10",{"_index":4061,"title":{},"body":{"changelog.html":{}}}],["25.5.11",{"_index":4060,"title":{},"body":{"changelog.html":{}}}],["25.5.12",{"_index":4058,"title":{},"body":{"changelog.html":{}}}],["25.5.13",{"_index":4056,"title":{},"body":{"changelog.html":{}}}],["25.5.14",{"_index":4053,"title":{},"body":{"changelog.html":{}}}],["25.5.15",{"_index":4049,"title":{},"body":{"changelog.html":{}}}],["25.5.16",{"_index":4046,"title":{},"body":{"changelog.html":{}}}],["25.5.2",{"_index":4104,"title":{},"body":{"changelog.html":{}}}],["25.5.3",{"_index":4055,"title":{},"body":{"changelog.html":{}}}],["25.5.4",{"_index":4084,"title":{},"body":{"changelog.html":{}}}],["25.5.5",{"_index":4082,"title":{},"body":{"changelog.html":{}}}],["25.5.6",{"_index":4075,"title":{},"body":{"changelog.html":{}}}],["25.5.7",{"_index":4073,"title":{},"body":{"changelog.html":{}}}],["25.5.8",{"_index":4070,"title":{},"body":{"changelog.html":{}}}],["25.5.9",{"_index":4065,"title":{},"body":{"changelog.html":{}}}],["25.6.0",{"_index":4014,"title":{},"body":{"changelog.html":{}}}],["25.6.1",{"_index":4012,"title":{},"body":{"changelog.html":{}}}],["25.6.10",{"_index":3956,"title":{},"body":{"changelog.html":{}}}],["25.6.11",{"_index":3952,"title":{},"body":{"changelog.html":{}}}],["25.6.12",{"_index":3972,"title":{},"body":{"changelog.html":{}}}],["25.6.13",{"_index":3969,"title":{},"body":{"changelog.html":{}}}],["25.6.2",{"_index":4007,"title":{},"body":{"changelog.html":{}}}],["25.6.3",{"_index":4005,"title":{},"body":{"changelog.html":{}}}],["25.6.4",{"_index":4002,"title":{},"body":{"changelog.html":{}}}],["25.6.5",{"_index":4000,"title":{},"body":{"changelog.html":{}}}],["25.6.6",{"_index":3997,"title":{},"body":{"changelog.html":{}}}],["25.6.7",{"_index":3993,"title":{},"body":{"changelog.html":{}}}],["25.6.8",{"_index":3983,"title":{},"body":{"changelog.html":{}}}],["25.6.9",{"_index":3978,"title":{},"body":{"changelog.html":{}}}],["2574",{"_index":3731,"title":{},"body":{"changelog.html":{}}}],["2579",{"_index":3736,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["26.0",{"_index":3953,"title":{},"body":{"changelog.html":{}}}],["26.0.0",{"_index":3957,"title":{},"body":{"changelog.html":{}}}],["26.0.1",{"_index":3955,"title":{},"body":{"changelog.html":{}}}],["26.0.10",{"_index":3927,"title":{},"body":{"changelog.html":{}}}],["26.0.11",{"_index":3926,"title":{},"body":{"changelog.html":{}}}],["26.0.12",{"_index":3921,"title":{},"body":{"changelog.html":{}}}],["26.0.13",{"_index":3918,"title":{},"body":{"changelog.html":{}}}],["26.0.14",{"_index":3914,"title":{},"body":{"changelog.html":{}}}],["26.0.15",{"_index":3912,"title":{},"body":{"changelog.html":{}}}],["26.0.16",{"_index":3906,"title":{},"body":{"changelog.html":{}}}],["26.0.2",{"_index":3954,"title":{},"body":{"changelog.html":{}}}],["26.0.3",{"_index":3948,"title":{},"body":{"changelog.html":{}}}],["26.0.4",{"_index":3943,"title":{},"body":{"changelog.html":{}}}],["26.0.5",{"_index":3942,"title":{},"body":{"changelog.html":{}}}],["26.0.6",{"_index":3939,"title":{},"body":{"changelog.html":{}}}],["26.0.7",{"_index":3937,"title":{},"body":{"changelog.html":{}}}],["26.0.8",{"_index":3931,"title":{},"body":{"changelog.html":{}}}],["26.0.9",{"_index":3930,"title":{},"body":{"changelog.html":{}}}],["26.1.0",{"_index":3896,"title":{},"body":{"changelog.html":{}}}],["26.10.0",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["26.10.1",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["26.10.2",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["26.10.3",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["26.11.0",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["26.11.1",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["26.11.2",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["26.11.3",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["26.12.0",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["26.13.0",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["26.13.2",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["26.14.0",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["26.2.0",{"_index":3820,"title":{},"body":{"changelog.html":{}}}],["26.2.1",{"_index":3816,"title":{},"body":{"changelog.html":{}}}],["26.2.2",{"_index":3813,"title":{},"body":{"changelog.html":{}}}],["26.3.0",{"_index":3810,"title":{},"body":{"changelog.html":{}}}],["26.3.1",{"_index":3807,"title":{},"body":{"changelog.html":{}}}],["26.4.0",{"_index":3802,"title":{},"body":{"changelog.html":{}}}],["26.4.1",{"_index":3798,"title":{},"body":{"changelog.html":{}}}],["26.4.2",{"_index":3796,"title":{},"body":{"changelog.html":{}}}],["26.4.3",{"_index":3794,"title":{},"body":{"changelog.html":{}}}],["26.4.4",{"_index":3792,"title":{},"body":{"changelog.html":{}}}],["26.4.5",{"_index":3790,"title":{},"body":{"changelog.html":{}}}],["26.4.6",{"_index":3785,"title":{},"body":{"changelog.html":{}}}],["26.4.7",{"_index":3781,"title":{},"body":{"changelog.html":{}}}],["26.4.8",{"_index":3780,"title":{},"body":{"changelog.html":{}}}],["26.4.9",{"_index":3775,"title":{},"body":{"changelog.html":{}}}],["26.5.0",{"_index":3768,"title":{},"body":{"changelog.html":{}}}],["26.6.0",{"_index":3717,"title":{},"body":{"changelog.html":{}}}],["26.6.1",{"_index":3716,"title":{},"body":{"changelog.html":{}}}],["26.6.2",{"_index":3711,"title":{},"body":{"changelog.html":{}}}],["26.6.3",{"_index":3708,"title":{},"body":{"changelog.html":{}}}],["26.6.4",{"_index":3706,"title":{},"body":{"changelog.html":{}}}],["26.7.0",{"_index":3677,"title":{},"body":{"changelog.html":{}}}],["26.7.1",{"_index":3673,"title":{},"body":{"changelog.html":{}}}],["26.8.0",{"_index":3672,"title":{},"body":{"changelog.html":{}}}],["26.9.0",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["26.9.1",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["26.9.2",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["26.9.3",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["262",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["267",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["269",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["2710",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["2714",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["274",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["279",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":3679,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["29",{"_index":3515,"title":{},"body":{"changelog.html":{}}}],["2922",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["297",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["2auth",{"_index":5710,"title":{},"body":{"todo.html":{}}}],["3",{"_index":1078,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["3.0.0",{"_index":4911,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":4917,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":6590,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["3.1.0",{"_index":4908,"title":{},"body":{"dependencies.html":{}}}],["3.1.20",{"_index":4899,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":4939,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":4820,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":4918,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":3940,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["3030/docs",{"_index":5975,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["3030/v3/docs",{"_index":5969,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["31",{"_index":3932,"title":{},"body":{"changelog.html":{}}}],["315",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["318",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["319",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["331",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["339",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["3395",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["343",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["354",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["3607",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["365",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["3686",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["369",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["37",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["370",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["3719",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["3767",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["377",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["379",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":3614,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["3821",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["383",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["386",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["388",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["3892",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["391",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["394",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["3948",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["3958",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["3994",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1083,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["4.0.0",{"_index":4836,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":4931,"title":{},"body":{"dependencies.html":{}}}],["4.14.0",{"_index":4857,"title":{},"body":{"dependencies.html":{}}}],["4.17.19",{"_index":4874,"title":{},"body":{"dependencies.html":{}}}],["4.2",{"_index":2410,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["4.2.0",{"_index":4856,"title":{},"body":{"dependencies.html":{}}}],["4.2.5",{"_index":4840,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":4807,"title":{},"body":{"dependencies.html":{}}}],["4.5.1",{"_index":4834,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":4799,"title":{},"body":{"dependencies.html":{}}}],["4.5.5",{"_index":4806,"title":{},"body":{"dependencies.html":{}}}],["4.7.1",{"_index":4858,"title":{},"body":{"dependencies.html":{}}}],["4.x",{"_index":5909,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["4008",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["4018",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["404",{"_index":5721,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["4042",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["4075",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["409/bad",{"_index":6452,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["409/conflict",{"_index":1895,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["4094",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["41",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["4105",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["4121",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["4142",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["4192",{"_index":4615,"title":{},"body":{"changelog.html":{}}}],["42",{"_index":3591,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["4215",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["4289",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["436",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["4385",{"_index":4336,"title":{},"body":{"changelog.html":{}}}],["44",{"_index":3587,"title":{},"body":{"changelog.html":{}}}],["4506",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["4520",{"_index":4571,"title":{},"body":{"changelog.html":{}}}],["4576",{"_index":4041,"title":{},"body":{"changelog.html":{}}}],["4577",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["4666",{"_index":4195,"title":{},"body":{"changelog.html":{}}}],["4667",{"_index":4228,"title":{},"body":{"changelog.html":{}}}],["4720",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["4749",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["487",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["4876",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["490",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["495",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["4957",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["496",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["4965",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":3621,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["5.0.0",{"_index":4824,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":4825,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":4860,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":4813,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":4903,"title":{},"body":{"dependencies.html":{}}}],["5.13.9",{"_index":4881,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":6443,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["5007",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["501",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["5054",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["5202",{"_index":3882,"title":{},"body":{"changelog.html":{}}}],["5230",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["5250",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["526",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["527",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["5280",{"_index":4536,"title":{},"body":{"changelog.html":{}}}],["5287",{"_index":4091,"title":{},"body":{"changelog.html":{}}}],["54",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["5416",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["5420",{"_index":4524,"title":{},"body":{"changelog.html":{}}}],["5476",{"_index":4205,"title":{},"body":{"changelog.html":{}}}],["5542",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["5612",{"_index":4481,"title":{},"body":{"changelog.html":{}}}],["5672",{"_index":5920,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5672:5672",{"_index":5915,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["5686",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["5733",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["5754",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["5773",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["578",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["5808",{"_index":4542,"title":{},"body":{"changelog.html":{}}}],["5835",{"_index":4557,"title":{},"body":{"changelog.html":{}}}],["5883",{"_index":4564,"title":{},"body":{"changelog.html":{}}}],["5900",{"_index":4269,"title":{},"body":{"changelog.html":{}}}],["5917",{"_index":4561,"title":{},"body":{"changelog.html":{}}}],["5987",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["5f2987e020834114b8efd6f8",{"_index":6598,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["6",{"_index":798,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["6.0.0",{"_index":4846,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":4815,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":3910,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["6.9.4",{"_index":4909,"title":{},"body":{"dependencies.html":{}}}],["6.9.6",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["60",{"_index":5478,"title":{},"body":{"license.html":{}}}],["60000",{"_index":2870,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["6060",{"_index":4263,"title":{},"body":{"changelog.html":{}}}],["6080",{"_index":4260,"title":{},"body":{"changelog.html":{}}}],["6122",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["6151",{"_index":4304,"title":{},"body":{"changelog.html":{}}}],["6172",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["6294",{"_index":3750,"title":{},"body":{"changelog.html":{}}}],["6328",{"_index":4529,"title":{},"body":{"changelog.html":{}}}],["6382",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["64",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["6469",{"_index":4514,"title":{},"body":{"changelog.html":{}}}],["6506",{"_index":4416,"title":{},"body":{"changelog.html":{}}}],["6510",{"_index":4349,"title":{},"body":{"changelog.html":{}}}],["6511",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["6533",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["6554",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["6567",{"_index":4341,"title":{},"body":{"changelog.html":{}}}],["6586",{"_index":4299,"title":{},"body":{"changelog.html":{}}}],["6596",{"_index":4255,"title":{},"body":{"changelog.html":{}}}],["6637",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["6640",{"_index":4476,"title":{},"body":{"changelog.html":{}}}],["6676",{"_index":4430,"title":{},"body":{"changelog.html":{}}}],["6679",{"_index":3958,"title":{},"body":{"changelog.html":{}}}],["6690",{"_index":4206,"title":{},"body":{"changelog.html":{}}}],["6692",{"_index":4248,"title":{},"body":{"changelog.html":{}}}],["6696",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["6697",{"_index":4493,"title":{},"body":{"changelog.html":{}}}],["6727",{"_index":4326,"title":{},"body":{"changelog.html":{}}}],["6733",{"_index":4484,"title":{},"body":{"changelog.html":{}}}],["6738",{"_index":4209,"title":{},"body":{"changelog.html":{}}}],["6743",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["6766",{"_index":4343,"title":{},"body":{"changelog.html":{}}}],["6769",{"_index":4347,"title":{},"body":{"changelog.html":{}}}],["6774",{"_index":4419,"title":{},"body":{"changelog.html":{}}}],["6784",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["68",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["6809",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["6830",{"_index":4344,"title":{},"body":{"changelog.html":{}}}],["6942",{"_index":4459,"title":{},"body":{"changelog.html":{}}}],["6950",{"_index":3867,"title":{},"body":{"changelog.html":{}}}],["6960",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["6973",{"_index":4455,"title":{},"body":{"changelog.html":{}}}],["6986",{"_index":4357,"title":{},"body":{"changelog.html":{}}}],["699615164",{"_index":5703,"title":{},"body":{"todo.html":{}}}],["6b",{"_index":5354,"title":{},"body":{"license.html":{}}}],["6d",{"_index":5372,"title":{},"body":{"license.html":{}}}],["7",{"_index":3252,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{}}}],["7.0.0",{"_index":4848,"title":{},"body":{"dependencies.html":{}}}],["7.24.0",{"_index":4855,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":4919,"title":{},"body":{"dependencies.html":{}}}],["7.4.4",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["7021",{"_index":3880,"title":{},"body":{"changelog.html":{}}}],["7028",{"_index":4245,"title":{},"body":{"changelog.html":{}}}],["7049",{"_index":4339,"title":{},"body":{"changelog.html":{}}}],["7083",{"_index":4213,"title":{},"body":{"changelog.html":{}}}],["7085",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["7091",{"_index":4372,"title":{},"body":{"changelog.html":{}}}],["71",{"_index":5676,"title":{},"body":{"overview.html":{}}}],["7115",{"_index":4439,"title":{},"body":{"changelog.html":{}}}],["7142",{"_index":4190,"title":{},"body":{"changelog.html":{}}}],["7157",{"_index":4340,"title":{},"body":{"changelog.html":{}}}],["7165",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["7180",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["7205",{"_index":4220,"title":{},"body":{"changelog.html":{}}}],["7293",{"_index":4211,"title":{},"body":{"changelog.html":{}}}],["7331",{"_index":4256,"title":{},"body":{"changelog.html":{}}}],["7333",{"_index":4386,"title":{},"body":{"changelog.html":{}}}],["7353",{"_index":4292,"title":{},"body":{"changelog.html":{}}}],["7357",{"_index":4212,"title":{},"body":{"changelog.html":{}}}],["7370",{"_index":4224,"title":{},"body":{"changelog.html":{}}}],["7395",{"_index":4257,"title":{},"body":{"changelog.html":{}}}],["7404",{"_index":4264,"title":{},"body":{"changelog.html":{}}}],["7411",{"_index":4218,"title":{},"body":{"changelog.html":{}}}],["7413",{"_index":4320,"title":{},"body":{"changelog.html":{}}}],["7452",{"_index":4395,"title":{},"body":{"changelog.html":{}}}],["7454",{"_index":4300,"title":{},"body":{"changelog.html":{}}}],["7474",{"_index":4278,"title":{},"body":{"changelog.html":{}}}],["7476",{"_index":4246,"title":{},"body":{"changelog.html":{}}}],["7483",{"_index":4177,"title":{},"body":{"changelog.html":{}}}],["7491",{"_index":4388,"title":{},"body":{"changelog.html":{}}}],["7499",{"_index":4236,"title":{},"body":{"changelog.html":{}}}],["7517",{"_index":4296,"title":{},"body":{"changelog.html":{}}}],["7530",{"_index":4293,"title":{},"body":{"changelog.html":{}}}],["7543",{"_index":4242,"title":{},"body":{"changelog.html":{}}}],["7555",{"_index":4194,"title":{},"body":{"changelog.html":{}}}],["7571",{"_index":4240,"title":{},"body":{"changelog.html":{}}}],["7572",{"_index":4311,"title":{},"body":{"changelog.html":{}}}],["7573",{"_index":4314,"title":{},"body":{"changelog.html":{}}}],["7614",{"_index":4222,"title":{},"body":{"changelog.html":{}}}],["7615",{"_index":4203,"title":{},"body":{"changelog.html":{}}}],["7638",{"_index":4384,"title":{},"body":{"changelog.html":{}}}],["7683",{"_index":4376,"title":{},"body":{"changelog.html":{}}}],["7695",{"_index":4378,"title":{},"body":{"changelog.html":{}}}],["7714",{"_index":4334,"title":{},"body":{"changelog.html":{}}}],["7734",{"_index":4173,"title":{},"body":{"changelog.html":{}}}],["7763",{"_index":4123,"title":{},"body":{"changelog.html":{}}}],["7773",{"_index":4331,"title":{},"body":{"changelog.html":{}}}],["7825",{"_index":4031,"title":{},"body":{"changelog.html":{}}}],["7827",{"_index":4115,"title":{},"body":{"changelog.html":{}}}],["7835",{"_index":4110,"title":{},"body":{"changelog.html":{}}}],["7836",{"_index":4187,"title":{},"body":{"changelog.html":{}}}],["7838",{"_index":4188,"title":{},"body":{"changelog.html":{}}}],["7841",{"_index":4186,"title":{},"body":{"changelog.html":{}}}],["7868",{"_index":3837,"title":{},"body":{"changelog.html":{}}}],["7872",{"_index":4272,"title":{},"body":{"changelog.html":{}}}],["7884",{"_index":4317,"title":{},"body":{"changelog.html":{}}}],["7915",{"_index":4237,"title":{},"body":{"changelog.html":{}}}],["7937",{"_index":3835,"title":{},"body":{"changelog.html":{}}}],["7944",{"_index":3874,"title":{},"body":{"changelog.html":{}}}],["7998",{"_index":4154,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1745,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"overview.html":{}}}],["8.0.0",{"_index":4809,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":4811,"title":{},"body":{"dependencies.html":{}}}],["8.0.9",{"_index":4808,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":4842,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":4938,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":3911,"title":{},"body":{"changelog.html":{}}}],["8.5.0",{"_index":4817,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":4869,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":5843,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["8020",{"_index":4125,"title":{},"body":{"changelog.html":{}}}],["8029",{"_index":4024,"title":{},"body":{"changelog.html":{}}}],["8030",{"_index":4116,"title":{},"body":{"changelog.html":{}}}],["8060",{"_index":4118,"title":{},"body":{"changelog.html":{}}}],["8077",{"_index":4182,"title":{},"body":{"changelog.html":{}}}],["8080",{"_index":5946,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["81",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["8101",{"_index":4158,"title":{},"body":{"changelog.html":{}}}],["8149",{"_index":4149,"title":{},"body":{"changelog.html":{}}}],["8179",{"_index":4121,"title":{},"body":{"changelog.html":{}}}],["8189",{"_index":4105,"title":{},"body":{"changelog.html":{}}}],["8198",{"_index":4134,"title":{},"body":{"changelog.html":{}}}],["8206",{"_index":4029,"title":{},"body":{"changelog.html":{}}}],["8209",{"_index":4142,"title":{},"body":{"changelog.html":{}}}],["8211",{"_index":3973,"title":{},"body":{"changelog.html":{}}}],["8213",{"_index":4040,"title":{},"body":{"changelog.html":{}}}],["8229",{"_index":4113,"title":{},"body":{"changelog.html":{}}}],["8230",{"_index":4127,"title":{},"body":{"changelog.html":{}}}],["8233",{"_index":4128,"title":{},"body":{"changelog.html":{}}}],["8235",{"_index":4146,"title":{},"body":{"changelog.html":{}}}],["8250",{"_index":3828,"title":{},"body":{"changelog.html":{}}}],["8260",{"_index":4126,"title":{},"body":{"changelog.html":{}}}],["8300",{"_index":4045,"title":{},"body":{"changelog.html":{}}}],["8303",{"_index":4083,"title":{},"body":{"changelog.html":{}}}],["8313",{"_index":4097,"title":{},"body":{"changelog.html":{}}}],["8315",{"_index":4103,"title":{},"body":{"changelog.html":{}}}],["8322",{"_index":4020,"title":{},"body":{"changelog.html":{}}}],["8329",{"_index":4129,"title":{},"body":{"changelog.html":{}}}],["8341",{"_index":3831,"title":{},"body":{"changelog.html":{}}}],["8358",{"_index":4085,"title":{},"body":{"changelog.html":{}}}],["8379",{"_index":4100,"title":{},"body":{"changelog.html":{}}}],["8380",{"_index":4035,"title":{},"body":{"changelog.html":{}}}],["8390",{"_index":4018,"title":{},"body":{"changelog.html":{}}}],["8408",{"_index":3833,"title":{},"body":{"changelog.html":{}}}],["8410",{"_index":4004,"title":{},"body":{"changelog.html":{}}}],["8412",{"_index":4087,"title":{},"body":{"changelog.html":{}}}],["8420",{"_index":4054,"title":{},"body":{"changelog.html":{}}}],["8440",{"_index":3860,"title":{},"body":{"changelog.html":{}}}],["8444",{"_index":4078,"title":{},"body":{"changelog.html":{}}}],["8448",{"_index":3742,"title":{},"body":{"changelog.html":{}}}],["8462",{"_index":4057,"title":{},"body":{"changelog.html":{}}}],["8477",{"_index":3984,"title":{},"body":{"changelog.html":{}}}],["8480",{"_index":4071,"title":{},"body":{"changelog.html":{}}}],["8482",{"_index":4022,"title":{},"body":{"changelog.html":{}}}],["8489",{"_index":4074,"title":{},"body":{"changelog.html":{}}}],["8499",{"_index":4059,"title":{},"body":{"changelog.html":{}}}],["8500",{"_index":3879,"title":{},"body":{"changelog.html":{}}}],["8503",{"_index":4066,"title":{},"body":{"changelog.html":{}}}],["8506",{"_index":4062,"title":{},"body":{"changelog.html":{}}}],["8512",{"_index":4047,"title":{},"body":{"changelog.html":{}}}],["8514",{"_index":4015,"title":{},"body":{"changelog.html":{}}}],["8534",{"_index":3963,"title":{},"body":{"changelog.html":{}}}],["8541",{"_index":4032,"title":{},"body":{"changelog.html":{}}}],["8571",{"_index":4050,"title":{},"body":{"changelog.html":{}}}],["8599",{"_index":3870,"title":{},"body":{"changelog.html":{}}}],["8634",{"_index":4001,"title":{},"body":{"changelog.html":{}}}],["8655",{"_index":3994,"title":{},"body":{"changelog.html":{}}}],["8657",{"_index":3998,"title":{},"body":{"changelog.html":{}}}],["8682",{"_index":3965,"title":{},"body":{"changelog.html":{}}}],["8691",{"_index":3933,"title":{},"body":{"changelog.html":{}}}],["8714",{"_index":3979,"title":{},"body":{"changelog.html":{}}}],["8728",{"_index":3892,"title":{},"body":{"changelog.html":{}}}],["8732",{"_index":3900,"title":{},"body":{"changelog.html":{}}}],["8748",{"_index":3907,"title":{},"body":{"changelog.html":{}}}],["8768",{"_index":3938,"title":{},"body":{"changelog.html":{}}}],["8770",{"_index":3975,"title":{},"body":{"changelog.html":{}}}],["8779",{"_index":3888,"title":{},"body":{"changelog.html":{}}}],["8782",{"_index":3970,"title":{},"body":{"changelog.html":{}}}],["8829",{"_index":3944,"title":{},"body":{"changelog.html":{}}}],["8836",{"_index":3941,"title":{},"body":{"changelog.html":{}}}],["8873",{"_index":3840,"title":{},"body":{"changelog.html":{}}}],["8880",{"_index":3904,"title":{},"body":{"changelog.html":{}}}],["8887",{"_index":3740,"title":{},"body":{"changelog.html":{}}}],["8898",{"_index":3811,"title":{},"body":{"changelog.html":{}}}],["8908",{"_index":3928,"title":{},"body":{"changelog.html":{}}}],["8909",{"_index":3913,"title":{},"body":{"changelog.html":{}}}],["8910",{"_index":3897,"title":{},"body":{"changelog.html":{}}}],["8917",{"_index":3919,"title":{},"body":{"changelog.html":{}}}],["8929",{"_index":3922,"title":{},"body":{"changelog.html":{}}}],["8933",{"_index":3890,"title":{},"body":{"changelog.html":{}}}],["8934",{"_index":3915,"title":{},"body":{"changelog.html":{}}}],["8959",{"_index":3727,"title":{},"body":{"changelog.html":{}}}],["8982",{"_index":3843,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["9003",{"_index":3720,"title":{},"body":{"changelog.html":{}}}],["9004",{"_index":3804,"title":{},"body":{"changelog.html":{}}}],["9018",{"_index":3719,"title":{},"body":{"changelog.html":{}}}],["9029",{"_index":3800,"title":{},"body":{"changelog.html":{}}}],["9053",{"_index":3701,"title":{},"body":{"changelog.html":{}}}],["9055",{"_index":3862,"title":{},"body":{"changelog.html":{}}}],["9083",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["9085",{"_index":3856,"title":{},"body":{"changelog.html":{}}}],["9092",{"_index":3709,"title":{},"body":{"changelog.html":{}}}],["9093",{"_index":3723,"title":{},"body":{"changelog.html":{}}}],["9103",{"_index":3818,"title":{},"body":{"changelog.html":{}}}],["9130",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["9134",{"_index":3808,"title":{},"body":{"changelog.html":{}}}],["9139",{"_index":3795,"title":{},"body":{"changelog.html":{}}}],["9148",{"_index":3782,"title":{},"body":{"changelog.html":{}}}],["9150",{"_index":3684,"title":{},"body":{"changelog.html":{}}}],["9156",{"_index":3791,"title":{},"body":{"changelog.html":{}}}],["9157",{"_index":3729,"title":{},"body":{"changelog.html":{}}}],["9159",{"_index":3777,"title":{},"body":{"changelog.html":{}}}],["9170",{"_index":3784,"title":{},"body":{"changelog.html":{}}}],["9177",{"_index":3690,"title":{},"body":{"changelog.html":{}}}],["9190",{"_index":3738,"title":{},"body":{"changelog.html":{}}}],["9192",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["9197",{"_index":3758,"title":{},"body":{"changelog.html":{}}}],["9202",{"_index":3766,"title":{},"body":{"changelog.html":{}}}],["9211",{"_index":3685,"title":{},"body":{"changelog.html":{}}}],["9212",{"_index":3699,"title":{},"body":{"changelog.html":{}}}],["9213",{"_index":3680,"title":{},"body":{"changelog.html":{}}}],["9219",{"_index":3693,"title":{},"body":{"changelog.html":{}}}],["9229",{"_index":5939,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["9231",{"_index":3654,"title":{},"body":{"changelog.html":{}}}],["9233",{"_index":3674,"title":{},"body":{"changelog.html":{}}}],["9269",{"_index":3657,"title":{},"body":{"changelog.html":{}}}],["9431",{"_index":3770,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":2796,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["999",{"_index":5027,"title":{},"body":{"index.html":{}}}],["9]{24",{"_index":679,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["_",{"_index":1854,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_${now.getdate()}_${now.gethours()}_${now.getminutes()}_${now.getseconds",{"_index":1318,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_.snakecase(exceptionname).touppercase",{"_index":1873,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.snakecase(type).touppercase",{"_index":1885,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.spec.ts",{"_index":6259,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["_.startcase(exceptionname",{"_index":1874,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["_.startcase(title",{"_index":1887,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["_.test.[ts|js",{"_index":5952,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["_id",{"_index":208,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["_id.$oid",{"_index":1387,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["_operator",{"_index":648,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_queries",{"_index":649,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["_timeout",{"_index":3286,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["a.m",{"_index":5046,"title":{},"body":{"index.html":{}}}],["aaa",{"_index":6492,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ability",{"_index":5412,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["above",{"_index":5044,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["absence",{"_index":5299,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1301,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["abstract",{"_index":278,"title":{},"body":{"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"injectables/DashboardRepo.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/PaginationResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["abstractbootstrapconsole",{"_index":3272,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["abstraction",{"_index":6185,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acacac",{"_index":499,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["accept",{"_index":5487,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":5486,"title":{},"body":{"license.html":{}}}],["accepted",{"_index":5691,"title":{},"body":{"todo.html":{}}}],["accepts",{"_index":4706,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["access",{"_index":1412,"title":{},"body":{"controllers/DelayController.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accessable",{"_index":6246,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessed",{"_index":572,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"index.html":{}}}],["accessible",{"_index":4308,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accessing",{"_index":4318,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["accesskeyid",{"_index":1700,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["accessors",{"_index":1209,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"classes/Scope.html":{},"injectables/TimeoutInterceptor.html":{}}}],["accompanied",{"_index":5338,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":5651,"title":{},"body":{"license.html":{}}}],["accomplish",{"_index":5123,"title":{},"body":{"license.html":{}}}],["accord",{"_index":5298,"title":{},"body":{"license.html":{}}}],["according",{"_index":3825,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["account",{"_index":1994,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accountid",{"_index":1992,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["accounts",{"_index":4358,"title":{},"body":{"changelog.html":{}}}],["achieve",{"_index":5654,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["acknowledges",{"_index":5241,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":5534,"title":{},"body":{"license.html":{}}}],["act",{"_index":6491,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["action",{"_index":1671,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":3789,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["activate",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["activation",{"_index":4562,"title":{},"body":{"changelog.html":{}}}],["active",{"_index":2253,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["activities",{"_index":5166,"title":{},"body":{"license.html":{}}}],["activity",{"_index":5573,"title":{},"body":{"license.html":{}}}],["actors",{"_index":6358,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actual",{"_index":5555,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["actually",{"_index":5392,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adapt",{"_index":5145,"title":{},"body":{"license.html":{}}}],["adapter",{"_index":6052,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["add",{"_index":2293,"title":{},"body":{"injectables/LessonRepo.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["addbearerauth",{"_index":5865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["added",{"_index":1383,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adding",{"_index":495,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["additional",{"_index":1580,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionally",{"_index":3179,"title":{},"body":{"classes/TaskScope.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["additionaly",{"_index":5932,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["addquery",{"_index":651,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addquery(query",{"_index":657,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{}}}],["addreferences",{"_index":1953,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["addreferences(anotherreference",{"_index":824,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["address",{"_index":5606,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["address/username",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":5141,"title":{},"body":{"license.html":{}}}],["addresses",{"_index":3447,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["adds",{"_index":1280,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["addtokentowhitelist",{"_index":2271,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtokentowhitelist(redisidentifier",{"_index":2277,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist",{"_index":2256,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["addtowhitelist(accountid",{"_index":2258,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["adduser",{"_index":3893,"title":{},"body":{"changelog.html":{}}}],["adhere",{"_index":6383,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["adheres",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":4008,"title":{},"body":{"changelog.html":{}}}],["admin",{"_index":3656,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["administrate",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["administration",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["admins",{"_index":3692,"title":{},"body":{"changelog.html":{}}}],["admintables",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["adminusers",{"_index":3899,"title":{},"body":{"changelog.html":{}}}],["adopted",{"_index":5275,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":5418,"title":{},"body":{"license.html":{}}}],["advised",{"_index":5640,"title":{},"body":{"license.html":{}}}],["affects",{"_index":5419,"title":{},"body":{"license.html":{}}}],["affero",{"_index":5053,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":5515,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":5238,"title":{},"body":{"license.html":{}}}],["afterall",{"_index":6557,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterall(async",{"_index":6559,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterduedateornone",{"_index":3123,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["afterduedateornone(duedate",{"_index":3164,"title":{},"body":{"classes/TaskScope.html":{}}}],["aftereach",{"_index":6486,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aftereach(async",{"_index":6605,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["afterwards",{"_index":6484,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["again",{"_index":4554,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application.html":{}}}],["against",{"_index":5289,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["age",{"_index":6165,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregate",{"_index":5325,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["aggregated",{"_index":4548,"title":{},"body":{"changelog.html":{}}}],["aggregates",{"_index":6070,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aggregations",{"_index":4587,"title":{},"body":{"changelog.html":{}}}],["agile",{"_index":6049,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["agnostic",{"_index":6248,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["ago",{"_index":1443,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["agpl",{"_index":5670,"title":{},"body":{"license.html":{}}}],["agree",{"_index":5590,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":5628,"title":{},"body":{"license.html":{}}}],["agreeing",{"_index":6355,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["agreement",{"_index":5543,"title":{},"body":{"license.html":{}}}],["aims",{"_index":5996,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ajv",{"_index":4816,"title":{},"body":{"dependencies.html":{}}}],["alert",{"_index":3925,"title":{},"body":{"changelog.html":{}}}],["alerts",{"_index":4290,"title":{},"body":{"changelog.html":{}}}],["algorithm",{"_index":2213,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["aliases",{"_index":5739,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aligned",{"_index":6046,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["alive",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["all_entities",{"_index":2379,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["allcollectionswithfilepaths",{"_index":1330,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.filter",{"_index":1340,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["allcollectionswithfilepaths.map((file",{"_index":1346,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["alleging",{"_index":5522,"title":{},"body":{"license.html":{}}}],["allow",{"_index":3664,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["allowed",{"_index":3399,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["allows",{"_index":2452,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alone",{"_index":6482,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["along",{"_index":5301,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["already",{"_index":389,"title":{},"body":{"classes/BusinessError.html":{},"injectables/FileSystemAdapter.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["alternate",{"_index":5108,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":5350,"title":{},"body":{"license.html":{}}}],["always",{"_index":6071,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["amount",{"_index":3903,"title":{},"body":{"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["amp",{"_index":4978,"title":{},"body":{"miscellaneous/functions.html":{}}}],["amqp",{"_index":4818,"title":{},"body":{"dependencies.html":{}}}],["amqpconnection",{"_index":2360,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["amqplib",{"_index":4821,"title":{},"body":{"dependencies.html":{}}}],["analog",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["analysis",{"_index":5967,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["analytics",{"_index":4934,"title":{},"body":{"dependencies.html":{}}}],["ancillary",{"_index":5488,"title":{},"body":{"license.html":{}}}],["and/opr",{"_index":6504,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["and/or",{"_index":5101,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":6268,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anonymous",{"_index":6251,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["another",{"_index":6042,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["anothernewsid",{"_index":6581,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["anotherreference",{"_index":1965,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["ansible",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["anti",{"_index":5263,"title":{},"body":{"license.html":{}}}],["antivirus",{"_index":4332,"title":{},"body":{"changelog.html":{}}}],["anymore",{"_index":3658,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":5311,"title":{},"body":{"license.html":{}}}],["anything",{"_index":5153,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["anywhere",{"_index":6316,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["api",{"_index":52,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"controllers/DelayController.html":{},"classes/GlobalErrorFilter.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["api/v1",{"_index":4997,"title":{},"body":{"index.html":{}}}],["api/v3",{"_index":4998,"title":{},"body":{"index.html":{}}}],["api/v3/news",{"_index":5002,"title":{},"body":{"index.html":{}}}],["api_validation_error",{"_index":51,"title":{},"body":{"classes/ApiValidationError.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["apibearerauth",{"_index":5812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":724,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{}}}],["apiproperty",{"_index":688,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/GlobalValidationPipe.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["apiproperty()@decodehtmlentities",{"_index":3155,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apiproperty({description",{"_index":931,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{}}}],["apiproperty({enum",{"_index":2689,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apiproperty({pattern",{"_index":2687,"title":{},"body":{"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apiproperty({type",{"_index":934,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsListResponse.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{}}}],["apipropertyoptional",{"_index":689,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional()@decodehtmlentities",{"_index":3148,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apipropertyoptional({description",{"_index":2684,"title":{},"body":{"classes/NewsResponse.html":{},"classes/UserInfoResponse.html":{}}}],["apipropertyoptional({type",{"_index":2682,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apis",{"_index":6018,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["apitags",{"_index":723,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["apitags('dashboard",{"_index":733,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apitags('news",{"_index":2505,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["apitags('task",{"_index":3062,"title":{},"body":{"controllers/TaskController.html":{}}}],["apitags('user",{"_index":3330,"title":{},"body":{"controllers/UserController.html":{}}}],["apivalidationerror",{"_index":1,"title":{"classes/ApiValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["apivalidationerror(errors",{"_index":1952,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apivalidationerror.validationerrors.map((validationerror",{"_index":79,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apivalidationerrorresponse",{"_index":61,"title":{"classes/ApiValidationErrorResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["apivalidationerrorresponse(error",{"_index":1877,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["app",{"_index":1893,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["app.close",{"_index":6607,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app.init",{"_index":6602,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["app_filter",{"_index":446,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["app_guard",{"_index":445,"title":{},"body":{"modules/CoreModule.html":{}}}],["app_interceptor",{"_index":443,"title":{},"body":{"modules/CoreModule.html":{},"controllers/DelayController.html":{},"modules/InterceptorModule.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["app_pipe",{"_index":444,"title":{},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{}}}],["appear",{"_index":4051,"title":{},"body":{"changelog.html":{}}}],["appearing",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["append",{"_index":5737,"title":{},"body":{"todo.html":{}}}],["appendedattachment",{"_index":88,"title":{"interfaces/AppendedAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["applicable",{"_index":5158,"title":{},"body":{"license.html":{}}}],["applicaiton",{"_index":5941,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["application",{"_index":374,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"classes/BusinessError.html":{},"modules/CoreModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["applications",{"_index":4986,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["applied",{"_index":1268,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["applies",{"_index":5611,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1336,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["applydecorators(...decorators",{"_index":5813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":6611,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["approach",{"_index":6032,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriate",{"_index":5013,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["appropriately",{"_index":5294,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":5647,"title":{},"body":{"license.html":{}}}],["apps",{"_index":3660,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["apps/**/*.(t|j)s",{"_index":5838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../all",{"_index":5772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../auth.decorator.ts",{"_index":5754,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../bootstrap.console.ts",{"_index":5787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../console.ts",{"_index":5774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":5791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../counted.ts",{"_index":5742,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../course.entity.ts",{"_index":5783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../course.factory.ts",{"_index":5778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../create",{"_index":5782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../createcurrenttestuser.ts",{"_index":5780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../dashboard.entity.ts",{"_index":5743,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../dashboard.repo.ts",{"_index":5790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../database.config.ts",{"_index":5803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../decode",{"_index":4956,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../empty",{"_index":5784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../entity",{"_index":5745,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../feathers",{"_index":5747,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../file",{"_index":5807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file.factory.ts",{"_index":5789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../filestorage.adapter.ts",{"_index":4955,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../find",{"_index":4945,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../global",{"_index":4952,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../jwt",{"_index":5804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../mail.module.ts",{"_index":5750,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":4949,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../management.ts",{"_index":4950,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":5781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news",{"_index":5802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../news.response.ts",{"_index":5752,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../news.types.ts",{"_index":4944,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/.../news.uc.ts",{"_index":5749,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../resolveduser.dto.ts",{"_index":5751,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../school.factory.ts",{"_index":5796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../scope.ts",{"_index":5744,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../server",{"_index":5793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../setup",{"_index":5799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../storageprovider.factory.ts",{"_index":5801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../string",{"_index":4958,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../swagger.ts",{"_index":5776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../task.authorization.service.ts",{"_index":4947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../task.entity.ts",{"_index":5755,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../task.uc.ts",{"_index":4946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["apps/.../types.ts",{"_index":5741,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../user.factory.ts",{"_index":5806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../user.ts",{"_index":5748,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/.../value",{"_index":5757,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server",{"_index":5927,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["apps/server/doc",{"_index":5979,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/path",{"_index":5846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src",{"_index":5984,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["apps/server/src/$1",{"_index":5854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/config/database.config.ts",{"_index":1832,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/console.module.ts",{"_index":2934,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["apps/server/src/console/console.ts",{"_index":5820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/console/server.console.ts",{"_index":2920,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:11",{"_index":2924,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:17",{"_index":2927,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/server.console.ts:6",{"_index":2922,"title":{},"body":{"classes/ServerConsole.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts",{"_index":3271,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/console/test/bootstrap.console.ts:5",{"_index":3273,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["apps/server/src/core/core.module.ts",{"_index":431,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/server/src/core/error/dto/api",{"_index":62,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["apps/server/src/core/error/dto/error.response.ts",{"_index":1571,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/error.response.ts:6",{"_index":1573,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["apps/server/src/core/error/dto/validation",{"_index":3381,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["apps/server/src/core/error/error.module.ts",{"_index":1564,"title":{},"body":{"modules/ErrorModule.html":{}}}],["apps/server/src/core/error/filter/global",{"_index":1840,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/core/error/interface/error",{"_index":2007,"title":{},"body":{"interfaces/IErrorType.html":{}}}],["apps/server/src/core/error/interface/feathers",{"_index":1626,"title":{},"body":{"interfaces/FeathersError.html":{}}}],["apps/server/src/core/error/server",{"_index":5891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/core/interceptor/interceptor.module.ts",{"_index":2176,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["apps/server/src/core/logger/logger.interface.ts",{"_index":2033,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:2",{"_index":2044,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:3",{"_index":2042,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:4",{"_index":2048,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:5",{"_index":2039,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.interface.ts:6",{"_index":2046,"title":{},"body":{"interfaces/ILogger.html":{}}}],["apps/server/src/core/logger/logger.module.ts",{"_index":2332,"title":{},"body":{"modules/LoggerModule.html":{}}}],["apps/server/src/core/logger/logger.service.ts",{"_index":2310,"title":{},"body":{"injectables/Logger.html":{}}}],["apps/server/src/core/validation/pipe/global",{"_index":1926,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["apps/server/src/core/validation/validation.module.ts",{"_index":3386,"title":{},"body":{"modules/ValidationModule.html":{}}}],["apps/server/src/main.ts",{"_index":4960,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/management.ts",{"_index":4961,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/modules/authentication/auth.module.ts",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/server/src/modules/authentication/constants.ts",{"_index":2190,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/decorator/auth.decorator.ts",{"_index":5768,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/guard/jwt",{"_index":2186,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["apps/server/src/modules/authentication/interface/jwt",{"_index":2218,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt",{"_index":2254,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts",{"_index":2221,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10",{"_index":2224,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20",{"_index":2226,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/server/src/modules/authorization/authorization.module.ts",{"_index":146,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts",{"_index":154,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:17",{"_index":177,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:33",{"_index":167,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:53",{"_index":180,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/authorization.service.ts:7",{"_index":160,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["apps/server/src/modules/authorization/feathers",{"_index":1583,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["apps/server/src/modules/database/mongo",{"_index":2398,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/database/setup",{"_index":5897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/modules/feathers/feathers",{"_index":1643,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/feathers/feathers.module.ts",{"_index":1632,"title":{},"body":{"modules/FeathersModule.html":{}}}],["apps/server/src/modules/files/files.module.ts",{"_index":1794,"title":{},"body":{"modules/FilesModule.html":{}}}],["apps/server/src/modules/files/job/delete",{"_index":1431,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["apps/server/src/modules/files/repo/files.repo.ts",{"_index":1799,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/modules/files/repo/files.repo.ts:13",{"_index":1817,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/modules/files/repo/files.repo.ts:15",{"_index":1806,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/modules/files/repo/files.repo.ts:23",{"_index":1804,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/modules/files/repo/files.repo.ts:8",{"_index":1803,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["apps/server/src/modules/files/repo/storageprovider.repo.ts",{"_index":2971,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["apps/server/src/modules/files/repo/storageprovider.repo.ts:7",{"_index":2972,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["apps/server/src/modules/files/uc/delete",{"_index":1456,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts",{"_index":700,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:17",{"_index":708,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:25",{"_index":713,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dashboard.controller.ts:36",{"_index":720,"title":{},"body":{"controllers/DashboardController.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts",{"_index":927,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:13",{"_index":947,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:18",{"_index":946,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:23",{"_index":944,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:31",{"_index":937,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:36",{"_index":940,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:41",{"_index":939,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:46",{"_index":932,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:51",{"_index":941,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:56",{"_index":942,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:62",{"_index":936,"title":{},"body":{"classes/DashboardGridElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:70",{"_index":1106,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:76",{"_index":1105,"title":{},"body":{"classes/DashboardResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:8",{"_index":945,"title":{},"body":{"classes/DashboardGridSubElementResponse.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts",{"_index":2442,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:13",{"_index":2459,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:18",{"_index":2460,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:24",{"_index":2457,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:30",{"_index":2445,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/moveposition.params.ts:34",{"_index":2446,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/patchgroup.params.ts",{"_index":2823,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["apps/server/src/modules/learnroom/controller/dto/patchgroup.params.ts:12",{"_index":2825,"title":{},"body":{"classes/PatchGroupParams.html":{}}}],["apps/server/src/modules/learnroom/learnroom.module.ts",{"_index":2281,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts",{"_index":948,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5",{"_index":951,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts",{"_index":1107,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:14",{"_index":1114,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:26",{"_index":1116,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:6",{"_index":1111,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/learnroom/uc/dashboard.uc.ts:9",{"_index":1112,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["apps/server/src/modules/mail/mail.interface.ts",{"_index":90,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["apps/server/src/modules/mail/mail.module.ts",{"_index":2335,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/mail/mail.module.ts:28",{"_index":2337,"title":{},"body":{"modules/MailModule.html":{}}}],["apps/server/src/modules/mail/mail.service.ts",{"_index":2357,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:12",{"_index":2362,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/mail/mail.service.ts:18",{"_index":2364,"title":{},"body":{"injectables/MailService.html":{}}}],["apps/server/src/modules/management/console/database",{"_index":1127,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["apps/server/src/modules/management/controller/database",{"_index":1168,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts",{"_index":344,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:11",{"_index":360,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/converter/bson.converter.ts:21",{"_index":348,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["apps/server/src/modules/management/management.module.ts",{"_index":2374,"title":{},"body":{"modules/ManagementModule.html":{}}}],["apps/server/src/modules/management/uc/database",{"_index":1250,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["apps/server/src/modules/news/controller/dto/create",{"_index":661,"title":{},"body":{"classes/CreateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news",{"_index":2526,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts",{"_index":2543,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:17",{"_index":2679,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:22",{"_index":2691,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:27",{"_index":2675,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:32",{"_index":2678,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:39",{"_index":2683,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:44",{"_index":2685,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:51",{"_index":2690,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:57",{"_index":2688,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:62",{"_index":2686,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:67",{"_index":2681,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:72",{"_index":2677,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:77",{"_index":2693,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:82",{"_index":2676,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:87",{"_index":2692,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:92",{"_index":2680,"title":{},"body":{"classes/NewsResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/news.response.ts:95",{"_index":2547,"title":{},"body":{"classes/NewsListResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/school",{"_index":2899,"title":{},"body":{"classes/SchoolInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/target",{"_index":3019,"title":{},"body":{"classes/TargetInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/dto/update",{"_index":3309,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["apps/server/src/modules/news/controller/dto/user",{"_index":3343,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts",{"_index":2475,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:21",{"_index":2480,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:36",{"_index":2489,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:57",{"_index":2493,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:71",{"_index":2499,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/news.controller.ts:85",{"_index":2483,"title":{},"body":{"controllers/NewsController.html":{}}}],["apps/server/src/modules/news/controller/team",{"_index":3258,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts",{"_index":2565,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:31",{"_index":2572,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:45",{"_index":2570,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:58",{"_index":2576,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/news.mapper.ts:9",{"_index":2574,"title":{},"body":{"classes/NewsMapper.html":{}}}],["apps/server/src/modules/news/mapper/school",{"_index":2891,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["apps/server/src/modules/news/mapper/target",{"_index":3014,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["apps/server/src/modules/news/mapper/user",{"_index":3342,"title":{},"body":{"classes/UserInfoMapper.html":{}}}],["apps/server/src/modules/news/news.module.ts",{"_index":2625,"title":{},"body":{"modules/NewsModule.html":{}}}],["apps/server/src/modules/news/repo/news",{"_index":2694,"title":{},"body":{"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts",{"_index":2641,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:11",{"_index":2653,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:19",{"_index":2646,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:32",{"_index":2652,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/repo/news.repo.ts:39",{"_index":2648,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts",{"_index":2713,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:112",{"_index":2743,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:136",{"_index":2724,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:14",{"_index":2720,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:147",{"_index":2735,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:167",{"_index":2741,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:185",{"_index":2734,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:195",{"_index":2737,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:27",{"_index":2722,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:57",{"_index":2726,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/news/uc/news.uc.ts:88",{"_index":2732,"title":{},"body":{"injectables/NewsUc.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts",{"_index":3070,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:10",{"_index":3156,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:13",{"_index":3147,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:16",{"_index":3153,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:20",{"_index":3149,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:24",{"_index":3151,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:27",{"_index":3152,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:30",{"_index":3154,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:33",{"_index":3150,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:36",{"_index":3158,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:39",{"_index":3157,"title":{},"body":{"classes/TaskResponse.html":{}}}],["apps/server/src/modules/task/controller/dto/task.response.ts:48",{"_index":3072,"title":{},"body":{"classes/TaskListResponse.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts",{"_index":3054,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/controller/task.controller.ts:19",{"_index":3056,"title":{},"body":{"controllers/TaskController.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts",{"_index":3077,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/mapper/task.mapper.ts:5",{"_index":3079,"title":{},"body":{"classes/TaskMapper.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts",{"_index":2986,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:10",{"_index":2989,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:13",{"_index":2993,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:21",{"_index":2995,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/submission.repo.ts:26",{"_index":2991,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["apps/server/src/modules/task/repo/task",{"_index":3159,"title":{},"body":{"classes/TaskScope.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts",{"_index":3109,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:10",{"_index":3112,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:24",{"_index":3114,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/repo/task.repo.ts:67",{"_index":3119,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["apps/server/src/modules/task/task.module.ts",{"_index":3106,"title":{},"body":{"modules/TaskModule.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts",{"_index":3034,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:11",{"_index":3037,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.authorization.service.ts:17",{"_index":3040,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts",{"_index":3183,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:104",{"_index":3193,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:13",{"_index":3189,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:132",{"_index":3197,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:21",{"_index":3194,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:35",{"_index":3195,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:57",{"_index":3196,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:79",{"_index":3200,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/task/uc/task.uc.ts:84",{"_index":3191,"title":{},"body":{"injectables/TaskUC.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts",{"_index":2826,"title":{},"body":{"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:11",{"_index":2830,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:14",{"_index":2829,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:17",{"_index":2827,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:20",{"_index":2834,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:23",{"_index":2832,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:26",{"_index":2831,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:29",{"_index":2833,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/dto/resolveduser.dto.ts:8",{"_index":2828,"title":{},"body":{"classes/ResolvedUser.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts",{"_index":3324,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/controller/user.controller.ts:17",{"_index":3327,"title":{},"body":{"controllers/UserController.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts",{"_index":2836,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/mapper/resolveduser.mapper.ts:5",{"_index":2838,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts",{"_index":2858,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:11",{"_index":2867,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:16",{"_index":2865,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:21",{"_index":2869,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/role.repo.ts:7",{"_index":2863,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts",{"_index":3352,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:6",{"_index":3353,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/repo/user.repo.ts:9",{"_index":3354,"title":{},"body":{"injectables/UserRepo.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts",{"_index":2875,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:10",{"_index":2880,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/role.uc.ts:7",{"_index":2878,"title":{},"body":{"injectables/RoleUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts",{"_index":3356,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:10",{"_index":3359,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/uc/user.uc.ts:13",{"_index":3361,"title":{},"body":{"injectables/UserUC.html":{}}}],["apps/server/src/modules/user/user.facade.ts",{"_index":3334,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:11",{"_index":3337,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.facade.ts:14",{"_index":3339,"title":{},"body":{"injectables/UserFacade.html":{}}}],["apps/server/src/modules/user/user.module.ts",{"_index":3350,"title":{},"body":{"modules/UserModule.html":{}}}],["apps/server/src/modules/user/utils/createcurrenttestuser.ts",{"_index":5877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts",{"_index":626,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:22",{"_index":630,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:25",{"_index":632,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:32",{"_index":634,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:38",{"_index":636,"title":{},"body":{"injectables/CourseRepo.html":{}}}],["apps/server/src/repositories/learnroom/course.repo.ts:8",{"_index":656,"title":{},"body":{"classes/CourseScope.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts",{"_index":539,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:10",{"_index":543,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/coursegroup.repo.ts:7",{"_index":541,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts",{"_index":888,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:14",{"_index":1403,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:17",{"_index":1401,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:21",{"_index":1402,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:25",{"_index":891,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:35",{"_index":898,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:38",{"_index":899,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:41",{"_index":900,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:45",{"_index":897,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:48",{"_index":895,"title":{},"body":{"classes/DashboardGridElementModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:52",{"_index":973,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:6",{"_index":1400,"title":{},"body":{"classes/DefaultGridReferenceModel.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.entity.ts:60",{"_index":974,"title":{},"body":{"classes/DashboardModelEntity.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts",{"_index":976,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:13",{"_index":992,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:17",{"_index":987,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:29",{"_index":996,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:49",{"_index":994,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:63",{"_index":985,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:74",{"_index":990,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:97",{"_index":998,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts",{"_index":1063,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:53",{"_index":2005,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:54",{"_index":2004,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:55",{"_index":2006,"title":{},"body":{"interfaces/IDashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:59",{"_index":1066,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:63",{"_index":1070,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:69",{"_index":1071,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:75",{"_index":1068,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/repositories/learnroom/dashboard.repo.ts:81",{"_index":1069,"title":{},"body":{"injectables/DashboardRepo.html":{}}}],["apps/server/src/server.controller.ts",{"_index":2941,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.controller.ts:7",{"_index":2942,"title":{},"body":{"controllers/ServerController.html":{}}}],["apps/server/src/server.module.ts",{"_index":2947,"title":{},"body":{"modules/ServerModule.html":{}}}],["apps/server/src/shared/$1",{"_index":5853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/error/api",{"_index":6,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts",{"_index":367,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:10",{"_index":380,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:12",{"_index":383,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:14",{"_index":382,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:16",{"_index":381,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:19",{"_index":378,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:34",{"_index":384,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/business.error.ts:38",{"_index":385,"title":{},"body":{"classes/BusinessError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts",{"_index":3377,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/error/validation.error.ts:4",{"_index":3379,"title":{},"body":{"classes/ValidationError.html":{}}}],["apps/server/src/shared/common/interceptor/constants.ts",{"_index":5894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/duration",{"_index":1493,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/test/create",{"_index":1405,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts",{"_index":3281,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12",{"_index":3291,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14",{"_index":3289,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17",{"_index":3288,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29",{"_index":3293,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33",{"_index":3295,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts",{"_index":2790,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:14",{"_index":2797,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.query.ts:8",{"_index":2800,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts",{"_index":2805,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:11",{"_index":2808,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:14",{"_index":2811,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:17",{"_index":2810,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:20",{"_index":2809,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/dto/pagination.response.ts:3",{"_index":2807,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["apps/server/src/shared/controller/pipe/parse",{"_index":2815,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["apps/server/src/shared/controller/swagger.ts",{"_index":5859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/controller/transformer/decode",{"_index":4962,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/shared/controller/transformer/string",{"_index":4982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/server/src/shared/domain/entity/all",{"_index":5808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts",{"_index":207,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:10",{"_index":215,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:19",{"_index":246,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:22",{"_index":250,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:25",{"_index":249,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:28",{"_index":253,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{}}}],["apps/server/src/shared/domain/entity/base.entity.ts:7",{"_index":213,"title":{},"body":{"classes/BaseEntity.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts",{"_index":452,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:31",{"_index":467,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:34",{"_index":465,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:38",{"_index":470,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:42",{"_index":474,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:46",{"_index":478,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:50",{"_index":476,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:54",{"_index":461,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:67",{"_index":479,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/course.entity.ts:71",{"_index":481,"title":{},"body":{"classes/Course.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts",{"_index":525,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:15",{"_index":531,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:18",{"_index":528,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/coursegroup.entity.ts:26",{"_index":532,"title":{},"body":{"classes/CourseGroup.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts",{"_index":751,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:101",{"_index":1971,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:105",{"_index":1972,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:109",{"_index":1975,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:119",{"_index":1964,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:123",{"_index":1970,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:143",{"_index":1974,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:147",{"_index":1976,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:166",{"_index":769,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:168",{"_index":766,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:170",{"_index":770,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:172",{"_index":768,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:174",{"_index":783,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:181",{"_index":791,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:185",{"_index":765,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:198",{"_index":778,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:20",{"_index":1397,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:202",{"_index":776,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:214",{"_index":773,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:22",{"_index":1398,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:222",{"_index":789,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:232",{"_index":781,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:24",{"_index":1396,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:244",{"_index":793,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:253",{"_index":786,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:32",{"_index":1399,"title":{},"body":{"classes/DefaultGridReference.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:43",{"_index":2022,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:49",{"_index":2023,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:51",{"_index":2024,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:53",{"_index":2021,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:55",{"_index":2020,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:57",{"_index":2025,"title":{},"body":{"interfaces/IGridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:69",{"_index":1962,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:71",{"_index":1961,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:79",{"_index":1968,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:83",{"_index":1967,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:87",{"_index":1969,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:91",{"_index":1966,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:95",{"_index":1963,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/dashboard.entity.ts:97",{"_index":1973,"title":{},"body":{"classes/GridElement.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts",{"_index":255,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:17",{"_index":260,"title":{},"body":{"classes/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:20",{"_index":262,"title":{},"body":{"classes/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:23",{"_index":259,"title":{},"body":{"classes/BaseFile.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:32",{"_index":1680,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:35",{"_index":1679,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/file.entity.ts:38",{"_index":1678,"title":{},"body":{"classes/File.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts",{"_index":2027,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:14",{"_index":2286,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:17",{"_index":2285,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/lesson.entity.ts:20",{"_index":2284,"title":{},"body":{"classes/Lesson.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts",{"_index":549,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:31",{"_index":2471,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:35",{"_index":2462,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:39",{"_index":2464,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:42",{"_index":2465,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:45",{"_index":2467,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:48",{"_index":2468,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:51",{"_index":2469,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:55",{"_index":2470,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:58",{"_index":2466,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:61",{"_index":2463,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:64",{"_index":2472,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:66",{"_index":2461,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/news.entity.ts:79",{"_index":2473,"title":{},"body":{"classes/News.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts",{"_index":2052,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:15",{"_index":2855,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:19",{"_index":2856,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/role.entity.ts:29",{"_index":2852,"title":{},"body":{"classes/Role.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts",{"_index":2887,"title":{},"body":{"classes/School.html":{}}}],["apps/server/src/shared/domain/entity/school.entity.ts:7",{"_index":2888,"title":{},"body":{"classes/School.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts",{"_index":2062,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:15",{"_index":2968,"title":{},"body":{"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:18",{"_index":2967,"title":{},"body":{"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:21",{"_index":2970,"title":{},"body":{"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/storageprovider.entity.ts:24",{"_index":2966,"title":{},"body":{"classes/StorageProvider.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts",{"_index":2075,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:23",{"_index":2982,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:26",{"_index":2980,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:29",{"_index":2976,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:32",{"_index":2983,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:36",{"_index":2975,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:39",{"_index":2981,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:43",{"_index":2977,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:46",{"_index":2978,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:49",{"_index":2979,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:51",{"_index":2984,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/submission.entity.ts:57",{"_index":2974,"title":{},"body":{"classes/Submission.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts",{"_index":2114,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:28",{"_index":3026,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:31",{"_index":3021,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:34",{"_index":3024,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:37",{"_index":3027,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:40",{"_index":3029,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:43",{"_index":3023,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:46",{"_index":3025,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:49",{"_index":3028,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:53",{"_index":3022,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:55",{"_index":3031,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:60",{"_index":3032,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:69",{"_index":3030,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/task.entity.ts:85",{"_index":3020,"title":{},"body":{"classes/Task.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts",{"_index":3255,"title":{},"body":{"classes/Team.html":{}}}],["apps/server/src/shared/domain/entity/team.entity.ts:7",{"_index":3256,"title":{},"body":{"classes/Team.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts",{"_index":2164,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:19",{"_index":3316,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:22",{"_index":3317,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:25",{"_index":3318,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:29",{"_index":3321,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/entity/user.entity.ts:33",{"_index":3314,"title":{},"body":{"classes/User.html":{}}}],["apps/server/src/shared/domain/factory/course.factory.ts",{"_index":5874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/factory/file.factory.ts",{"_index":5888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/factory/school.factory.ts",{"_index":5896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/factory/storageprovider.factory.ts",{"_index":5899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/factory/user.factory.ts",{"_index":5901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/domain/interface/find",{"_index":2010,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/interface/user.ts",{"_index":1991,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/counted.ts",{"_index":5763,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/entity",{"_index":5767,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/news.types.ts",{"_index":1978,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/types/value",{"_index":5769,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/domain/vo/task",{"_index":2153,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["apps/server/src/shared/infra/console/console",{"_index":403,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{}}}],["apps/server/src/shared/infra/database/management/database",{"_index":1198,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.module.ts",{"_index":1554,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.module.ts:10",{"_index":1558,"title":{},"body":{"modules/EncryptionModule.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts",{"_index":3000,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:13",{"_index":3004,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:6",{"_index":3002,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/encryption/encryption.service.ts:9",{"_index":3006,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["apps/server/src/shared/infra/file",{"_index":1708,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"miscellaneous/variables.html":{}}}],["apps/server/src/shared/infra/filestorage/filestorage.adapter.ts",{"_index":1682,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["apps/server/src/shared/infra/filestorage/filestorage.adapter.ts:21",{"_index":1685,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["apps/server/src/shared/repo/base.repo.ts",{"_index":299,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:14",{"_index":322,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:19",{"_index":318,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:27",{"_index":320,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:36",{"_index":324,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:40",{"_index":331,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:44",{"_index":327,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:48",{"_index":329,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:53",{"_index":313,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:6",{"_index":311,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/base.repo.ts:9",{"_index":316,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson",{"_index":2300,"title":{},"body":{"classes/LessonScope.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts",{"_index":2288,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:15",{"_index":2292,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/lesson/lesson.repo.ts:9",{"_index":2290,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["apps/server/src/shared/repo/query/empty",{"_index":5887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/server/src/shared/repo/scope.ts",{"_index":2904,"title":{},"body":{"classes/Scope.html":{},"miscellaneous/typealiases.html":{}}}],["apps/server/src/shared/repo/scope.ts:11",{"_index":2906,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:17",{"_index":2911,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:25",{"_index":2909,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/scope.ts:9",{"_index":2908,"title":{},"body":{"classes/Scope.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts",{"_index":1517,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:10",{"_index":1526,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:21",{"_index":1531,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["apps/server/src/shared/repo/types/encryptedstring.type.ts:36",{"_index":1533,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["appthis",{"_index":4999,"title":{},"body":{"index.html":{}}}],["arc",{"_index":4287,"title":{},"body":{"changelog.html":{}}}],["architecture",{"_index":4991,"title":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["architecture/organizing",{"_index":6326,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["archive",{"_index":5665,"title":{},"body":{"license.html":{}}}],["archived",{"_index":2128,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{}}}],["archives",{"_index":6372,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["areas",{"_index":6488,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["aren't",{"_index":6385,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arg",{"_index":4823,"title":{},"body":{"dependencies.html":{}}}],["args",{"_index":2926,"title":{},"body":{"classes/ServerConsole.html":{},"classes/TestBootstrapConsole.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":6534,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["argumentshost",{"_index":1849,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["arise",{"_index":6026,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["arising",{"_index":5632,"title":{},"body":{"license.html":{}}}],["around",{"_index":5677,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["arrange",{"_index":5552,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["arrangement",{"_index":5563,"title":{},"body":{"license.html":{}}}],["array",{"_index":1740,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{}}}],["array.from(modelentity.gridelements).map(async",{"_index":1016,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["array.from(modelentity.references).map((ref",{"_index":1006,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["array.isarray(collectionnamefilter",{"_index":1337,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["array.isarray(constraint",{"_index":82,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["array.isarray(user.permissions",{"_index":1609,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["arrays",{"_index":4346,"title":{},"body":{"changelog.html":{}}}],["article",{"_index":5272,"title":{},"body":{"license.html":{}}}],["asc",{"_index":1389,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["ascending",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["asking",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["aspect",{"_index":6159,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["aspects",{"_index":6039,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["assert",{"_index":5098,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assertions",{"_index":6580,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["assets",{"_index":5505,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["assigned",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["assigning",{"_index":6302,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["assignment",{"_index":4021,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":5222,"title":{},"body":{"license.html":{}}}],["assume",{"_index":5624,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumes",{"_index":6337,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["assumption",{"_index":5650,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":5455,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["async",{"_index":155,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynchronous",{"_index":4371,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["asynclocalstorage",{"_index":6229,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["atomic",{"_index":6134,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["attach",{"_index":5656,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["attachment",{"_index":98,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attachments",{"_index":101,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["attempt",{"_index":5465,"title":{},"body":{"license.html":{}}}],["attempted",{"_index":4229,"title":{},"body":{"changelog.html":{}}}],["attribute",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["attributes",{"_index":3996,"title":{},"body":{"changelog.html":{}}}],["attributions",{"_index":5440,"title":{},"body":{"license.html":{}}}],["aud",{"_index":2203,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["audience",{"_index":2211,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{}}}],["audit",{"_index":6224,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["auth",{"_index":5689,"title":{},"body":{"todo.html":{}}}],["auth.guard.ts",{"_index":2187,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.provider",{"_index":151,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{}}}],["auth.provider.ts",{"_index":1584,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["auth.provider.ts:14",{"_index":1592,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:17",{"_index":1600,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:27",{"_index":1602,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:39",{"_index":1596,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:56",{"_index":1594,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["auth.provider.ts:61",{"_index":1598,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["authconfig",{"_index":2195,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["authconfig.jwtoptions",{"_index":2216,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authconfig.secret",{"_index":2215,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":725,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["authenticate('jwt",{"_index":734,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["authenticated",{"_index":1998,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authenticates",{"_index":6234,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authentication",{"_index":3590,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authguard",{"_index":2188,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":2189,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":112,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":5439,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":3208,"title":{},"body":{"injectables/TaskUC.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorization.service",{"_index":149,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["authorizationmodule",{"_index":138,"title":{"modules/AuthorizationModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["authorizationservice",{"_index":144,"title":{"injectables/AuthorizationService.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorized",{"_index":5433,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["authorizes",{"_index":5529,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["authorizing",{"_index":5567,"title":{},"body":{"license.html":{}}}],["authors",{"_index":5444,"title":{},"body":{"license.html":{}}}],["auto",{"_index":5964,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["autodeployed",{"_index":3733,"title":{},"body":{"changelog.html":{}}}],["automated",{"_index":6455,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["automatic",{"_index":3850,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["automatically",{"_index":4559,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["autosync",{"_index":3916,"title":{},"body":{"changelog.html":{}}}],["availability",{"_index":6460,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["available",{"_index":1332,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"license.html":{},"modules.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["availabledate",{"_index":2115,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["avoid",{"_index":3748,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["avoiding",{"_index":6012,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["await",{"_index":191,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["awaited",{"_index":6505,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["away",{"_index":5077,"title":{},"body":{"license.html":{}}}],["aws",{"_index":1688,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"changelog.html":{},"dependencies.html":{}}}],["axios",{"_index":3509,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["b",{"_index":2055,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backend",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":6051,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["backuop",{"_index":1369,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup",{"_index":1285,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["backup.js",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["backup.sh",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["backup/setup/news.json",{"_index":2639,"title":{},"body":{"modules/NewsModule.html":{}}}],["bad_request",{"_index":6395,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["badges",{"_index":4303,"title":{},"body":{"changelog.html":{}}}],["badrequestexception",{"_index":795,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('dashboard",{"_index":854,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["badrequestexception('invalid",{"_index":2822,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["badrequestexception('this",{"_index":837,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["bar",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["base",{"_index":368,"title":{},"body":{"classes/BusinessError.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["base.entity",{"_index":268,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["base64",{"_index":4937,"title":{},"body":{"dependencies.html":{}}}],["base64content",{"_index":93,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["based",{"_index":1275,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["basedir",{"_index":1260,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baseentity",{"_index":206,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"injectables/FeathersAuthProvider.html":{},"classes/School.html":{},"classes/Team.html":{}}}],["baseentity:10",{"_index":2890,"title":{},"body":{"classes/School.html":{},"classes/Team.html":{}}}],["baseentity:7",{"_index":2889,"title":{},"body":{"classes/School.html":{},"classes/Team.html":{}}}],["baseentitywithtimestamps",{"_index":222,"title":{"classes/BaseEntityWithTimestamps.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:19",{"_index":263,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:22",{"_index":265,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:25",{"_index":264,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["baseentitywithtimestamps:28",{"_index":266,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["basefile",{"_index":254,"title":{"classes/BaseFile.html":{}},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["basefile:17",{"_index":1490,"title":{},"body":{"classes/Directory.html":{},"classes/File.html":{}}}],["basefile:20",{"_index":1491,"title":{},"body":{"classes/Directory.html":{},"classes/File.html":{}}}],["basefile:23",{"_index":1489,"title":{},"body":{"classes/Directory.html":{},"classes/File.html":{}}}],["basepath",{"_index":1252,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["baserepo",{"_index":298,"title":{"injectables/BaseRepo.html":{}},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:14",{"_index":1812,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:19",{"_index":1810,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:27",{"_index":1811,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:36",{"_index":1813,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:40",{"_index":1816,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:44",{"_index":1814,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:48",{"_index":1815,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:53",{"_index":1808,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["baserepo:9",{"_index":1809,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["basic",{"_index":5231,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["basically",{"_index":6195,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batch",{"_index":6194,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["batches",{"_index":6200,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bbb",{"_index":4043,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["bc",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["bcc",{"_index":109,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["bcryptjs",{"_index":4831,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":5867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":5868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["become",{"_index":5110,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":5120,"title":{},"body":{"license.html":{}}}],["before",{"_index":617,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall",{"_index":6548,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforeall(async",{"_index":6536,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["beforehand",{"_index":5942,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["beginning",{"_index":5028,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["behalf",{"_index":5251,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":3483,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behaviour",{"_index":436,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["behind",{"_index":3285,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["being",{"_index":4307,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["believe",{"_index":5561,"title":{},"body":{"license.html":{}}}],["bellow",{"_index":6035,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["belongs",{"_index":6111,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["below",{"_index":5258,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["benefit",{"_index":5104,"title":{},"body":{"license.html":{}}}],["benefits",{"_index":6183,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["beside",{"_index":5766,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["best",{"_index":5653,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["better",{"_index":910,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bettermark's",{"_index":4095,"title":{},"body":{"changelog.html":{}}}],["bettermarks",{"_index":4052,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":3805,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["beyond",{"_index":5327,"title":{},"body":{"license.html":{}}}],["bind",{"_index":4546,"title":{},"body":{"changelog.html":{}}}],["biology",{"_index":1087,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["birth",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["birthdate",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["birthday",{"_index":4522,"title":{},"body":{"changelog.html":{}}}],["birthdays",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["bit",{"_index":6202,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["blackbox",{"_index":6464,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blocks",{"_index":6471,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["blue",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["bob",{"_index":6371,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["body",{"_index":722,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bom",{"_index":4929,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":261,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/DashboardEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"miscellaneous/functions.html":{}}}],["boolean.transformer.ts",{"_index":4959,"title":{},"body":{"miscellaneous/functions.html":{}}}],["boolish",{"_index":4983,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":3276,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrap.boot([process.argv0",{"_index":3280,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstrapconsole",{"_index":3274,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["bootstraps",{"_index":6535,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["boss",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["bosscloud",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["both",{"_index":4362,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["box",{"_index":6528,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["branch",{"_index":3598,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["branches",{"_index":3734,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["brandenburg",{"_index":3865,"title":{},"body":{"changelog.html":{}}}],["brb",{"_index":3783,"title":{},"body":{"changelog.html":{}}}],["breathing",{"_index":6366,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["brings",{"_index":6181,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["broken",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":5674,"title":{},"body":{"modules.html":{},"additional-documentation/nestjs-application.html":{}}}],["browser",{"_index":5672,"title":{},"body":{"modules.html":{}}}],["bs",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["bson",{"_index":362,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["bson.ejson.deserialize(bsondocuments",{"_index":366,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson.ejson.serialize(documents",{"_index":364,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bson/ejson",{"_index":358,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["bsonconverter",{"_index":343,"title":{"injectables/BsonConverter.html":{}},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["bsondocuments",{"_index":356,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["btw",{"_index":241,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["bubble",{"_index":6212,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bucket",{"_index":274,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"interfaces/IFileProperties.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["bufferencoding",{"_index":1758,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["buffers",{"_index":6094,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bug",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1862,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["building",{"_index":3895,"title":{},"body":{"changelog.html":{}}}],["buildpipelines",{"_index":3823,"title":{},"body":{"changelog.html":{}}}],["builds",{"_index":5944,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["bulk",{"_index":3829,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bump",{"_index":3909,"title":{},"body":{"changelog.html":{}}}],["bundesland=x",{"_index":6121,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["bundle",{"_index":5683,"title":{},"body":{"todo.html":{}}}],["business",{"_index":369,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["business.error",{"_index":47,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror",{"_index":9,"title":{"classes/BusinessError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["businesserror:10",{"_index":33,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:12",{"_index":39,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:14",{"_index":38,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:16",{"_index":37,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:19",{"_index":35,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:34",{"_index":40,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businesserror:38",{"_index":42,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["businessexception",{"_index":6442,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["button",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["byclosed",{"_index":3160,"title":{},"body":{"classes/TaskScope.html":{}}}],["byclosed(userid",{"_index":3166,"title":{},"body":{"classes/TaskScope.html":{}}}],["bycourseids",{"_index":2302,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bycourseids(courseids",{"_index":2304,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["bydraft",{"_index":3161,"title":{},"body":{"classes/TaskScope.html":{}}}],["bydraft(isdraft",{"_index":3169,"title":{},"body":{"classes/TaskScope.html":{}}}],["byhidden",{"_index":2303,"title":{},"body":{"classes/LessonScope.html":{}}}],["byhidden(ishidden",{"_index":2306,"title":{},"body":{"classes/LessonScope.html":{}}}],["bylessonids",{"_index":3162,"title":{},"body":{"classes/TaskScope.html":{}}}],["bylessonids(lessonids",{"_index":3171,"title":{},"body":{"classes/TaskScope.html":{}}}],["bypassdocumentvalidation",{"_index":1236,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["bytargets",{"_index":2695,"title":{},"body":{"classes/NewsScope.html":{}}}],["bytargets(targets",{"_index":2697,"title":{},"body":{"classes/NewsScope.html":{}}}],["byteacherid",{"_index":3163,"title":{},"body":{"classes/TaskScope.html":{}}}],["byteacherid(teacherid",{"_index":3173,"title":{},"body":{"classes/TaskScope.html":{}}}],["byunpublished",{"_index":2696,"title":{},"body":{"classes/NewsScope.html":{}}}],["byunpublished(unpublished",{"_index":2699,"title":{},"body":{"classes/NewsScope.html":{}}}],["byuseridquery",{"_index":2987,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["byuseridquery(userid",{"_index":2990,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["c",{"_index":1152,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"license.html":{}}}],["cache",{"_index":2859,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["caches",{"_index":6092,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["caching",{"_index":4441,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["calculated",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["calendar",{"_index":6240,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["call",{"_index":1497,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["callback",{"_index":2439,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["called",{"_index":3619,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["caller",{"_index":6169,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["callhandler",{"_index":1501,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["calling",{"_index":1891,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["calls",{"_index":4152,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["camelcase",{"_index":6301,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["can't",{"_index":6080,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["canactivate(context",{"_index":6593,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cant",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["capabilities",{"_index":5948,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["capitalization",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["capture",{"_index":6153,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["care",{"_index":4176,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["careful",{"_index":6206,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["carefully",{"_index":6419,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cares",{"_index":6447,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["carry",{"_index":5305,"title":{},"body":{"license.html":{}}}],["case",{"_index":1579,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cases",{"_index":5119,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch",{"_index":1481,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["catch(error",{"_index":1847,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["catched",{"_index":6214,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["catcherror",{"_index":3300,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catcherror((err",{"_index":3303,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["catches",{"_index":6216,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["categories",{"_index":6033,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["category",{"_index":6055,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cause",{"_index":3980,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["caused",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["causing",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["caution",{"_index":2321,"title":{},"body":{"injectables/Logger.html":{}}}],["cc",{"_index":108,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["cease",{"_index":5469,"title":{},"body":{"license.html":{}}}],["ceating",{"_index":1979,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["central",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["certain",{"_index":5430,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":5479,"title":{},"body":{"license.html":{}}}],["chain",{"_index":4316,"title":{},"body":{"changelog.html":{}}}],["chains",{"_index":3749,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["chalk",{"_index":4835,"title":{},"body":{"dependencies.html":{}}}],["chance",{"_index":6191,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["change",{"_index":3400,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["changed",{"_index":1778,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["changelog",{"_index":3391,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":3393,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["changing",{"_index":3550,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["channel",{"_index":3801,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["channels",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["characteristics",{"_index":6244,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["characterized",{"_index":5409,"title":{},"body":{"license.html":{}}}],["characters",{"_index":1731,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["charge",{"_index":5089,"title":{},"body":{"license.html":{}}}],["chat",{"_index":3946,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chatadapter",{"_index":6102,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["check",{"_index":233,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Task.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkbox",{"_index":3704,"title":{},"body":{"changelog.html":{}}}],["checked",{"_index":6161,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["checkentitypermissions",{"_index":156,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkentitypermissions(userid",{"_index":161,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["checking",{"_index":1930,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checklist",{"_index":5037,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":5041,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["checks",{"_index":4506,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["checkshorttitle",{"_index":841,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["checkusernotexistbyemail(email",{"_index":6410,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["chemistry",{"_index":1088,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["child",{"_index":5006,"title":{},"body":{"index.html":{}}}],["children",{"_index":4184,"title":{},"body":{"changelog.html":{}}}],["choose",{"_index":4565,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["choosing",{"_index":5614,"title":{},"body":{"license.html":{}}}],["choreography",{"_index":6166,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["chunk",{"_index":4910,"title":{},"body":{"dependencies.html":{}}}],["chunks",{"_index":3990,"title":{},"body":{"changelog.html":{}}}],["ci",{"_index":3847,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":5256,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":5264,"title":{},"body":{"license.html":{}}}],["civil",{"_index":5649,"title":{},"body":{"license.html":{}}}],["claim",{"_index":5519,"title":{},"body":{"license.html":{}}}],["claims",{"_index":5531,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["classname",{"_index":1628,"title":{},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{}}}],["classserializerinterceptor",{"_index":2180,"title":{},"body":{"modules/InterceptorModule.html":{}}}],["clean",{"_index":3485,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanup",{"_index":494,"title":{},"body":{"classes/Course.html":{},"classes/DeleteFilesConsole.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cleanupthreshold",{"_index":1807,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["clear",{"_index":1365,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"license.html":{}}}],["clearcollection",{"_index":1202,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearcollection(collectionname",{"_index":1212,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["clearly",{"_index":6424,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cli",{"_index":5980,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["clicking",{"_index":4067,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":372,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["clients",{"_index":6115,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["clienturl",{"_index":2389,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["clipboard",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["clone",{"_index":5042,"title":{},"body":{"index.html":{}}}],["close",{"_index":2436,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closed",{"_index":2116,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["closely",{"_index":5646,"title":{},"body":{"license.html":{}}}],["closing",{"_index":4167,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["cloud",{"_index":4984,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cloud.github.io/schulcloud",{"_index":3755,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["cloud.org",{"_index":4776,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cloud/commons",{"_index":1537,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["cloud/mongoose",{"_index":4886,"title":{},"body":{"dependencies.html":{}}}],["cloud/node",{"_index":4872,"title":{},"body":{"dependencies.html":{}}}],["cloud/schulcloud",{"_index":5701,"title":{},"body":{"todo.html":{}}}],["clouds",{"_index":4532,"title":{},"body":{"changelog.html":{}}}],["cluster",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["cluster_authmodule",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule",{"_index":139,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_exports",{"_index":140,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_imports",{"_index":142,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_authorizationmodule_providers",{"_index":141,"title":{},"body":{"modules/AuthorizationModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule",{"_index":399,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_exports",{"_index":400,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_consolewritermodule_providers",{"_index":401,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":425,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":426,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule",{"_index":1194,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_exports",{"_index":1196,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_databasemanagementmodule_imports",{"_index":1195,"title":{},"body":{"modules/DatabaseManagementModule.html":{},"overview.html":{}}}],["cluster_feathersmodule",{"_index":1629,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_exports",{"_index":1630,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_feathersmodule_providers",{"_index":1631,"title":{},"body":{"modules/FeathersModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":1790,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":1791,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_providers",{"_index":1792,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule",{"_index":1784,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_exports",{"_index":1785,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_filesystemmodule_providers",{"_index":1786,"title":{},"body":{"modules/FileSystemModule.html":{},"overview.html":{}}}],["cluster_learnroommodule",{"_index":2279,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_learnroommodule_providers",{"_index":2280,"title":{},"body":{"modules/LearnroomModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":2329,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":2331,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":2330,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_managementmodule",{"_index":2371,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_managementmodule_imports",{"_index":2373,"title":{},"body":{"modules/ManagementModule.html":{}}}],["cluster_managementmodule_providers",{"_index":2372,"title":{},"body":{"modules/ManagementModule.html":{},"overview.html":{}}}],["cluster_newsmodule",{"_index":2620,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_exports",{"_index":2622,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_newsmodule_imports",{"_index":2621,"title":{},"body":{"modules/NewsModule.html":{}}}],["cluster_newsmodule_providers",{"_index":2623,"title":{},"body":{"modules/NewsModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule",{"_index":2932,"title":{},"body":{"modules/ServerConsoleModule.html":{},"overview.html":{}}}],["cluster_serverconsolemodule_imports",{"_index":2933,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["cluster_servermodule",{"_index":2944,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_servermodule_imports",{"_index":2945,"title":{},"body":{"modules/ServerModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":3103,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_providers",{"_index":3104,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":3346,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":3347,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":3348,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluttered",{"_index":6208,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["co",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["codacy",{"_index":4475,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["code",{"_index":13,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["codes",{"_index":4488,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coersion",{"_index":1940,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["cohesion",{"_index":6022,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["collation",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["collect",{"_index":5592,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collectcoveragefrom",{"_index":5837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collection",{"_index":275,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["collection(elementmodel",{"_index":1051,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["collection(modelentity",{"_index":1061,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["collection(this",{"_index":471,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["collection.deletemany",{"_index":1239,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.find({}).toarray",{"_index":1237,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.insertmany(jsondocuments",{"_index":1234,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collection.name",{"_index":1245,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionexists",{"_index":1203,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionexists(collectionname",{"_index":1214,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname",{"_index":1177,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter",{"_index":1287,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter.length",{"_index":1338,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnamefilter?.includes(collectionname",{"_index":1341,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionnames",{"_index":1243,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collectionname}.json",{"_index":1323,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collections",{"_index":1139,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/Options.html":{},"classes/Task.html":{},"changelog.html":{}}}],["collections.includes(collectionname",{"_index":1247,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collection",{"_index":1244,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["collections.map((collectionname",{"_index":1321,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoexport",{"_index":1377,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoexport.map(async",{"_index":1379,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed",{"_index":1350,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionstoseed.map(async",{"_index":1353,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["collectionswithfilepaths",{"_index":1320,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["color",{"_index":453,"title":{},"body":{"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["colors",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["columnnames",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["columns",{"_index":752,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["colums",{"_index":849,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["combine",{"_index":3369,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["combined",{"_index":5322,"title":{},"body":{"license.html":{}}}],["come",{"_index":4968,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["comes",{"_index":5312,"title":{},"body":{"license.html":{}}}],["command",{"_index":1145,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["command({command",{"_index":1137,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"classes/ServerConsole.html":{}}}],["commander",{"_index":4841,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["commandresponse",{"_index":3279,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["commands",{"_index":5187,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["comment",{"_index":2076,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["commentschema",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":5395,"title":{},"body":{"license.html":{}}}],["commit",{"_index":4281,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["commitment",{"_index":5544,"title":{},"body":{"license.html":{}}}],["committing",{"_index":5040,"title":{},"body":{"index.html":{}}}],["common",{"_index":4859,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["commons",{"_index":4254,"title":{},"body":{"changelog.html":{}}}],["communicate",{"_index":6062,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["communication",{"_index":5227,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["community",{"_index":5073,"title":{},"body":{"license.html":{}}}],["comparator",{"_index":6304,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["compare",{"_index":1860,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["compared",{"_index":6199,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comparison",{"_index":6635,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["compilation",{"_index":5318,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":5326,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":5576,"title":{},"body":{"license.html":{}}}],["compile",{"_index":1429,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compiler",{"_index":5213,"title":{},"body":{"license.html":{}}}],["compiling",{"_index":4319,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":5036,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["completed",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["completely",{"_index":6140,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["complex",{"_index":2323,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compliance",{"_index":5501,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":6043,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["comply",{"_index":5248,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":5976,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["component",{"_index":3962,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["component(s",{"_index":6098,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["components",{"_index":5018,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["compose",{"_index":3689,"title":{},"body":{"changelog.html":{}}}],["compression",{"_index":4843,"title":{},"body":{"dependencies.html":{}}}],["computedtasks",{"_index":3222,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computer",{"_index":5161,"title":{},"body":{"license.html":{}}}],["computetaskstatusforstudent",{"_index":3184,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforstudent(task",{"_index":3190,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforteacher",{"_index":3185,"title":{},"body":{"injectables/TaskUC.html":{}}}],["computetaskstatusforteacher(task",{"_index":3192,"title":{},"body":{"injectables/TaskUC.html":{}}}],["concept",{"_index":3406,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concepts",{"_index":6262,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["concerns",{"_index":5607,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["concrete",{"_index":6323,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["concurrency",{"_index":3746,"title":{},"body":{"changelog.html":{}}}],["concurrently",{"_index":4845,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":6474,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conditioned",{"_index":5570,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":5130,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["conditons",{"_index":6104,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["config",{"_index":2950,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["config.initialoptions",{"_index":5823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configs",{"_index":4243,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":1534,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["configuration.get('mail_send_exchange",{"_index":2959,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('mail_send_routing_key",{"_index":2960,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('rabbitmq_uri",{"_index":2958,"title":{},"body":{"modules/ServerModule.html":{}}}],["configuration.get('request_timeout",{"_index":5895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurations",{"_index":5986,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configure",{"_index":5910,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["configured",{"_index":3724,"title":{},"body":{"changelog.html":{}}}],["configures",{"_index":433,"title":{},"body":{"modules/CoreModule.html":{}}}],["confirm",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["confirmed",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["conflicts",{"_index":6261,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["connect",{"_index":912,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connected",{"_index":5019,"title":{},"body":{"index.html":{}}}],["connection",{"_index":2437,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{}}}],["connectionoptions",{"_index":5740,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["connections",{"_index":3839,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["connector",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["connector/framework",{"_index":6187,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consent",{"_index":3861,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consents",{"_index":3976,"title":{},"body":{"changelog.html":{}}}],["consentstatus",{"_index":4519,"title":{},"body":{"changelog.html":{}}}],["consentversion",{"_index":3741,"title":{},"body":{"changelog.html":{}}}],["consentversions",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["consentversionservice",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["consequence",{"_index":5490,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":5631,"title":{},"body":{"license.html":{}}}],["consider",{"_index":3681,"title":{},"body":{"changelog.html":{}}}],["considered",{"_index":5457,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consist",{"_index":6416,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["consistency",{"_index":4080,"title":{},"body":{"changelog.html":{}}}],["consistent",{"_index":4139,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consists",{"_index":6341,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["console",{"_index":406,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["console/database",{"_index":2384,"title":{},"body":{"modules/ManagementModule.html":{}}}],["consolelogger",{"_index":2311,"title":{},"body":{"injectables/Logger.html":{}}}],["consolemodule",{"_index":2935,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["consolewriter",{"_index":1134,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{}}}],["consolewritermodule",{"_index":398,"title":{"modules/ConsoleWriterModule.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["consolewriterservice",{"_index":402,"title":{"injectables/ConsoleWriterService.html":{}},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"overview.html":{}}}],["conspicuously",{"_index":5293,"title":{},"body":{"license.html":{}}}],["const",{"_index":76,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/Scope.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["constants",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/TimeoutInterceptor.html":{}}}],["constitutes",{"_index":5240,"title":{},"body":{"license.html":{}}}],["constraint",{"_index":80,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constraints",{"_index":6096,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["constructor",{"_index":21,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/EncryptedStringType.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/User.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["constructor(@inject('dashboard_repo",{"_index":1119,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(@inject('symmetric_cipher_key",{"_index":3009,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["constructor(@inject(request",{"_index":1660,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["constructor(amqpconnection",{"_index":2359,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(apivalidationerror",{"_index":69,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["constructor(consolewriter",{"_index":1131,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/ServerConsole.html":{}}}],["constructor(courserepo",{"_index":3036,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["constructor(customkey",{"_index":1525,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["constructor(dashboardrepo",{"_index":1110,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["constructor(data",{"_index":2546,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["constructor(deletefilesuc",{"_index":1435,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["constructor(em",{"_index":309,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{}}}],["constructor(feathersauthprovider",{"_index":159,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["constructor(feathersserviceprovider",{"_index":1590,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["constructor(field",{"_index":3383,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(filesrepo",{"_index":1458,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["constructor(filestorageadapter",{"_index":1802,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["constructor(filesystemadapter",{"_index":1261,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["constructor(id",{"_index":763,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["constructor(key",{"_index":3001,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["constructor(message",{"_index":3378,"title":{},"body":{"classes/ValidationError.html":{}}}],["constructor(newsrepo",{"_index":2719,"title":{},"body":{"injectables/NewsUc.html":{}}}],["constructor(operator",{"_index":2905,"title":{},"body":{"classes/Scope.html":{}}}],["constructor(private",{"_index":188,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FilesRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/ServerConsole.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["constructor(props",{"_index":286,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["constructor(protected",{"_index":332,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["constructor(readonly",{"_index":49,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["constructor(request",{"_index":1675,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["constructor(rolerepo",{"_index":2877,"title":{},"body":{"injectables/RoleUC.html":{}}}],["constructor(task",{"_index":2161,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["constructor(taskrepo",{"_index":3188,"title":{},"body":{"injectables/TaskUC.html":{}}}],["constructor(total",{"_index":2806,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["constructor(type",{"_index":1572,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(undefined",{"_index":376,"title":{},"body":{"classes/BusinessError.html":{}}}],["constructor(userfacade",{"_index":2222,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(userrepo",{"_index":3358,"title":{},"body":{"injectables/UserUC.html":{}}}],["constructor(useruc",{"_index":3336,"title":{},"body":{"injectables/UserFacade.html":{}}}],["constructor(validationerrors",{"_index":22,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["construed",{"_index":5580,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":5378,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumers",{"_index":6138,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["consumption",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["contact",{"_index":3872,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contain",{"_index":5577,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["contained",{"_index":4964,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["container",{"_index":4280,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":5033,"title":{},"body":{"index.html":{},"license.html":{}}}],["contains",{"_index":2669,"title":{},"body":{"injectables/NewsRepo.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["content",{"_index":552,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["contentdisposition",{"_index":92,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contentid",{"_index":97,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["contents",{"_index":5541,"title":{},"body":{"license.html":{}}}],["context",{"_index":1503,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["context.switchtohttp().getrequest",{"_index":6595,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["continue",{"_index":4135,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["continued",{"_index":5403,"title":{},"body":{"license.html":{}}}],["contract",{"_index":6015,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["contractual",{"_index":5454,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":5586,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":5080,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["contributor",{"_index":5528,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":5530,"title":{},"body":{"license.html":{}}}],["control",{"_index":4675,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["controlled",{"_index":5533,"title":{},"body":{"license.html":{}}}],["controller",{"_index":697,"title":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"controllers/NewsController.html":{},"controllers/ServerController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["controller('dashboard",{"_index":735,"title":{},"body":{"controllers/DashboardController.html":{}}}],["controller('management/database",{"_index":1186,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["controller('news",{"_index":2506,"title":{},"body":{"controllers/NewsController.html":{}}}],["controller('tasks",{"_index":3063,"title":{},"body":{"controllers/TaskController.html":{}}}],["controller('team",{"_index":3265,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["controller('user",{"_index":3331,"title":{},"body":{"controllers/UserController.html":{}}}],["controller.ts",{"_index":6274,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["controller/dashboard.controller",{"_index":2282,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["controller/database",{"_index":2382,"title":{},"body":{"modules/ManagementModule.html":{}}}],["controller/dto",{"_index":952,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TaskMapper.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{}}}],["controller/dto/resolveduser.dto",{"_index":3363,"title":{},"body":{"injectables/UserUC.html":{}}}],["controller/dto/target",{"_index":3016,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["controller/news.controller",{"_index":2630,"title":{},"body":{"modules/NewsModule.html":{}}}],["controller/task.controller",{"_index":3107,"title":{},"body":{"modules/TaskModule.html":{}}}],["controller/team",{"_index":2631,"title":{},"body":{"modules/NewsModule.html":{}}}],["controllers",{"_index":699,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/DelayController.html":{},"modules/LearnroomModule.html":{},"modules/ManagementModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convenient",{"_index":5180,"title":{},"body":{"license.html":{}}}],["convention",{"_index":6467,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["conventions",{"_index":6059,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["convert",{"_index":1390,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["converted",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["converter/bson.converter",{"_index":1307,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["converttodatabasevalue",{"_index":1523,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttodatabasevalue(value",{"_index":1529,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttojsvalue",{"_index":1524,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["converttojsvalue(value",{"_index":1532,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["convey",{"_index":5167,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":5565,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":5410,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":5175,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":5453,"title":{},"body":{"license.html":{}}}],["cooperation",{"_index":5072,"title":{},"body":{"license.html":{}}}],["copies",{"_index":5066,"title":{},"body":{"license.html":{}}}],["copy",{"_index":4183,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["copying",{"_index":5131,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":5068,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":5056,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":5138,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":5254,"title":{},"body":{"license.html":{}}}],["core",{"_index":432,"title":{},"body":{"modules/CoreModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core.autocrlf",{"_index":6659,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["core/core.module",{"_index":2951,"title":{},"body":{"modules/ServerModule.html":{}}}],["core/error",{"_index":6448,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.module",{"_index":1798,"title":{},"body":{"modules/FilesModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["core/logger/logger.service",{"_index":1446,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["coremodule",{"_index":424,"title":{"modules/CoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["correct",{"_index":3558,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["correction",{"_index":5626,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":4596,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["corresponding",{"_index":5216,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cors",{"_index":3570,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["cost",{"_index":5348,"title":{},"body":{"license.html":{}}}],["count",{"_index":546,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{}}}],["counted",{"_index":545,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{}}}],["countednewslist",{"_index":2659,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["countedtasklist",{"_index":3139,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["counterclaim",{"_index":5520,"title":{},"body":{"license.html":{}}}],["counterpart",{"_index":5770,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["counties",{"_index":4120,"title":{},"body":{"changelog.html":{}}}],["counties/kreise",{"_index":4191,"title":{},"body":{"changelog.html":{}}}],["countries",{"_index":5165,"title":{},"body":{"license.html":{}}}],["country",{"_index":5557,"title":{},"body":{"license.html":{}}}],["counts",{"_index":5765,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["couple",{"_index":6182,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coupling",{"_index":6024,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["course",{"_index":451,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["course.entity",{"_index":533,"title":{},"body":{"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["coursefactory",{"_index":5777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coursegroup",{"_index":524,"title":{"classes/CourseGroup.html":{}},"body":{"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["coursegroup.entity",{"_index":2084,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["coursegroupid",{"_index":2093,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["coursegrouprepo",{"_index":538,"title":{"injectables/CourseGroupRepo.html":{}},"body":{"injectables/CourseGroupRepo.html":{}}}],["coursegroups",{"_index":534,"title":{},"body":{"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["coursegroupsofuser",{"_index":2998,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["courseid",{"_index":530,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["courseids",{"_index":544,"title":{},"body":{"injectables/CourseGroupRepo.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["coursename",{"_index":3076,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["coursenews",{"_index":548,"title":{"classes/CourseNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coursenews(props",{"_index":618,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["courserepo",{"_index":625,"title":{"injectables/CourseRepo.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["courses",{"_index":502,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsScope.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["coursescope",{"_index":639,"title":{"classes/CourseScope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["court",{"_index":5585,"title":{},"body":{"license.html":{}}}],["courts",{"_index":5645,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":5547,"title":{},"body":{"license.html":{}}}],["cover",{"_index":6376,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["coverage",{"_index":4119,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["coveragedirectory",{"_index":5839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragepathignorepatterns",{"_index":5840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coveragethreshold",{"_index":5842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["covered",{"_index":5150,"title":{},"body":{"license.html":{}}}],["covers",{"_index":6586,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["cpu",{"_index":3877,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":1355,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["create(@currentuser",{"_index":2507,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["create(currentuser",{"_index":2479,"title":{},"body":{"controllers/NewsController.html":{}}}],["create(userid",{"_index":2721,"title":{},"body":{"injectables/NewsUc.html":{}}}],["createcollection",{"_index":1204,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["createcollection(collectionname",{"_index":1216,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["createcurrenttestuser",{"_index":5779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":1756,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/Logger.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["createdat",{"_index":242,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{}}}],["createdat.$date",{"_index":1388,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["createdir",{"_index":1712,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createdir(folderpath",{"_index":1721,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createerrorresponse",{"_index":1843,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponse(error",{"_index":1851,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforbusinesserror",{"_index":4951,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createerrorresponseforbusinesserror(error",{"_index":1876,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforfeatherserror",{"_index":4953,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createerrorresponseforfeatherserror(error",{"_index":1883,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception",{"_index":1866,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(error",{"_index":1897,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforhttpexception(unknownerror",{"_index":1882,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["createerrorresponseforunknownerror",{"_index":1901,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createerrorresponseforunknownerror(error",{"_index":1879,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createinstance",{"_index":558,"title":{},"body":{"classes/CourseNews.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createinstance(targetmodel",{"_index":586,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["createmikroormmodule",{"_index":2411,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["createnestapplication",{"_index":6591,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["createnewsparam",{"_index":6331,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createnewsparams",{"_index":660,"title":{"classes/CreateNewsParams.html":{}},"body":{"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["createparamdecorator((data",{"_index":5817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrabbitmqmodule",{"_index":2348,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["createrabbitmqmodule(options",{"_index":2354,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["createredisidentifierfromjwtdata",{"_index":2272,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["createredisidentifierfromjwtdata(accountid",{"_index":2276,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["creates",{"_index":1723,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["createspinner",{"_index":415,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["createstorageproviderclient",{"_index":4954,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createstorageproviderclient(storageprovider",{"_index":1692,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["createtestmodule",{"_index":1424,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["createtmpdir",{"_index":1713,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["createtmpdir(dirnameprefix",{"_index":1724,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["creating",{"_index":664,"title":{},"body":{"classes/CreateNewsParams.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creating/populating",{"_index":3988,"title":{},"body":{"changelog.html":{}}}],["creation",{"_index":1936,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"changelog.html":{}}}],["creator",{"_index":256,"title":{},"body":{"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["creatorid",{"_index":563,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["credentials",{"_index":1699,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["criteria",{"_index":6189,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["criterion",{"_index":5192,"title":{},"body":{"license.html":{}}}],["critical",{"_index":6150,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["cronjob",{"_index":4382,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":434,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"modules/CoreModule.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["crosscutting",{"_index":6223,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["crossing",{"_index":6324,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["crud",{"_index":6388,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["crypto",{"_index":3008,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{},"dependencies.html":{}}}],["cryptojs",{"_index":3007,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["cryptojs.aes.decrypt(data",{"_index":3012,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["cryptojs.aes.encrypt(data",{"_index":3010,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["csv",{"_index":3700,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["csvsyncer",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":1918,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":1920,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":5818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cumbersome",{"_index":225,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["cure",{"_index":5482,"title":{},"body":{"license.html":{}}}],["curentuser",{"_index":3207,"title":{},"body":{"injectables/TaskUC.html":{}}}],["current",{"_index":1276,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["currentdatetime",{"_index":1315,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["currently",{"_index":2419,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["currentschoolyear",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["currentuser",{"_index":741,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.schoolid",{"_index":2509,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["currentuser.user.permissions.includes(permission",{"_index":3227,"title":{},"body":{"injectables/TaskUC.html":{}}}],["currentuser.userid",{"_index":737,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["custom",{"_index":1581,"title":{},"body":{"classes/ErrorResponse.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["custom_error_type",{"_index":6444,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["customarily",{"_index":5340,"title":{},"body":{"license.html":{}}}],["customary",{"_index":5599,"title":{},"body":{"license.html":{}}}],["customer",{"_index":5345,"title":{},"body":{"license.html":{}}}],["customizing",{"_index":437,"title":{},"body":{"modules/CoreModule.html":{}}}],["customkey",{"_index":1527,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["customproviderclass.name",{"_index":2327,"title":{},"body":{"injectables/Logger.html":{}}}],["cutting",{"_index":6003,"title":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["cycle",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["cycles",{"_index":6040,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["d",{"_index":488,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["damages",{"_index":5629,"title":{},"body":{"license.html":{}}}],["dash",{"_index":4310,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dashboard",{"_index":702,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["dashboard.getelement(position",{"_index":1124,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard.getgrid().map((elementwithposition",{"_index":956,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.id",{"_index":954,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dashboard.model.entity",{"_index":1000,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.model.mapper",{"_index":1072,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboard.moveelement(from",{"_index":1122,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["dashboard_repo",{"_index":2283,"title":{},"body":{"modules/LearnroomModule.html":{}}}],["dashboardcontroller",{"_index":698,"title":{"controllers/DashboardController.html":{}},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["dashboarddefaultreference",{"_index":903,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["dashboardelement",{"_index":915,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["dashboardentity",{"_index":750,"title":{"classes/DashboardEntity.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["dashboardentity(hardcodedtestdashboardid",{"_index":1092,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboardentity(modelentity.id",{"_index":1022,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardgridelementmodel",{"_index":887,"title":{"classes/DashboardGridElementModel.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"miscellaneous/variables.html":{}}}],["dashboardgridelementmodel(gridelement.getid",{"_index":1038,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardgridelementresponse",{"_index":926,"title":{"classes/DashboardGridElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboardgridsubelementresponse",{"_index":933,"title":{"classes/DashboardGridSubElementResponse.html":{}},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["dashboardid",{"_index":714,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{}}}],["dashboardmapper",{"_index":731,"title":{"classes/DashboardMapper.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{}}}],["dashboardmapper.maptoresponse(dashboard",{"_index":738,"title":{},"body":{"controllers/DashboardController.html":{}}}],["dashboardmodel",{"_index":1100,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelentity",{"_index":922,"title":{"classes/DashboardModelEntity.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["dashboardmodelentity(entity.getid",{"_index":1056,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper",{"_index":975,"title":{"classes/DashboardModelMapper.html":{}},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelmapper.instantiategridelementmodel(gridelement",{"_index":1040,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper.mapelementtoentity(e",{"_index":1018,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper.mapgridelementtomodel(elementwithposition",{"_index":1059,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper.mapreferencetoentity(ref",{"_index":1007,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper.mapreferencetomodel(ref",{"_index":1049,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["dashboardmodelmapper.maptoentity(dashboardmodel",{"_index":1102,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelmapper.maptoentity(modelentity",{"_index":1098,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardmodelmapper.maptomodel(entity",{"_index":1095,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["dashboardprops",{"_index":764,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["dashboardrepo",{"_index":1062,"title":{"injectables/DashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{},"modules/LearnroomModule.html":{}}}],["dashboardresponse",{"_index":707,"title":{"classes/DashboardResponse.html":{}},"body":{"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardResponse.html":{}}}],["dashboards",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["dashboarduc",{"_index":729,"title":{"injectables/DashboardUc.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{},"overview.html":{}}}],["data",{"_index":960,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"interfaces/Options.html":{},"classes/PaginationResponse.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["data.displaycolor",{"_index":967,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.group",{"_index":968,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.shorttitle",{"_index":965,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data.title",{"_index":963,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["data/rules",{"_index":6119,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dataaccess",{"_index":6112,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["database",{"_index":1138,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/GlobalConstants.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"interfaces/Options.html":{},"classes/Task.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["database.js",{"_index":2962,"title":{},"body":{"modules/ServerModule.html":{}}}],["database.module.ts",{"_index":2401,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database.module.ts:51",{"_index":2403,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database.module.ts:64",{"_index":2405,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["database/mongo",{"_index":2400,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["database/types.ts",{"_index":5759,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasemanagementconsole",{"_index":1126,"title":{"classes/DatabaseManagementConsole.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["databasemanagementcontroller",{"_index":1167,"title":{"controllers/DatabaseManagementController.html":{}},"body":{"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{}}}],["databasemanagementmodule",{"_index":1193,"title":{"modules/DatabaseManagementModule.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["databasemanagementservice",{"_index":1197,"title":{"injectables/DatabaseManagementService.html":{}},"body":{"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"overview.html":{}}}],["databasemanagementuc",{"_index":1132,"title":{"injectables/DatabaseManagementUc.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{},"overview.html":{}}}],["databases",{"_index":6636,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["datalayer",{"_index":6074,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datamodel",{"_index":6086,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["datase",{"_index":5913,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["date",{"_index":243,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{}}}],["date.now",{"_index":1512,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["date.now()@email.de",{"_index":5885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dated",{"_index":6205,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["days",{"_index":1442,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"changelog.html":{},"license.html":{}}}],["db",{"_index":1210,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db/protocol",{"_index":6186,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["db_password",{"_index":1833,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["db_url",{"_index":1834,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["db_username",{"_index":1835,"title":{},"body":{"interfaces/GlobalConstants.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["dbname",{"_index":5762,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["dbs",{"_index":6174,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dd",{"_index":4681,"title":{},"body":{"changelog.html":{}}}],["dd.mm.yyyy",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["dd/mm/yyyy",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["ddd",{"_index":6350,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["deadlock",{"_index":3935,"title":{},"body":{"changelog.html":{}}}],["deata",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":2034,"title":{},"body":{"interfaces/ILogger.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["debug(message",{"_index":2038,"title":{},"body":{"interfaces/ILogger.html":{}}}],["debug?(message",{"_index":2049,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["debugger",{"_index":5020,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["debugging",{"_index":2964,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["december",{"_index":5276,"title":{},"body":{"license.html":{}}}],["decide",{"_index":2247,"title":{},"body":{"injectables/JwtStrategy.html":{},"license.html":{},"todo.html":{}}}],["deciding",{"_index":3682,"title":{},"body":{"changelog.html":{}}}],["decision",{"_index":3827,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decisions",{"_index":6417,"title":{"additional-documentation/nestjs-application/decisions.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["declare",{"_index":4461,"title":{},"body":{"changelog.html":{}}}],["declared",{"_index":390,"title":{},"body":{"classes/BusinessError.html":{}}}],["declining",{"_index":5445,"title":{},"body":{"license.html":{}}}],["decoded",{"_index":4965,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decodehtmlentities",{"_index":3074,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"miscellaneous/functions.html":{}}}],["decorated",{"_index":1946,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["decorator",{"_index":4963,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["decorators",{"_index":211,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"classes/Lesson.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["decouple",{"_index":5997,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decoupled",{"_index":6128,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decouples",{"_index":6139,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["decrypt",{"_index":1550,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["decrypt(data",{"_index":3003,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["decryptedstring",{"_index":1551,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["decryption",{"_index":3710,"title":{},"body":{"changelog.html":{}}}],["dedicated",{"_index":3662,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deemed",{"_index":5266,"title":{},"body":{"license.html":{}}}],["default",{"_index":247,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/ErrorModule.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"controllers/ServerController.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["default...what",{"_index":491,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.color",{"_index":463,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.description",{"_index":464,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.name",{"_index":466,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["default.schema.json",{"_index":5912,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["defaultcolumns",{"_index":797,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["defaultgridreference",{"_index":805,"title":{"classes/DefaultGridReference.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["defaultgridreference(modelentity.id",{"_index":1001,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["defaultgridreference(new",{"_index":1081,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["defaultgridreferencemodel",{"_index":904,"title":{"classes/DefaultGridReferenceModel.html":{}},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"miscellaneous/variables.html":{}}}],["defaultgridreferencemodel(metadata.id",{"_index":1027,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["defaultmessage",{"_index":55,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"classes/ValidationError.html":{},"miscellaneous/variables.html":{}}}],["defaultoptions",{"_index":2435,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["defaultrows",{"_index":799,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":673,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/FileSystemAdapter.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["defaulttimeout",{"_index":3287,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["defective",{"_index":5623,"title":{},"body":{"license.html":{}}}],["defending",{"_index":5105,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":5582,"title":{},"body":{"license.html":{}}}],["define",{"_index":229,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["defines",{"_index":5923,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["defining",{"_index":240,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["definition",{"_index":67,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["definitions",{"_index":2388,"title":{},"body":{"modules/ManagementModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["delay",{"_index":1417,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["delay(100",{"_index":1421,"title":{},"body":{"controllers/DelayController.html":{}}}],["delaycontroller",{"_index":1404,"title":{"controllers/DelayController.html":{}},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["delete",{"_index":1362,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["delete(':id",{"_index":2482,"title":{},"body":{"controllers/NewsController.html":{}}}],["delete(id",{"_index":2723,"title":{},"body":{"injectables/NewsUc.html":{}}}],["delete(newsid",{"_index":2481,"title":{},"body":{"controllers/NewsController.html":{}}}],["deleted",{"_index":1474,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["deletedat",{"_index":257,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["deletedcount",{"_index":1238,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["deletedid",{"_index":2524,"title":{},"body":{"controllers/NewsController.html":{}}}],["deletefile",{"_index":1683,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{}}}],["deletefile(file",{"_index":1684,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{}}}],["deletefilesconsole",{"_index":1430,"title":{"classes/DeleteFilesConsole.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"modules/FilesModule.html":{}}}],["deletefilesuc",{"_index":1436,"title":{"injectables/DeleteFilesUc.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"overview.html":{}}}],["deleteobjectcommand",{"_index":1687,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["deletes",{"_index":6204,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deleting",{"_index":4030,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deletion",{"_index":1441,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"changelog.html":{}}}],["deletioncommand",{"_index":1705,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["delivered",{"_index":6459,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["demands",{"_index":6164,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["denied",{"_index":5415,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":5545,"title":{},"body":{"license.html":{}}}],["depend",{"_index":6386,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependecy",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":114,"title":{"dependencies.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependency",{"_index":3506,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dependent",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["depending",{"_index":1746,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["depends",{"_index":1733,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["deploy",{"_index":3851,"title":{},"body":{"changelog.html":{}}}],["deployed",{"_index":3607,"title":{},"body":{"changelog.html":{}}}],["deployment",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["deployments",{"_index":3849,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":1655,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"index.html":{}}}],["deprecates",{"_index":4274,"title":{},"body":{"changelog.html":{}}}],["deprive",{"_index":5553,"title":{},"body":{"license.html":{}}}],["depseudonymization",{"_index":4096,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":2019,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{}}}],["describe",{"_index":6221,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"course",{"_index":6478,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe(\"when",{"_index":6479,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["describe('get",{"_index":6613,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["described",{"_index":6034,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["description",{"_index":64,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"modules/FeathersModule.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PatchGroupParams.html":{},"classes/SchoolInfoResponse.html":{},"classes/ServerConsole.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descriptions",{"_index":2136,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["descriptive",{"_index":6016,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["deserialize",{"_index":345,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["deserialize(bsondocuments",{"_index":347,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["deserializes",{"_index":349,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["design",{"_index":6009,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["designated",{"_index":5356,"title":{},"body":{"license.html":{}}}],["designed",{"_index":5071,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["designing",{"_index":6209,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["designwe",{"_index":6007,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["destroyed",{"_index":6243,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail",{"_index":5605,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["detail.response",{"_index":75,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["detail.response.ts",{"_index":3382,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detail.response.ts:1",{"_index":3384,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{}}}],["detailed",{"_index":3433,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["details",{"_index":14,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["detect",{"_index":1348,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"miscellaneous/variables.html":{}}}],["detection",{"_index":3593,"title":{},"body":{"changelog.html":{}}}],["detectleaks",{"_index":5849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detectopenhandles",{"_index":5848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["determine",{"_index":4199,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["determining",{"_index":5387,"title":{},"body":{"license.html":{}}}],["deubg",{"_index":6647,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["dev",{"_index":5936,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["develop",{"_index":4985,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["developer",{"_index":6468,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["developers",{"_index":3735,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["development",{"_index":4251,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["device",{"_index":3889,"title":{},"body":{"changelog.html":{}}}],["dfsdfsf",{"_index":5048,"title":{},"body":{"index.html":{}}}],["di",{"_index":6285,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dictionary",{"_index":2377,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["didnt",{"_index":908,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["die",{"_index":3765,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["diff",{"_index":4883,"title":{},"body":{"dependencies.html":{}}}],["diffenrent",{"_index":5729,"title":{},"body":{"todo.html":{}}}],["differ",{"_index":5604,"title":{},"body":{"license.html":{}}}],["different",{"_index":2670,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["differently",{"_index":5437,"title":{},"body":{"license.html":{}}}],["digits",{"_index":3869,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1272,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["direct",{"_index":2352,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["direction",{"_index":5252,"title":{},"body":{"license.html":{}}}],["directions",{"_index":5361,"title":{},"body":{"license.html":{}}}],["directly",{"_index":5154,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["directory",{"_index":281,"title":{"classes/Directory.html":{}},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/IFileProperties.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["dirnameprefix",{"_index":1728,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["dirpath",{"_index":1773,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["disable",{"_index":612,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":4250,"title":{},"body":{"changelog.html":{}}}],["disablestudentteamcreation",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["disclaim",{"_index":5286,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":5615,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":5435,"title":{},"body":{"license.html":{}}}],["disconnect",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["disconnected",{"_index":4552,"title":{},"body":{"changelog.html":{}}}],["discover",{"_index":6353,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovered",{"_index":6361,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["discovery",{"_index":223,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"todo.html":{}}}],["discriminatorcolumn",{"_index":277,"title":{},"body":{"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatorvalue",{"_index":280,"title":{},"body":{"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["discriminatory",{"_index":5568,"title":{},"body":{"license.html":{}}}],["display",{"_index":3449,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["displayat",{"_index":553,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{}}}],["displaycolor",{"_index":802,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["displayed",{"_index":672,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["displays",{"_index":5177,"title":{},"body":{"license.html":{}}}],["disposable",{"_index":4507,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["dist",{"_index":5928,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["distinguished",{"_index":6489,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["distinguishing",{"_index":5608,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":5064,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":5660,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":5571,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":5132,"title":{},"body":{"license.html":{}}}],["divide",{"_index":6058,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["divides",{"_index":6036,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dn",{"_index":4114,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":3688,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["docs",{"_index":5717,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["docu",{"_index":4306,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":665,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"injectables/NewsRepo.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["documentation",{"_index":4089,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["documentbuilder",{"_index":5860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documented",{"_index":3395,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["documents",{"_index":350,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"changelog.html":{}}}],["doe",{"_index":5903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doesn't",{"_index":2423,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["doesnt",{"_index":6622,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doing",{"_index":6088,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["domain",{"_index":3365,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"injectables/UserUC.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["domains",{"_index":4849,"title":{},"body":{"dependencies.html":{}}}],["don't",{"_index":238,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/TaskScope.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["done",{"_index":5039,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dont",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["dos",{"_index":4289,"title":{},"body":{"changelog.html":{}}}],["dosomethingcrazy",{"_index":6496,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z",{"_index":6501,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).catch(err",{"_index":6515,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazy(x,y,z).then(result",{"_index":6510,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["dosomethingcrazysync(wrong",{"_index":6518,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["doubtful",{"_index":5389,"title":{},"body":{"license.html":{}}}],["down",{"_index":6462,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["downstream",{"_index":5498,"title":{},"body":{"license.html":{}}}],["draft",{"_index":3122,"title":{},"body":{"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{}}}],["drafts",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["driven",{"_index":6349,"title":{"additional-documentation/nestjs-application/domain-driven-design.html":{}},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["driver",{"_index":5761,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["drop/create",{"_index":1359,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["dropcollection",{"_index":1205,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dropcollection(collectionname",{"_index":1218,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["dropdown",{"_index":3873,"title":{},"body":{"changelog.html":{}}}],["dry",{"_index":6378,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto",{"_index":663,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardMapper.html":{},"classes/GlobalValidationPipe.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/functions.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["dto's",{"_index":6266,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dto.availabledate",{"_index":3083,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.content",{"_index":2584,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.coursename",{"_index":3097,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.createdat",{"_index":2605,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.creator",{"_index":2600,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.description",{"_index":3101,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.displayat",{"_index":2586,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.displaycolor",{"_index":3099,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.duedate",{"_index":3085,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.firstname",{"_index":2840,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.gridelements",{"_index":955,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["dto.id",{"_index":953,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.lastname",{"_index":2842,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["dto.name",{"_index":2897,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.permissions",{"_index":2609,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{}}}],["dto.roles",{"_index":2848,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.school",{"_index":2598,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.schoolid",{"_index":2846,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["dto.source",{"_index":2588,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.sourcedescription",{"_index":2590,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.status",{"_index":3089,"title":{},"body":{"classes/TaskMapper.html":{}}}],["dto.target",{"_index":2596,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetid",{"_index":2592,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.targetmodel",{"_index":2594,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.title",{"_index":2582,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.unpublished",{"_index":2613,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto.updatedat",{"_index":2607,"title":{},"body":{"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/TaskMapper.html":{}}}],["dto.updater",{"_index":2603,"title":{},"body":{"classes/NewsMapper.html":{}}}],["dto/api",{"_index":1856,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/error.response",{"_index":1855,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["dto/resolveduser.dto",{"_index":3329,"title":{},"body":{"controllers/UserController.html":{}}}],["dtolist",{"_index":2515,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["dtos",{"_index":1929,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["dtos/entities",{"_index":5869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["due",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["duedate",{"_index":2117,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["dummy",{"_index":3546,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["duplicate",{"_index":4106,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["duplicated",{"_index":4048,"title":{},"body":{"changelog.html":{}}}],["duplicating",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["duplication",{"_index":237,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["duplications",{"_index":3974,"title":{},"body":{"changelog.html":{}}}],["durable",{"_index":5339,"title":{},"body":{"license.html":{}}}],["duration",{"_index":1495,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["durationlogginginterceptor",{"_index":1492,"title":{"injectables/DurationLoggingInterceptor.html":{}},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["during",{"_index":3575,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["dwelling",{"_index":5386,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":5223,"title":{},"body":{"license.html":{}}}],["dynamicmodule",{"_index":1559,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["e",{"_index":1017,"title":{},"body":{"classes/DashboardModelMapper.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["e.g",{"_index":226,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["e.property",{"_index":1909,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e.value",{"_index":1910,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":2634,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["each",{"_index":4179,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["earlier",{"_index":5149,"title":{},"body":{"license.html":{}}}],["easier",{"_index":6001,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["eathers",{"_index":1645,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["edit",{"_index":569,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{}}}],["editable",{"_index":3966,"title":{},"body":{"changelog.html":{}}}],["editor",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["edu",{"_index":3863,"title":{},"body":{"changelog.html":{}}}],["edusharing",{"_index":3712,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":5643,"title":{},"body":{"license.html":{}}}],["effected",{"_index":5283,"title":{},"body":{"license.html":{}}}],["effective",{"_index":5267,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":5658,"title":{},"body":{"license.html":{}}}],["effects",{"_index":6090,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["effortless",{"_index":6461,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["efforts",{"_index":5513,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":5661,"title":{},"body":{"license.html":{}}}],["element",{"_index":787,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/PatchGroupParams.html":{},"changelog.html":{}}}],["element.gridelement",{"_index":862,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["element.gridelement.getreferences().length",{"_index":1019,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["element.removereference(position.groupindex",{"_index":882,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["elementdto",{"_index":957,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.displaycolor",{"_index":966,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.groupelements",{"_index":969,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.id",{"_index":958,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.shorttitle",{"_index":964,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.title",{"_index":962,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.xposition",{"_index":971,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementdto.yposition",{"_index":972,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementmodel",{"_index":1039,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementmodel.dashboard",{"_index":1052,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementmodel.references",{"_index":1050,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementmodel.title",{"_index":1046,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementmodel.xpos",{"_index":1041,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementmodel.ypos",{"_index":1043,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elements",{"_index":943,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelMapper.html":{},"classes/DashboardResponse.html":{},"injectables/NewsRepo.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["elementtomove",{"_index":869,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["elementtomove.getreferences",{"_index":878,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["elementtomove.isgroup",{"_index":877,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["elementwithposition",{"_index":970,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{}}}],["elementwithposition.gridelement.getcontent",{"_index":961,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementwithposition.gridelement.getid",{"_index":959,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["elementwithposition.pos.x",{"_index":1042,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["elementwithposition.pos.y",{"_index":1044,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["eligible",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["em",{"_index":312,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["em.findone(dashboardgridelementmodel",{"_index":1036,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["em.findone(dashboardmodelentity",{"_index":1054,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["em.findone(defaultgridreferencemodel",{"_index":1025,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["em.flush",{"_index":6632,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["em.nativedelete(news",{"_index":6606,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["email",{"_index":2165,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["email/username",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["emails",{"_index":3859,"title":{},"body":{"changelog.html":{}}}],["embed",{"_index":6362,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["embedded",{"_index":6643,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["embodied",{"_index":5335,"title":{},"body":{"license.html":{}}}],["employer",{"_index":5667,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1545,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/FileSystemAdapter.html":{},"classes/NewsScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["emptyresultquery",{"_index":2701,"title":{},"body":{"classes/NewsScope.html":{},"classes/Scope.html":{},"miscellaneous/variables.html":{}}}],["emptyresultquerytype",{"_index":658,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["en",{"_index":6379,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enable",{"_index":1935,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"modules/NewsModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["enabled",{"_index":1931,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["enabled/disabled",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["enableimplicitconversion",{"_index":1942,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["enableopenapidocs",{"_index":5786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enables",{"_index":5169,"title":{},"body":{"license.html":{}}}],["enabling",{"_index":4440,"title":{},"body":{"changelog.html":{}}}],["encapsulate",{"_index":6065,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulated",{"_index":6099,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulates",{"_index":6038,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encapsulation",{"_index":6076,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["encoded",{"_index":1747,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encoding",{"_index":1711,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/functions.html":{}}}],["encodings",{"_index":4967,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encouraged",{"_index":5113,"title":{},"body":{"license.html":{}}}],["encrypt",{"_index":1520,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["encrypt(data",{"_index":3005,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["encryptedstring",{"_index":1548,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["encryptedstringtype",{"_index":1516,"title":{"classes/EncryptedStringType.html":{}},"body":{"classes/EncryptedStringType.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["encryption",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["encryption.service",{"_index":1560,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["encryptionmodule",{"_index":1553,"title":{"modules/EncryptionModule.html":{}},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules.html":{}}}],["encryptionmoduleoptions",{"_index":1557,"title":{"interfaces/EncryptionModuleOptions.html":{}},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["encryptionservice",{"_index":1522,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["end",{"_index":1384,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["end2end",{"_index":6652,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["endings",{"_index":6658,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["endpoint",{"_index":1693,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpoints",{"_index":4223,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["endpointurl",{"_index":2063,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["enforce",{"_index":3267,"title":{},"body":{"controllers/TeamNewsController.html":{},"license.html":{}}}],["enforced",{"_index":6351,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["enforcing",{"_index":5288,"title":{},"body":{"license.html":{}}}],["english",{"_index":1089,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["enough",{"_index":6117,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["enqueuing",{"_index":4740,"title":{},"body":{"changelog.html":{}}}],["enrichment",{"_index":6120,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ensure",{"_index":168,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/NewsScope.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ensures",{"_index":5000,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ensuretokeniswhitelisted",{"_index":2270,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["entered",{"_index":5578,"title":{},"body":{"license.html":{}}}],["entire",{"_index":5310,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":5594,"title":{},"body":{"license.html":{}}}],["entites",{"_index":6118,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entities",{"_index":181,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"modules/ServerModule.html":{},"injectables/StorageProviderRepo.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entities.foreach((entity",{"_index":342,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.map((n",{"_index":336,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["entities.transformer.ts",{"_index":4957,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities.ts",{"_index":5773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitiyids",{"_index":203,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entity",{"_index":172,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["entity.getid",{"_index":1055,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["entity.ts",{"_index":6265,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["entity/course.entity",{"_index":1980,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/role.entity",{"_index":1999,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{}}}],["entity/school.entity",{"_index":1981,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entity/task.entity",{"_index":2158,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["entity/team.entity",{"_index":1982,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["entityid",{"_index":162,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/ITaskProperties.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"classes/SchoolNews.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["entityids",{"_index":3050,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["entitymanager",{"_index":310,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/LessonRepo.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"injectables/UserRepo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["entityname",{"_index":2392,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["entitypermissions",{"_index":196,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entitypermissions.includes(p",{"_index":200,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["entityschema",{"_index":235,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["entries",{"_index":3557,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["entry",{"_index":2242,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/NewsController.html":{}}}],["enum",{"_index":580,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{}}}],["enumeration",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["enumerations",{"_index":4943,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumname",{"_index":684,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["env",{"_index":3585,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env/config",{"_index":5694,"title":{},"body":{"todo.html":{}}}],["environment",{"_index":4252,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["environments",{"_index":3886,"title":{},"body":{"changelog.html":{}}}],["eol",{"_index":1719,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["eq",{"_index":2309,"title":{},"body":{"classes/LessonScope.html":{},"classes/TaskScope.html":{}}}],["equal",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["equivalent",{"_index":5243,"title":{},"body":{"license.html":{}}}],["err",{"_index":1482,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/TimeoutInterceptor.html":{}}}],["err.code",{"_index":6516,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["error",{"_index":54,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/CoreModule.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["error(message",{"_index":2040,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["error.filter",{"_index":1569,"title":{},"body":{"modules/ErrorModule.html":{}}}],["error.filter.ts",{"_index":1841,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["error.filter.ts:119",{"_index":1846,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:122",{"_index":1850,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.filter.ts:130",{"_index":1852,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.getresponse",{"_index":1878,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["error.interface.ts",{"_index":1627,"title":{},"body":{"interfaces/FeathersError.html":{}}}],["error.response",{"_index":74,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{}}}],["error.response.ts",{"_index":63,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:23",{"_index":72,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.response.ts:8",{"_index":70,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["error.stack",{"_index":1913,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error.validationerrors.map",{"_index":1904,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["error/error.module",{"_index":447,"title":{},"body":{"modules/CoreModule.html":{}}}],["errorhandler",{"_index":6171,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["errormodule",{"_index":427,"title":{"modules/ErrorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"modules.html":{},"overview.html":{}}}],["errormsg",{"_index":1903,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errorresponse",{"_index":43,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["errorresponse(snaketype",{"_index":1888,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["errorresponse(this.type",{"_index":397,"title":{},"body":{"classes/BusinessError.html":{}}}],["errorresponse(type",{"_index":1875,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":68,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["errros",{"_index":4342,"title":{},"body":{"changelog.html":{}}}],["es6",{"_index":4851,"title":{},"body":{"dependencies.html":{}}}],["escaped",{"_index":4974,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eslint",{"_index":611,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["eslint/no",{"_index":616,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["eslint/restrict",{"_index":1905,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["eslintrc.js",{"_index":5968,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["esmoduleinterop",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["especially",{"_index":6048,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["essential",{"_index":5210,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["establish",{"_index":6028,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["established",{"_index":3042,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["etc",{"_index":4735,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["evaluate",{"_index":6449,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["evaluated",{"_index":6450,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["even",{"_index":4599,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["event",{"_index":3596,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["events",{"_index":3834,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["eventual",{"_index":4079,"title":{},"body":{"changelog.html":{}}}],["eventually",{"_index":4138,"title":{},"body":{"changelog.html":{}}}],["everyone",{"_index":5062,"title":{},"body":{"license.html":{}}}],["everything",{"_index":4170,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["everywhere",{"_index":2251,"title":{},"body":{"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exact",{"_index":5148,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["example",{"_index":5221,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["examplecolor",{"_index":844,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["examples",{"_index":4977,"title":{},"body":{"miscellaneous/functions.html":{}}}],["exampletitle",{"_index":842,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["exceeds",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":3778,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["exception",{"_index":1566,"title":{},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exception.constructor.name.replace('exception",{"_index":1872,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.getstatus",{"_index":1867,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.message",{"_index":1869,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exception.stack",{"_index":1899,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptionfactory",{"_index":1951,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["exceptionfilter",{"_index":1842,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["exceptionname",{"_index":1871,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["exceptions",{"_index":1865,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exchange",{"_index":2344,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["exchangeable",{"_index":6014,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exchanges",{"_index":2350,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["excluded",{"_index":5376,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":4019,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusion",{"_index":4337,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["exclusive",{"_index":5538,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":5246,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":5587,"title":{},"body":{"license.html":{}}}],["executable",{"_index":5204,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2635,"title":{},"body":{"modules/NewsModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["execute/rollback",{"_index":6220,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["executed",{"_index":2640,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executes",{"_index":5931,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["executing",{"_index":5160,"title":{},"body":{"license.html":{}}}],["execution",{"_index":3283,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["executioncontext",{"_index":1500,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["exercise",{"_index":5514,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":5284,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1757,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["existing",{"_index":1035,"title":{},"body":{"classes/DashboardModelMapper.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/JwtConstants.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"interfaces/Options.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["existingreference",{"_index":1024,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["existinguser",{"_index":6411,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["exists",{"_index":1366,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["existssync",{"_index":1763,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["existssync(folderpath",{"_index":1771,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["exit",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["exp",{"_index":2202,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["expect",{"_index":6081,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expect(code).to",{"_index":6517,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(data.length).tobe(0",{"_index":6617,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazy(x,y,z)).to",{"_index":6499,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(dosomethingcrazysync(wrong",{"_index":6520,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(findallspy).tohavebeencalledwith(...expectedparams",{"_index":6577,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(result).to",{"_index":6502,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(service.findonebyidforuser(anothernewsid",{"_index":6582,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expect(total).tobe(0",{"_index":6616,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expectation",{"_index":6493,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expected",{"_index":5393,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["expectedparams",{"_index":6576,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expecting",{"_index":6514,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expects",{"_index":4360,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["expert",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["experts",{"_index":6354,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["expexting",{"_index":6506,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["expiration",{"_index":2220,"title":{},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["expiresin",{"_index":2214,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["explicit",{"_index":1656,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{}}}],["explicitly",{"_index":5237,"title":{},"body":{"license.html":{}}}],["export",{"_index":48,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["exportcollection",{"_index":1171,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(@param('collectionname",{"_index":1191,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollection(collectionname",{"_index":1174,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["exportcollections",{"_index":1129,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{}}}],["exportcollections(options",{"_index":1135,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["exportcollectionstofilesystem",{"_index":1253,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["exportcollectionstofilesystem(collections",{"_index":1264,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exported",{"_index":1270,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exportedcollections",{"_index":1378,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exportedcollections.push(`${collectionname}:${sortedbsondocuments.length",{"_index":1395,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["exporting",{"_index":4366,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["exports",{"_index":147,"title":{},"body":{"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["expose",{"_index":3584,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposed",{"_index":6072,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["exposing",{"_index":6136,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["express",{"_index":1653,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["expressed",{"_index":5617,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":1907,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["expressly",{"_index":5464,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1932,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/Logger.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["extended",{"_index":351,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/JwtValidationAdapter.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["extending",{"_index":5816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":8,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"interfaces/FeathersError.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"classes/User.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application.html":{}}}],["extensions",{"_index":5321,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["extent",{"_index":5179,"title":{},"body":{"license.html":{}}}],["external",{"_index":4011,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["externalauthconfig",{"_index":2193,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["externalid",{"_index":554,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["externally",{"_index":3967,"title":{},"body":{"changelog.html":{}}}],["externaluseridentifier",{"_index":2167,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["externaluseridentifier'})@unique",{"_index":3315,"title":{},"body":{"classes/User.html":{}}}],["extract",{"_index":6123,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extracting",{"_index":1950,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["extractjwt",{"_index":2228,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":2236,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extracts",{"_index":6231,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["extremely",{"_index":4313,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":5451,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["f0",{"_index":678,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["f23f76",{"_index":813,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["facade",{"_index":4238,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["facilitate",{"_index":6476,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["facilitating",{"_index":5600,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":5247,"title":{},"body":{"license.html":{}}}],["factory",{"_index":6454,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fail",{"_index":3982,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failed",{"_index":56,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["failing",{"_index":6653,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["failingfileids",{"_index":1475,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["failingfileids.length",{"_index":1485,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["failingfileids.push(file.id",{"_index":1483,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["fails",{"_index":4017,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["failure",{"_index":5638,"title":{},"body":{"license.html":{}}}],["fair",{"_index":5242,"title":{},"body":{"license.html":{}}}],["fake",{"_index":808,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["fallback",{"_index":4233,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":282,"title":{},"body":{"classes/BaseFile.html":{},"classes/DatabaseManagementConsole.html":{},"classes/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/Options.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["family",{"_index":5381,"title":{},"body":{"license.html":{}}}],["fantasy",{"_index":5032,"title":{},"body":{"index.html":{}}}],["fashion",{"_index":5146,"title":{},"body":{"license.html":{}}}],["fast",{"_index":6373,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["favicon",{"_index":4922,"title":{},"body":{"dependencies.html":{}}}],["favor",{"_index":5390,"title":{},"body":{"license.html":{}}}],["feathers",{"_index":150,"title":{},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathers/express",{"_index":6145,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["feathers/feathers",{"_index":1603,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["feathers/feathers.module",{"_index":148,"title":{},"body":{"modules/AuthorizationModule.html":{}}}],["feathersapp",{"_index":1662,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersapp.service(path",{"_index":1673,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersauthprovider",{"_index":145,"title":{"injectables/FeathersAuthProvider.html":{}},"body":{"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["featherserror",{"_index":1625,"title":{"interfaces/FeathersError.html":{}},"body":{"interfaces/FeathersError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["featherserror)?.type",{"_index":1858,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["feathersexpress",{"_index":1669,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersjs/authentication",{"_index":4798,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/configuration",{"_index":4800,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/errors",{"_index":4801,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/express",{"_index":1654,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"dependencies.html":{}}}],["feathersjs/feathers",{"_index":4802,"title":{},"body":{"dependencies.html":{}}}],["feathersjs/socketio",{"_index":4803,"title":{},"body":{"dependencies.html":{}}}],["feathersmodule",{"_index":143,"title":{"modules/FeathersModule.html":{}},"body":{"modules/AuthorizationModule.html":{},"modules/FeathersModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersservice",{"_index":1642,"title":{"interfaces/FeathersService.html":{}},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["feathersserviceparams",{"_index":1648,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feathersserviceprovider",{"_index":1591,"title":{"injectables/FeathersServiceProvider.html":{}},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["feathersserviceresponse",{"_index":1657,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{}}}],["feature",{"_index":3569,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["feature/sc",{"_index":5031,"title":{},"body":{"index.html":{}}}],["feature_multiple_s3_providers_enabled=true",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["feature_prometheus_enabled",{"_index":4215,"title":{},"body":{"changelog.html":{}}}],["feature_show_version_enabled",{"_index":4295,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":5977,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["federal",{"_index":4192,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":5303,"title":{},"body":{"license.html":{}}}],["feedback",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":5989,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fetch",{"_index":6387,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["fetching",{"_index":4258,"title":{},"body":{"changelog.html":{}}}],["ffffff",{"_index":5875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":3385,"title":{},"body":{"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["fieldname",{"_index":284,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["fields",{"_index":5685,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["figure",{"_index":6031,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["file.collectionname",{"_index":1347,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["file.entity",{"_index":2085,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["filefactory",{"_index":5788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileids",{"_index":2096,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["filename",{"_index":1328,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application.html":{}}}],["filename.split('.')[0",{"_index":1329,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filenames",{"_index":1324,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["filenames.map((filename",{"_index":1326,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filepath",{"_index":1309,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["files",{"_index":276,"title":{},"body":{"classes/BaseFile.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFileProperties.html":{},"interfaces/Options.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["files.console",{"_index":1797,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.console.ts",{"_index":1432,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.console.ts:17",{"_index":1444,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.console.ts:7",{"_index":1437,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["files.filter((file",{"_index":1825,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["files.uc.ts",{"_index":1457,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["files.uc.ts:15",{"_index":1462,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["files.uc.ts:6",{"_index":1460,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesforcleanupquery",{"_index":1821,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["filesfordeletion",{"_index":1469,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesfordeletion.length",{"_index":1472,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["filesmodule",{"_index":1789,"title":{"modules/FilesModule.html":{}},"body":{"modules/FilesModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["filesrepo",{"_index":1459,"title":{"injectables/FilesRepo.html":{}},"body":{"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"overview.html":{}}}],["filestorage",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["filestorage/security",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["filestorageadapter",{"_index":1681,"title":{"injectables/FileStorageAdapter.html":{}},"body":{"injectables/FileStorageAdapter.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"overview.html":{}}}],["filesystem",{"_index":1140,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["filesystemadapter",{"_index":1262,"title":{"injectables/FileSystemAdapter.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"interfaces/ICollectionFilePath.html":{},"overview.html":{}}}],["filesystemmodule",{"_index":1783,"title":{"modules/FileSystemModule.html":{}},"body":{"modules/FileSystemModule.html":{},"modules/ManagementModule.html":{},"modules.html":{},"overview.html":{}}}],["filter",{"_index":1154,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"modules/ErrorModule.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["filter((submission",{"_index":3242,"title":{},"body":{"injectables/TaskUC.html":{}}}],["filter.query.ts",{"_index":2527,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/variables.html":{}}}],["filter.query.ts:17",{"_index":2533,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:25",{"_index":2531,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.query.ts:33",{"_index":2536,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["filter.ts",{"_index":2712,"title":{},"body":{"interfaces/NewsTargetFilter.html":{}}}],["filter/global",{"_index":1568,"title":{},"body":{"modules/ErrorModule.html":{}}}],["filtered",{"_index":1292,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["filteredcollectionswithfilepaths",{"_index":1339,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filteredcollectionswithfilepaths.length",{"_index":1342,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["filterquery",{"_index":654,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["filters",{"_index":1291,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/LessonRepo.html":{},"classes/NewsFilterQuery.html":{},"injectables/TaskRepo.html":{}}}],["filters?.afterduedateornone",{"_index":3137,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.closed",{"_index":3133,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.draft",{"_index":3135,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["filters?.hidden",{"_index":2297,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["final",{"_index":6418,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["finally",{"_index":5474,"title":{},"body":{"license.html":{}}}],["find",{"_index":909,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["find(params",{"_index":1647,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["findall",{"_index":2476,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["findall(currentuser",{"_index":2485,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{}}}],["findall(targets",{"_index":2644,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findallbycourseids",{"_index":2289,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["findallbycourseids(courseids",{"_index":2291,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["findallbyparentids",{"_index":3110,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbyparentids(parentids",{"_index":3113,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findallbytaskids",{"_index":2988,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbytaskids(taskids",{"_index":2992,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["findallbyuserid",{"_index":627,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/SubmissionRepo.html":{}}}],["findallbyuserid(userid",{"_index":631,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/SubmissionRepo.html":{}}}],["findallfilesforcleanup",{"_index":1801,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["findallfilesforcleanup(cleanupthreshold",{"_index":1805,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["findallforstudent",{"_index":628,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/TaskUC.html":{}}}],["findallforstudent(userid",{"_index":633,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher",{"_index":629,"title":{},"body":{"injectables/CourseRepo.html":{},"injectables/TaskUC.html":{}}}],["findallforteacher(userid",{"_index":635,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/TaskUC.html":{}}}],["findallforteam",{"_index":3260,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforteam(teamid",{"_index":3261,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["findallforuser",{"_index":2714,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallforuser(userid",{"_index":2725,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findallspy",{"_index":6573,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["findbycourseids",{"_index":540,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbycourseids(courseids",{"_index":542,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["findbyid",{"_index":2860,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyid(id",{"_index":2864,"title":{},"body":{"injectables/RoleRepo.html":{},"injectables/UserRepo.html":{}}}],["findbyname",{"_index":2861,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["findbyname(name",{"_index":2866,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["finddocumentsofcollection",{"_index":1206,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["finddocumentsofcollection(collectionname",{"_index":1220,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["findforuser",{"_index":703,"title":{},"body":{"controllers/DashboardController.html":{}}}],["finding",{"_index":1988,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{}}}],["findnewsandcount",{"_index":2642,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findnewsandcount(query",{"_index":2647,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["findone",{"_index":2477,"title":{},"body":{"controllers/NewsController.html":{}}}],["findone(newsid",{"_index":2491,"title":{},"body":{"controllers/NewsController.html":{}}}],["findoneandupdate",{"_index":4107,"title":{},"body":{"changelog.html":{}}}],["findonebyid",{"_index":2643,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["findonebyid(id",{"_index":2651,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["findonebyidforuser",{"_index":2715,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findonebyidforuser(id",{"_index":2731,"title":{},"body":{"injectables/NewsUc.html":{}}}],["findoneorfailhandler",{"_index":2391,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["findtasksandcount",{"_index":3111,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["findtasksandcount(query",{"_index":3118,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["finduser(userid",{"_index":6178,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["finished",{"_index":1455,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["first",{"_index":2730,"title":{},"body":{"injectables/NewsUc.html":{},"classes/UserInfoResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["firstlogin",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["firstname",{"_index":2001,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["fit",{"_index":6107,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fitness",{"_index":5619,"title":{},"body":{"license.html":{}}}],["fix",{"_index":3454,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["fixable",{"_index":5965,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["fixed",{"_index":3401,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["fixes",{"_index":4165,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["fixme",{"_index":3177,"title":{},"body":{"classes/TaskScope.html":{}}}],["fixtures",{"_index":6544,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["flag",{"_index":2535,"title":{},"body":{"classes/NewsFilterQuery.html":{},"changelog.html":{}}}],["flags",{"_index":1151,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["flow",{"_index":5228,"title":{},"body":{"license.html":{}}}],["flush",{"_index":300,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["fly",{"_index":3894,"title":{},"body":{"changelog.html":{}}}],["focus",{"_index":6392,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["focuses",{"_index":6585,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["folder",{"_index":1163,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["folderpath",{"_index":1310,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{}}}],["folders",{"_index":6260,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["follow",{"_index":4667,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["following",{"_index":1488,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["foo",{"_index":5983,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["forallgrouptypes",{"_index":650,"title":{},"body":{"classes/CourseScope.html":{}}}],["forallgrouptypes(userid",{"_index":640,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["forbid",{"_index":5282,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":6335,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["forbiddenexception('jwt",{"_index":5814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":1948,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["force",{"_index":4235,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["forcefullsync",{"_index":4234,"title":{},"body":{"changelog.html":{}}}],["forcepathstyle",{"_index":1695,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["forceserverobjectid",{"_index":1235,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["foreign",{"_index":6642,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["forget",{"_index":6579,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["form",{"_index":4693,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["format",{"_index":485,"title":{},"body":{"classes/Course.html":{},"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["formats",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":4412,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["forms",{"_index":5330,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":1555,"title":{},"body":{"modules/EncryptionModule.html":{},"modules/MailModule.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forroot(options",{"_index":1556,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{}}}],["forwarding",{"_index":3776,"title":{},"body":{"changelog.html":{}}}],["found",{"_index":2395,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["foundation",{"_index":5059,"title":{},"body":{"license.html":{}}}],["framework",{"_index":5999,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["framework/feature",{"_index":6225,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["frameworks",{"_index":6141,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["free",{"_index":5057,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["freedom",{"_index":5078,"title":{},"body":{"license.html":{}}}],["freeport",{"_index":4863,"title":{},"body":{"dependencies.html":{}}}],["from/in",{"_index":6343,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["from/to",{"_index":6342,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["fromgroup",{"_index":1954,"title":{},"body":{"classes/GridElement.html":{}}}],["fromgroup(title",{"_index":835,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["frompersistedgroup",{"_index":1955,"title":{},"body":{"classes/GridElement.html":{}}}],["frompersistedgroup(id",{"_index":833,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["frompersistedreference",{"_index":1956,"title":{},"body":{"classes/GridElement.html":{}}}],["frompersistedreference(id",{"_index":832,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["fromsinglereference",{"_index":1957,"title":{},"body":{"classes/GridElement.html":{}}}],["fromsinglereference(reference",{"_index":834,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["frontend",{"_index":3806,"title":{},"body":{"changelog.html":{}}}],["fs",{"_index":1764,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fs.rm",{"_index":1777,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["fsp",{"_index":1762,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["fulfilled",{"_index":6147,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["fulfilling",{"_index":5270,"title":{},"body":{"license.html":{}}}],["full",{"_index":1732,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["fully",{"_index":811,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["function",{"_index":1691,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functional",{"_index":435,"title":{},"body":{"modules/CoreModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["functionality",{"_index":6041,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["functioning",{"_index":5404,"title":{},"body":{"license.html":{}}}],["functions",{"_index":4948,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["further",{"_index":5358,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["future",{"_index":571,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["g",{"_index":5981,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["gate",{"_index":3901,"title":{},"body":{"changelog.html":{}}}],["gates",{"_index":5966,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["general",{"_index":3665,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generalerror",{"_index":4072,"title":{},"body":{"changelog.html":{}}}],["generally",{"_index":4973,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["generate",{"_index":3458,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["generated",{"_index":5011,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["generatehardcodedtestdashboard",{"_index":1075,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["generateregistrationlink",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":5972,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["generation",{"_index":3964,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":4350,"title":{},"body":{"changelog.html":{}}}],["generic",{"_index":4969,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["generics",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["german",{"_index":1090,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["get(':id",{"_index":2492,"title":{},"body":{"controllers/NewsController.html":{}}}],["get(':teamid/news",{"_index":3262,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["get('me",{"_index":3326,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apibody({type",{"_index":706,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{}}}],["get(id",{"_index":1650,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["getbasedir",{"_index":1299,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["getcollectionnames",{"_index":1207,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getcontent",{"_index":819,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getdashboardbyid",{"_index":1064,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdashboardbyid(id",{"_index":1067,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["getdatabasecollection",{"_index":1208,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdatabasecollection(collectionname",{"_index":1223,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdb",{"_index":1226,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["getdefaultmaxduedate",{"_index":3186,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getdescriptions",{"_index":2135,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["getdetails",{"_index":19,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getelement",{"_index":755,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["getelement(position",{"_index":771,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getentitypermissions",{"_index":157,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getentitypermissions(userid",{"_index":176,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["geteol",{"_index":1759,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["getgrid",{"_index":756,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gethello",{"_index":1407,"title":{},"body":{"controllers/DelayController.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{}}}],["getid",{"_index":757,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getinout",{"_index":2921,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getinout(whatever",{"_index":2925,"title":{},"body":{"classes/ServerConsole.html":{}}}],["getitems",{"_index":3241,"title":{},"body":{"injectables/TaskUC.html":{}}}],["getmetadata",{"_index":804,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getnewspermissions",{"_index":2716,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnewspermissions(userid",{"_index":2733,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getnumberofstudents",{"_index":458,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["getparentid",{"_index":526,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["getpermittedcourses",{"_index":3035,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedcourses(userid",{"_index":3038,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["getpermittedentities",{"_index":158,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["getpermittedentities(userid",{"_index":179,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["getpermittedschools",{"_index":1585,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedschools(userid",{"_index":1593,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getpermittedtargets",{"_index":1586,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getpermittedtargets(userid",{"_index":1595,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsUc.html":{}}}],["getquery",{"_index":2910,"title":{},"body":{"classes/Scope.html":{}}}],["getreferences",{"_index":823,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getreferencesfromposition",{"_index":758,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["getreferencesfromposition(position",{"_index":779,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["getrequiredpermissions",{"_index":2717,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getrequiredpermissions(unpublished",{"_index":2736,"title":{},"body":{"injectables/NewsUc.html":{}}}],["getresponse",{"_index":20,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ValidationError.html":{}}}],["getseedfolder",{"_index":1254,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getservice",{"_index":1674,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["getservice(path",{"_index":1661,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["gettargetfilters",{"_index":2718,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfilters(userid",{"_index":2739,"title":{},"body":{"injectables/NewsUc.html":{}}}],["gettargetfolder",{"_index":1255,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["gettargetfolder(toseedfolder",{"_index":1273,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["getter",{"_index":489,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["gettimeout",{"_index":3292,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["getting",{"_index":3389,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["getuser",{"_index":1587,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuser(userid",{"_index":1597,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions",{"_index":1588,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserschoolpermissions(userid",{"_index":1599,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getusersdashboard",{"_index":1065,"title":{},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["getusertargetpermissions",{"_index":1589,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["getusertargetpermissions(userid",{"_index":1601,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["getuserwithpermissions",{"_index":3357,"title":{},"body":{"injectables/UserUC.html":{}}}],["getuserwithpermissions(userid",{"_index":3360,"title":{},"body":{"injectables/UserUC.html":{}}}],["git",{"_index":4990,"title":{"additional-documentation/nestjs-application/git.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["git://github.com/hpi",{"_index":4871,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/leeroybrun/mongoose",{"_index":4894,"title":{},"body":{"dependencies.html":{}}}],["git://github.com/schul",{"_index":4885,"title":{},"body":{"dependencies.html":{}}}],["github",{"_index":3698,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["give",{"_index":5300,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["given",{"_index":1335,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["gives",{"_index":1633,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["giving",{"_index":5306,"title":{},"body":{"license.html":{}}}],["global",{"_index":442,"title":{},"body":{"modules/CoreModule.html":{},"modules/ErrorModule.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["globalconstants",{"_index":1831,"title":{"interfaces/GlobalConstants.html":{}},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["globalerrorfilter",{"_index":1567,"title":{"classes/GlobalErrorFilter.html":{}},"body":{"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["globalerrorfilter.logger",{"_index":1922,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["globally",{"_index":2177,"title":{},"body":{"modules/InterceptorModule.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["globals",{"_index":1836,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["globals.js",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["globalvalidationpipe",{"_index":1925,"title":{"classes/GlobalValidationPipe.html":{}},"body":{"classes/GlobalValidationPipe.html":{},"modules/ValidationModule.html":{}}}],["gnu",{"_index":5052,"title":{},"body":{"license.html":{}}}],["go",{"_index":3763,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["goal",{"_index":5725,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["goals",{"_index":5125,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golden",{"_index":6369,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["golevelup/nestjs",{"_index":2339,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"dependencies.html":{}}}],["good",{"_index":4979,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["governed",{"_index":5427,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":5126,"title":{},"body":{"license.html":{}}}],["gracefully",{"_index":4545,"title":{},"body":{"changelog.html":{}}}],["grade",{"_index":2077,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["gradecomment",{"_index":2078,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["graded",{"_index":2155,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["gradedstudentids",{"_index":3239,"title":{},"body":{"injectables/TaskUC.html":{}}}],["gradefileids",{"_index":2098,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["gradefiles",{"_index":2079,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["grant",{"_index":5446,"title":{},"body":{"license.html":{}}}],["granted",{"_index":5232,"title":{},"body":{"license.html":{}}}],["grants",{"_index":5493,"title":{},"body":{"license.html":{}}}],["graph",{"_index":5675,"title":{},"body":{"modules.html":{}}}],["gratis",{"_index":5357,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":5652,"title":{},"body":{"license.html":{}}}],["greek",{"_index":1091,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["grid",{"_index":753,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/PatchGroupParams.html":{},"miscellaneous/variables.html":{}}}],["grid.push(element",{"_index":1020,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridarray",{"_index":1076,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridarray.push",{"_index":1077,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridelement",{"_index":828,"title":{"classes/GridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["gridelement.frompersistedgroup(modelentity.id",{"_index":1010,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.frompersistedgroup(new",{"_index":1084,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridelement.frompersistedreference",{"_index":1079,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["gridelement.fromsinglereference(referenceforindex",{"_index":881,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gridelement.getcontent().title",{"_index":1047,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.getid",{"_index":1037,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.getreferences().map((ref",{"_index":1048,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.hasid",{"_index":1034,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.isgroup",{"_index":1045,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["gridelement.setgroupname(params",{"_index":1125,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["gridelementcontent",{"_index":820,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridelementreferencemetadata",{"_index":800,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridelements",{"_index":924,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["gridelementwithposition",{"_index":777,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gridindexfromposition",{"_index":759,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["gridindexfromposition(pos",{"_index":782,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["gridposition",{"_index":772,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["gridpositionwithgroupindex",{"_index":780,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/typealiases.html":{}}}],["group",{"_index":827,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PatchGroupParams.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["groupdata",{"_index":845,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["groupelements",{"_index":928,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["groupindex",{"_index":848,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["grouping",{"_index":3989,"title":{},"body":{"changelog.html":{}}}],["groupmetadata",{"_index":843,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["groups",{"_index":3043,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["gt",{"_index":2711,"title":{},"body":{"classes/NewsScope.html":{}}}],["gte",{"_index":3182,"title":{},"body":{"classes/TaskScope.html":{}}}],["guarantee",{"_index":2519,"title":{},"body":{"controllers/NewsController.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guard",{"_index":5819,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guards",{"_index":6288,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["guest",{"_index":6236,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["guest:guest",{"_index":5922,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["guide",{"_index":6618,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["guidelines",{"_index":6100,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["halper",{"_index":2451,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{}}}],["handle",{"_index":3180,"title":{},"body":{"classes/TaskScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handlebars",{"_index":4971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handled",{"_index":370,"title":{},"body":{"classes/BusinessError.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["handler",{"_index":4409,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["handles",{"_index":1890,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["handling",{"_index":438,"title":{},"body":{"modules/CoreModule.html":{},"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["happen",{"_index":6025,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["happened",{"_index":6322,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["happens",{"_index":6566,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["happy",{"_index":907,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["hard",{"_index":3440,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hardcodedtestdashboardid",{"_index":1073,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["hash",{"_index":4247,"title":{},"body":{"changelog.html":{}}}],["hasid",{"_index":818,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["haspermission",{"_index":3226,"title":{},"body":{"injectables/TaskUC.html":{}}}],["haspermissions",{"_index":198,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["hastaskdashboardpermission",{"_index":3187,"title":{},"body":{"injectables/TaskUC.html":{}}}],["hastaskdashboardpermission(currentuser",{"_index":3198,"title":{},"body":{"injectables/TaskUC.html":{}}}],["having",{"_index":5245,"title":{},"body":{"license.html":{}}}],["header",{"_index":2209,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["headers",{"_index":6167,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["heart",{"_index":6162,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["heartened",{"_index":5112,"title":{},"body":{"license.html":{}}}],["heavily",{"_index":6075,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hell",{"_index":492,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["help",{"_index":6533,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helparea",{"_index":3871,"title":{},"body":{"changelog.html":{}}}],["helpdesk",{"_index":4111,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":1861,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["helpers",{"_index":4276,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["helpful",{"_index":6507,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helps",{"_index":6495,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["helpto",{"_index":5951,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["hence",{"_index":6157,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["here",{"_index":231,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/InterceptorModule.html":{},"injectables/JwtValidationAdapter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hereafter",{"_index":5535,"title":{},"body":{"license.html":{}}}],["heroes",{"_index":6252,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidden",{"_index":2028,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["hide",{"_index":6393,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hiding",{"_index":6013,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hidrive",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["hierarchical",{"_index":4370,"title":{},"body":{"changelog.html":{}}}],["high",{"_index":6021,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["higher",{"_index":6338,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["hint",{"_index":1358,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hints",{"_index":6087,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["history",{"_index":4884,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["history.git",{"_index":4887,"title":{},"body":{"dependencies.html":{}}}],["holder",{"_index":5471,"title":{},"body":{"license.html":{}}}],["holders",{"_index":5434,"title":{},"body":{"license.html":{}}}],["holding",{"_index":3986,"title":{},"body":{"changelog.html":{}}}],["homework",{"_index":3883,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["homeworkid",{"_index":2090,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["homeworks",{"_index":2121,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{}}}],["homogeneitysolve",{"_index":6027,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hook",{"_index":4174,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["hooked",{"_index":6158,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hooks",{"_index":4312,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["hope",{"_index":493,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"license.html":{}}}],["host",{"_index":1848,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["host.switchtohttp",{"_index":1919,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["hosts",{"_index":5363,"title":{},"body":{"license.html":{}}}],["hot",{"_index":5718,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["hotfix",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["hotfixes",{"_index":3951,"title":{},"body":{"changelog.html":{}}}],["household",{"_index":5382,"title":{},"body":{"license.html":{}}}],["hpi",{"_index":1535,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["html",{"_index":561,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["htmlcontent",{"_index":103,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["htmlmailcontent",{"_index":105,"title":{"interfaces/HtmlMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["http",{"_index":65,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["http://fsf.org",{"_index":5061,"title":{},"body":{"license.html":{}}}],["http://localhost",{"_index":5900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://www.gnu.org/licenses",{"_index":5671,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":375,"title":{},"body":{"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["httpexceptions",{"_index":6441,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["https://docs.nestjs.com/first",{"_index":6289,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://github.com/goldbergyoni/javascript",{"_index":6620,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["https://github.com/hpi",{"_index":5700,"title":{},"body":{"todo.html":{}}}],["https://github.com/mikro",{"_index":6381,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://hpi",{"_index":3754,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["https://jestjs.io",{"_index":5991,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://khalilstemmler.com/articles/oop",{"_index":6390,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["https://khalilstemmler.com/articles/software",{"_index":6325,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["https://mikro",{"_index":5992,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://min.io",{"_index":5994,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nestjs.com",{"_index":5990,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["https://nuxtjs.org",{"_index":6130,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://stackoverflow.com/a/61909588",{"_index":5687,"title":{},"body":{"todo.html":{}}}],["https://vuejs.org",{"_index":6132,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["https://www.rabbitmq.com",{"_index":5995,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["httpstatus",{"_index":45,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/ValidationError.html":{}}}],["httpstatus.bad_request",{"_index":58,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ValidationError.html":{}}}],["httpstatus.conflict",{"_index":391,"title":{},"body":{"classes/BusinessError.html":{},"classes/ErrorResponse.html":{}}}],["hub",{"_index":4282,"title":{},"body":{"changelog.html":{}}}],["human",{"_index":6445,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["hydra",{"_index":3653,"title":{},"body":{"changelog.html":{}}}],["i...properties",{"_index":498,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["i.e",{"_index":6151,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["iat",{"_index":2201,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["icollectionfilepath",{"_index":1308,"title":{"interfaces/ICollectionFilePath.html":{}},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["icons",{"_index":6655,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["icoursegroupproperties",{"_index":527,"title":{"interfaces/ICourseGroupProperties.html":{}},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["icourseproperties",{"_index":460,"title":{"interfaces/ICourseProperties.html":{}},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["icreatenews",{"_index":1977,"title":{"interfaces/ICreateNews.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["icurrentuser",{"_index":742,"title":{"interfaces/ICurrentUser.html":{}},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtPayload.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id",{"_index":209,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["id.pipe.ts",{"_index":2816,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["id.pipe.ts:7",{"_index":2818,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["id.ts",{"_index":5746,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["idashboardrepo",{"_index":1093,"title":{"interfaces/IDashboardRepo.html":{}},"body":{"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"interfaces/IDashboardRepo.html":{}}}],["identical",{"_index":2266,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identifiable",{"_index":5559,"title":{},"body":{"license.html":{}}}],["identified",{"_index":6451,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiedreference",{"_index":892,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["identifier",{"_index":1575,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["identifiers",{"_index":2265,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["identify",{"_index":2455,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["identity",{"_index":6633,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["idm",{"_index":4227,"title":{},"body":{"changelog.html":{}}}],["ids",{"_index":182,"title":{},"body":{"injectables/AuthorizationService.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"changelog.html":{}}}],["ierrortype",{"_index":377,"title":{"interfaces/IErrorType.html":{}},"body":{"classes/BusinessError.html":{},"interfaces/IErrorType.html":{},"miscellaneous/variables.html":{}}}],["if(enableuseractivation",{"_index":6404,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(existinguser.length",{"_index":6413,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["if(sendwelcomeemailtouser",{"_index":6406,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ifileproperties",{"_index":272,"title":{"interfaces/IFileProperties.html":{}},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["ifindoptions",{"_index":2009,"title":{"interfaces/IFindOptions.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["iframe",{"_index":4098,"title":{},"body":{"changelog.html":{}}}],["ignore",{"_index":4473,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ignoreexpiration",{"_index":2237,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["igridelement",{"_index":775,"title":{"interfaces/IGridElement.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["igridelementreference",{"_index":803,"title":{"interfaces/IGridElementReference.html":{}},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["ilessonproperties",{"_index":2026,"title":{"interfaces/ILessonProperties.html":{}},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["ilogger",{"_index":1844,"title":{"interfaces/ILogger.html":{}},"body":{"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"injectables/Logger.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["image",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["imateapotexception",{"_index":1652,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["imateapotexception('this",{"_index":1670,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immediately",{"_index":1641,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["immutable",{"_index":3995,"title":{},"body":{"changelog.html":{}}}],["imp",{"_index":4266,"title":{},"body":{"changelog.html":{}}}],["impact",{"_index":5001,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["implement",{"_index":2314,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implementation",{"_index":5209,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implementations",{"_index":6290,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["implemented",{"_index":2198,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["implements",{"_index":806,"title":{},"body":{"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"injectables/TimeoutInterceptor.html":{}}}],["implications",{"_index":6336,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["implicit",{"_index":6631,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["implied",{"_index":5581,"title":{},"body":{"license.html":{}}}],["import",{"_index":44,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["important",{"_index":1658,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["importcollection",{"_index":1172,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollection(@param('collectionname",{"_index":1188,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["importcollection(collectionname",{"_index":1180,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{}}}],["importcollections",{"_index":1173,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["imported",{"_index":1373,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importeddocumentsamount",{"_index":1370,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["importer",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["importhash",{"_index":4403,"title":{},"body":{"changelog.html":{}}}],["importhashes",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["importing",{"_index":5526,"title":{},"body":{"license.html":{}}}],["imports",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementUc.html":{},"modules/FilesModule.html":{},"interfaces/ICollectionFilePath.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["impose",{"_index":5456,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":5584,"title":{},"body":{"license.html":{}}}],["impossile",{"_index":2708,"title":{},"body":{"classes/NewsScope.html":{}}}],["improve",{"_index":3730,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":5106,"title":{},"body":{"license.html":{}}}],["improves",{"_index":6456,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["in/out",{"_index":6267,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inability",{"_index":5633,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":5635,"title":{},"body":{"license.html":{}}}],["inc",{"_index":5060,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":5630,"title":{},"body":{"license.html":{}}}],["include",{"_index":221,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"license.html":{}}}],["included",{"_index":5205,"title":{},"body":{"license.html":{}}}],["includes",{"_index":5164,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["including",{"_index":1752,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["inclusion",{"_index":5329,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1937,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["incomingmessage",{"_index":4354,"title":{},"body":{"changelog.html":{}}}],["incomplete",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["incorporate",{"_index":5111,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":5601,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":5385,"title":{},"body":{"license.html":{}}}],["increase",{"_index":3923,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["increased",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["increases",{"_index":6125,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["indemnification",{"_index":5452,"title":{},"body":{"license.html":{}}}],["independant",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["independend",{"_index":6421,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["independent",{"_index":5319,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["independently",{"_index":6168,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index()@manytomany('user",{"_index":472,"title":{},"body":{"classes/Course.html":{}}}],["index()@manytoone('school",{"_index":468,"title":{},"body":{"classes/Course.html":{}}}],["index({name",{"_index":3319,"title":{},"body":{"classes/User.html":{}}}],["index.ts",{"_index":5682,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["indexed",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["indexes",{"_index":3809,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["indicate",{"_index":5496,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":5462,"title":{},"body":{"license.html":{}}}],["individual",{"_index":3992,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["individuals",{"_index":5143,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":5396,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":5871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inewsproperties",{"_index":587,"title":{"interfaces/INewsProperties.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["inewsscope",{"_index":1989,"title":{"interfaces/INewsScope.html":{}},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["inewuserprops",{"_index":6398,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infinity",{"_index":3764,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["info(text",{"_index":411,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["info.mapper",{"_index":2578,"title":{},"body":{"classes/NewsMapper.html":{}}}],["info.mapper.ts",{"_index":2892,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.mapper.ts:5",{"_index":2894,"title":{},"body":{"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/UserInfoMapper.html":{}}}],["info.response",{"_index":2553,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{}}}],["info.response.ts",{"_index":2900,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:13",{"_index":2902,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["info.response.ts:18",{"_index":3345,"title":{},"body":{"classes/UserInfoResponse.html":{}}}],["info.response.ts:8",{"_index":2901,"title":{},"body":{"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{}}}],["inform",{"_index":5369,"title":{},"body":{"license.html":{},"miscellaneous/typealiases.html":{}}}],["information",{"_index":1582,"title":{},"body":{"classes/ErrorResponse.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["informations",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["infra",{"_index":2396,"title":{},"body":{"modules/ManagementModule.html":{}}}],["infra/encryption",{"_index":1538,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["infrastructure",{"_index":6278,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["infringe",{"_index":5494,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":5523,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":5157,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":224,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["inheritance",{"_index":921,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{}}}],["inheritances",{"_index":2668,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["inherited",{"_index":32,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskScope.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/ValidationError.html":{}}}],["init",{"_index":2133,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{}}}],["inital",{"_index":3667,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":6429,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initialized",{"_index":2319,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["initializes",{"_index":6230,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["initiate",{"_index":5517,"title":{},"body":{"license.html":{}}}],["initpermissions",{"_index":5878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":1117,"title":{},"body":{"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/SymetricKeyEncryptionService.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["inject('mail_service_options",{"_index":2366,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["inject(mikroorm",{"_index":2431,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["inject(mongomemoryserver",{"_index":2433,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["injectable",{"_index":152,"title":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{}},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injectables",{"_index":153,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"injectables/ConsoleWriterService.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"injectables/MailService.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["injected",{"_index":1637,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["injection",{"_index":2316,"title":{},"body":{"injectables/Logger.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["injections",{"_index":6193,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["injectusername",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["inline",{"_index":96,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inlineattachment",{"_index":95,"title":{"interfaces/InlineAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["inner",{"_index":5004,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["input",{"_index":2179,"title":{},"body":{"modules/InterceptorModule.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["inputroles",{"_index":2881,"title":{},"body":{"injectables/RoleUC.html":{}}}],["inputroles.map((role",{"_index":2882,"title":{},"body":{"injectables/RoleUC.html":{}}}],["insensitive",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["insert",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["insertedcount",{"_index":1233,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["inside",{"_index":373,"title":{},"body":{"classes/BusinessError.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["inspired",{"_index":6619,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["install",{"_index":5217,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["installation",{"_index":5400,"title":{},"body":{"license.html":{}}}],["installed",{"_index":5413,"title":{},"body":{"license.html":{}}}],["instance",{"_index":1665,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/Logger.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["instanceof",{"_index":1826,"title":{},"body":{"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["instances",{"_index":4778,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instant",{"_index":497,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["instantiategridelementmodel",{"_index":977,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["instantiategridelementmodel(gridelement",{"_index":984,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["instead",{"_index":1363,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["instructions",{"_index":5017,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intact",{"_index":5295,"title":{},"body":{"license.html":{}}}],["integrate",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3884,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["intended",{"_index":5081,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["intention",{"_index":5287,"title":{},"body":{"license.html":{}}}],["interact",{"_index":5663,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interacting",{"_index":5596,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["interaction",{"_index":5172,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["interactions",{"_index":6066,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interactive",{"_index":5176,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["interacts",{"_index":6222,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["intercept",{"_index":1498,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["intercept(context",{"_index":1499,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":1425,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interceptor/interceptor.module",{"_index":450,"title":{},"body":{"modules/CoreModule.html":{}}}],["interceptormodule",{"_index":428,"title":{"modules/InterceptorModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/InterceptorModule.html":{},"modules.html":{},"overview.html":{}}}],["interchange",{"_index":5341,"title":{},"body":{"license.html":{}}}],["interest",{"_index":5510,"title":{},"body":{"license.html":{}}}],["interface",{"_index":87,"title":{"interfaces/AppendedAttachment.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/Directory.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskWithStatusVo.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["interface/jwt",{"_index":2233,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["interfaces",{"_index":89,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"interfaces/GlobalConstants.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/NewsTargetFilter.html":{},"interfaces/Options.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["interfered",{"_index":5405,"title":{},"body":{"license.html":{}}}],["internal",{"_index":576,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["internal_server_error",{"_index":6396,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["internally",{"_index":422,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["internalservererrorexception",{"_index":1853,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internalservererrorexception(error",{"_index":1881,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["internationale",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["internationalisation",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["interpretation",{"_index":5642,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":5215,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":5226,"title":{},"body":{"license.html":{}}}],["intricacies",{"_index":6367,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introduce",{"_index":1638,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduced",{"_index":4664,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["introduces",{"_index":4631,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["introducing",{"_index":5905,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["introduction",{"_index":5678,"title":{},"body":{"todo.html":{}}}],["invalid",{"_index":1345,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["invalidate",{"_index":5316,"title":{},"body":{"license.html":{}}}],["invocation",{"_index":6249,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invocations",{"_index":6254,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoke",{"_index":6201,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoked",{"_index":6073,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["invoking",{"_index":6177,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["involved",{"_index":6368,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ipagination",{"_index":2015,"title":{"interfaces/IPagination.html":{}},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/TaskUC.html":{}}}],["ipermissionsandroles",{"_index":2003,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"injectables/RoleUC.html":{},"miscellaneous/typealiases.html":{}}}],["iprimarykey",{"_index":2378,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["iresolveduser",{"_index":1997,"title":{"interfaces/IResolvedUser.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{}}}],["irole",{"_index":2000,"title":{"interfaces/IRole.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/ResolvedUser.html":{},"miscellaneous/typealiases.html":{}}}],["iroleproperties",{"_index":2051,"title":{"interfaces/IRoleProperties.html":{}},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["irrevocable",{"_index":5234,"title":{},"body":{"license.html":{}}}],["isboolean",{"_index":2537,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isbusinesserror",{"_index":1859,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isbusinesserror(error",{"_index":1894,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isclosed",{"_index":3175,"title":{},"body":{"classes/TaskScope.html":{}}}],["isdate",{"_index":691,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isdate()@isoptional()@apipropertyoptional({description",{"_index":668,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isdirectory",{"_index":258,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["isdraft",{"_index":2129,"title":{},"body":{"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["iserv",{"_index":3981,"title":{},"body":{"changelog.html":{}}}],["isexternal",{"_index":3898,"title":{},"body":{"changelog.html":{}}}],["isfeatherserror",{"_index":1857,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isfeatherserror(error",{"_index":1889,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["isgraded",{"_index":2099,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["isgroup",{"_index":821,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["ishidden",{"_index":2308,"title":{},"body":{"classes/LessonScope.html":{}}}],["isin",{"_index":2538,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isin(target_model_values",{"_index":2542,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isinitialized",{"_index":2132,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["isint",{"_index":2801,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(0)@apipropertyoptional({description",{"_index":2798,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["isint()@min(1)@max(100)@apipropertyoptional({description",{"_index":2792,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["ismongoid",{"_index":2539,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isnumber",{"_index":2448,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0)@apiproperty",{"_index":2458,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isnumber()@min(0)@isoptional()@apipropertyoptional({description",{"_index":2456,"title":{},"body":{"classes/MoveElementPosition.html":{}}}],["isolated",{"_index":6255,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["isolation",{"_index":6481,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["isoptional",{"_index":692,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/UpdateNewsParams.html":{}}}],["isoptional()@isboolean()@stringtoboolean()@apipropertyoptional({description",{"_index":2534,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isdate()@apipropertyoptional({description",{"_index":3311,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@ismongoid()@apipropertyoptional({pattern",{"_index":2528,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":3310,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["isoptional()@isstring()@isin(target_model_values)@apipropertyoptional({enum",{"_index":2532,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["ispublished",{"_index":2771,"title":{},"body":{"injectables/NewsUc.html":{}}}],["iss",{"_index":2205,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["isstring",{"_index":693,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/PatchGroupParams.html":{},"classes/UpdateNewsParams.html":{}}}],["isstring()@apiproperty({description",{"_index":666,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/PatchGroupParams.html":{}}}],["isstring()@apiproperty({enum",{"_index":682,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstring()@apiproperty({pattern",{"_index":677,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["isstudent",{"_index":641,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["issubstitutionteacher",{"_index":459,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["issubstitutionteacher(userid",{"_index":480,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["issue",{"_index":3815,"title":{},"body":{"changelog.html":{}}}],["issued",{"_index":4547,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":2212,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{}}}],["issues",{"_index":4136,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["isteacher",{"_index":642,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["istechnicalerror",{"_index":1863,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istechnicalerror(error",{"_index":1896,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["istimestampenabled",{"_index":2328,"title":{},"body":{"injectables/Logger.html":{}}}],["istorageproviderproperties",{"_index":2061,"title":{"interfaces/IStorageProviderProperties.html":{}},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["isubmissionproperties",{"_index":2074,"title":{"interfaces/ISubmissionProperties.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["iswhitelisted",{"_index":2257,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["iswhitelisted(accountid",{"_index":2260,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["it's",{"_index":3762,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["it(\"should",{"_index":6480,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('bad",{"_index":6498,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('good",{"_index":6500,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["it('should",{"_index":6572,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["itaskproperties",{"_index":2113,"title":{"interfaces/ITaskProperties.html":{}},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["itaskstatus",{"_index":2152,"title":{"interfaces/ITaskStatus.html":{}},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["item",{"_index":5190,"title":{},"body":{"license.html":{}}}],["items",{"_index":2054,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["iteration",{"_index":3671,"title":{},"body":{"changelog.html":{}}}],["itself",{"_index":5416,"title":{},"body":{"license.html":{}}}],["iupdatenews",{"_index":1986,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{}}}],["iuserproperties",{"_index":2163,"title":{"interfaces/IUserProperties.html":{}},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["javascript",{"_index":353,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["jest",{"_index":3695,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["jest.config.ts",{"_index":5775,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["jest.spyon(repo",{"_index":6574,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jest/utils",{"_index":5857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jira",{"_index":5025,"title":{},"body":{"index.html":{}}}],["job",{"_index":1439,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["job/delete",{"_index":1796,"title":{},"body":{"modules/FilesModule.html":{}}}],["jobs",{"_index":4572,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["john",{"_index":5902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":4064,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["joinpath",{"_index":1714,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["joinpath(...paths",{"_index":1735,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["jose",{"_index":4866,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":490,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"injectables/SymetricKeyEncryptionService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["json",{"_index":352,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["json.parse(text",{"_index":1356,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify",{"_index":1344,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["json.stringify(collections",{"_index":1160,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["json.stringify(e.constraints",{"_index":1911,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["json.stringify(sortedbsondocuments",{"_index":1392,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments",{"_index":365,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["jsondocuments.length",{"_index":1232,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["jsonwebtoken",{"_index":4868,"title":{},"body":{"dependencies.html":{}}}],["jti",{"_index":2207,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{}}}],["jwauthguard",{"_index":6589,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["jwt",{"_index":2231,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwt_whitelist_accept_all",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["jwtauthguard",{"_index":2185,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["jwtconstants",{"_index":133,"title":{"interfaces/JwtConstants.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.jwtoptions",{"_index":2240,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtconstants.secret",{"_index":2239,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":2235,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register(jwtconstants",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptions",{"_index":2191,"title":{},"body":{"interfaces/JwtConstants.html":{},"miscellaneous/variables.html":{}}}],["jwtpayload",{"_index":2217,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":119,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["jwtvalidationadapter",{"_index":120,"title":{"injectables/JwtValidationAdapter.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"overview.html":{}}}],["jwtwhitelist",{"_index":2268,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["kafka",{"_index":6143,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["keep",{"_index":1372,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["keeps",{"_index":5929,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["kernel",{"_index":5211,"title":{},"body":{"license.html":{}}}],["key",{"_index":1706,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"injectables/NewsUc.html":{},"injectables/SymetricKeyEncryptionService.html":{},"changelog.html":{},"license.html":{}}}],["keyof",{"_index":5771,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["keys",{"_index":2196,"title":{},"body":{"interfaces/JwtConstants.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kind",{"_index":5168,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["kinds",{"_index":5069,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["klara.fall@schul",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["know",{"_index":5094,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knowingly",{"_index":5549,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":5556,"title":{},"body":{"license.html":{}}}],["known",{"_index":4039,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["knows",{"_index":6215,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["kreisid",{"_index":4027,"title":{},"body":{"changelog.html":{}}}],["kurse",{"_index":500,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":3474,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["language",{"_index":3725,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["large",{"_index":6126,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["larger",{"_index":5323,"title":{},"body":{"license.html":{}}}],["last",{"_index":3344,"title":{},"body":{"classes/UserInfoResponse.html":{},"changelog.html":{}}}],["lastldapsync",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["lastname",{"_index":2002,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"miscellaneous/variables.html":{}}}],["later",{"_index":595,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["latest",{"_index":2729,"title":{},"body":{"injectables/NewsUc.html":{},"dependencies.html":{}}}],["launch",{"_index":5985,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["launch/settings",{"_index":5699,"title":{},"body":{"todo.html":{}}}],["law",{"_index":5159,"title":{},"body":{"license.html":{}}}],["laws",{"_index":5135,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":5521,"title":{},"body":{"license.html":{}}}],["layer",{"_index":6054,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["layered",{"_index":6210,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["layering",{"_index":6019,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["layers",{"_index":5681,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ldap",{"_index":3409,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["ldap/:id",{"_index":4275,"title":{},"body":{"changelog.html":{}}}],["ldap_school_syncer_pool_size",{"_index":4198,"title":{},"body":{"changelog.html":{}}}],["ldap_system_syncer_pool_size",{"_index":4197,"title":{},"body":{"changelog.html":{}}}],["ldapjs",{"_index":4870,"title":{},"body":{"dependencies.html":{}}}],["ldapjs.git",{"_index":4873,"title":{},"body":{"dependencies.html":{}}}],["ldapschoolidentifier",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["ldapschoolsyncer",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["ldapsystemsyncers",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["lead",{"_index":4457,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["leads",{"_index":4975,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["lean",{"_index":4889,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["learnroom",{"_index":3668,"title":{},"body":{"changelog.html":{}}}],["learnroommodule",{"_index":2278,"title":{"modules/LearnroomModule.html":{}},"body":{"modules/LearnroomModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["leave",{"_index":5734,"title":{},"body":{"todo.html":{}}}],["leaves",{"_index":3282,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["legacy",{"_index":1634,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["legacy/feathers",{"_index":5973,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/feathers/mocha",{"_index":5954,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["legacy/nest",{"_index":5726,"title":{},"body":{"todo.html":{}}}],["legacyerrortypes",{"_index":5893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["legal",{"_index":5100,"title":{},"body":{"license.html":{}}}],["lern",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["lernstore",{"_index":3713,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":4723,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lesson",{"_index":2030,"title":{"classes/Lesson.html":{}},"body":{"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["lesson.entity",{"_index":2118,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["lessonid",{"_index":2124,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["lessonids",{"_index":3121,"title":{},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["lessonrepo",{"_index":2287,"title":{"injectables/LessonRepo.html":{}},"body":{"injectables/LessonRepo.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["lessons",{"_index":2029,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["lessonscope",{"_index":2295,"title":{"classes/LessonScope.html":{}},"body":{"injectables/LessonRepo.html":{},"classes/LessonScope.html":{}}}],["letter",{"_index":6299,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["letting",{"_index":5116,"title":{},"body":{"license.html":{}}}],["level",{"_index":4589,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["levels",{"_index":6477,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["liability",{"_index":5436,"title":{},"body":{"license.html":{}}}],["liable",{"_index":5156,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":5203,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["library",{"_index":5377,"title":{},"body":{"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["license",{"_index":5051,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":5139,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":5140,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":5142,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":5075,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":5497,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":5443,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["likewise",{"_index":5491,"title":{},"body":{"license.html":{}}}],["limit",{"_index":2017,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"license.html":{}}}],["limitation",{"_index":5627,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3694,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["limiting",{"_index":3759,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["limits",{"_index":3876,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":614,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["lines",{"_index":5844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":3703,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["linked",{"_index":5224,"title":{},"body":{"license.html":{}}}],["links",{"_index":3745,"title":{},"body":{"changelog.html":{}}}],["linter",{"_index":5714,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["list",{"_index":178,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{}}}],["listener",{"_index":4392,"title":{},"body":{"changelog.html":{}}}],["lists",{"_index":1739,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["literal",{"_index":1960,"title":{},"body":{"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"interfaces/JwtConstants.html":{},"injectables/LessonRepo.html":{},"classes/School.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["litigation",{"_index":5518,"title":{},"body":{"license.html":{}}}],["living",{"_index":6365,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["lms",{"_index":6110,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["load",{"_index":1331,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{}}}],["load/perf",{"_index":5692,"title":{},"body":{"todo.html":{}}}],["load/persist",{"_index":6275,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loadallcollectionsfromdatabase",{"_index":1256,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromdatabase(targetfolder",{"_index":1277,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadallcollectionsfromfilesystem",{"_index":1257,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loadallcollectionsfromfilesystem(basedir",{"_index":1283,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1258,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["loadcollectionsavailablefromsourceandfilterbycollectionnames(source",{"_index":1286,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["loaded",{"_index":2131,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"injectables/TaskUC.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["loader",{"_index":6526,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["loadind",{"_index":3936,"title":{},"body":{"changelog.html":{}}}],["loading",{"_index":3991,"title":{},"body":{"changelog.html":{}}}],["loads",{"_index":1279,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["local",{"_index":3885,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"license.html":{}}}],["localhost:15672",{"_index":5921,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localhost:3030",{"_index":5934,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["localization",{"_index":6133,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["locally",{"_index":2963,"title":{},"body":{"modules/ServerModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["locate",{"_index":6333,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["located",{"_index":6114,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["location",{"_index":1298,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["locator",{"_index":4239,"title":{},"body":{"changelog.html":{}}}],["lock",{"_index":3929,"title":{},"body":{"changelog.html":{}}}],["lodash",{"_index":1303,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"dependencies.html":{}}}],["log",{"_index":2035,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/Logger.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["log(message",{"_index":2043,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["log/response",{"_index":5715,"title":{},"body":{"todo.html":{}}}],["logfile",{"_index":6241,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logged",{"_index":5016,"title":{},"body":{"index.html":{}}}],["logger",{"_index":1433,"title":{"injectables/Logger.html":{}},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"injectables/NewsUc.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logger('error",{"_index":1845,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["logger(deletefilesconsole.name",{"_index":1449,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["logger(durationlogginginterceptor.name",{"_index":1505,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logger(newsuc.name",{"_index":2749,"title":{},"body":{"injectables/NewsUc.html":{}}}],["logger.error(error",{"_index":1915,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(errormsg",{"_index":1912,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.error(exception",{"_index":1900,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["logger.info(`could",{"_index":6511,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["logger.interface",{"_index":2312,"title":{},"body":{"injectables/Logger.html":{}}}],["logger.service",{"_index":2333,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.module",{"_index":448,"title":{},"body":{"modules/CoreModule.html":{}}}],["loggermodule",{"_index":429,"title":{"modules/LoggerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/FilesModule.html":{},"modules/LoggerModule.html":{},"modules/NewsModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["loggerservice",{"_index":6436,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging",{"_index":440,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DurationLoggingInterceptor.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["logging.interceptor.ts",{"_index":1494,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:11",{"_index":1506,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logging.interceptor.ts:13",{"_index":1502,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["logic",{"_index":3480,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["logic/rules",{"_index":6091,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["logical",{"_index":6137,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["login",{"_index":3891,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["loginuseruc",{"_index":6308,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["logs",{"_index":5680,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["long",{"_index":5035,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["longer",{"_index":4150,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1013,"title":{},"body":{"classes/DashboardModelMapper.html":{},"interfaces/JwtConstants.html":{},"changelog.html":{},"index.html":{}}}],["loop",{"_index":1479,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"changelog.html":{}}}],["loss",{"_index":5634,"title":{},"body":{"license.html":{}}}],["losses",{"_index":5636,"title":{},"body":{"license.html":{}}}],["lost",{"_index":4540,"title":{},"body":{"changelog.html":{}}}],["lot",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":6023,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["lowercase",{"_index":6300,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["lte",{"_index":1822,"title":{},"body":{"injectables/FilesRepo.html":{},"classes/NewsScope.html":{}}}],["ltitools",{"_index":4102,"title":{},"body":{"changelog.html":{}}}],["luckily",{"_index":6227,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["m:n",{"_index":6641,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["machine",{"_index":5332,"title":{},"body":{"license.html":{}}}],["made",{"_index":5107,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mail",{"_index":106,"title":{"interfaces/Mail.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"interfaces/PlainTextMailContent.html":{},"changelog.html":{},"license.html":{}}}],["mail.interface",{"_index":2365,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mail.service",{"_index":2342,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mail_service_options",{"_index":2355,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mailattachment",{"_index":91,"title":{"interfaces/MailAttachment.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["mailcatcher",{"_index":3687,"title":{},"body":{"changelog.html":{}}}],["mailcontent",{"_index":99,"title":{"interfaces/MailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["maildrop",{"_index":3686,"title":{},"body":{"changelog.html":{}}}],["mailmodule",{"_index":2334,"title":{"modules/MailModule.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailmodule.forroot",{"_index":2957,"title":{},"body":{"modules/ServerModule.html":{}}}],["mailmoduleoptions",{"_index":2336,"title":{"interfaces/MailModuleOptions.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["mails",{"_index":3767,"title":{},"body":{"changelog.html":{}}}],["mailservice",{"_index":2341,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["mailserviceoptions",{"_index":2361,"title":{"interfaces/MailServiceOptions.html":{}},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["main",{"_index":3597,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["main.ts",{"_index":1666,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"todo.html":{}}}],["mainly",{"_index":6176,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintain",{"_index":4422,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintainability",{"_index":4356,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["maintenance",{"_index":3639,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["major",{"_index":5207,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["make",{"_index":2264,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["makes",{"_index":5261,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["making",{"_index":2453,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"license.html":{}}}],["malformed",{"_index":6567,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["malfunction",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["manage",{"_index":6064,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managed",{"_index":3968,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["management",{"_index":3481,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["management.console",{"_index":2385,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.console.ts",{"_index":1128,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["management.console.ts:11",{"_index":1133,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:25",{"_index":1144,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.console.ts:49",{"_index":1141,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["management.controller",{"_index":2383,"title":{},"body":{"modules/ManagementModule.html":{}}}],["management.controller.ts",{"_index":1169,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:15",{"_index":1182,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:21",{"_index":1179,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:27",{"_index":1176,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.controller.ts:9",{"_index":1184,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["management.module.ts",{"_index":1199,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service",{"_index":1200,"title":{},"body":{"modules/DatabaseManagementModule.html":{}}}],["management.service.ts",{"_index":1201,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:13",{"_index":1224,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:18",{"_index":1225,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:30",{"_index":1221,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:36",{"_index":1213,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:42",{"_index":1222,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:50",{"_index":1215,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:56",{"_index":1217,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:6",{"_index":1211,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:60",{"_index":1219,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.service.ts:9",{"_index":1227,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["management.uc",{"_index":1148,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["management.uc.ts",{"_index":1251,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["management.uc.ts:134",{"_index":1294,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:183",{"_index":1265,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:19",{"_index":1263,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:30",{"_index":1300,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:38",{"_index":1271,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:46",{"_index":1274,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:63",{"_index":1278,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:76",{"_index":1284,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management.uc.ts:91",{"_index":1288,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["management/database",{"_index":1170,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["managementmodule",{"_index":2370,"title":{"modules/ManagementModule.html":{}},"body":{"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["manager",{"_index":4819,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["managing",{"_index":6113,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mandatory/optional",{"_index":5684,"title":{},"body":{"todo.html":{}}}],["manipulated",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["manner",{"_index":5536,"title":{},"body":{"license.html":{}}}],["manual",{"_index":3848,"title":{},"body":{"changelog.html":{}}}],["manually",{"_index":6508,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["many",{"_index":4200,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["manytomany",{"_index":482,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["manytomany('file",{"_index":2095,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytomany('role",{"_index":2056,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["manytomany('user",{"_index":504,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Submission.html":{},"classes/Task.html":{}}}],["manytoone",{"_index":267,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["manytoone('course",{"_index":529,"title":{},"body":{"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["manytoone('coursegroup",{"_index":2092,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone('dashboardgridelementmodel",{"_index":914,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["manytoone('dashboardmodelentity",{"_index":893,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["manytoone('lesson",{"_index":2123,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["manytoone('school",{"_index":503,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["manytoone('storageprovider",{"_index":283,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["manytoone('task",{"_index":2089,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["manytoone('team",{"_index":624,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["manytoone('user",{"_index":562,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["map",{"_index":767,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["map((elementwithposition",{"_index":1058,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["map((submission",{"_index":3244,"title":{},"body":{"injectables/TaskUC.html":{}}}],["mapcreatenewstodomain",{"_index":2566,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapcreatenewstodomain(params",{"_index":2569,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapdomaintoresponse",{"_index":6281,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapelementtoentity",{"_index":978,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapelementtoentity(modelentity",{"_index":986,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapfootodomain",{"_index":6282,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapgridelementtomodel",{"_index":979,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapgridelementtomodel(elementwithposition",{"_index":989,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapnewsscopetodomain",{"_index":2567,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapnewsscopetodomain(query",{"_index":2571,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapped",{"_index":2127,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mappedelements",{"_index":1057,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapper",{"_index":3362,"title":{},"body":{"injectables/UserUC.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mapper.ts",{"_index":6280,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mapper/dashboard.mapper",{"_index":732,"title":{},"body":{"controllers/DashboardController.html":{}}}],["mapper/news.mapper",{"_index":2504,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["mapper/task.mapper",{"_index":3061,"title":{},"body":{"controllers/TaskController.html":{}}}],["mappers",{"_index":6588,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mapping",{"_index":6060,"title":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mapreferencetoentity",{"_index":980,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapreferencetoentity(modelentity",{"_index":991,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapreferencetomodel",{"_index":981,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["mapreferencetomodel(reference",{"_index":993,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maps",{"_index":6085,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["maptoentity",{"_index":982,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptoentity(modelentity",{"_index":995,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptomodel",{"_index":983,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptomodel(entity",{"_index":997,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["maptoresponse",{"_index":949,"title":{},"body":{"classes/DashboardMapper.html":{},"classes/NewsMapper.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/UserInfoMapper.html":{}}}],["maptoresponse(dashboard",{"_index":950,"title":{},"body":{"classes/DashboardMapper.html":{}}}],["maptoresponse(news",{"_index":2573,"title":{},"body":{"classes/NewsMapper.html":{}}}],["maptoresponse(schoolinfo",{"_index":2893,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["maptoresponse(target",{"_index":3015,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["maptoresponse(taskwithstatus",{"_index":3078,"title":{},"body":{"classes/TaskMapper.html":{}}}],["maptoresponse(user",{"_index":2837,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["mapupdatenewstodomain",{"_index":2568,"title":{},"body":{"classes/NewsMapper.html":{}}}],["mapupdatenewstodomain(params",{"_index":2575,"title":{},"body":{"classes/NewsMapper.html":{}}}],["march",{"_index":5579,"title":{},"body":{"license.html":{}}}],["marked",{"_index":1440,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"license.html":{}}}],["marker",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["marks",{"_index":5450,"title":{},"body":{"license.html":{}}}],["masks",{"_index":5137,"title":{},"body":{"license.html":{}}}],["master",{"_index":4133,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["match",{"_index":1266,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"classes/ErrorResponse.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["matched",{"_index":388,"title":{},"body":{"classes/BusinessError.html":{}}}],["matches",{"_index":6563,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["matching",{"_index":60,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["material",{"_index":5249,"title":{},"body":{"license.html":{}}}],["materially",{"_index":5417,"title":{},"body":{"license.html":{}}}],["materials",{"_index":3836,"title":{},"body":{"changelog.html":{}}}],["math",{"_index":1082,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["math.floor(index",{"_index":856,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["matrix",{"_index":3842,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matrixchat",{"_index":6116,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["matter",{"_index":6179,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["max",{"_index":2802,"title":{},"body":{"classes/PaginationQuery.html":{},"changelog.html":{}}}],["max(100",{"_index":2804,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maximum",{"_index":2795,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["maxsubmissions",{"_index":2156,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["maxworkers",{"_index":5855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maybe",{"_index":2417,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["md",{"_index":5720,"title":{},"body":{"todo.html":{}}}],["me(@currentuser",{"_index":3332,"title":{},"body":{"controllers/UserController.html":{}}}],["me(currentuser",{"_index":3325,"title":{},"body":{"controllers/UserController.html":{}}}],["meaning",{"_index":5458,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":5045,"title":{},"body":{"index.html":{}}}],["means",{"_index":5005,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["measure",{"_index":5269,"title":{},"body":{"license.html":{}}}],["measures",{"_index":5008,"title":{},"body":{"index.html":{},"license.html":{}}}],["mechanism",{"_index":3760,"title":{},"body":{"changelog.html":{}}}],["mechanisms",{"_index":6253,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["medium",{"_index":5292,"title":{},"body":{"license.html":{}}}],["meet",{"_index":5304,"title":{},"body":{"license.html":{}}}],["meets",{"_index":5191,"title":{},"body":{"license.html":{}}}],["member",{"_index":1606,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"changelog.html":{}}}],["members",{"_index":4010,"title":{},"body":{"changelog.html":{}}}],["membership",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["memory",{"_index":2399,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["menu",{"_index":5188,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":5618,"title":{},"body":{"license.html":{}}}],["mere",{"_index":5171,"title":{},"body":{"license.html":{}}}],["merge",{"_index":5050,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["merged",{"_index":3950,"title":{},"body":{"changelog.html":{}}}],["mergeelementintoposition",{"_index":760,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["mergeelementintoposition(element",{"_index":785,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["merges",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["mergify",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["merging",{"_index":5507,"title":{},"body":{"license.html":{}}}],["merlin",{"_index":3744,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":15,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ILogger.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["messages",{"_index":6144,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["messenger",{"_index":3728,"title":{},"body":{"changelog.html":{}}}],["messuring",{"_index":3845,"title":{},"body":{"changelog.html":{}}}],["met",{"_index":5236,"title":{},"body":{"license.html":{}}}],["meta",{"_index":6626,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["metadata",{"_index":1023,"title":{},"body":{"classes/DashboardModelMapper.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["metadata.displaycolor",{"_index":1029,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["metadata.id",{"_index":1026,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["metadata.title",{"_index":1031,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["method",{"_index":1646,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["methods",{"_index":18,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["metic",{"_index":4380,"title":{},"body":{"changelog.html":{}}}],["metrics",{"_index":4217,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["microservice",{"_index":6124,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["microservices",{"_index":6067,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["middleware",{"_index":4452,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["migrate",{"_index":4875,"title":{},"body":{"dependencies.html":{}}}],["migrated",{"_index":4688,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["migration",{"_index":2636,"title":{},"body":{"modules/NewsModule.html":{},"changelog.html":{}}}],["migrations",{"_index":3917,"title":{},"body":{"changelog.html":{}}}],["migrations/scheduled",{"_index":2638,"title":{},"body":{"modules/NewsModule.html":{}}}],["mikro",{"_index":217,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"injectables/UserRepo.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mikroorm",{"_index":2406,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{}}}],["mikroorm.init",{"_index":5898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mikroorm/asynclocalstorage",{"_index":5713,"title":{},"body":{"todo.html":{}}}],["mikroormcoremodule",{"_index":2427,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports",{"_index":2429,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormcoremodule.exports.push(mongomemoryserver",{"_index":2430,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule",{"_index":2375,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.forroot",{"_index":2386,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mikroormmodule.forrootasync",{"_index":2412,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports",{"_index":2425,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports.length",{"_index":2426,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodule.imports[0",{"_index":2428,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmoduleasyncoptions",{"_index":2407,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mikroormmodulesyncoptions",{"_index":2422,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":3296,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["mimetype",{"_index":94,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["min",{"_index":2449,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(0",{"_index":2454,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/PaginationQuery.html":{}}}],["min(1",{"_index":2803,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minimizes",{"_index":6190,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["minimum",{"_index":2794,"title":{},"body":{"classes/PaginationQuery.html":{}}}],["minio",{"_index":3887,"title":{},"body":{"changelog.html":{}}}],["minor",{"_index":4365,"title":{},"body":{"changelog.html":{}}}],["minus",{"_index":6306,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["misc",{"_index":6646,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["miscellaneous",{"_index":4942,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misconfigured",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["misrepresentation",{"_index":5441,"title":{},"body":{"license.html":{}}}],["missing",{"_index":1664,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["mission",{"_index":2707,"title":{},"body":{"classes/NewsScope.html":{}}}],["mix",{"_index":6050,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mixwith",{"_index":4876,"title":{},"body":{"dependencies.html":{}}}],["mkdir",{"_index":1767,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdir(folderpath",{"_index":1772,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp",{"_index":1768,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mkdtemp(dirpath",{"_index":1776,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["mm",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["mocha",{"_index":4283,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["mocha's",{"_index":6485,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocked",{"_index":6541,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocking",{"_index":6529,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mocks",{"_index":6531,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mode",{"_index":3714,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["model",{"_index":685,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modelentity",{"_index":988,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["modelentity.color",{"_index":1003,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.gridelements",{"_index":1060,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.gridelements.init",{"_index":1012,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.gridelements.isinitialized",{"_index":1011,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.references.init",{"_index":1005,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.references.isinitialized",{"_index":1004,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.title",{"_index":1002,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.xpos",{"_index":1008,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["modelentity.ypos",{"_index":1009,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["models",{"_index":2779,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["modification",{"_index":5133,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":5194,"title":{},"body":{"license.html":{}}}],["modified",{"_index":4709,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["modifier",{"_index":4226,"title":{},"body":{"changelog.html":{}}}],["modifies",{"_index":5309,"title":{},"body":{"license.html":{}}}],["modifing",{"_index":4034,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":5102,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":5162,"title":{},"body":{"license.html":{}}}],["modifytimestamp",{"_index":4232,"title":{},"body":{"changelog.html":{}}}],["modularization",{"_index":5907,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["modularize",{"_index":1539,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["module",{"_index":111,"title":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["module.createnestapplication",{"_index":6601,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(entitymanager",{"_index":6604,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(mikroorm",{"_index":6603,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsrepo);test",{"_index":6570,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.get(newsuc",{"_index":6569,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module.ts",{"_index":5841,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/application",{"_index":6525,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["module/repo",{"_index":6314,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["module/uc",{"_index":6309,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modulefileextensions",{"_index":5824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modulenamemapper",{"_index":5851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["moduleref",{"_index":2408,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(catscontroller",{"_index":6540,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["moduleref.get(sampleservice",{"_index":6539,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["modules",{"_index":113,"title":{"modules.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/EncryptionModule.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["modules/authentication/auth.module",{"_index":2948,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/authorization/authorization.module.ts",{"_index":6319,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers",{"_index":6317,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/feathers/feathers.module.ts",{"_index":6318,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["modules/files/files.module",{"_index":2938,"title":{},"body":{"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{}}}],["modules/learnroom/learnroom.module",{"_index":2956,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/mail/mail.module",{"_index":2955,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/management/management.module",{"_index":2937,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["modules/news/news.module",{"_index":2954,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/task/task.module",{"_index":2952,"title":{},"body":{"modules/ServerModule.html":{}}}],["modules/user/user.module",{"_index":2953,"title":{},"body":{"modules/ServerModule.html":{}}}],["moment",{"_index":4878,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":357,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongo.ensureinstance",{"_index":2415,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongo.geturi",{"_index":2416,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongod",{"_index":2434,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"additional-documentation/nestjs-application.html":{}}}],["mongodatabasemoduleoptions",{"_index":2402,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/typealiases.html":{}}}],["mongodb",{"_index":1228,"title":{},"body":{"injectables/DatabaseManagementService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["mongoexport",{"_index":1267,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongoimport",{"_index":1295,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["mongomemorydatabasemodule",{"_index":2397,"title":{"modules/MongoMemoryDatabaseModule.html":{}},"body":{"modules/MongoMemoryDatabaseModule.html":{},"modules.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemorydatabasemodule.forroot",{"_index":6553,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mongomemoryserver",{"_index":2409,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongomemoryserver.create",{"_index":2414,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":2961,"title":{},"body":{"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["monitoring",{"_index":6154,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["moodle",{"_index":4896,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":3408,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["moreover",{"_index":5480,"title":{},"body":{"license.html":{}}}],["mostly",{"_index":6458,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["mount",{"_index":3659,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mounted",{"_index":4996,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["mounts",{"_index":5695,"title":{},"body":{"todo.html":{}}}],["move",{"_index":3366,"title":{},"body":{"injectables/UserUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["moved",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["moveelement",{"_index":704,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{}}}],["moveelement(dashboardid",{"_index":709,"title":{},"body":{"controllers/DashboardController.html":{}}}],["moveelement(from",{"_index":788,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["moveelementondashboard",{"_index":1108,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementondashboard(dashboardid",{"_index":1113,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["moveelementparams",{"_index":711,"title":{"classes/MoveElementParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["moveelementposition",{"_index":2443,"title":{"classes/MoveElementPosition.html":{}},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["ms",{"_index":1418,"title":{},"body":{"controllers/DelayController.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["msg",{"_index":1868,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":4544,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multilayered",{"_index":6053,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["multiple",{"_index":913,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GlobalValidationPipe.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["mylearningapp",{"_index":6082,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["mylearningappadapter",{"_index":6084,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["n",{"_index":338,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["n21",{"_index":4531,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":28,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["named",{"_index":5043,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nameonly",{"_index":1241,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["names",{"_index":1269,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/NewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["naming",{"_index":3422,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nanoid",{"_index":4898,"title":{},"body":{"dependencies.html":{}}}],["nat",{"_index":3905,"title":{},"body":{"changelog.html":{}}}],["native",{"_index":4915,"title":{},"body":{"dependencies.html":{}}}],["nature",{"_index":5320,"title":{},"body":{"license.html":{}}}],["nbc",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["nbc_importpassword",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["nbc_importurl",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["nbc_importuser",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["ne",{"_index":3176,"title":{},"body":{"classes/TaskScope.html":{}}}],["necessary",{"_index":4446,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["need",{"_index":4970,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["needed",{"_index":3446,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["needing",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":4099,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest",{"_index":1892,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["nest/legacy",{"_index":5724,"title":{},"body":{"todo.html":{}}}],["nest:build",{"_index":5925,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:build:all",{"_index":5930,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console",{"_index":5949,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:console:dev",{"_index":5950,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:build",{"_index":5943,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:docs:serve",{"_index":5945,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint",{"_index":5962,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:lint:fix",{"_index":5963,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:prebuild",{"_index":5924,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start",{"_index":5933,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:debug",{"_index":5937,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:dev",{"_index":5935,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:start:prod",{"_index":5940,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test",{"_index":5829,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:all",{"_index":5957,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:cov",{"_index":5958,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:debug",{"_index":5961,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nest:test:e2e",{"_index":5831,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:spec",{"_index":5830,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["nest:test:watch",{"_index":5959,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nested",{"_index":4626,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nestexpress.set('feathersapp",{"_index":1668,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["nestinterceptor",{"_index":1413,"title":{},"body":{"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":417,"title":{"additional-documentation/nestjs-application.html":{}},"body":{"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"classes/DeleteFilesConsole.html":{},"modules/ErrorModule.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/Options.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["nestjs/clithen",{"_index":5982,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["nestjs/common",{"_index":46,"title":{},"body":{"classes/ApiValidationError.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"injectables/LessonRepo.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1416,"title":{},"body":{"controllers/DelayController.html":{},"modules/ErrorModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"modules/InterceptorModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":4810,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4812,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":690,"title":{},"body":{"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"classes/ResolvedUser.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"controllers/UserController.html":{},"classes/UserInfoResponse.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":1415,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{}}}],["nestjs/testing.test",{"_index":6530,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["nestjs@7",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["nestjs@8",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["net",{"_index":5015,"title":{},"body":{"index.html":{}}}],["network",{"_index":5074,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["neutral",{"_index":6180,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["never",{"_index":175,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/FeathersAuthProvider.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["new",{"_index":84,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"classes/UserInfoMapper.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newgroupname",{"_index":847,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["newly",{"_index":6360,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["news",{"_index":550,"title":{"classes/News.html":{}},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news.content",{"_index":2585,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.controller",{"_index":2632,"title":{},"body":{"modules/NewsModule.html":{}}}],["news.controller.ts",{"_index":3259,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.controller.ts:22",{"_index":3263,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["news.createdat",{"_index":2606,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.createinstance(targetmodel",{"_index":2755,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news.displayat",{"_index":2587,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.id",{"_index":2581,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.params.ts",{"_index":662,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{},"miscellaneous/variables.html":{}}}],["news.params.ts:14",{"_index":3313,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:15",{"_index":687,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:21",{"_index":667,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/UpdateNewsParams.html":{}}}],["news.params.ts:28",{"_index":3312,"title":{},"body":{"classes/UpdateNewsParams.html":{}}}],["news.params.ts:29",{"_index":676,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:37",{"_index":686,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.params.ts:44",{"_index":681,"title":{},"body":{"classes/CreateNewsParams.html":{}}}],["news.permissions",{"_index":2610,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.source",{"_index":2589,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.sourcedescription",{"_index":2591,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.target.id",{"_index":2593,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.targetmodel",{"_index":2595,"title":{},"body":{"classes/NewsMapper.html":{},"injectables/NewsUc.html":{}}}],["news.title",{"_index":2583,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updatedat",{"_index":2608,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news.updater",{"_index":2602,"title":{},"body":{"classes/NewsMapper.html":{}}}],["news:104",{"_index":559,"title":{},"body":{"classes/CourseNews.html":{}}}],["news:110",{"_index":3257,"title":{},"body":{"classes/TeamNews.html":{}}}],["news:31",{"_index":583,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:35",{"_index":560,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:39",{"_index":565,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:42",{"_index":573,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:45",{"_index":578,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:48",{"_index":579,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:55",{"_index":581,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:58",{"_index":575,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:61",{"_index":564,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:64",{"_index":585,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:66",{"_index":574,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:79",{"_index":588,"title":{},"body":{"classes/CourseNews.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["news:98",{"_index":2903,"title":{},"body":{"classes/SchoolNews.html":{}}}],["news[key",{"_index":2776,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news].param.ts",{"_index":6330,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news].response.dto",{"_index":6334,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["news_add_target_schools",{"_index":2637,"title":{},"body":{"modules/NewsModule.html":{}}}],["news_create",{"_index":2753,"title":{},"body":{"injectables/NewsUc.html":{}}}],["news_edit",{"_index":2748,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["news_sources",{"_index":2556,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["news_sources[number",{"_index":2558,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{}}}],["news_view",{"_index":2747,"title":{},"body":{"injectables/NewsUc.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newscontroller",{"_index":2474,"title":{"controllers/NewsController.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["newscount",{"_index":2764,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsentities",{"_index":2664,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentities.filter((news",{"_index":2671,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsentity",{"_index":2661,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["newsfilterquery",{"_index":2486,"title":{"classes/NewsFilterQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{}}}],["newsid",{"_index":2484,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslist",{"_index":2512,"title":{},"body":{"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.length",{"_index":2769,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslist.map((news",{"_index":2516,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newslist.map(async",{"_index":2766,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newslistresponse",{"_index":2488,"title":{"classes/NewsListResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newslistresponse(dtolist",{"_index":2517,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper",{"_index":2503,"title":{"classes/NewsMapper.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.mapcreatenewstodomain(params",{"_index":2510,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapnewsscopetodomain(scope",{"_index":2514,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["newsmapper.maptoresponse(news",{"_index":2511,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["newsmapper.mapupdatenewstodomain(params",{"_index":2523,"title":{},"body":{"controllers/NewsController.html":{}}}],["newsmodule",{"_index":2619,"title":{"modules/NewsModule.html":{}},"body":{"modules/NewsModule.html":{},"modules/ServerModule.html":{},"modules.html":{},"overview.html":{}}}],["newsrepo",{"_index":2624,"title":{"injectables/NewsRepo.html":{}},"body":{"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsresponse",{"_index":2502,"title":{"classes/NewsResponse.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{}}}],["newsscope",{"_index":2656,"title":{"classes/NewsScope.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{}}}],["newstarget",{"_index":591,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TeamNews.html":{},"miscellaneous/typealiases.html":{}}}],["newstargetfilter",{"_index":2645,"title":{"interfaces/NewsTargetFilter.html":{}},"body":{"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["newstargetmodel",{"_index":164,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/enumerations.html":{}}}],["newstargetmodel.course",{"_index":610,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.school",{"_index":190,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newstargetmodel.team",{"_index":619,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["newsuc",{"_index":2500,"title":{"injectables/NewsUc.html":{}},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{},"injectables/NewsUc.html":{},"controllers/TeamNewsController.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["newsuc.getrequiredpermissions(ispublished",{"_index":2773,"title":{},"body":{"injectables/NewsUc.html":{}}}],["newsuc.getrequiredpermissions(unpublished",{"_index":2760,"title":{},"body":{"injectables/NewsUc.html":{}}}],["nexboard",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["next",{"_index":613,"title":{},"body":{"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["next.handle().pipe",{"_index":3301,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["next.handle().pipe(tap",{"_index":1513,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["niedersachsen",{"_index":4249,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":1779,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":4993,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["node_env",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["nodejs",{"_index":6228,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["nodeps",{"_index":4893,"title":{},"body":{"dependencies.html":{}}}],["nodeps.git",{"_index":4895,"title":{},"body":{"dependencies.html":{}}}],["non",{"_index":1544,"title":{},"body":{"classes/EncryptedStringType.html":{},"classes/TaskScope.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["noncommercially",{"_index":5352,"title":{},"body":{"license.html":{}}}],["none",{"_index":4569,"title":{},"body":{"changelog.html":{}}}],["nonemptytargets",{"_index":2784,"title":{},"body":{"injectables/NewsUc.html":{}}}],["normal",{"_index":4037,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["normally",{"_index":5380,"title":{},"body":{"license.html":{}}}],["not_found_error",{"_index":5892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["not_found_error_type",{"_index":5792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notable",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":220,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/MongoMemoryDatabaseModule.html":{},"index.html":{}}}],["notfound",{"_index":6170,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["notfoundexception",{"_index":794,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["notfoundexception('no",{"_index":868,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["notfoundexception(`the",{"_index":2393,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{}}}],["nothing",{"_index":5492,"title":{},"body":{"license.html":{}}}],["notice",{"_index":5182,"title":{},"body":{"license.html":{}}}],["notices",{"_index":5178,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":5481,"title":{},"body":{"license.html":{}}}],["notify",{"_index":5477,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":5431,"title":{},"body":{"license.html":{}}}],["november",{"_index":5054,"title":{},"body":{"license.html":{}}}],["now",{"_index":674,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["now.getfullyear()}_",{"_index":1316,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now.getmonth",{"_index":1317,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["now}ms",{"_index":1515,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["npm",{"_index":3425,"title":{},"body":{"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["null",{"_index":1624,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"injectables/NewsUc.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{}}}],["nullish",{"_index":1543,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["number",{"_index":31,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"classes/ErrorResponse.html":{},"interfaces/FeathersError.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/IPagination.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/JwtPayload.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/Submission.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"injectables/TimeoutInterceptor.html":{},"classes/ValidationError.html":{},"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["numbered",{"_index":5610,"title":{},"body":{"license.html":{}}}],["numberoffiles",{"_index":1471,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["numbers",{"_index":5764,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["numeric",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["nuxt",{"_index":3824,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["nvmrc",{"_index":5908,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["o",{"_index":1162,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["o.id",{"_index":3052,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["oauth",{"_index":4297,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["oauth2",{"_index":4092,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["object",{"_index":2559,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["object.assign(this",{"_index":601,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/TeamNews.html":{}}}],["object.entries(params",{"_index":2775,"title":{},"body":{"injectables/NewsUc.html":{}}}],["object.values(constraint",{"_index":86,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["object.values(newstargetmodel",{"_index":695,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":210,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["objectid().tohexstring",{"_index":5879,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["objectid().tostring",{"_index":1080,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["objectid.createfromhexstring(id",{"_index":906,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["objectid.isvalid(value",{"_index":2821,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["objects",{"_index":354,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["obligate",{"_index":5591,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":5365,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":5271,"title":{},"body":{"license.html":{}}}],["observable",{"_index":1504,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["obsolete",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["obviously",{"_index":6106,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occasionally",{"_index":5351,"title":{},"body":{"license.html":{}}}],["occurred",{"_index":1870,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["occurring",{"_index":5489,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":4144,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["odered",{"_index":2727,"title":{},"body":{"injectables/NewsUc.html":{}}}],["of.ts",{"_index":5758,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["offer",{"_index":5099,"title":{},"body":{"license.html":{}}}],["offered",{"_index":5371,"title":{},"body":{"license.html":{}}}],["offering",{"_index":5355,"title":{},"body":{"license.html":{}}}],["offers",{"_index":5947,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["official",{"_index":5196,"title":{},"body":{"license.html":{}}}],["officialschoolnumber",{"_index":4028,"title":{},"body":{"changelog.html":{}}}],["officialschoonnumber",{"_index":3868,"title":{},"body":{"changelog.html":{}}}],["offline",{"_index":3947,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":3143,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["ok",{"_index":4520,"title":{},"body":{"changelog.html":{}}}],["ok/err",{"_index":6389,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["okay",{"_index":6466,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["old",{"_index":3609,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["older",{"_index":4696,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["omit",{"_index":2347,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{}}}],["once",{"_index":6004,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["one",{"_index":1343,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["onepassword",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["onerror",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["ones",{"_index":6305,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["onetomany",{"_index":901,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["onetomany('dashboardgridelementmodel",{"_index":923,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["onetomany('defaultgridreferencemodel",{"_index":896,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["onetomany('submission",{"_index":2126,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["oneweekago",{"_index":3250,"title":{},"body":{"injectables/TaskUC.html":{}}}],["oneweekago.setdate(oneweekago.getdate",{"_index":3251,"title":{},"body":{"injectables/TaskUC.html":{}}}],["onload",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["onmoduledestroy",{"_index":2404,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["onto",{"_index":6097,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["onupdate",{"_index":244,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["open",{"_index":3683,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["openapi",{"_index":3459,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["opened",{"_index":5938,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["operate",{"_index":5639,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["operated",{"_index":5359,"title":{},"body":{"license.html":{}}}],["operates",{"_index":6457,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["operating",{"_index":5212,"title":{},"body":{"license.html":{}}}],["operation",{"_index":4764,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["operational",{"_index":4231,"title":{},"body":{"changelog.html":{}}}],["operations",{"_index":3041,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["operator",{"_index":2907,"title":{},"body":{"classes/Scope.html":{},"license.html":{}}}],["opportunity",{"_index":5598,"title":{},"body":{"license.html":{}}}],["opposed",{"_index":6628,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["ops",{"_index":3651,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["opt",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":6340,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["optimizations",{"_index":6634,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["option",{"_index":2424,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optionaldatathere",{"_index":6446,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["optionally",{"_index":1290,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["options",{"_index":1136,"title":{"interfaces/Options.html":{}},"body":{"classes/DatabaseManagementConsole.html":{},"modules/EncryptionModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"modules/ServerModule.html":{},"injectables/TaskRepo.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["options.collection",{"_index":1157,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options.exchange",{"_index":2351,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options.order",{"_index":2762,"title":{},"body":{"injectables/NewsUc.html":{}}}],["options.routingkey",{"_index":2356,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{}}}],["options.symmetriccipherkey",{"_index":1563,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["options.ts",{"_index":2011,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.uri",{"_index":2353,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["options?.collection",{"_index":1156,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["options?.override",{"_index":1165,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["ora",{"_index":418,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["ora.ora",{"_index":414,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["orchestration",{"_index":4023,"title":{},"body":{"changelog.html":{}}}],["orchestrator",{"_index":4117,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":2012,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["orderby",{"_index":1302,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["orderby(bsondocuments",{"_index":1386,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["ordering",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["organisation",{"_index":4273,"title":{},"body":{"changelog.html":{}}}],["organization",{"_index":5503,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":5144,"title":{},"body":{"license.html":{}}}],["oriented",{"_index":6006,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["origin",{"_index":4063,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["original",{"_index":4712,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["orm",{"_index":2432,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["orm.close",{"_index":6608,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm.io",{"_index":5993,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["orm/core",{"_index":218,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"dependencies.html":{}}}],["orm/core/enums",{"_index":2655,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["orm/entitymanager",{"_index":6545,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["orm/mikro",{"_index":6382,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["orm/mongodb",{"_index":219,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"injectables/BaseRepo.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementService.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"injectables/FilesRepo.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/IDashboardRepo.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/RoleRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/UserRepo.html":{},"dependencies.html":{}}}],["orm/nestjs",{"_index":2376,"title":{},"body":{"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ServerModule.html":{},"dependencies.html":{}}}],["orphaned",{"_index":1014,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["os",{"_index":1734,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["os.eol",{"_index":1770,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["others",{"_index":1947,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["otherwise",{"_index":2421,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ours",{"_index":6296,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["out",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DeleteFilesUc.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"license.html":{},"overview.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["outcome",{"_index":6475,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["outdated",{"_index":5697,"title":{},"body":{"todo.html":{}}}],["outgoing",{"_index":6175,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["output",{"_index":2923,"title":{},"body":{"classes/ServerConsole.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["outputs",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["outside",{"_index":855,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["over",{"_index":3772,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["overall",{"_index":6587,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overhead",{"_index":6078,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overridden",{"_index":6439,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["override",{"_index":1149,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overrideguard(jwtauthguard",{"_index":6592,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrideprovider(authorizationservice",{"_index":6600,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["overrides",{"_index":1565,"title":{},"body":{"modules/ErrorModule.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["overrides/configures",{"_index":441,"title":{},"body":{"modules/CoreModule.html":{}}}],["overriding",{"_index":5760,"title":{},"body":{"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["overview",{"_index":3522,"title":{"overview.html":{}},"body":{"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["overwritten",{"_index":3977,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["owned",{"_index":5532,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owner",{"_index":6044,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ownership",{"_index":2560,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["owns",{"_index":3116,"title":{},"body":{"injectables/TaskRepo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["p",{"_index":5914,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["package",{"_index":4407,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"todo.html":{}}}],["packaged",{"_index":5315,"title":{},"body":{"license.html":{}}}],["packages",{"_index":5688,"title":{},"body":{"todo.html":{}}}],["packaging",{"_index":5206,"title":{},"body":{"license.html":{}}}],["page",{"_index":2793,"title":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}},"body":{"classes/PaginationQuery.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["pages",{"_index":2799,"title":{},"body":{"classes/PaginationQuery.html":{},"index.html":{}}}],["paginate",{"_index":1619,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["pagination",{"_index":2013,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/LessonRepo.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pagination.query",{"_index":6271,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pagination?.limit",{"_index":3145,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["pagination?.skip",{"_index":3144,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["pagination].query.ts",{"_index":6332,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationquery",{"_index":2487,"title":{"classes/PaginationQuery.html":{}},"body":{"controllers/NewsController.html":{},"classes/PaginationQuery.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paginationresponse",{"_index":2544,"title":{"classes/PaginationResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["paginationresponse:102",{"_index":2548,"title":{},"body":{"classes/NewsListResponse.html":{}}}],["paginationresponse:14",{"_index":2551,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:17",{"_index":2550,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:20",{"_index":2549,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/TaskListResponse.html":{}}}],["paginationresponse:55",{"_index":3073,"title":{},"body":{"classes/TaskListResponse.html":{}}}],["paging",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["papaparse",{"_index":4902,"title":{},"body":{"dependencies.html":{}}}],["paper",{"_index":5662,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":5468,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":5542,"title":{},"body":{"license.html":{}}}],["parallel",{"_index":3512,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["parallelize",{"_index":3812,"title":{},"body":{"changelog.html":{}}}],["param",{"_index":189,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BsonConverter.html":{},"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/DeleteFilesUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{}}}],["param('id",{"_index":740,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{}}}],["param('teamid",{"_index":3266,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["param)).rejects.tothrow(badrequestexception",{"_index":6521,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param)).tothrow(badrequestexception",{"_index":6519,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["param.ts",{"_index":6270,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["paramdisplayat",{"_index":2754,"title":{},"body":{"injectables/NewsUc.html":{}}}],["parameter",{"_index":2518,"title":{},"body":{"controllers/NewsController.html":{},"classes/TaskScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["params",{"_index":710,"title":{},"body":{"controllers/DashboardController.html":{},"injectables/DashboardUc.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["params.content",{"_index":2615,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.displayat",{"_index":2616,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.from",{"_index":744,"title":{},"body":{"controllers/DashboardController.html":{}}}],["params.target",{"_index":2751,"title":{},"body":{"injectables/NewsUc.html":{}}}],["params.targetid",{"_index":2618,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.targetmodel",{"_index":2617,"title":{},"body":{"classes/NewsMapper.html":{}}}],["params.title",{"_index":749,"title":{},"body":{"controllers/DashboardController.html":{},"classes/NewsMapper.html":{}}}],["params.to",{"_index":745,"title":{},"body":{"controllers/DashboardController.html":{}}}],["param|query].ts",{"_index":6269,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parent",{"_index":3858,"title":{},"body":{"changelog.html":{}}}],["parentids",{"_index":3117,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.courseids",{"_index":3128,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.lessonids",{"_index":3130,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentids.teacherid",{"_index":3126,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope",{"_index":3124,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bycourseids(parentids.courseids",{"_index":3129,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.bylessonids(parentids.lessonids",{"_index":3131,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parentidscope.byteacherid(parentids.teacherid",{"_index":3127,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["parents",{"_index":3115,"title":{},"body":{"injectables/TaskRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["parse",{"_index":4345,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parsed",{"_index":6329,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parseobjectidpipe",{"_index":727,"title":{"injectables/ParseObjectIdPipe.html":{}},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"injectables/ParseObjectIdPipe.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["parser",{"_index":4832,"title":{},"body":{"dependencies.html":{}}}],["parsing",{"_index":3628,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["part",{"_index":4992,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["partial",{"_index":1987,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/IFindOptions.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["partialtype",{"_index":2450,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{}}}],["particular",{"_index":5200,"title":{},"body":{"license.html":{}}}],["parties",{"_index":5170,"title":{},"body":{"license.html":{}}}],["parts",{"_index":5229,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["party",{"_index":5360,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["party's",{"_index":5508,"title":{},"body":{"license.html":{}}}],["pascalcase",{"_index":6297,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pass",{"_index":1944,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["passed",{"_index":5870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":2230,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":2232,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":2234,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":2390,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{}}}],["passwordrecovery",{"_index":4013,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":566,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["patch",{"_index":721,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"changelog.html":{}}}],["patch(':id",{"_index":2498,"title":{},"body":{"controllers/NewsController.html":{}}}],["patch(':id/element",{"_index":719,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patch(':id/moveelement",{"_index":739,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patch(':id/moveelement')@apibody({type",{"_index":712,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroup",{"_index":705,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroup(dashboardid",{"_index":715,"title":{},"body":{"controllers/DashboardController.html":{}}}],["patchgroupparams",{"_index":718,"title":{"classes/PatchGroupParams.html":{}},"body":{"controllers/DashboardController.html":{},"classes/PatchGroupParams.html":{}}}],["patching",{"_index":2824,"title":{},"body":{"classes/PatchGroupParams.html":{},"changelog.html":{}}}],["patent",{"_index":5467,"title":{},"body":{"license.html":{}}}],["patents",{"_index":5527,"title":{},"body":{"license.html":{}}}],["path",{"_index":1297,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["path's",{"_index":5852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.join(...paths",{"_index":1782,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["paths",{"_index":1281,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":696,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoResponse.html":{},"classes/TargetInfoResponse.html":{},"classes/UserInfoResponse.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["payload",{"_index":2227,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{}}}],["payload.ts",{"_index":2219,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["payload.user",{"_index":2246,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment",{"_index":5572,"title":{},"body":{"license.html":{}}}],["peer",{"_index":5367,"title":{},"body":{"license.html":{}}}],["peers",{"_index":5370,"title":{},"body":{"license.html":{}}}],["pencil",{"_index":4069,"title":{},"body":{"changelog.html":{}}}],["per",{"_index":6284,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["performance",{"_index":3924,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["performing",{"_index":5220,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":5476,"title":{},"body":{"license.html":{}}}],["permission",{"_index":570,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["permission.includes('news",{"_index":2789,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions",{"_index":166,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolNews.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["permissions.every((p",{"_index":199,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["permissions.filter((permission",{"_index":2788,"title":{},"body":{"injectables/NewsUc.html":{}}}],["permissions.refid",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["permissions.refpermmodel",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["permissive",{"_index":5297,"title":{},"body":{"license.html":{}}}],["permit",{"_index":5328,"title":{},"body":{"license.html":{}}}],["permits",{"_index":5115,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":5063,"title":{},"body":{"license.html":{}}}],["permittedcourses",{"_index":3046,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["permittedcourses.map((o",{"_index":3051,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["perpetuity",{"_index":5408,"title":{},"body":{"license.html":{}}}],["persist",{"_index":301,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persist(entity",{"_index":314,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persist/make",{"_index":6345,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistall",{"_index":302,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistall(entities",{"_index":317,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistallandflush",{"_index":303,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistallandflush(entities",{"_index":319,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistance",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["persistandflush",{"_index":304,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persistandflush(entity",{"_index":321,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/DashboardRepo.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["persisted",{"_index":335,"title":{},"body":{"injectables/BaseRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["persistence",{"_index":6348,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["persistent",{"_index":2369,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["persisting",{"_index":6437,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["person",{"_index":6469,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["personal",{"_index":3838,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["pertinent",{"_index":5589,"title":{},"body":{"license.html":{}}}],["phenomenon",{"_index":6359,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["physical",{"_index":5336,"title":{},"body":{"license.html":{}}}],["physically",{"_index":5349,"title":{},"body":{"license.html":{}}}],["physics",{"_index":1086,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["pick",{"_index":4156,"title":{},"body":{"changelog.html":{}}}],["pieces",{"_index":5092,"title":{},"body":{"license.html":{}}}],["pin",{"_index":3857,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["pins",{"_index":4026,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":1928,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pipe/global",{"_index":3387,"title":{},"body":{"modules/ValidationModule.html":{}}}],["pipeline",{"_index":3788,"title":{},"body":{"changelog.html":{}}}],["pipes",{"_index":6287,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["pipetransform",{"_index":2819,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["pipline",{"_index":4364,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":3368,"title":{},"body":{"injectables/UserUC.html":{},"changelog.html":{},"license.html":{}}}],["plain",{"_index":355,"title":{},"body":{"injectables/BsonConverter.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["plainsecrets",{"_index":4214,"title":{},"body":{"changelog.html":{}}}],["plaintextcontent",{"_index":104,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["plaintextmailcontent",{"_index":102,"title":{"interfaces/PlainTextMailContent.html":{}},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["platform",{"_index":1530,"title":{},"body":{"classes/EncryptedStringType.html":{},"changelog.html":{}}}],["please",{"_index":6135,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["plugin",{"_index":4853,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":5512,"title":{},"body":{"license.html":{}}}],["point",{"_index":669,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["pointer",{"_index":5659,"title":{},"body":{"license.html":{}}}],["policy",{"_index":4641,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["polymorphic",{"_index":920,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["pool",{"_index":4196,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["populate",{"_index":2667,"title":{},"body":{"injectables/NewsRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["populated",{"_index":594,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["populates",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["port",{"_index":5919,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["portion",{"_index":5374,"title":{},"body":{"license.html":{}}}],["pos",{"_index":784,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"miscellaneous/variables.html":{}}}],["pos.x",{"_index":850,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["pos.y",{"_index":852,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["position",{"_index":774,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"changelog.html":{}}}],["position.groupindex",{"_index":876,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["positionfromgridindex",{"_index":761,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["positionfromgridindex(index",{"_index":790,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["possesses",{"_index":5346,"title":{},"body":{"license.html":{}}}],["possession",{"_index":5313,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":5641,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["possible",{"_index":4160,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post",{"_index":1185,"title":{},"body":{"controllers/DatabaseManagementController.html":{},"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["post('export",{"_index":1178,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('export/:collectionname",{"_index":1175,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('seed",{"_index":1183,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["post('seed/:collectionname",{"_index":1181,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["potential",{"_index":3934,"title":{},"body":{"changelog.html":{}}}],["povider",{"_index":5707,"title":{},"body":{"todo.html":{}}}],["power",{"_index":5281,"title":{},"body":{"license.html":{}}}],["pr",{"_index":5023,"title":{},"body":{"index.html":{}}}],["practical",{"_index":5076,"title":{},"body":{"license.html":{}}}],["practice",{"_index":5546,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["practices",{"_index":6621,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["practices/layers/orm",{"_index":5712,"title":{},"body":{"todo.html":{}}}],["preamble",{"_index":5067,"title":{},"body":{"license.html":{}}}],["precise",{"_index":5129,"title":{},"body":{"license.html":{}}}],["preconditions",{"_index":4987,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["predecessor",{"_index":5509,"title":{},"body":{"license.html":{}}}],["predefined",{"_index":6440,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["preexisting",{"_index":6483,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["preferred",{"_index":5193,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["prefix",{"_index":701,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/DatabaseManagementController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["preload",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["preloaded",{"_index":6645,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["preloading",{"_index":6644,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["prematurely",{"_index":4553,"title":{},"body":{"changelog.html":{}}}],["prepare",{"_index":2322,"title":{},"body":{"injectables/Logger.html":{}}}],["prepared",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["preparing",{"_index":3669,"title":{},"body":{"changelog.html":{}}}],["prepended",{"_index":5012,"title":{},"body":{"index.html":{}}}],["present",{"_index":4277,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["presentation",{"_index":6056,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["presents",{"_index":5186,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":5438,"title":{},"body":{"license.html":{}}}],["prettier",{"_index":4474,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["prevent",{"_index":236,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{}}}],["prevented",{"_index":4305,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["previous",{"_index":5511,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["price",{"_index":5088,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":5574,"title":{},"body":{"license.html":{}}}],["primary",{"_index":4171,"title":{},"body":{"changelog.html":{}}}],["primarykey",{"_index":212,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["primaryrolesearchoperation",{"_index":2053,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["primaryrolesearchoperation'})@unique",{"_index":2854,"title":{},"body":{"classes/Role.html":{}}}],["principle",{"_index":6543,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["principles",{"_index":6005,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["principles/command",{"_index":6391,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["print",{"_index":4368,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":1465,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"license.html":{}}}],["prioritization",{"_index":3841,"title":{},"body":{"changelog.html":{}}}],["prisma",{"_index":6630,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["privacy",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":409,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"classes/LessonScope.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"injectables/TimeoutInterceptor.html":{},"injectables/UserUC.html":{},"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["privatedevice",{"_index":2274,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["problem",{"_index":4702,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["problems",{"_index":4112,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["procedures",{"_index":5401,"title":{},"body":{"license.html":{}}}],["process",{"_index":4448,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["processed",{"_index":6245,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["processes",{"_index":6197,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["processing",{"_index":6095,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["procuring",{"_index":5564,"title":{},"body":{"license.html":{}}}],["produce",{"_index":5214,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["produces",{"_index":6434,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["product",{"_index":5337,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["production",{"_index":3715,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["products",{"_index":5575,"title":{},"body":{"license.html":{}}}],["program",{"_index":5083,"title":{},"body":{"license.html":{}}}],["program's",{"_index":5291,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":5668,"title":{},"body":{"license.html":{}}}],["programming",{"_index":5201,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["programs",{"_index":5093,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":5253,"title":{},"body":{"license.html":{},"todo.html":{}}}],["prohibiting",{"_index":5278,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":5569,"title":{},"body":{"license.html":{}}}],["project",{"_index":3394,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prom",{"_index":4906,"title":{},"body":{"dependencies.html":{}}}],["prometheus",{"_index":4216,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["prominent",{"_index":5189,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":5181,"title":{},"body":{"license.html":{}}}],["promise",{"_index":174,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promise((resolve",{"_index":1419,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["promise.all",{"_index":1015,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"injectables/RoleUC.html":{}}}],["promise.resolve",{"_index":1021,"title":{},"body":{"classes/DashboardModelMapper.html":{},"injectables/FileSystemAdapter.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["promise.resolve(currentuser.user",{"_index":3333,"title":{},"body":{"controllers/UserController.html":{}}}],["promises",{"_index":1761,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["promisify",{"_index":4852,"title":{},"body":{"dependencies.html":{}}}],["propagate",{"_index":5152,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":5495,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":5163,"title":{},"body":{"license.html":{}}}],["proper",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":3451,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"interfaces/EncryptionModuleOptions.html":{},"interfaces/FeathersError.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/MailModuleOptions.html":{},"interfaces/MailServiceOptions.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["properties)mongodb",{"_index":6627,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["propertiestopopulate",{"_index":1800,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{}}}],["property",{"_index":216,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["property()@index({name",{"_index":2853,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["property({fieldname",{"_index":2969,"title":{},"body":{"classes/StorageProvider.html":{}}}],["property({onupdate",{"_index":251,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["propertydecorator",{"_index":4981,"title":{},"body":{"miscellaneous/functions.html":{}}}],["props",{"_index":462,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/File.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"classes/Lesson.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["props.accesskeyid",{"_index":2069,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["props.availabledate",{"_index":2142,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.bucket",{"_index":293,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.color",{"_index":517,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.colums",{"_index":857,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.comment",{"_index":2108,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.content",{"_index":598,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.course",{"_index":536,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["props.creator",{"_index":297,"title":{},"body":{"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.deletedat",{"_index":289,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.description",{"_index":507,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.displayat",{"_index":600,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.duedate",{"_index":2144,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.email",{"_index":2175,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.endpointurl",{"_index":2067,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["props.externalid",{"_index":605,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.firstname",{"_index":2171,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.grade",{"_index":2111,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.gradecomment",{"_index":2112,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.grid.foreach((element",{"_index":860,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.hidden",{"_index":2031,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["props.id",{"_index":829,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.lastname",{"_index":2173,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["props.lesson",{"_index":2148,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.name",{"_index":505,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["props.permissions",{"_index":2057,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.private",{"_index":2145,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.references",{"_index":831,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.region",{"_index":2073,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["props.roles",{"_index":2059,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["props.rows",{"_index":858,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["props.school",{"_index":510,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["props.secretaccesskey",{"_index":2071,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["props.source",{"_index":607,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.sourcedescription",{"_index":609,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.storagefilename",{"_index":291,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.storageprovider",{"_index":295,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["props.student",{"_index":2106,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.students",{"_index":511,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["props.substitutionteachers",{"_index":515,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.target",{"_index":603,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.task",{"_index":2110,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["props.teacher",{"_index":2147,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["props.teachers",{"_index":513,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["props.title",{"_index":596,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["props.updater",{"_index":602,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["protect",{"_index":5095,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["protected",{"_index":1819,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/TimeoutInterceptor.html":{}}}],["protecting",{"_index":5262,"title":{},"body":{"license.html":{}}}],["protection",{"_index":5302,"title":{},"body":{"license.html":{}}}],["protocol",{"_index":5998,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["protocols",{"_index":5421,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["prove",{"_index":5622,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provide",{"_index":1427,"title":{},"body":{"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["provided",{"_index":184,"title":{},"body":{"injectables/AuthorizationService.html":{},"modules/ErrorModule.html":{},"injectables/Logger.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["provider",{"_index":2325,"title":{},"body":{"injectables/Logger.html":{},"modules/MongoMemoryDatabaseModule.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providers",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["provides",{"_index":2320,"title":{},"body":{"injectables/Logger.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["providing",{"_index":439,"title":{},"body":{"modules/CoreModule.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["provision",{"_index":5432,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":5473,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":5612,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":5613,"title":{},"body":{"license.html":{}}}],["pseudonym/roster/ltitools",{"_index":4090,"title":{},"body":{"changelog.html":{}}}],["pseudonyms",{"_index":4025,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1411,"title":{},"body":{"controllers/DelayController.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"controllers/ServerController.html":{},"injectables/SymetricKeyEncryptionService.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["publicity",{"_index":5442,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":5122,"title":{},"body":{"license.html":{}}}],["publicteachers",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":3739,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["published",{"_index":675,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"injectables/NewsUc.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["pull",{"_index":4279,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{}}}],["pulled",{"_index":6129,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["purpose",{"_index":4966,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["purposes",{"_index":5383,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["pursuant",{"_index":5562,"title":{},"body":{"license.html":{}}}],["push",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":916,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["putting",{"_index":6347,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["qa",{"_index":4221,"title":{},"body":{"changelog.html":{}}}],["qf",{"_index":3826,"title":{},"body":{"changelog.html":{}}}],["qr",{"_index":4016,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":4262,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["qualify",{"_index":5485,"title":{},"body":{"license.html":{}}}],["quality",{"_index":5621,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["queries",{"_index":2702,"title":{},"body":{"classes/NewsScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["queries.length",{"_index":2706,"title":{},"body":{"classes/NewsScope.html":{}}}],["queries/requests",{"_index":6184,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["query",{"_index":647,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/GlobalValidationPipe.html":{},"classes/LessonScope.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["query('x",{"_index":746,"title":{},"body":{"controllers/DashboardController.html":{}}}],["query('y",{"_index":747,"title":{},"body":{"controllers/DashboardController.html":{}}}],["query.targetid",{"_index":2612,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.targetmodel",{"_index":2611,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query.unpublished",{"_index":2614,"title":{},"body":{"classes/NewsMapper.html":{}}}],["query/body",{"_index":6328,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["query/empty",{"_index":2912,"title":{},"body":{"classes/Scope.html":{}}}],["queryordermap",{"_index":2654,"title":{},"body":{"injectables/NewsRepo.html":{},"injectables/TaskRepo.html":{}}}],["querys",{"_index":2965,"title":{},"body":{"modules/ServerModule.html":{}}}],["querystring",{"_index":4261,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":2340,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["rabbitmq:3.8.9",{"_index":5917,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmq_url",{"_index":5911,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["rabbitmqmodule",{"_index":2338,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmodule.forroot(rabbitmqmodule",{"_index":2349,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{}}}],["rabbitmqmoduleoptions",{"_index":2346,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["raise",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["ram",{"_index":3878,"title":{},"body":{"changelog.html":{}}}],["random",{"_index":1730,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["rates",{"_index":6155,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["re",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["react",{"_index":4854,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1743,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"controllers/NewsController.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["readable",{"_index":5333,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["readdir",{"_index":1715,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readdir(folderpath",{"_index":1737,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile",{"_index":1716,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readfile(filepath",{"_index":1741,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["readily",{"_index":5551,"title":{},"body":{"license.html":{}}}],["reading",{"_index":5423,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["readme",{"_index":4302,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/BaseRepo.html":{},"classes/BusinessError.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/ErrorResponse.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["readpreference",{"_index":4169,"title":{},"body":{"changelog.html":{}}}],["reads",{"_index":4076,"title":{},"body":{"changelog.html":{}}}],["ready",{"_index":6375,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["real",{"_index":6542,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["really",{"_index":486,"title":{},"body":{"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseProperties.html":{}}}],["reason",{"_index":5560,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":5347,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["receipt",{"_index":5483,"title":{},"body":{"license.html":{}}}],["receive",{"_index":5091,"title":{},"body":{"license.html":{}}}],["received",{"_index":5317,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["receives",{"_index":5499,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":5566,"title":{},"body":{"license.html":{}}}],["recent",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["recieve",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":5407,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":5558,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":107,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["recognized",{"_index":5197,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":6657,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["recommendations",{"_index":6651,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["recommended",{"_index":6649,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["reconnect",{"_index":4537,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":34,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BusinessError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ValidationError.html":{},"miscellaneous/typealiases.html":{}}}],["recreate",{"_index":3999,"title":{},"body":{"changelog.html":{}}}],["recreating",{"_index":4444,"title":{},"body":{"changelog.html":{}}}],["recursively",{"_index":1751,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["red",{"_index":5706,"title":{},"body":{"todo.html":{}}}],["redis",{"_index":2267,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"dependencies.html":{}}}],["redisidentifier",{"_index":2275,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["redistribute",{"_index":5655,"title":{},"body":{"license.html":{}}}],["reduce",{"_index":3604,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reduces",{"_index":4204,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["redundant",{"_index":4980,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactor",{"_index":1094,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"changelog.html":{}}}],["refactored",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":3670,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["refactorings",{"_index":6127,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["refactors",{"_index":4207,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":6357,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["reference",{"_index":593,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reference.getmetadata",{"_index":840,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["referenced",{"_index":582,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["referencedid",{"_index":826,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["referenceforindex",{"_index":879,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["references",{"_index":810,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["references[position.groupindex",{"_index":880,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["referring",{"_index":5087,"title":{},"body":{"license.html":{}}}],["refers",{"_index":5134,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":4912,"title":{},"body":{"dependencies.html":{},"todo.html":{}}}],["reflects",{"_index":6364,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["refrain",{"_index":5593,"title":{},"body":{"license.html":{}}}],["regard",{"_index":5428,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":5009,"title":{},"body":{"index.html":{}}}],["regardless",{"_index":5314,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["regards",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["regenerate",{"_index":5230,"title":{},"body":{"license.html":{}}}],["regex",{"_index":4338,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["region",{"_index":1696,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["registered",{"_index":3854,"title":{},"body":{"changelog.html":{}}}],["registernewuser(creatorid",{"_index":6397,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["registration",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["registrationlink",{"_index":4390,"title":{},"body":{"changelog.html":{}}}],["registrationlinks",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["registrationpin",{"_index":4151,"title":{},"body":{"changelog.html":{}}}],["regression",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["regularfiles",{"_index":1824,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["reigstration",{"_index":4147,"title":{},"body":{"changelog.html":{}}}],["reimplement",{"_index":6568,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reinstated",{"_index":5472,"title":{},"body":{"license.html":{}}}],["rejected",{"_index":6578,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rejections",{"_index":4393,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":680,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["relates",{"_index":6380,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["relation",{"_index":6638,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["relations",{"_index":3533,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["relationship",{"_index":5255,"title":{},"body":{"license.html":{}}}],["relative",{"_index":1296,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["release",{"_index":3852,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["released",{"_index":5127,"title":{},"body":{"license.html":{}}}],["releasing",{"_index":5117,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":5307,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["relicensing",{"_index":5128,"title":{},"body":{"license.html":{}}}],["relies",{"_index":6339,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reload",{"_index":5719,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["relying",{"_index":5550,"title":{},"body":{"license.html":{}}}],["remain",{"_index":5364,"title":{},"body":{"license.html":{}}}],["remains",{"_index":5085,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remote",{"_index":5595,"title":{},"body":{"license.html":{}}}],["remotely",{"_index":5597,"title":{},"body":{"license.html":{}}}],["removal",{"_index":5429,"title":{},"body":{"license.html":{}}}],["remove",{"_index":305,"title":{},"body":{"injectables/BaseRepo.html":{},"classes/DashboardModelMapper.html":{},"classes/DeleteFilesConsole.html":{},"injectables/FilesRepo.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"injectables/StorageProviderRepo.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["remove(entity",{"_index":323,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeall",{"_index":306,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeall(entities",{"_index":326,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeallandflush",{"_index":307,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeallandflush(entities",{"_index":328,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeandflush",{"_index":308,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removeandflush(entity",{"_index":330,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["removed",{"_index":1464,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["removedeletedfilesdata",{"_index":1434,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{}}}],["removedeletedfilesdata(removedsince",{"_index":1461,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["removedeletedfilesdata(removedsincedays",{"_index":1438,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removedirrecursive",{"_index":1717,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedirrecursive(folderpath",{"_index":1748,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removedsince",{"_index":1451,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{}}}],["removedsince.setdate(removedsince.getdate",{"_index":1452,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removedsincedays",{"_index":1445,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["removefromposition",{"_index":762,"title":{},"body":{"classes/DashboardEntity.html":{}}}],["removefromposition(position",{"_index":792,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["removeing",{"_index":3732,"title":{},"body":{"changelog.html":{}}}],["removereference",{"_index":1958,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["removereference(index",{"_index":822,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["removes",{"_index":1750,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["removing",{"_index":4162,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["rename_team",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["renamed",{"_index":4268,"title":{},"body":{"changelog.html":{}}}],["renamegroupondashboard",{"_index":1109,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["renamegroupondashboard(dashboardid",{"_index":1115,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["rendered",{"_index":4976,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["repair",{"_index":4094,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["repaired",{"_index":4122,"title":{},"body":{"changelog.html":{}}}],["repeats",{"_index":2387,"title":{},"body":{"modules/ManagementModule.html":{}}}],["replace",{"_index":3206,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["replaced",{"_index":2150,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["replaces",{"_index":4244,"title":{},"body":{"changelog.html":{}}}],["replacing",{"_index":6427,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["replikaset",{"_index":5709,"title":{},"body":{"todo.html":{}}}],["replyto",{"_index":110,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{}}}],["repo",{"_index":1467,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"modules/FilesModule.html":{},"injectables/RoleUC.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repo.integration.spec.js",{"_index":6547,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repo.ts",{"_index":6277,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["repo/news",{"_index":2746,"title":{},"body":{"injectables/NewsUc.html":{}}}],["repo/news.repo",{"_index":2629,"title":{},"body":{"modules/NewsModule.html":{},"injectables/NewsUc.html":{}}}],["report",{"_index":1159,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["reported",{"_index":6453,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["reporting",{"_index":6069,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reports",{"_index":6561,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["repositories",{"_index":3624,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["repository",{"_index":3498,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["represent",{"_index":5398,"title":{},"body":{"license.html":{}}}],["representation",{"_index":5970,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["req",{"_index":6594,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["req.user",{"_index":6596,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reqlib",{"_index":4036,"title":{},"body":{"changelog.html":{}}}],["request",{"_index":1636,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["request(app.gethttpserver()).delete(`/news/${newsid}`).expect(404",{"_index":6623,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request(app.gethttpserver()).get(`/news`).expect(200",{"_index":6614,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["request.user",{"_index":2248,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request.user.user",{"_index":2249,"title":{},"body":{"injectables/JwtStrategy.html":{},"todo.html":{}}}],["request/response",{"_index":6149,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["request/response/error",{"_index":6156,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["request_timeout",{"_index":3290,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requested",{"_index":2394,"title":{},"body":{"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["requester",{"_index":4363,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":2182,"title":{},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["requesttimeoutexception",{"_index":3297,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["require",{"_index":4038,"title":{},"body":{"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["require('../../../../../../src/services/authentication/logic/whitelist",{"_index":2269,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["require('../../../../../src/services/authentication/configuration",{"_index":2194,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["require('../../../../config/globals",{"_index":1837,"title":{},"body":{"interfaces/GlobalConstants.html":{}}}],["require('./tsconfig.json",{"_index":5858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('rimraf",{"_index":1766,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["require('ts",{"_index":5856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1153,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/JwtValidationAdapter.html":{},"interfaces/Options.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["requiredpermissions",{"_index":2772,"title":{},"body":{"injectables/NewsUc.html":{}}}],["requirement",{"_index":5308,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":5366,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["requires",{"_index":1672,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalValidationPipe.html":{},"injectables/TaskUC.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["requiring",{"_index":5147,"title":{},"body":{"license.html":{}}}],["reset",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"classes/DatabaseManagementConsole.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/nestjs-application.html":{}}}],["resolve",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["resolved",{"_index":3372,"title":{},"body":{"injectables/UserUC.html":{},"license.html":{}}}],["resolved.permissions",{"_index":3375,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolved.roles",{"_index":3376,"title":{},"body":{"injectables/UserUC.html":{}}}],["resolveduser",{"_index":2244,"title":{"classes/ResolvedUser.html":{}},"body":{"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvedusermapper",{"_index":2835,"title":{"classes/ResolvedUserMapper.html":{}},"body":{"classes/ResolvedUserMapper.html":{},"injectables/UserUC.html":{}}}],["resolvedusermapper.maptoresponse(user",{"_index":3374,"title":{},"body":{"injectables/UserUC.html":{},"miscellaneous/variables.html":{}}}],["resolvepermissionsbyroles",{"_index":2876,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsbyroles(inputroles",{"_index":2879,"title":{},"body":{"injectables/RoleUC.html":{}}}],["resolvepermissionsfromsubrolesbyid",{"_index":2862,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolvepermissionsfromsubrolesbyid(id",{"_index":2868,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["resolves",{"_index":2649,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["resolveuser",{"_index":3335,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resolveuser(userid",{"_index":3338,"title":{},"body":{"injectables/UserFacade.html":{}}}],["resort",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["resource",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["resources",{"_index":6558,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["respect",{"_index":5285,"title":{},"body":{"license.html":{}}}],["respond",{"_index":5730,"title":{},"body":{"todo.html":{}}}],["responds",{"_index":2490,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response",{"_index":66,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"controllers/NewsController.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["response.body",{"_index":6615,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["response.status(errorresponse.code).json(errorresponse",{"_index":1924,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["response.ts",{"_index":6273,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["response].ts",{"_index":6272,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responses",{"_index":6093,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsibilities",{"_index":6327,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["responsibility",{"_index":6037,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["responsible",{"_index":5500,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["respository",{"_index":6344,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["ressource",{"_index":3844,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["ressources",{"_index":5926,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["resssource",{"_index":5731,"title":{},"body":{"todo.html":{}}}],["rest",{"_index":1496,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["restart",{"_index":6217,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restful/socket",{"_index":6146,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["restored",{"_index":4301,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":4033,"title":{},"body":{"changelog.html":{}}}],["restricted",{"_index":1476,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/NewsUc.html":{}}}],["restricting",{"_index":5279,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":5459,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":4635,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["restricts",{"_index":4359,"title":{},"body":{"changelog.html":{}}}],["restructure",{"_index":3751,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":863,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/NewsScope.html":{},"injectables/SubmissionRepo.html":{},"controllers/TaskController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["result.color",{"_index":1028,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["result.gridelement",{"_index":1032,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["result.query",{"_index":2913,"title":{},"body":{"classes/Scope.html":{}}}],["result.query.ts",{"_index":5785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["result.title",{"_index":1030,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["resulted",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["resultelement",{"_index":871,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["resulting",{"_index":5114,"title":{},"body":{"license.html":{}}}],["results",{"_index":59,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["retains",{"_index":5411,"title":{},"body":{"license.html":{}}}],["retention",{"_index":6203,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieve",{"_index":2494,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retrieves",{"_index":6239,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["retry",{"_index":6211,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["return",{"_index":83,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["returned",{"_index":4521,"title":{},"body":{"changelog.html":{}}}],["returning",{"_index":3075,"title":{},"body":{"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"changelog.html":{}}}],["returns",{"_index":41,"title":{},"body":{"classes/ApiValidationError.html":{},"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/ILogger.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["retvalue",{"_index":6497,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["reusability",{"_index":6011,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["reused",{"_index":6286,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["reused/called",{"_index":6105,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["revert",{"_index":3908,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["reverted",{"_index":4003,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["review",{"_index":4328,"title":{},"body":{"changelog.html":{}}}],["reviewers",{"_index":5038,"title":{},"body":{"index.html":{}}}],["reviewing",{"_index":5644,"title":{},"body":{"license.html":{}}}],["revised",{"_index":5602,"title":{},"body":{"license.html":{}}}],["rewrite",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["rich",{"_index":6363,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["right",{"_index":3367,"title":{},"body":{"injectables/UserUC.html":{},"changelog.html":{},"license.html":{}}}],["rights",{"_index":5096,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rimraf",{"_index":1765,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"dependencies.html":{}}}],["rimraf.sync(folderpath",{"_index":1781,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["risk",{"_index":5620,"title":{},"body":{"license.html":{}}}],["rocket",{"_index":3945,"title":{},"body":{"changelog.html":{}}}],["rocketchat",{"_index":4373,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["rocketchatadapter",{"_index":6101,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role",{"_index":1996,"title":{"classes/Role.html":{}},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["role.entity",{"_index":2166,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["role.id",{"_index":2851,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["role.name",{"_index":2850,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["role.permissions",{"_index":2885,"title":{},"body":{"injectables/RoleUC.html":{}}}],["role.uc",{"_index":3364,"title":{},"body":{"injectables/UserUC.html":{}}}],["role/permissions",{"_index":6148,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["roleidbasedsearches",{"_index":2168,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["roleidbasedsearches'})@manytomany('role",{"_index":3320,"title":{},"body":{"classes/User.html":{}}}],["roleids",{"_index":4469,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["rolerepo",{"_index":2857,"title":{"injectables/RoleRepo.html":{}},"body":{"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["roles",{"_index":1993,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleUC.html":{},"classes/User.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["roles.foreach((role",{"_index":2884,"title":{},"body":{"injectables/RoleUC.html":{}}}],["roles.map((role",{"_index":2849,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"miscellaneous/variables.html":{}}}],["roleuc",{"_index":2874,"title":{"injectables/RoleUC.html":{}},"body":{"injectables/RoleUC.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["rollback",{"_index":4445,"title":{},"body":{"changelog.html":{}}}],["rom",{"_index":5414,"title":{},"body":{"license.html":{}}}],["room",{"_index":4044,"title":{},"body":{"changelog.html":{}}}],["rooms",{"_index":4352,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":230,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"changelog.html":{},"index.html":{}}}],["rootdir",{"_index":5825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rootpath",{"_index":4225,"title":{},"body":{"changelog.html":{}}}],["roots",{"_index":5850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rostering",{"_index":4093,"title":{},"body":{"changelog.html":{}}}],["roughly",{"_index":6565,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["route",{"_index":1409,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"controllers/ServerController.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["route/hash",{"_index":4315,"title":{},"body":{"changelog.html":{}}}],["routes",{"_index":3646,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["routes.test.js",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["routingkey",{"_index":2345,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ServerModule.html":{}}}],["rows",{"_index":754,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["royalty",{"_index":5516,"title":{},"body":{"license.html":{}}}],["rss",{"_index":577,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["rule",{"_index":6384,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["rules",{"_index":4009,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["run",{"_index":3426,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["runner",{"_index":6524,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["running",{"_index":3284,"title":{},"body":{"injectables/TimeoutInterceptor.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["runs",{"_index":3761,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["runtime",{"_index":6532,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["rxjs",{"_index":1507,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1509,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"injectables/TimeoutInterceptor.html":{}}}],["s3",{"_index":1690,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"changelog.html":{}}}],["s3_key",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["s3client",{"_index":1686,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"miscellaneous/functions.html":{}}}],["safari",{"_index":4086,"title":{},"body":{"changelog.html":{}}}],["safest",{"_index":5657,"title":{},"body":{"license.html":{}}}],["safety",{"_index":5014,"title":{},"body":{"index.html":{}}}],["sale",{"_index":5525,"title":{},"body":{"license.html":{}}}],["same",{"_index":3482,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["sameschool",{"_index":1607,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["sample",{"_index":1667,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/ServerConsole.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["samplecontroller",{"_index":6537,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["samples",{"_index":6303,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sampleservice",{"_index":6538,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sampleucmethod(params",{"_index":6431,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sanitization",{"_index":4159,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["sanitize",{"_index":4042,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["sanitizer",{"_index":5686,"title":{},"body":{"todo.html":{}}}],["satisfied",{"_index":195,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["satisfy",{"_index":183,"title":{},"body":{"injectables/AuthorizationService.html":{},"license.html":{}}}],["save",{"_index":5960,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["saying",{"_index":5362,"title":{},"body":{"license.html":{}}}],["sc",{"_index":3582,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scan",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["scans",{"_index":1289,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["scenarios",{"_index":6122,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schedules",{"_index":1463,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["schema",{"_index":496,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["schema.ts",{"_index":6276,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["schemas",{"_index":3855,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["scheme",{"_index":5866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school",{"_index":454,"title":{"classes/School.html":{}},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["school's",{"_index":3987,"title":{},"body":{"changelog.html":{}}}],["school._id",{"_index":5880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school._id.tohexstring",{"_index":5882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school.entity",{"_index":484,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["school.id",{"_index":5881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["school_edit",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["school_student_team_manage",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["schoolfactory",{"_index":5795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schoolfactory.build",{"_index":5876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schoolid",{"_index":469,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"classes/News.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUser.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["schoolids",{"_index":4361,"title":{},"body":{"changelog.html":{}}}],["schoolinfo",{"_index":2895,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.id",{"_index":2896,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfo.name",{"_index":2898,"title":{},"body":{"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper",{"_index":2577,"title":{"classes/SchoolInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/SchoolInfoMapper.html":{}}}],["schoolinfomapper.maptoresponse(news.school",{"_index":2599,"title":{},"body":{"classes/NewsMapper.html":{}}}],["schoolinforesponse",{"_index":2552,"title":{"classes/SchoolInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{}}}],["schoolnews",{"_index":622,"title":{"classes/SchoolNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["schoolnews(props",{"_index":621,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["schools",{"_index":1983,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/School.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schoolslist",{"_index":3721,"title":{},"body":{"changelog.html":{}}}],["schoolyear",{"_index":4566,"title":{},"body":{"changelog.html":{}}}],["schoolyears",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["schould",{"_index":671,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{}}}],["schul",{"_index":1536,"title":{},"body":{"classes/EncryptedStringType.html":{},"modules/ServerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["schulcloud",{"_index":1422,"title":{},"body":{"controllers/DelayController.html":{},"controllers/ServerController.html":{},"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["schule",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["schuljahreswechsel",{"_index":4526,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1085,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{},"miscellaneous/variables.html":{}}}],["scope",{"_index":637,"title":{"classes/Scope.html":{}},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"controllers/NewsController.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/Scope.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["scope.addquery(parentidscope.query",{"_index":3132,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.afterduedateornone(filters.afterduedateornone",{"_index":3138,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byclosed(filters.closed",{"_index":3134,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.bycourseids(courseids",{"_index":2296,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bydraft(filters.draft",{"_index":3136,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["scope.byhidden(filters.hidden",{"_index":2298,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["scope.bytargets(targets",{"_index":2657,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.byunpublished(unpublished",{"_index":2658,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["scope.forallgrouptypes(userid",{"_index":644,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["scope.query",{"_index":646,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"injectables/LessonRepo.html":{}}}],["scope.request",{"_index":1659,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["scope.target",{"_index":2781,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope.targetid",{"_index":3268,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.targetmodel",{"_index":3269,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["scope.transient",{"_index":2313,"title":{},"body":{"injectables/Logger.html":{}}}],["scope.ts",{"_index":2301,"title":{},"body":{"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope.ts:10",{"_index":2307,"title":{},"body":{"classes/LessonScope.html":{}}}],["scope.ts:12",{"_index":3174,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:20",{"_index":3168,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:22",{"_index":2700,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope.ts:28",{"_index":3172,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:34",{"_index":3170,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:43",{"_index":3165,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:5",{"_index":2305,"title":{},"body":{"classes/LessonScope.html":{}}}],["scope.ts:6",{"_index":3167,"title":{},"body":{"classes/TaskScope.html":{}}}],["scope.ts:7",{"_index":2698,"title":{},"body":{"classes/NewsScope.html":{}}}],["scope:11",{"_index":653,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:25",{"_index":659,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope:9",{"_index":655,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["scope?.target",{"_index":2778,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scope?.unpublished",{"_index":2759,"title":{},"body":{"injectables/NewsUc.html":{}}}],["scopeid",{"_index":1614,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["scopeoperator",{"_index":652,"title":{},"body":{"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/TaskScope.html":{},"miscellaneous/typealiases.html":{}}}],["scopes",{"_index":2495,"title":{},"body":{"controllers/NewsController.html":{}}}],["script",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":5218,"title":{},"body":{"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["sdk",{"_index":4827,"title":{},"body":{"dependencies.html":{}}}],["sdk/client",{"_index":1689,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["search",{"_index":3045,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["searchable",{"_index":4124,"title":{},"body":{"changelog.html":{}}}],["searching",{"_index":4309,"title":{},"body":{"changelog.html":{}}}],["searchuserforschool",{"_index":2169,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["searchuserforschool'})@manytoone('school",{"_index":3322,"title":{},"body":{"classes/User.html":{}}}],["second",{"_index":6438,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["secondarily",{"_index":5155,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":5103,"title":{},"body":{"license.html":{}}}],["secret",{"_index":2192,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["secretaccesskey",{"_index":1702,"title":{},"body":{"injectables/FileStorageAdapter.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":2238,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secrutiy",{"_index":4471,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":5260,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["sections",{"_index":5331,"title":{},"body":{"license.html":{}}}],["secure",{"_index":4101,"title":{},"body":{"changelog.html":{}}}],["secured",{"_index":3722,"title":{},"body":{"changelog.html":{}}}],["secures",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["securing",{"_index":4426,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":3402,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["see",{"_index":57,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/IDashboardRepo.html":{},"modules/ServerModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["seed",{"_index":1143,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["seedcollections",{"_index":1130,"title":{},"body":{"classes/DatabaseManagementConsole.html":{}}}],["seedcollections(options",{"_index":1142,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["seeddata",{"_index":6487,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["seeddatabasecollectionsfromfilesystem",{"_index":1259,"title":{},"body":{"injectables/DatabaseManagementUc.html":{}}}],["seeddatabasecollectionsfromfilesystem(collections",{"_index":1293,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount",{"_index":1352,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seededcollectionswithamount.push(`${collectionname}:${importeddocumentsamount",{"_index":1374,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["seeds",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["seems",{"_index":5722,"title":{},"body":{"todo.html":{}}}],["selected",{"_index":5704,"title":{},"body":{"todo.html":{}}}],["selection",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["self",{"_index":4797,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sell",{"_index":5540,"title":{},"body":{"license.html":{}}}],["selling",{"_index":5524,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["semiconductor",{"_index":5136,"title":{},"body":{"license.html":{}}}],["send",{"_index":2358,"title":{},"body":{"injectables/MailService.html":{},"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["send(data",{"_index":2363,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["sending",{"_index":3702,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":6405,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["sense",{"_index":6077,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sent",{"_index":6242,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sentence",{"_index":1578,"title":{},"body":{"classes/ErrorResponse.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sentry",{"_index":4161,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["sentry/node",{"_index":4814,"title":{},"body":{"dependencies.html":{}}}],["sentry_dsn",{"_index":4163,"title":{},"body":{"changelog.html":{}}}],["separable",{"_index":5373,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2318,"title":{},"body":{"injectables/Logger.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["separated",{"_index":5030,"title":{},"body":{"index.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["separately",{"_index":4180,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["separates",{"_index":6188,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["separating",{"_index":6420,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["separation",{"_index":6010,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["seperate",{"_index":4995,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["seperation",{"_index":4994,"title":{},"body":{"index.html":{}}}],["serialization",{"_index":1518,"title":{},"body":{"classes/EncryptedStringType.html":{},"todo.html":{}}}],["serialize",{"_index":346,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["serialize(documents",{"_index":359,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serialized",{"_index":4259,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["serializedprimarykey",{"_index":214,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["serializes",{"_index":361,"title":{},"body":{"injectables/BsonConverter.html":{}}}],["serve",{"_index":4921,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["served",{"_index":5974,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["server",{"_index":1423,"title":{},"body":{"controllers/DelayController.html":{},"injectables/Logger.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["server.console",{"_index":2939,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["server.controller",{"_index":2949,"title":{},"body":{"modules/ServerModule.html":{}}}],["server/overview.html",{"_index":5723,"title":{},"body":{"todo.html":{}}}],["server/pull/2729#pullrequestreview",{"_index":5702,"title":{},"body":{"todo.html":{}}}],["serverconsole",{"_index":2919,"title":{"classes/ServerConsole.html":{}},"body":{"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{}}}],["serverconsolemodule",{"_index":2931,"title":{"modules/ServerConsoleModule.html":{}},"body":{"modules/ServerConsoleModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["servercontroller",{"_index":2940,"title":{"controllers/ServerController.html":{}},"body":{"controllers/ServerController.html":{},"modules/ServerModule.html":{}}}],["servererrortypes",{"_index":5797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverlogger",{"_index":6426,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["servermodule",{"_index":2943,"title":{"modules/ServerModule.html":{}},"body":{"modules/ServerModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servers",{"_index":4721,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["serves",{"_index":5208,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["service",{"_index":420,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"classes/EncryptedStringType.html":{},"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/Logger.html":{},"injectables/TaskUC.html":{},"injectables/UserUC.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["service.find",{"_index":1617,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.findallforuser(userid",{"_index":6575,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["service.get",{"_index":6321,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.get(userid",{"_index":1613,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["service.provider",{"_index":1604,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"modules/FeathersModule.html":{}}}],["service.provider.ts",{"_index":1644,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["service.provider.ts:14",{"_index":1651,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:20",{"_index":1649,"title":{},"body":{"interfaces/FeathersService.html":{}}}],["service.provider.ts:34",{"_index":1676,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.provider.ts:37",{"_index":1677,"title":{},"body":{"injectables/FeathersServiceProvider.html":{}}}],["service.ts",{"_index":6279,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["services",{"_index":1635,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerConsoleModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["servicing",{"_index":5625,"title":{},"body":{"license.html":{}}}],["session",{"_index":4168,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":2125,"title":{},"body":{"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"injectables/NewsUc.html":{},"classes/Task.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["set(gradedstudentids)].length",{"_index":3245,"title":{},"body":{"injectables/TaskUC.html":{}}}],["set(permissions",{"_index":2886,"title":{},"body":{"injectables/RoleUC.html":{}}}],["set(submittedstudentids)].length",{"_index":3238,"title":{},"body":{"injectables/TaskUC.html":{}}}],["setcontext",{"_index":2326,"title":{},"body":{"injectables/Logger.html":{}}}],["setdescription('this",{"_index":5862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setgroupname",{"_index":1959,"title":{},"body":{"classes/GridElement.html":{},"interfaces/IGridElement.html":{}}}],["setgroupname(newgroupname",{"_index":825,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["sets",{"_index":4208,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["settimeout(milliseconds",{"_index":3294,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["settimeout(resolve",{"_index":1420,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["setting",{"_index":5815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":4351,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["settitle('hpi",{"_index":5861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1150,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"modules/InterceptorModule.html":{},"interfaces/Options.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["setupentities",{"_index":5798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setuppath",{"_index":1349,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["setversion('3.0",{"_index":5864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":5265,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["share",{"_index":5079,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["shared",{"_index":3753,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/common",{"_index":73,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"modules/InterceptorModule.html":{}}}],["shared/controller",{"_index":728,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"controllers/TeamNewsController.html":{}}}],["shared/controller/transformer",{"_index":2541,"title":{},"body":{"classes/NewsFilterQuery.html":{}}}],["shared/core",{"_index":6291,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/domain",{"_index":186,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/BaseRepo.html":{},"injectables/CourseGroupRepo.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"injectables/DashboardUc.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/JwtPayload.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/SchoolInfoMapper.html":{},"modules/ServerModule.html":{},"injectables/StorageProviderRepo.html":{},"injectables/SubmissionRepo.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"todo.html":{}}}],["shared/domain/entity/base.entity",{"_index":902,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["shared/domain/types",{"_index":2744,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskRepo.html":{}}}],["shared/domain/types/news.types",{"_index":187,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/TargetInfoMapper.html":{}}}],["shared/infra/console",{"_index":2380,"title":{},"body":{"modules/ManagementModule.html":{},"classes/ServerConsole.html":{}}}],["shared/infra/console/console",{"_index":1146,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["shared/infra/database",{"_index":1306,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["shared/infra/file",{"_index":1304,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{}}}],["shared/infra/filestorage",{"_index":1795,"title":{},"body":{"modules/FilesModule.html":{},"injectables/FilesRepo.html":{}}}],["shared/pipes",{"_index":6315,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/repo",{"_index":638,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/NewsScope.html":{},"modules/TaskModule.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["shared/repo/base.repo",{"_index":1818,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{},"injectables/StorageProviderRepo.html":{}}}],["shared/repo/types/encryptedstring.type",{"_index":2064,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["shared/utils",{"_index":6292,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators",{"_index":6312,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["shared/validators/text.validator.ts",{"_index":6295,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sharetoken",{"_index":4081,"title":{},"body":{"changelog.html":{}}}],["sharing",{"_index":3864,"title":{},"body":{"changelog.html":{}}}],["sheets",{"_index":4489,"title":{},"body":{"changelog.html":{}}}],["shit",{"_index":487,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["short",{"_index":938,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["shortid",{"_index":4892,"title":{},"body":{"dependencies.html":{}}}],["shorttitle",{"_index":801,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["shouldnt",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["show",{"_index":2728,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{}}}],["show_version",{"_index":4294,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":4068,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["side",{"_index":6089,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sign",{"_index":5669,"title":{},"body":{"license.html":{}}}],["signature",{"_index":6226,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["significant",{"_index":5399,"title":{},"body":{"license.html":{}}}],["similar",{"_index":5124,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simple",{"_index":3469,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simplicity",{"_index":5736,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["simplification",{"_index":6207,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["simplify",{"_index":6494,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simply",{"_index":5010,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["simulates",{"_index":6609,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["simultaneously",{"_index":5588,"title":{},"body":{"license.html":{}}}],["single",{"_index":1155,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"classes/GlobalValidationPipe.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["situation",{"_index":6079,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["six",{"_index":1729,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["size",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["sizes",{"_index":4436,"title":{},"body":{"changelog.html":{}}}],["sizetype",{"_index":925,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["sjw",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["skip",{"_index":2016,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["skipped",{"_index":1949,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"classes/PaginationQuery.html":{},"changelog.html":{}}}],["slash",{"_index":5728,"title":{},"body":{"todo.html":{}}}],["slow",{"_index":1361,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["small",{"_index":6654,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["snaketype",{"_index":1884,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["socketio",{"_index":4924,"title":{},"body":{"dependencies.html":{}}}],["sockets",{"_index":4772,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["soft",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["soften",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":5058,"title":{"additional-documentation/nestjs-application/software-architecture.html":{}},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sold",{"_index":5384,"title":{},"body":{"license.html":{}}}],["sole",{"_index":5244,"title":{},"body":{"license.html":{}}}],["solely",{"_index":5257,"title":{},"body":{"license.html":{}}}],["solid",{"_index":6624,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["solution",{"_index":911,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/TaskAuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["solutions",{"_index":5666,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["solved",{"_index":4241,"title":{},"body":{"changelog.html":{}}}],["solving",{"_index":3773,"title":{},"body":{"changelog.html":{}}}],["something",{"_index":6432,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["something...later",{"_index":6435,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["sort",{"_index":1382,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{}}}],["sorted",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["sortedbsondocuments",{"_index":1385,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["sorting",{"_index":2294,"title":{},"body":{"injectables/LessonRepo.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["sorting.ts",{"_index":5698,"title":{},"body":{"todo.html":{}}}],["sortorder",{"_index":2018,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"injectables/NewsUc.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["sortorder.asc",{"_index":3221,"title":{},"body":{"injectables/TaskUC.html":{}}}],["sortorder.desc",{"_index":2763,"title":{},"body":{"injectables/NewsUc.html":{},"injectables/TaskUC.html":{}}}],["sortordermap",{"_index":2014,"title":{},"body":{"interfaces/IFindOptions.html":{},"interfaces/IPagination.html":{},"miscellaneous/typealiases.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"interfaces/AppendedAttachment.html":{},"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"modules/CoreModule.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/DatabaseManagementModule.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"controllers/DelayController.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/ErrorModule.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"modules/InterceptorModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"modules/LearnroomModule.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"injectables/Logger.html":{},"modules/LoggerModule.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"modules/NewsModule.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerConsoleModule.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"modules/ValidationModule.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcecode",{"_index":6264,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["sourcedescription",{"_index":555,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["sources",{"_index":3752,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{}}}],["sourcetype",{"_index":2557,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sovereignty",{"_index":6020,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["span",{"_index":6219,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spanid",{"_index":6233,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["spare",{"_index":5344,"title":{},"body":{"license.html":{}}}],["speak",{"_index":5086,"title":{},"body":{"license.html":{}}}],["spec",{"_index":5811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec.ts",{"_index":5828,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["spec\\\\.ts",{"_index":5833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":3450,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specific",{"_index":171,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["specifically",{"_index":5070,"title":{},"body":{"license.html":{}}}],["specification",{"_index":4219,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specifics",{"_index":6346,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["specified",{"_index":5199,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["specifies",{"_index":5609,"title":{},"body":{"license.html":{}}}],["specify",{"_index":2420,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3985,"title":{},"body":{"changelog.html":{}}}],["spin",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":410,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["spirit",{"_index":5603,"title":{},"body":{"license.html":{}}}],["split",{"_index":6057,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sportinhalt",{"_index":3866,"title":{},"body":{"changelog.html":{}}}],["spy",{"_index":6571,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["spyied",{"_index":6562,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["sql",{"_index":6172,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["sql/nosql",{"_index":6637,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["sql/sql",{"_index":6192,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["src",{"_index":5835,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["src/...*.spec.ts",{"_index":5826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/config",{"_index":2381,"title":{},"body":{"modules/ManagementModule.html":{}}}],["src/core/error/dto/error.response",{"_index":386,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/error/interface",{"_index":387,"title":{},"body":{"classes/BusinessError.html":{}}}],["src/core/logger",{"_index":1510,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsUc.html":{}}}],["src/core/logger/logger.module",{"_index":2627,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/core/logger/logger.service",{"_index":1466,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["src/modules/authentication/decorator/auth.decorator",{"_index":726,"title":{},"body":{"controllers/DashboardController.html":{},"controllers/NewsController.html":{},"controllers/TaskController.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{}}}],["src/modules/authorization/authorization.module",{"_index":2628,"title":{},"body":{"modules/NewsModule.html":{}}}],["src/modules/authorization/authorization.service",{"_index":2745,"title":{},"body":{"injectables/NewsUc.html":{}}}],["src/modules/database",{"_index":6551,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["src/modules/user",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["src/repositories",{"_index":3044,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{}}}],["src/repositories/learnroom/dashboard.repo",{"_index":1118,"title":{},"body":{"injectables/DashboardUc.html":{},"modules/LearnroomModule.html":{}}}],["stabilisation",{"_index":4512,"title":{},"body":{"changelog.html":{}}}],["stability",{"_index":4298,"title":{},"body":{"changelog.html":{}}}],["stabilized",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["stable",{"_index":6017,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stack",{"_index":1898,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{}}}],["stacks",{"_index":4355,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":3853,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":5195,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["standards",{"_index":5198,"title":{},"body":{"license.html":{}}}],["start",{"_index":5049,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["started",{"_index":3390,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["starting",{"_index":4558,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["starts",{"_index":5918,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["starttitle",{"_index":1886,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["startup",{"_index":4369,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["state",{"_index":4291,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stated",{"_index":5235,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statement",{"_index":5461,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["statements",{"_index":5845,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["states",{"_index":4193,"title":{},"body":{"changelog.html":{}}}],["static",{"_index":557,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"classes/NewsMapper.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TaskMapper.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UserInfoMapper.html":{},"additional-documentation/nestjs-application.html":{}}}],["stating",{"_index":5296,"title":{},"body":{"license.html":{}}}],["statistic",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["statistics",{"_index":4549,"title":{},"body":{"changelog.html":{}}}],["stats",{"_index":4541,"title":{},"body":{"changelog.html":{}}}],["status",{"_index":2160,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["status.graded",{"_index":3092,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.isdraft",{"_index":3093,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.issubstitutionteacher",{"_index":3094,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.maxsubmissions",{"_index":3091,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.submitted",{"_index":3090,"title":{},"body":{"classes/TaskMapper.html":{}}}],["status.vo.ts",{"_index":2154,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["status.vo.ts:12",{"_index":3254,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["status.vo.ts:14",{"_index":3253,"title":{},"body":{"classes/TaskWithStatusVo.html":{}}}],["stay",{"_index":6045,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["step",{"_index":6415,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["steps",{"_index":5097,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["stick",{"_index":6463,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["still",{"_index":6352,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["stop",{"_index":2438,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["stopping",{"_index":4143,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":3538,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["storagefilename",{"_index":273,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"interfaces/IFileProperties.html":{},"miscellaneous/variables.html":{}}}],["storageprovider",{"_index":269,"title":{"classes/StorageProvider.html":{}},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/IFileProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["storageprovider.accesskeyid",{"_index":1701,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.endpointurl",{"_index":1694,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.entity",{"_index":270,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["storageprovider.region",{"_index":1697,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageprovider.secretaccesskey",{"_index":1703,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderclient",{"_index":1704,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderclient.send(deletioncommand",{"_index":1707,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["storageproviderfactory",{"_index":5800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageproviderfactory.build",{"_index":5889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storageproviderid",{"_index":285,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["storageproviderrepo",{"_index":1793,"title":{"injectables/StorageProviderRepo.html":{}},"body":{"modules/FilesModule.html":{},"injectables/StorageProviderRepo.html":{},"overview.html":{}}}],["storageproviders",{"_index":2065,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["store",{"_index":3611,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stored",{"_index":6109,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["stores",{"_index":6235,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["storing",{"_index":3743,"title":{},"body":{"changelog.html":{}}}],["story",{"_index":6564,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["strategies",{"_index":5753,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strategies.includes('jwt",{"_index":5809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":2229,"title":{},"body":{"injectables/JwtStrategy.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["strategy/jwt",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy/jwt.strategy",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["strato",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["strictly",{"_index":6008,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["string",{"_index":36,"title":{},"body":{"classes/ApiValidationError.html":{},"interfaces/AppendedAttachment.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/GlobalConstants.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/TestBootstrapConsole.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"classes/UserInfoResponse.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["strings",{"_index":1546,"title":{},"body":{"classes/EncryptedStringType.html":{},"injectables/Logger.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["stringtoboolean",{"_index":2540,"title":{},"body":{"classes/NewsFilterQuery.html":{},"miscellaneous/functions.html":{}}}],["strip",{"_index":4928,"title":{},"body":{"dependencies.html":{}}}],["strong",{"_index":1639,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["strongly",{"_index":6656,"title":{},"body":{"additional-documentation/nestjs-application/git.html":{}}}],["structure",{"_index":6257,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structured",{"_index":6258,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["structures",{"_index":2324,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["stucture",{"_index":5696,"title":{},"body":{"todo.html":{}}}],["student",{"_index":2080,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["student/teacher",{"_index":3705,"title":{},"body":{"changelog.html":{}}}],["student_create",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["student_edit",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["student_list",{"_index":4530,"title":{},"body":{"changelog.html":{}}}],["student_team_creation",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["studentdashboard",{"_index":3204,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["studentfiles",{"_index":2081,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["studentid",{"_index":2091,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/TaskUC.html":{}}}],["students",{"_index":455,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"injectables/SubmissionRepo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["students/teacher",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["studentsubmissions",{"_index":3228,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studentsubmissions.filter((submission",{"_index":3232,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studentsubmissions.length",{"_index":3231,"title":{},"body":{"injectables/TaskUC.html":{}}}],["studio",{"_index":5022,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":5047,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["style",{"_index":6030,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["styling",{"_index":3960,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":2206,"title":{},"body":{"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["subdividing",{"_index":5506,"title":{},"body":{"license.html":{}}}],["subdocument",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["subelements",{"_index":935,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["subject",{"_index":100,"title":{},"body":{"interfaces/AppendedAttachment.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/InlineAttachment.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"interfaces/PlainTextMailContent.html":{},"license.html":{}}}],["sublicenses",{"_index":5537,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":5259,"title":{},"body":{"license.html":{}}}],["submission",{"_index":2088,"title":{"classes/Submission.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["submission.entity",{"_index":2119,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["submission.isgraded",{"_index":3243,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.isgraded()).length",{"_index":3233,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submission.student.id",{"_index":3230,"title":{},"body":{"injectables/TaskUC.html":{}}}],["submissionrepo",{"_index":2985,"title":{"injectables/SubmissionRepo.html":{}},"body":{"injectables/SubmissionRepo.html":{}}}],["submissions",{"_index":2087,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"changelog.html":{}}}],["submitted",{"_index":2157,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["submittedstudentids",{"_index":3236,"title":{},"body":{"injectables/TaskUC.html":{}}}],["subprograms",{"_index":5225,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":5353,"title":{},"body":{"license.html":{}}}],["subset",{"_index":5956,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["substantial",{"_index":5394,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":5504,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["substitutionids",{"_index":475,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionids.includes(userid",{"_index":523,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["substitutionteachers",{"_index":456,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"miscellaneous/variables.html":{}}}],["succeed",{"_index":6513,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["succesful",{"_index":4550,"title":{},"body":{"changelog.html":{}}}],["successful",{"_index":4230,"title":{},"body":{"changelog.html":{}}}],["successfully",{"_index":1486,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"changelog.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["such",{"_index":5118,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["sue",{"_index":5548,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":5402,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":170,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["suffix",{"_index":5735,"title":{},"body":{"todo.html":{}}}],["suggested",{"_index":5679,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["suites",{"_index":5955,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["summarize",{"_index":4284,"title":{},"body":{"changelog.html":{}}}],["super",{"_index":50,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/BaseFile.html":{},"classes/BusinessError.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/File.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["super(em",{"_index":1820,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["super(total",{"_index":2563,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["super(type",{"_index":77,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["superhero",{"_index":3655,"title":{},"body":{"changelog.html":{}}}],["superheros",{"_index":3691,"title":{},"body":{"changelog.html":{}}}],["supertest",{"_index":6527,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["supplement",{"_index":5424,"title":{},"body":{"license.html":{}}}],["support",{"_index":2199,"title":{},"body":{"interfaces/JwtConstants.html":{},"changelog.html":{},"dependencies.html":{},"license.html":{},"modules.html":{},"todo.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["support_${objectid",{"_index":2208,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["supported",{"_index":812,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["supporting",{"_index":5906,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["supportjwtservice",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["supports",{"_index":4710,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["supportuserid",{"_index":2200,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["sure",{"_index":5084,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":5583,"title":{},"body":{"license.html":{}}}],["survive",{"_index":5460,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":5637,"title":{},"body":{"license.html":{}}}],["svg",{"_index":5673,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":4088,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"additional-documentation/nestjs-application.html":{}}}],["swaggermodule.createdocument(app",{"_index":5872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup(path",{"_index":5873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symetrickeyencryptionservice",{"_index":1528,"title":{"injectables/SymetricKeyEncryptionService.html":{}},"body":{"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"injectables/SymetricKeyEncryptionService.html":{}}}],["symetrickeyencryptionservice(configuration.get('s3_key",{"_index":1542,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["symetrickeyencryptionservice(customkey",{"_index":1541,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["symmetric",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["symmetric_cipher_key",{"_index":1562,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["symmetriccipherkey",{"_index":1561,"title":{},"body":{"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{}}}],["synapse",{"_index":4270,"title":{},"body":{"changelog.html":{}}}],["sync",{"_index":3562,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["synced",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["syncers",{"_index":4202,"title":{},"body":{"changelog.html":{}}}],["synchronization",{"_index":4271,"title":{},"body":{"changelog.html":{}}}],["synchronizing",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["syncindex",{"_index":3797,"title":{},"body":{"changelog.html":{}}}],["syncindexes",{"_index":3819,"title":{},"body":{"changelog.html":{}}}],["syncing",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["syncs",{"_index":4551,"title":{},"body":{"changelog.html":{}}}],["syntax",{"_index":1477,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["system",{"_index":1305,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"modules/ManagementModule.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["system.adapter",{"_index":1788,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system.adapter.ts",{"_index":1710,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"miscellaneous/variables.html":{}}}],["system.adapter.ts:12",{"_index":1720,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:18",{"_index":1760,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:26",{"_index":1722,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:36",{"_index":1738,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:48",{"_index":1754,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:57",{"_index":1742,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:68",{"_index":1725,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:78",{"_index":1749,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.adapter.ts:84",{"_index":1736,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["system.module.ts",{"_index":1787,"title":{},"body":{"modules/FileSystemModule.html":{}}}],["system/file",{"_index":1709,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"modules/FileSystemModule.html":{},"miscellaneous/variables.html":{}}}],["system/school",{"_index":4201,"title":{},"body":{"changelog.html":{}}}],["systemid",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["systems",{"_index":1726,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["t",{"_index":315,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"injectables/NewsRepo.html":{},"classes/PaginationResponse.html":{},"injectables/StorageProviderRepo.html":{},"miscellaneous/typealiases.html":{}}}],["tab",{"_index":1391,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"controllers/TeamNewsController.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["table",{"_index":3959,"title":{},"body":{"changelog.html":{}}}],["tablename",{"_index":501,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Team.html":{},"classes/User.html":{}}}],["tables",{"_index":4210,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":5007,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taken",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["takes",{"_index":4175,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["taking",{"_index":3697,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["tangible",{"_index":5379,"title":{},"body":{"license.html":{}}}],["tap",{"_index":1508,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["target",{"_index":551,"title":{},"body":{"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["target._id.tostring",{"_index":1622,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["target.id",{"_index":3017,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.name",{"_index":3018,"title":{},"body":{"classes/TargetInfoMapper.html":{}}}],["target.targetids",{"_index":2705,"title":{},"body":{"classes/NewsScope.html":{}}}],["target.targetids.length",{"_index":2786,"title":{},"body":{"injectables/NewsUc.html":{}}}],["target.targetmodel",{"_index":2703,"title":{},"body":{"classes/NewsScope.html":{}}}],["target:in",{"_index":2704,"title":{},"body":{"classes/NewsScope.html":{}}}],["target_model_values",{"_index":683,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"miscellaneous/variables.html":{}}}],["targetelement",{"_index":884,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["targetelement.addreferences(element.getreferences",{"_index":885,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["targetfolder",{"_index":1282,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["targetid",{"_index":165,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{}}}],["targetids",{"_index":1620,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{}}}],["targetinfomapper",{"_index":2579,"title":{"classes/TargetInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/TargetInfoMapper.html":{}}}],["targetinfomapper.maptoresponse(news.target",{"_index":2597,"title":{},"body":{"classes/NewsMapper.html":{}}}],["targetinforesponse",{"_index":2554,"title":{"classes/TargetInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{}}}],["targetmodel",{"_index":163,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targetmodels",{"_index":2740,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetmodels.map(async",{"_index":2782,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targetpermissions",{"_index":1612,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["targets",{"_index":1616,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["targets.filter((target",{"_index":2785,"title":{},"body":{"injectables/NewsUc.html":{}}}],["targets.map((target",{"_index":1621,"title":{},"body":{"injectables/FeathersAuthProvider.html":{},"classes/NewsScope.html":{}}}],["task",{"_index":2082,"title":{"classes/Task.html":{}},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["task.authorization.service",{"_index":3201,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.availabledate",{"_index":3084,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.course",{"_index":3246,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.course.getnumberofstudents",{"_index":3247,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.createdat",{"_index":3087,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.duedate",{"_index":3086,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.entity",{"_index":2086,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["task.findall",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["task.getdescriptions",{"_index":3096,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.id",{"_index":3081,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.isdraft",{"_index":3248,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.issubstitutionteacher(userid",{"_index":3249,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.name",{"_index":3082,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task.submissions",{"_index":3240,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions.getitems().filter((submission",{"_index":3229,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.submissions.getitems().map((submission",{"_index":3237,"title":{},"body":{"injectables/TaskUC.html":{}}}],["task.updatedat",{"_index":3088,"title":{},"body":{"classes/TaskMapper.html":{}}}],["task/open",{"_index":3771,"title":{},"body":{"changelog.html":{}}}],["task_dashboard_teacher_view_v3",{"_index":3203,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["task_dashboard_view_v3",{"_index":3205,"title":{},"body":{"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["taskauthorizationservice",{"_index":3033,"title":{"injectables/TaskAuthorizationService.html":{}},"body":{"injectables/TaskAuthorizationService.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskcontroller",{"_index":3053,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["taskdashboardpermission",{"_index":3199,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskdashboardpermission.studentdashboard",{"_index":3210,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdashboardpermission.teacherdashboard",{"_index":3212,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskdesc",{"_index":3095,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.color",{"_index":3100,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.description",{"_index":3102,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskdesc.name",{"_index":3098,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskentities",{"_index":3141,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskids",{"_index":2994,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["tasklistresponse",{"_index":3059,"title":{"classes/TaskListResponse.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["tasklistresponse(taskresponses",{"_index":3069,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmapper",{"_index":3060,"title":{"classes/TaskMapper.html":{}},"body":{"controllers/TaskController.html":{},"classes/TaskMapper.html":{}}}],["taskmapper.maptoresponse(taskwithstatus",{"_index":3068,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskmodule",{"_index":2946,"title":{"modules/TaskModule.html":{}},"body":{"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["taskparentdescriptions",{"_index":2120,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"miscellaneous/typealiases.html":{}}}],["taskparentpermission",{"_index":3039,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["taskparentpermission.read",{"_index":3215,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskparentpermission.write",{"_index":3047,"title":{},"body":{"injectables/TaskAuthorizationService.html":{},"injectables/TaskUC.html":{}}}],["taskrepo",{"_index":3105,"title":{"injectables/TaskRepo.html":{}},"body":{"modules/TaskModule.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskresponse",{"_index":3071,"title":{"classes/TaskResponse.html":{}},"body":{"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"classes/TaskResponse.html":{}}}],["taskresponses",{"_index":3066,"title":{},"body":{"controllers/TaskController.html":{}}}],["tasks",{"_index":3055,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskRepo.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["tasks.map((task",{"_index":3223,"title":{},"body":{"injectables/TaskUC.html":{}}}],["taskscope",{"_index":3120,"title":{"classes/TaskScope.html":{}},"body":{"injectables/TaskRepo.html":{},"classes/TaskScope.html":{}}}],["taskscope('$or",{"_index":3125,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["taskswithstatus",{"_index":3064,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskswithstatus.map((taskwithstatus",{"_index":3067,"title":{},"body":{"controllers/TaskController.html":{}}}],["taskuc",{"_index":3057,"title":{"injectables/TaskUC.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskUC.html":{},"overview.html":{}}}],["taskwithstatus",{"_index":3080,"title":{},"body":{"classes/TaskMapper.html":{}}}],["taskwithstatusvo",{"_index":2159,"title":{"classes/TaskWithStatusVo.html":{}},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskMapper.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{}}}],["taskwithstatusvo(task",{"_index":3235,"title":{},"body":{"injectables/TaskUC.html":{}}}],["teacher",{"_index":2097,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["teacher/student",{"_index":4431,"title":{},"body":{"changelog.html":{}}}],["teacher_list",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["teacherdashboard",{"_index":3202,"title":{},"body":{"injectables/TaskUC.html":{},"miscellaneous/enumerations.html":{}}}],["teacherid",{"_index":2122,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{}}}],["teacherids",{"_index":477,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["teacherids.includes(userid",{"_index":522,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["teachers",{"_index":457,"title":{},"body":{"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"interfaces/ICourseProperties.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["team",{"_index":589,"title":{"classes/Team.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/ICreateNews.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["team.entity",{"_index":590,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamid",{"_index":3264,"title":{},"body":{"controllers/TeamNewsController.html":{}}}],["teammembers",{"_index":2083,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{}}}],["teamnews",{"_index":623,"title":{"classes/TeamNews.html":{}},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"miscellaneous/variables.html":{}}}],["teamnews(props",{"_index":620,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["teamnewscontroller",{"_index":2626,"title":{"controllers/TeamNewsController.html":{}},"body":{"modules/NewsModule.html":{},"controllers/TeamNewsController.html":{}}}],["teams",{"_index":1984,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/Team.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["teardown",{"_index":5708,"title":{},"body":{"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tech",{"_index":5988,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["technial",{"_index":6237,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technical",{"_index":1864,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["technically",{"_index":6047,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["technological",{"_index":5268,"title":{},"body":{"license.html":{}}}],["technology",{"_index":6000,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tell",{"_index":5978,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["tells",{"_index":5183,"title":{},"body":{"license.html":{}}}],["temp",{"_index":1727,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["template",{"_index":1906,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"modules/ManagementModule.html":{},"modules/ServerModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["templates",{"_index":3737,"title":{},"body":{"changelog.html":{}}}],["temporary",{"_index":807,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardModelMapper.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"changelog.html":{}}}],["term",{"_index":5233,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["terminate",{"_index":5466,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":5484,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":5475,"title":{},"body":{"license.html":{}}}],["termination",{"_index":5463,"title":{},"body":{"license.html":{}}}],["terms",{"_index":4178,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["test",{"_index":1410,"title":{},"body":{"controllers/DelayController.html":{},"injectables/FeathersAuthProvider.html":{},"classes/ServerConsole.html":{},"controllers/ServerController.html":{},"classes/TestBootstrapConsole.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["test.createtestingmodule",{"_index":1426,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["test.module.ts",{"_index":1406,"title":{},"body":{"controllers/DelayController.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts:12",{"_index":1408,"title":{},"body":{"controllers/DelayController.html":{}}}],["test/...*.e2e",{"_index":5827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testable",{"_index":6374,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["testbootstrapconsole",{"_index":3270,"title":{"classes/TestBootstrapConsole.html":{}},"body":{"classes/TestBootstrapConsole.html":{}}}],["testcase",{"_index":6472,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testdata",{"_index":6490,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tested",{"_index":5953,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testenvironment",{"_index":5847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testhelpers",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":2184,"title":{"additional-documentation/nestjs-application/testing.html":{}},"body":{"modules/InterceptorModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testingmodule",{"_index":1414,"title":{},"body":{"controllers/DelayController.html":{},"classes/TestBootstrapConsole.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule",{"_index":6552,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.close",{"_index":6560,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(entitymanager",{"_index":6556,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(mikroorm",{"_index":6555,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testmodule.get(newsrepo",{"_index":6554,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["testpathignorepatterns",{"_index":5834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["testregex",{"_index":5832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":227,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"modules/NewsModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["text",{"_index":413,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"injectables/DatabaseManagementUc.html":{},"injectables/FileSystemAdapter.html":{},"interfaces/ICollectionFilePath.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["text.validator.ts",{"_index":6310,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textutils",{"_index":6293,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["textvalidator",{"_index":6311,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["that's",{"_index":228,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{}}}],["thats",{"_index":6103,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["theme",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["therefore",{"_index":5121,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["things",{"_index":918,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"changelog.html":{},"license.html":{}}}],["think",{"_index":6263,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["third",{"_index":5290,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["this._id",{"_index":905,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["this._operator",{"_index":2914,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries",{"_index":2916,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.length",{"_index":2915,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries.push(query",{"_index":2918,"title":{},"body":{"classes/Scope.html":{}}}],["this._queries[0",{"_index":2917,"title":{},"body":{"classes/Scope.html":{}}}],["this._timeout",{"_index":3306,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["this.accesskeyid",{"_index":2068,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["this.addquery",{"_index":643,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/LessonScope.html":{},"classes/NewsScope.html":{},"classes/TaskScope.html":{}}}],["this.addquery(emptyresultquery",{"_index":2709,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(queries[0",{"_index":2710,"title":{},"body":{"classes/NewsScope.html":{}}}],["this.addquery(query",{"_index":3181,"title":{},"body":{"classes/TaskScope.html":{}}}],["this.amqpconnection.publish(this.options.exchange",{"_index":2367,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.aud",{"_index":2204,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["this.authorizationservice.checkentitypermissions",{"_index":2774,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.checkentitypermissions(creatorid",{"_index":6399,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.authorizationservice.checkentitypermissions(userid",{"_index":2752,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getentitypermissions(userid",{"_index":2787,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.authorizationservice.getpermittedcourses(userid",{"_index":3214,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.authorizationservice.getpermittedentities(userid",{"_index":2783,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.availabledate",{"_index":2141,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.basepath",{"_index":1312,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.deserialize(bsondocuments",{"_index":1357,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bsonconverter.serialize(jsondocuments",{"_index":1381,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.bucket",{"_index":292,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.byuseridquery(userid",{"_index":2997,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.cache",{"_index":2872,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.closed.set(props.closed",{"_index":2151,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.code",{"_index":392,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.color",{"_index":518,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.columns",{"_index":851,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.comment",{"_index":2107,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.computetaskstatusforstudent(task",{"_index":3224,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.computetaskstatusforteacher(task",{"_index":3225,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.consolewriter.info('schulcloud",{"_index":2929,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(`input",{"_index":2930,"title":{},"body":{"classes/ServerConsole.html":{}}}],["this.consolewriter.info(report",{"_index":1161,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.content",{"_index":597,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.course",{"_index":535,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Task.html":{}}}],["this.course._id",{"_index":537,"title":{},"body":{"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{}}}],["this.course.color",{"_index":2140,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.course.issubstitutionteacher(userid",{"_index":2134,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.course.name",{"_index":2137,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.courserepo.findallforstudent(userid",{"_index":3049,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.courserepo.findallforteacher(userid",{"_index":3048,"title":{},"body":{"injectables/TaskAuthorizationService.html":{}}}],["this.createerrorresponse(error",{"_index":1923,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["this.creator",{"_index":296,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.dashboardrepo.getdashboardbyid(dashboardid",{"_index":1121,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.getusersdashboard",{"_index":1120,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboardrepo.persistandflush(dashboard",{"_index":1123,"title":{},"body":{"injectables/DashboardUc.html":{}}}],["this.dashboarduc.getusersdashboard",{"_index":736,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.moveelementondashboard(dashboardid",{"_index":743,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.dashboarduc.renamegroupondashboard(dashboardid",{"_index":748,"title":{},"body":{"controllers/DashboardController.html":{}}}],["this.data",{"_index":2564,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{}}}],["this.databasemanagementservice.clearcollection(collectionname",{"_index":1367,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.collectionexists(collectionname",{"_index":1364,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.createcollection(collectionname",{"_index":1368,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.finddocumentsofcollection(collectionname",{"_index":1380,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.getcollectionnames",{"_index":1319,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementservice.importcollection",{"_index":1371,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem",{"_index":1190,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem([collectionname",{"_index":1192,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.exportcollectionstofilesystem(filter",{"_index":1166,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem",{"_index":1187,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem([collectionname",{"_index":1189,"title":{},"body":{"controllers/DatabaseManagementController.html":{}}}],["this.databasemanagementuc.seeddatabasecollectionsfromfilesystem(filter",{"_index":1158,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["this.db.collection(collectionname",{"_index":1230,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.createcollection(collectionname",{"_index":1248,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.dropcollection(collectionname",{"_index":1249,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.db.listcollections(undefined",{"_index":1240,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.deletedat",{"_index":288,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.deletefilesuc.removedeletedfilesdata(removedsince",{"_index":1453,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.description",{"_index":508,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.details",{"_index":396,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.displayat",{"_index":599,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.displaycolor",{"_index":815,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.duedate",{"_index":2143,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.em",{"_index":1096,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.find(basefile",{"_index":1823,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.em.find(coursegroup",{"_index":2999,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.find(lesson",{"_index":2299,"title":{},"body":{"injectables/LessonRepo.html":{}}}],["this.em.findandcount(course",{"_index":645,"title":{},"body":{"injectables/CourseRepo.html":{},"classes/CourseScope.html":{}}}],["this.em.findandcount(coursegroup",{"_index":547,"title":{},"body":{"injectables/CourseGroupRepo.html":{}}}],["this.em.findandcount(news",{"_index":2665,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findandcount(submission",{"_index":2996,"title":{},"body":{"injectables/SubmissionRepo.html":{}}}],["this.em.findandcount(task",{"_index":3142,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.findone(dashboardmodelentity",{"_index":1103,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(dashboardmodelentity",{"_index":1101,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.findoneorfail(news",{"_index":2662,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.findoneorfail(role",{"_index":2871,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.em.findoneorfail(storageprovider",{"_index":2973,"title":{},"body":{"injectables/StorageProviderRepo.html":{}}}],["this.em.findoneorfail(user",{"_index":3355,"title":{},"body":{"injectables/UserRepo.html":{}}}],["this.em.flush",{"_index":339,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.getconnection('write').getdb",{"_index":1229,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.em.persist(entity",{"_index":333,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persist(modelentity",{"_index":1097,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.persist(n",{"_index":337,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(entity",{"_index":334,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.persistandflush(modelentity",{"_index":1099,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.em.populate(coursenews",{"_index":2674,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentities",{"_index":2666,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(newsentity",{"_index":2663,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(regularfiles",{"_index":1827,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.em.populate(schoolnews",{"_index":2672,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.populate(taskentities",{"_index":3146,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.em.populate(teamnews",{"_index":2673,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.em.remove(entity",{"_index":340,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.em.removeandflush(entity",{"_index":341,"title":{},"body":{"injectables/BaseRepo.html":{}}}],["this.email",{"_index":2174,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.encoding",{"_index":1769,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.encryptionservice",{"_index":1540,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.encryptionservice.decrypt(value",{"_index":1552,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.encryptionservice.encrypt(value",{"_index":1549,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["this.endpointurl",{"_index":2066,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["this.externalid",{"_index":604,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.feathersauthprovider.getpermittedschools(userid",{"_index":204,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getpermittedtargets(userid",{"_index":205,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getuserschoolpermissions(userid",{"_index":192,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersauthprovider.getusertargetpermissions(userid",{"_index":193,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.feathersserviceprovider.getservice('users",{"_index":1623,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`${targetmodel}/:scopeid/userpermissions",{"_index":1611,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`/users/:scopeid/${targetmodel",{"_index":1615,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.feathersserviceprovider.getservice(`path",{"_index":6320,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.filesrepo.deletefile(file",{"_index":1480,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.filesrepo.findallfilesforcleanup(removedsince",{"_index":1470,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.filestorageadapter.deletefile(file",{"_index":1829,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.filesystemadapter.createdir(targetfolder",{"_index":1376,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.eol",{"_index":1394,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(__dirname",{"_index":1311,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(basedir",{"_index":1327,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(targetfolder",{"_index":1322,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.joinpath(this.basedir",{"_index":1313,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readdir(basedir",{"_index":1325,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.readfile(filepath",{"_index":1354,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.filesystemadapter.writefile(filepath",{"_index":1393,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.findallforstudent(currentuser.userid",{"_index":3211,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findallforteacher(currentuser.userid",{"_index":3213,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.findbyid(id",{"_index":2873,"title":{},"body":{"injectables/RoleRepo.html":{}}}],["this.findnewsandcount(scope.query",{"_index":2660,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["this.findtasksandcount(scope.query",{"_index":3140,"title":{},"body":{"injectables/TaskRepo.html":{}}}],["this.firstname",{"_index":2170,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.getcollectionnames",{"_index":1246,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdatabasecollection(collectionname",{"_index":1231,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["this.getdefaultmaxduedate",{"_index":3218,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.getelement(position",{"_index":874,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.getentitypermissions(userid",{"_index":197,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["this.getnewspermissions(userid",{"_index":2767,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getpermittedtargets(userid",{"_index":2761,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.getreferencesfromposition(from",{"_index":870,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.getseedfolder",{"_index":1314,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.gettargetfilters(userid",{"_index":2780,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.gettargetfolder(toseedfolder",{"_index":1375,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.getuser(userid",{"_index":1605,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["this.grade",{"_index":2100,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment",{"_index":2101,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradecomment.length",{"_index":2102,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles",{"_index":2103,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.gradefiles.length",{"_index":2104,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.grid",{"_index":859,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.delete(this.gridindexfromposition(position",{"_index":883,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.get(key",{"_index":866,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.get(this.gridindexfromposition(position",{"_index":867,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.keys()].map((key",{"_index":864,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.set(this.gridindexfromposition(element.pos",{"_index":861,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.grid.set(this.gridindexfromposition(position",{"_index":886,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.hastaskdashboardpermission(currentuser",{"_index":3209,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.hidden",{"_index":2032,"title":{},"body":{"interfaces/ILessonProperties.html":{},"classes/Lesson.html":{}}}],["this.id",{"_index":814,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.isdirectory",{"_index":287,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.isgroup",{"_index":836,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.joinpath(os.tmpdir",{"_index":1774,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["this.jwtvalidationadapter.iswhitelisted(accountid",{"_index":2243,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.key).tostring",{"_index":3011,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["this.key).tostring(cryptojs.enc.utf8",{"_index":3013,"title":{},"body":{"injectables/SymetricKeyEncryptionService.html":{}}}],["this.lastname",{"_index":2172,"title":{},"body":{"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.lesson",{"_index":2138,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.lesson.name",{"_index":2139,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.lessonrepo.findallbycourseids(courseids",{"_index":3217,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.limit",{"_index":2814,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.loadallcollectionsfromdatabase(folder",{"_index":1334,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadallcollectionsfromfilesystem(folder",{"_index":1333,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.loadcollectionsavailablefromsourceandfilterbycollectionnames",{"_index":1351,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{}}}],["this.logger",{"_index":1448,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"injectables/NewsUc.html":{}}}],["this.logger.error('the",{"_index":1487,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.error(err",{"_index":1484,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.log('cleanup",{"_index":1454,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.logger.log(`${numberoffiles",{"_index":1473,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.log(`cleanup",{"_index":1450,"title":{},"body":{"classes/DeleteFilesConsole.html":{}}}],["this.logger.log(`create",{"_index":2750,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.log(`finished",{"_index":6433,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`news",{"_index":2757,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`return",{"_index":2768,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.logger.log(`start",{"_index":2758,"title":{},"body":{"injectables/NewsUc.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.log(`user",{"_index":6408,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.logger.setcontext(deletefilesuc.name",{"_index":1468,"title":{},"body":{"injectables/DeleteFilesUc.html":{}}}],["this.logger.setcontext(youruc.name",{"_index":6430,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["this.logger.verbose('before",{"_index":1511,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.logger.verbose(`after",{"_index":1514,"title":{},"body":{"injectables/DurationLoggingInterceptor.html":{}}}],["this.mergeelementintoposition(elementtomove",{"_index":872,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.message",{"_index":395,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.mongod.stop",{"_index":2441,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.name",{"_index":506,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/Lesson.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Task.html":{},"classes/Team.html":{}}}],["this.newsrepo.findall(targets",{"_index":2765,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.findonebyid(id",{"_index":2770,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.persistandflush(news",{"_index":2756,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsrepo.removeandflush(news",{"_index":2777,"title":{},"body":{"injectables/NewsUc.html":{}}}],["this.newsuc.create",{"_index":2508,"title":{},"body":{"controllers/NewsController.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["this.newsuc.delete(newsid",{"_index":2525,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.findallforuser",{"_index":2513,"title":{},"body":{"controllers/NewsController.html":{},"controllers/TeamNewsController.html":{}}}],["this.newsuc.findonebyidforuser(newsid",{"_index":2521,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.newsuc.update(newsid",{"_index":2522,"title":{},"body":{"controllers/NewsController.html":{}}}],["this.options.module",{"_index":3275,"title":{},"body":{"classes/TestBootstrapConsole.html":{}}}],["this.options.routingkey",{"_index":2368,"title":{},"body":{"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{}}}],["this.orm.close",{"_index":2440,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{}}}],["this.permissions",{"_index":2058,"title":{},"body":{"interfaces/IRoleProperties.html":{},"classes/Role.html":{}}}],["this.persistandflush(dashboard",{"_index":1104,"title":{},"body":{"injectables/DashboardRepo.html":{},"interfaces/IDashboardRepo.html":{}}}],["this.positionfromgridindex(key",{"_index":865,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.private",{"_index":2130,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.propertiestopopulate",{"_index":1828,"title":{},"body":{"injectables/FilesRepo.html":{},"injectables/NewsRepo.html":{}}}],["this.references",{"_index":830,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.references.length",{"_index":839,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.region",{"_index":2072,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["this.removeandflush(file",{"_index":1830,"title":{},"body":{"injectables/FilesRepo.html":{}}}],["this.removefromposition(from",{"_index":873,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.request.app.get('feathersapp",{"_index":1663,"title":{},"body":{"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{}}}],["this.rolerepo.resolvepermissionsfromsubrolesbyid(role.id",{"_index":2883,"title":{},"body":{"injectables/RoleUC.html":{}}}],["this.roles.set(props.roles",{"_index":2060,"title":{},"body":{"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["this.roleuc.resolvepermissionsbyroles(roles",{"_index":3373,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.rows",{"_index":853,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.school",{"_index":509,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IUserProperties.html":{},"classes/User.html":{}}}],["this.secretaccesskey",{"_index":2070,"title":{},"body":{"interfaces/IStorageProviderProperties.html":{},"classes/StorageProvider.html":{}}}],["this.skip",{"_index":2813,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.source",{"_index":606,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.sourcedescription",{"_index":608,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.spinner.info(text",{"_index":423,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["this.status",{"_index":2162,"title":{},"body":{"interfaces/ITaskStatus.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.storagefilename",{"_index":290,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.storageprovider",{"_index":294,"title":{},"body":{"classes/BaseFile.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/IFileProperties.html":{}}}],["this.student",{"_index":2105,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{}}}],["this.students.length",{"_index":519,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.students.set(props.students",{"_index":512,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["this.submissions.set(props.submissions",{"_index":2149,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.substitutionteachers.getidentifiers('id",{"_index":521,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.substitutionteachers.set(props.substitutionteachers",{"_index":516,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.task",{"_index":2109,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskStatus.html":{},"classes/Submission.html":{},"classes/TaskWithStatusVo.html":{}}}],["this.taskrepo.findallbyparentids",{"_index":3219,"title":{},"body":{"injectables/TaskUC.html":{}}}],["this.taskuc.findall(currentuser",{"_index":3065,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.teacher",{"_index":2146,"title":{},"body":{"interfaces/ITaskProperties.html":{},"classes/Task.html":{}}}],["this.teachers.getidentifiers('id",{"_index":520,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.teachers.set(props.teachers",{"_index":514,"title":{},"body":{"classes/Course.html":{},"interfaces/ICourseProperties.html":{}}}],["this.timeout",{"_index":5705,"title":{},"body":{"todo.html":{}}}],["this.timeout(10000",{"_index":6509,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["this.title",{"_index":394,"title":{},"body":{"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["this.title.substr(0",{"_index":816,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["this.total",{"_index":2812,"title":{},"body":{"classes/PaginationResponse.html":{}}}],["this.type",{"_index":393,"title":{},"body":{"classes/BusinessError.html":{}}}],["this.useremailservice.sendwelcomemessage(user",{"_index":6407,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userfacade.resolveuser(userid",{"_index":2245,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userrepo.findbyemail(props.email",{"_index":6412,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userrepo.findbyid(userid",{"_index":3370,"title":{},"body":{"injectables/UserUC.html":{}}}],["this.userrepo.save(user",{"_index":6403,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.userservice.checkusernotexistbyemail(props.email",{"_index":6401,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["this.useruc.getuserwithpermissions(userid",{"_index":3341,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.validationerrors",{"_index":78,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["those",{"_index":4780,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["though",{"_index":5426,"title":{},"body":{"license.html":{}}}],["thr",{"_index":3675,"title":{},"body":{"changelog.html":{}}}],["three",{"_index":4538,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["through",{"_index":5173,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["throw",{"_index":201,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/DashboardEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GridElement.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/ParseObjectIdPipe.html":{},"injectables/TaskUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throwerror",{"_index":3298,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(err",{"_index":3305,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["throwerror(new",{"_index":3304,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["thrown",{"_index":4698,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["throws",{"_index":194,"title":{},"body":{"injectables/AuthorizationService.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["thumbnails",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["thuringia",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["thus",{"_index":5250,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["ticket",{"_index":5024,"title":{},"body":{"index.html":{}}}],["tickets",{"_index":4327,"title":{},"body":{"changelog.html":{}}}],["ticketsystem.hpi",{"_index":5026,"title":{},"body":{"index.html":{}}}],["tightly",{"_index":6108,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["time",{"_index":670,"title":{},"body":{"classes/CreateNewsParams.html":{},"injectables/JwtValidationAdapter.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["timeout",{"_index":2181,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timeout(milliseconds",{"_index":3308,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout(this.timeout",{"_index":3302,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeout/firewall",{"_index":4543,"title":{},"body":{"changelog.html":{}}}],["timeouterror",{"_index":3299,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":2183,"title":{"injectables/TimeoutInterceptor.html":{}},"body":{"modules/InterceptorModule.html":{},"injectables/TimeoutInterceptor.html":{}}}],["timeoutinterceptor.defaulttimeout",{"_index":3307,"title":{},"body":{"injectables/TimeoutInterceptor.html":{}}}],["timeouts",{"_index":4077,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["times",{"_index":4539,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["timestamp",{"_index":2562,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["timezone",{"_index":3726,"title":{},"body":{"changelog.html":{}}}],["timouts",{"_index":6503,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tiny",{"_index":4932,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":16,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/CourseNews.html":{},"classes/CreateNewsParams.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/ErrorResponse.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/ICreateNews.html":{},"interfaces/IErrorType.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"classes/PatchGroupParams.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"classes/UpdateNewsParams.html":{},"classes/ValidationError.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["tls",{"_index":1698,"title":{},"body":{"injectables/FileStorageAdapter.html":{}}}],["tmpdirpath",{"_index":1775,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["toarray",{"_index":1242,"title":{},"body":{"injectables/DatabaseManagementService.html":{}}}],["todo",{"_index":232,"title":{"todo.html":{}},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/Course.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DashboardRepo.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/EncryptedStringType.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IRoleProperties.html":{},"interfaces/ITaskProperties.html":{},"modules/InterceptorModule.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LessonRepo.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/Role.html":{},"modules/ServerModule.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"injectables/UserUC.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["together",{"_index":2530,"title":{},"body":{"classes/NewsFilterQuery.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["toggle",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["tombstone",{"_index":3832,"title":{},"body":{"changelog.html":{}}}],["tooling",{"_index":6523,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["tools",{"_index":4988,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["topic",{"_index":3961,"title":{},"body":{"changelog.html":{}}}],["topics",{"_index":6425,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["toseedfolder",{"_index":1164,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/Options.html":{}}}],["total",{"_index":2545,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/PaginationResponse.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"injectables/TaskUC.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trace",{"_index":2041,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["traceid",{"_index":6232,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["tracing",{"_index":6256,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trade",{"_index":5448,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":5447,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":5449,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":4166,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transactions",{"_index":6218,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["transfer",{"_index":5174,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":5406,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":5502,"title":{},"body":{"license.html":{}}}],["transfers",{"_index":6377,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["transform",{"_index":1938,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/ParseObjectIdPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transform(value",{"_index":2817,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["transform:true",{"_index":1941,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transformer",{"_index":4837,"title":{},"body":{"dependencies.html":{}}}],["transformoptions",{"_index":1939,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["transient",{"_index":2315,"title":{},"body":{"injectables/Logger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["translate",{"_index":5003,"title":{},"body":{"index.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["translates",{"_index":6152,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["transmission",{"_index":5368,"title":{},"body":{"license.html":{}}}],["transparent",{"_index":1519,"title":{},"body":{"classes/EncryptedStringType.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["transport",{"_index":6247,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trashbin",{"_index":4189,"title":{},"body":{"changelog.html":{}}}],["trashbins",{"_index":3881,"title":{},"body":{"changelog.html":{}}}],["travis",{"_index":3757,"title":{},"body":{"changelog.html":{}}}],["treated",{"_index":5425,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["treaty",{"_index":5274,"title":{},"body":{"license.html":{}}}],["tries",{"_index":4728,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["trigger",{"_index":6163,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggerd",{"_index":6250,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["triggered",{"_index":4747,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["trim",{"_index":4286,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":279,"title":{},"body":{"classes/BaseFile.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/JwtConstants.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"classes/News.html":{},"interfaces/Options.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["try",{"_index":1478,"title":{},"body":{"injectables/DeleteFilesUc.html":{},"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["ts",{"_index":5693,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["tsc",{"_index":4525,"title":{},"body":{"changelog.html":{}}}],["tsp",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":4672,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["typ",{"_index":2210,"title":{},"body":{"interfaces/JwtConstants.html":{}}}],["type",{"_index":17,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"injectables/AuthorizationService.html":{},"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/BaseRepo.html":{},"injectables/BsonConverter.html":{},"classes/BusinessError.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"injectables/CourseGroupRepo.html":{},"classes/CourseNews.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/CreateNewsParams.html":{},"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardMapper.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"injectables/DashboardUc.html":{},"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/DeleteFilesConsole.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"classes/ErrorResponse.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/FeathersError.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/File.html":{},"injectables/FileStorageAdapter.html":{},"injectables/FileSystemAdapter.html":{},"injectables/FilesRepo.html":{},"interfaces/GlobalConstants.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/HtmlMailContent.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICreateNews.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IErrorType.html":{},"interfaces/IFileProperties.html":{},"interfaces/IFindOptions.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ILogger.html":{},"interfaces/INewsProperties.html":{},"interfaces/INewsScope.html":{},"interfaces/IPagination.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IStorageProviderProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/ITaskStatus.html":{},"interfaces/IUserProperties.html":{},"interfaces/InlineAttachment.html":{},"interfaces/JwtConstants.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/LessonScope.html":{},"interfaces/Mail.html":{},"interfaces/MailAttachment.html":{},"interfaces/MailContent.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"injectables/MailService.html":{},"interfaces/MailServiceOptions.html":{},"modules/ManagementModule.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/NewsScope.html":{},"interfaces/NewsTargetFilter.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/PaginationQuery.html":{},"classes/PaginationResponse.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/PatchGroupParams.html":{},"interfaces/PlainTextMailContent.html":{},"classes/ResolvedUser.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"injectables/RoleRepo.html":{},"injectables/RoleUC.html":{},"classes/School.html":{},"classes/SchoolInfoMapper.html":{},"classes/SchoolInfoResponse.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"modules/ServerModule.html":{},"classes/StorageProvider.html":{},"injectables/StorageProviderRepo.html":{},"classes/Submission.html":{},"injectables/SubmissionRepo.html":{},"injectables/SymetricKeyEncryptionService.html":{},"classes/TargetInfoMapper.html":{},"classes/TargetInfoResponse.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"controllers/TaskController.html":{},"classes/TaskListResponse.html":{},"classes/TaskMapper.html":{},"injectables/TaskRepo.html":{},"classes/TaskResponse.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"classes/TaskWithStatusVo.html":{},"classes/Team.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"injectables/TimeoutInterceptor.html":{},"classes/UpdateNewsParams.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserFacade.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"classes/ValidationError.html":{},"classes/ValidationErrorDetailResponse.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["type.interface.ts",{"_index":2008,"title":{},"body":{"interfaces/IErrorType.html":{}}}],["typealiases",{"_index":5738,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":6625,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["typeof",{"_index":875,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/ISubmissionProperties.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/Scope.html":{},"classes/Submission.html":{}}}],["typeorm",{"_index":6629,"title":{},"body":{"additional-documentation/nestjs-application/decisions.html":{}}}],["types",{"_index":483,"title":{},"body":{"classes/Course.html":{},"classes/CourseNews.html":{},"interfaces/ICourseProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ITaskProperties.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/SchoolNews.html":{},"classes/Task.html":{},"classes/TeamNews.html":{},"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["types.ts",{"_index":5794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types/entity",{"_index":796,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{}}}],["types/news.types",{"_index":592,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["typesafety",{"_index":2520,"title":{},"body":{"controllers/NewsController.html":{}}}],["typescript",{"_index":615,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/INewsProperties.html":{},"injectables/JwtValidationAdapter.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/TeamNews.html":{},"classes/TestBootstrapConsole.html":{},"injectables/TimeoutInterceptor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["typical",{"_index":5391,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typically",{"_index":6196,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["typing",{"_index":1640,"title":{},"body":{"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["t|j)s",{"_index":5836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uc",{"_index":1447,"title":{},"body":{"classes/DeleteFilesConsole.html":{},"modules/FilesModule.html":{},"modules/TaskModule.html":{},"controllers/TeamNewsController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["uc.ts",{"_index":6283,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uc/dashboard.uc",{"_index":730,"title":{},"body":{"controllers/DashboardController.html":{},"modules/LearnroomModule.html":{}}}],["uc/database",{"_index":1147,"title":{},"body":{"classes/DatabaseManagementConsole.html":{},"controllers/DatabaseManagementController.html":{},"modules/ManagementModule.html":{},"interfaces/Options.html":{}}}],["uc/news.uc",{"_index":2501,"title":{},"body":{"controllers/NewsController.html":{},"modules/NewsModule.html":{}}}],["uc/task.authorization.service",{"_index":3108,"title":{},"body":{"modules/TaskModule.html":{}}}],["uc/task.uc",{"_index":3058,"title":{},"body":{"controllers/TaskController.html":{}}}],["uc/user.uc",{"_index":3340,"title":{},"body":{"injectables/UserFacade.html":{}}}],["ui",{"_index":4930,"title":{},"body":{"dependencies.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["un",{"_index":6213,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unambigious",{"_index":1574,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["unauthorizedexception",{"_index":185,"title":{},"body":{"injectables/AuthorizationService.html":{},"injectables/TaskUC.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('insufficient",{"_index":202,"title":{},"body":{"injectables/AuthorizationService.html":{}}}],["unbind",{"_index":4555,"title":{},"body":{"changelog.html":{}}}],["unblock",{"_index":4425,"title":{},"body":{"changelog.html":{}}}],["unchanged",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["uncle",{"_index":6370,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["und",{"_index":6160,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["undefined",{"_index":252,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardModelEntity.html":{},"classes/DashboardResponse.html":{},"classes/DatabaseManagementConsole.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/EncryptedStringType.html":{},"classes/File.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ILessonProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Lesson.html":{},"injectables/LessonRepo.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsUc.html":{},"interfaces/Options.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":3661,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["understand",{"_index":6002,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unexpected",{"_index":6512,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unfamiliar",{"_index":6473,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["ungroup",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["unhandled",{"_index":1917,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unhandledexception",{"_index":4437,"title":{},"body":{"changelog.html":{}}}],["unhandledrejection",{"_index":4321,"title":{},"body":{"changelog.html":{}}}],["uniform",{"_index":6029,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unique",{"_index":1577,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/IRoleProperties.html":{},"interfaces/IUserProperties.html":{},"classes/Role.html":{},"injectables/TaskUC.html":{},"classes/User.html":{},"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["unit",{"_index":3756,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["univention",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["universal",{"_index":4933,"title":{},"body":{"dependencies.html":{}}}],["unknown",{"_index":363,"title":{},"body":{"injectables/BsonConverter.html":{},"injectables/DatabaseManagementService.html":{},"injectables/DatabaseManagementUc.html":{},"classes/GlobalErrorFilter.html":{},"interfaces/ICollectionFilePath.html":{},"injectables/NewsUc.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["unknownerror",{"_index":1880,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["unless",{"_index":5397,"title":{},"body":{"license.html":{}}}],["unlike",{"_index":6584,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["unlimited",{"_index":5239,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":5151,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3747,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["unpacking",{"_index":5422,"title":{},"body":{"license.html":{}}}],["unprivileged",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["unpublished",{"_index":1990,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/NewsFilterQuery.html":{},"classes/NewsMapper.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{}}}],["unreleased",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":2273,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["unskip",{"_index":2633,"title":{},"body":{"modules/NewsModule.html":{}}}],["unstable",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["untestable",{"_index":6422,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["until",{"_index":809,"title":{},"body":{"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"injectables/TaskAuthorizationService.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["unused",{"_index":3277,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":3486,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["update",{"_index":2478,"title":{},"body":{"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"modules/NewsModule.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"changelog.html":{}}}],["update(id",{"_index":2742,"title":{},"body":{"injectables/NewsUc.html":{}}}],["update(newsid",{"_index":2496,"title":{},"body":{"controllers/NewsController.html":{}}}],["updated",{"_index":2561,"title":{},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application.html":{}}}],["updatedat",{"_index":245,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"classes/Lesson.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/ResolvedUser.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"classes/TeamNews.html":{},"classes/User.html":{}}}],["updatenewsparams",{"_index":2497,"title":{"classes/UpdateNewsParams.html":{}},"body":{"controllers/NewsController.html":{},"classes/NewsMapper.html":{},"classes/UpdateNewsParams.html":{}}}],["updater",{"_index":556,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"classes/NewsResponse.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updaterid",{"_index":584,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["updates",{"_index":4758,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["updates/sync",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["updating",{"_index":1985,"title":{},"body":{"interfaces/ICreateNews.html":{},"interfaces/INewsScope.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/UpdateNewsParams.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["updator/creator",{"_index":2650,"title":{},"body":{"injectables/NewsRepo.html":{}}}],["upgraded",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":4925,"title":{},"body":{"dependencies.html":{}}}],["uploaded",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["uploads",{"_index":2094,"title":{},"body":{"interfaces/ISubmissionProperties.html":{},"classes/Submission.html":{},"changelog.html":{}}}],["upon",{"_index":6356,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["uppercase",{"_index":6298,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uppercase_snake_case",{"_index":1576,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["uri",{"_index":2343,"title":{},"body":{"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"modules/ServerModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1839,"title":{},"body":{"interfaces/GlobalConstants.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["urls",{"_index":3971,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["urlsafe",{"_index":4936,"title":{},"body":{"dependencies.html":{}}}],["usage",{"_index":3424,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["use",{"_index":234,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"classes/CourseNews.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"injectables/FileSystemAdapter.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"interfaces/INewsProperties.html":{},"injectables/Logger.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"injectables/TaskUC.html":{},"classes/TeamNews.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["usecase",{"_index":6061,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["useclass",{"_index":1570,"title":{},"body":{"modules/ErrorModule.html":{},"modules/InterceptorModule.html":{},"modules/LearnroomModule.html":{},"modules/ValidationModule.html":{}}}],["used",{"_index":2250,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"controllers/TeamNewsController.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["usedecorators",{"_index":5821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usedglobals",{"_index":1838,"title":{},"body":{"interfaces/GlobalConstants.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":2413,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":917,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"license.html":{}}}],["useguards(jwtauthguard",{"_index":5810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":169,"title":{"classes/User.html":{}},"body":{"injectables/AuthorizationService.html":{},"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"injectables/DeleteFilesUc.html":{},"classes/Directory.html":{},"injectables/FeathersAuthProvider.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtStrategy.html":{},"modules/ManagementModule.html":{},"classes/News.html":{},"controllers/NewsController.html":{},"classes/NewsListResponse.html":{},"classes/NewsMapper.html":{},"classes/NewsResponse.html":{},"injectables/NewsUc.html":{},"classes/ResolvedUserMapper.html":{},"classes/SchoolNews.html":{},"modules/ServerModule.html":{},"classes/Submission.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TeamNews.html":{},"controllers/TeamNewsController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["user(props",{"_index":6402,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.${date.now()}@example.com",{"_index":5904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user._id",{"_index":5886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.createdat",{"_index":2844,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.entity",{"_index":271,"title":{},"body":{"classes/BaseFile.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/Directory.html":{},"classes/File.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{},"interfaces/IFileProperties.html":{},"interfaces/INewsProperties.html":{},"interfaces/ISubmissionProperties.html":{},"interfaces/ITaskProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TeamNews.html":{}}}],["user.facade",{"_index":3351,"title":{},"body":{"modules/UserModule.html":{}}}],["user.firstname",{"_index":2841,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.id",{"_index":2839,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user.lastname",{"_index":2843,"title":{},"body":{"classes/ResolvedUserMapper.html":{},"classes/UserInfoMapper.html":{}}}],["user.ldapdn",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["user.ldapid",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["user.permissions",{"_index":1610,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.repo.ts",{"_index":6313,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.roles.getitems",{"_index":3371,"title":{},"body":{"injectables/UserUC.html":{}}}],["user.school.tostring",{"_index":2847,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user.schoolid.tostring",{"_index":1608,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["user.uc.ts",{"_index":6307,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["user.updatedat",{"_index":2845,"title":{},"body":{"classes/ResolvedUserMapper.html":{}}}],["user/account",{"_index":2252,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["user/class",{"_index":6068,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["user_already_exists",{"_index":6394,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["user_create",{"_index":6400,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["useralreadyexisterror",{"_index":6414,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usercontroller",{"_index":3323,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["userfacade",{"_index":2223,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/JwtStrategy.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["userfactory",{"_index":5805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userfactory.build",{"_index":5890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":173,"title":{},"body":{"injectables/AuthorizationService.html":{},"classes/Course.html":{},"injectables/CourseRepo.html":{},"classes/CourseScope.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"injectables/FeathersAuthProvider.html":{},"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/JwtConstants.html":{},"injectables/JwtStrategy.html":{},"injectables/NewsUc.html":{},"injectables/SubmissionRepo.html":{},"classes/Task.html":{},"injectables/TaskAuthorizationService.html":{},"classes/TaskScope.html":{},"injectables/TaskUC.html":{},"injectables/UserFacade.html":{},"injectables/UserUC.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userid)).rejects.tothrow(notfoundexception",{"_index":6583,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["userid.tostring",{"_index":1618,"title":{},"body":{"injectables/FeathersAuthProvider.html":{}}}],["useridobject",{"_index":5883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useridobject.tohexstring",{"_index":5884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userids",{"_index":473,"title":{},"body":{"classes/Course.html":{},"classes/CourseGroup.html":{},"interfaces/ICourseGroupProperties.html":{},"interfaces/ICourseProperties.html":{}}}],["userinfomapper",{"_index":2580,"title":{"classes/UserInfoMapper.html":{}},"body":{"classes/NewsMapper.html":{},"classes/UserInfoMapper.html":{}}}],["userinfomapper.maptoresponse(news.creator",{"_index":2601,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinfomapper.maptoresponse(news.updater",{"_index":2604,"title":{},"body":{"classes/NewsMapper.html":{}}}],["userinforesponse",{"_index":2555,"title":{"classes/UserInfoResponse.html":{}},"body":{"classes/NewsListResponse.html":{},"classes/NewsResponse.html":{},"classes/UserInfoMapper.html":{},"classes/UserInfoResponse.html":{}}}],["usermodule",{"_index":118,"title":{"modules/UserModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/ServerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":4462,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["userrepo",{"_index":3349,"title":{"injectables/UserRepo.html":{}},"body":{"modules/UserModule.html":{},"injectables/UserRepo.html":{},"injectables/UserUC.html":{},"overview.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["users",{"_index":1995,"title":{},"body":{"interfaces/ICurrentUser.html":{},"interfaces/IResolvedUser.html":{},"interfaces/IRole.html":{},"interfaces/IUserProperties.html":{},"injectables/JwtValidationAdapter.html":{},"injectables/NewsUc.html":{},"classes/User.html":{},"injectables/UserUC.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["users.email",{"_index":4389,"title":{},"body":{"changelog.html":{}}}],["users/admin",{"_index":4348,"title":{},"body":{"changelog.html":{}}}],["users/admin/students",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["users/admin/teachers",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["userservice",{"_index":6409,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["usersforconsent",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["useruc",{"_index":3328,"title":{"injectables/UserUC.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserFacade.html":{},"modules/UserModule.html":{},"injectables/UserUC.html":{},"overview.html":{}}}],["uses",{"_index":4603,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usevalue",{"_index":1428,"title":{},"body":{"controllers/DelayController.html":{},"modules/EncryptionModule.html":{},"interfaces/EncryptionModuleOptions.html":{},"modules/MailModule.html":{},"interfaces/MailModuleOptions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["using",{"_index":421,"title":{},"body":{"injectables/ConsoleWriterService.html":{},"modules/FeathersModule.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"classes/GlobalErrorFilter.html":{},"modules/InterceptorModule.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["usually",{"_index":6063,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["utf",{"_index":1744,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["util",{"_index":4381,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["utilities",{"_index":6522,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["utils",{"_index":4353,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["uuid",{"_index":4745,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["v1",{"_index":5863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v2",{"_index":3830,"title":{},"body":{"changelog.html":{}}}],["v3",{"_index":5727,"title":{},"body":{"todo.html":{},"miscellaneous/variables.html":{}}}],["v3/docs",{"_index":5971,"title":{},"body":{"additional-documentation/nestjs-application.html":{}}}],["v3/index",{"_index":5732,"title":{},"body":{"todo.html":{}}}],["v3/news",{"_index":3779,"title":{},"body":{"changelog.html":{}}}],["v3/user/me",{"_index":3774,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":1945,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/Role.html":{},"changelog.html":{},"license.html":{}}}],["validate",{"_index":2178,"title":{},"body":{"modules/InterceptorModule.html":{},"injectables/JwtStrategy.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validate(payload",{"_index":2225,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validated",{"_index":2263,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validatenested",{"_index":2447,"title":{},"body":{"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{}}}],["validatenested()@apiproperty",{"_index":2444,"title":{},"body":{"classes/MoveElementParams.html":{}}}],["validates",{"_index":4434,"title":{},"body":{"changelog.html":{}}}],["validating",{"_index":2262,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation",{"_index":53,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{},"classes/BusinessError.html":{},"classes/GlobalErrorFilter.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"changelog.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validation.adapter",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["validation.adapter.ts",{"_index":2255,"title":{},"body":{"injectables/JwtValidationAdapter.html":{},"miscellaneous/variables.html":{}}}],["validation.adapter.ts:15",{"_index":2261,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.adapter.ts:20",{"_index":2259,"title":{},"body":{"injectables/JwtValidationAdapter.html":{}}}],["validation.error.ts",{"_index":7,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.error.ts:4",{"_index":25,"title":{},"body":{"classes/ApiValidationError.html":{}}}],["validation.pipe",{"_index":3388,"title":{},"body":{"modules/ValidationModule.html":{}}}],["validation.pipe.ts",{"_index":1927,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation.pipe.ts:12",{"_index":1934,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validation/validation.module",{"_index":449,"title":{},"body":{"modules/CoreModule.html":{}}}],["validation_error",{"_index":3380,"title":{},"body":{"classes/ValidationError.html":{}}}],["validationerror",{"_index":23,"title":{"classes/ValidationError.html":{}},"body":{"classes/ApiValidationError.html":{},"classes/GlobalValidationPipe.html":{},"classes/ValidationError.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["validationerror.constraints",{"_index":81,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrordetailresponse",{"_index":71,"title":{"classes/ValidationErrorDetailResponse.html":{}},"body":{"classes/ApiValidationErrorResponse.html":{},"classes/ValidationErrorDetailResponse.html":{}}}],["validationerrordetailresponse(validationerror.property",{"_index":85,"title":{},"body":{"classes/ApiValidationErrorResponse.html":{}}}],["validationerrors",{"_index":30,"title":{},"body":{"classes/ApiValidationError.html":{},"classes/ApiValidationErrorResponse.html":{}}}],["validationmodule",{"_index":430,"title":{"modules/ValidationModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ValidationModule.html":{},"modules.html":{},"overview.html":{}}}],["validationpipe",{"_index":1933,"title":{},"body":{"classes/GlobalValidationPipe.html":{}}}],["validator",{"_index":694,"title":{},"body":{"classes/CreateNewsParams.html":{},"classes/GlobalValidationPipe.html":{},"interfaces/IRoleProperties.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"classes/NewsFilterQuery.html":{},"classes/PaginationQuery.html":{},"classes/PatchGroupParams.html":{},"classes/Role.html":{},"classes/UpdateNewsParams.html":{},"dependencies.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validators",{"_index":6294,"title":{},"body":{"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["validobjectid",{"_index":2820,"title":{},"body":{"injectables/ParseObjectIdPipe.html":{}}}],["value",{"_index":248,"title":{},"body":{"classes/BaseEntityWithTimestamps.html":{},"classes/BaseFile.html":{},"injectables/ConsoleWriterService.html":{},"classes/Course.html":{},"classes/CourseGroup.html":{},"classes/CourseNews.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"injectables/DatabaseManagementUc.html":{},"classes/DefaultGridReference.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/Directory.html":{},"injectables/DurationLoggingInterceptor.html":{},"classes/EncryptedStringType.html":{},"classes/File.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/Lesson.html":{},"classes/LessonScope.html":{},"classes/News.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"injectables/NewsUc.html":{},"classes/PaginationQuery.html":{},"injectables/ParseObjectIdPipe.html":{},"classes/ResolvedUserMapper.html":{},"classes/Role.html":{},"classes/SchoolNews.html":{},"classes/Scope.html":{},"classes/StorageProvider.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TaskScope.html":{},"classes/TeamNews.html":{},"injectables/TimeoutInterceptor.html":{},"classes/User.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["value?.length",{"_index":1547,"title":{},"body":{"classes/EncryptedStringType.html":{}}}],["valueobject",{"_index":3234,"title":{},"body":{"injectables/TaskUC.html":{}}}],["valueof",{"_index":5756,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["values",{"_index":1521,"title":{},"body":{"classes/EncryptedStringType.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["variable",{"_index":4661,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["variables",{"_index":3492,"title":{"miscellaneous/variables.html":{}},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["vars",{"_index":3278,"title":{},"body":{"classes/TestBootstrapConsole.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":5065,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":2036,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose(message",{"_index":2045,"title":{},"body":{"interfaces/ILogger.html":{}}}],["verbose?(message",{"_index":2050,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["verification",{"_index":6612,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verified",{"_index":6610,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verify",{"_index":3920,"title":{},"body":{"changelog.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["verifying",{"_index":6546,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["verison",{"_index":4130,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":3663,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{}}}],["versioning",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["versionnumber",{"_index":4265,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":5082,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["very",{"_index":1360,"title":{},"body":{"injectables/DatabaseManagementUc.html":{},"interfaces/ICollectionFilePath.html":{},"index.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["via",{"_index":919,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{},"classes/TaskListResponse.html":{},"classes/TaskResponse.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{},"additional-documentation/nestjs-application/decisions.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["view",{"_index":2738,"title":{},"body":{"injectables/NewsUc.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["viewers",{"_index":568,"title":{},"body":{"classes/CourseNews.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{}}}],["violates",{"_index":5420,"title":{},"body":{"license.html":{}}}],["violation",{"_index":5470,"title":{},"body":{"license.html":{}}}],["virtuals",{"_index":4890,"title":{},"body":{"dependencies.html":{}}}],["visibilities",{"_index":5711,"title":{},"body":{"todo.html":{}}}],["visible",{"_index":567,"title":{},"body":{"classes/CourseNews.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{},"interfaces/INewsProperties.html":{},"classes/News.html":{},"classes/SchoolNews.html":{},"classes/TeamNews.html":{},"license.html":{}}}],["visiblelessons",{"_index":3216,"title":{},"body":{"injectables/TaskUC.html":{}}}],["visiblelessons.map((o",{"_index":3220,"title":{},"body":{"injectables/TaskUC.html":{}}}],["visual",{"_index":5021,"title":{},"body":{"index.html":{}}}],["void",{"_index":325,"title":{},"body":{"injectables/BaseRepo.html":{},"injectables/ConsoleWriterService.html":{},"classes/CourseScope.html":{},"classes/DashboardEntity.html":{},"classes/DefaultGridReference.html":{},"injectables/FilesRepo.html":{},"classes/GlobalErrorFilter.html":{},"classes/GridElement.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/LessonScope.html":{},"injectables/NewsRepo.html":{},"classes/NewsScope.html":{},"classes/Scope.html":{},"classes/ServerConsole.html":{},"injectables/StorageProviderRepo.html":{},"classes/TaskScope.html":{},"injectables/TimeoutInterceptor.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["volume",{"_index":5324,"title":{},"body":{"license.html":{}}}],["vor",{"_index":4006,"title":{},"body":{"changelog.html":{}}}],["vs",{"_index":2197,"title":{},"body":{"interfaces/JwtConstants.html":{},"todo.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["vscode",{"_index":4989,"title":{"additional-documentation/nestjs-application/vscode.html":{}},"body":{"index.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/extensions.json",{"_index":6650,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/lauch",{"_index":5733,"title":{},"body":{"todo.html":{}}}],["vscode/launch.default.json",{"_index":5987,"title":{},"body":{"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/vscode.html":{}}}],["vscode/settings.default.json",{"_index":6648,"title":{},"body":{"additional-documentation/nestjs-application/vscode.html":{}}}],["vue.js",{"_index":4972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["vulnerabilities",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["wait",{"_index":3517,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["waive",{"_index":5280,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":5648,"title":{},"body":{"license.html":{}}}],["want",{"_index":3178,"title":{},"body":{"classes/TaskScope.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["want's",{"_index":6083,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["warn",{"_index":2037,"title":{},"body":{"interfaces/ILogger.html":{}}}],["warn(message",{"_index":2047,"title":{},"body":{"interfaces/ILogger.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["warning",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":5185,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":5184,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5716,"title":{},"body":{"todo.html":{}}}],["way",{"_index":2418,"title":{},"body":{"modules/MongoMemoryDatabaseModule.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["ways",{"_index":5334,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["web",{"_index":5664,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["weight",{"_index":3902,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":3555,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["went",{"_index":6470,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["whatever",{"_index":2928,"title":{},"body":{"classes/ServerConsole.html":{},"license.html":{}}}],["whereas",{"_index":6198,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["wherever",{"_index":2317,"title":{},"body":{"injectables/Logger.html":{},"miscellaneous/functions.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whether",{"_index":5388,"title":{},"body":{"license.html":{}}}],["whiltelisted",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["whitelist",{"_index":1943,"title":{},"body":{"classes/GlobalValidationPipe.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtValidationAdapter.html":{},"changelog.html":{}}}],["whitelisted",{"_index":2241,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["whitespaces",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":3666,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["whose",{"_index":5375,"title":{},"body":{"license.html":{}}}],["widely",{"_index":5202,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["widespread",{"_index":5109,"title":{},"body":{"license.html":{}}}],["wil",{"_index":4570,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":4396,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["windows",{"_index":4793,"title":{},"body":{"changelog.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["winston",{"_index":4322,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["wip",{"_index":5034,"title":{},"body":{"index.html":{}}}],["wipo",{"_index":5273,"title":{},"body":{"license.html":{}}}],["wish",{"_index":5090,"title":{},"body":{"license.html":{}}}],["wishes",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["within",{"_index":371,"title":{},"body":{"classes/BusinessError.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"changelog.html":{},"license.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["without",{"_index":3464,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/nestjs-application.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{}}}],["without/succeeds",{"_index":5690,"title":{},"body":{"todo.html":{}}}],["wlo",{"_index":3676,"title":{},"body":{"changelog.html":{}}}],["wopi",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["words",{"_index":5029,"title":{},"body":{"index.html":{}}}],["work",{"_index":239,"title":{},"body":{"classes/BaseEntity.html":{},"classes/BaseEntityWithTimestamps.html":{},"interfaces/FeathersService.html":{},"injectables/FeathersServiceProvider.html":{},"interfaces/ITaskProperties.html":{},"classes/Task.html":{},"changelog.html":{},"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/decisions.html":{}}}],["work's",{"_index":5219,"title":{},"body":{"license.html":{}}}],["workers",{"_index":3696,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["workflow",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["workflows",{"_index":6423,"title":{},"body":{"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["working",{"_index":4703,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/nestjs-application/git.html":{}}}],["workings",{"_index":6465,"title":{},"body":{"additional-documentation/nestjs-application/testing.html":{}}}],["works",{"_index":2529,"title":{},"body":{"classes/NewsFilterQuery.html":{},"injectables/NewsRepo.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["world",{"_index":6142,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/domain-driven-design.html":{}}}],["worldwide",{"_index":5539,"title":{},"body":{"license.html":{}}}],["wrap",{"_index":999,"title":{},"body":{"classes/DashboardModelMapper.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrap(dashboard).toreference",{"_index":1053,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["wrap(element).toreference",{"_index":1033,"title":{},"body":{"classes/DashboardModelMapper.html":{}}}],["wrapped",{"_index":5822,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["wrappedreference",{"_index":894,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["wraps",{"_index":6131,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["write",{"_index":1755,"title":{},"body":{"injectables/FileSystemAdapter.html":{},"injectables/TaskAuthorizationService.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["writeerrorlog",{"_index":1914,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writeerrorlog(error",{"_index":1921,"title":{},"body":{"classes/GlobalErrorFilter.html":{}}}],["writefile",{"_index":1718,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writefile(filepath",{"_index":1753,"title":{},"body":{"injectables/FileSystemAdapter.html":{}}}],["writer",{"_index":419,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.module",{"_index":2936,"title":{},"body":{"modules/ServerConsoleModule.html":{}}}],["writer.module.ts",{"_index":405,"title":{},"body":{"modules/ConsoleWriterModule.html":{}}}],["writer.service",{"_index":407,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{}}}],["writer.service.ts",{"_index":408,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:10",{"_index":416,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer.service.ts:12",{"_index":412,"title":{},"body":{"injectables/ConsoleWriterService.html":{}}}],["writer/console",{"_index":404,"title":{},"body":{"modules/ConsoleWriterModule.html":{},"injectables/ConsoleWriterService.html":{},"classes/DatabaseManagementConsole.html":{},"interfaces/Options.html":{},"modules/ServerConsoleModule.html":{}}}],["writes",{"_index":6238,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["writevalidationerrors",{"_index":1902,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writevalidationerrors(error",{"_index":1916,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"miscellaneous/variables.html":{}}}],["writing",{"_index":5616,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["written",{"_index":5342,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":1908,"title":{},"body":{"classes/GlobalErrorFilter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/nestjs-application/testing.html":{}}}],["x",{"_index":716,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["xml2js",{"_index":4940,"title":{},"body":{"dependencies.html":{}}}],["xpos",{"_index":889,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["xposition",{"_index":929,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["xss",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["xunit",{"_index":6173,"title":{},"body":{"additional-documentation/nestjs-application/software-architecture.html":{}}}],["y",{"_index":717,"title":{},"body":{"controllers/DashboardController.html":{},"classes/DashboardEntity.html":{},"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardModelMapper.html":{},"injectables/DashboardRepo.html":{},"classes/DashboardResponse.html":{},"classes/DefaultGridReference.html":{},"classes/GridElement.html":{},"interfaces/IDashboardRepo.html":{},"interfaces/IGridElement.html":{},"interfaces/IGridElementReference.html":{},"classes/MoveElementParams.html":{},"classes/MoveElementPosition.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["year",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["years",{"_index":5343,"title":{},"body":{"license.html":{},"additional-documentation/nestjs-application/software-architecture.html":{}}}],["yes",{"_index":379,"title":{},"body":{"classes/BusinessError.html":{},"classes/DashboardGridElementModel.html":{},"injectables/DatabaseManagementUc.html":{},"classes/EncryptedStringType.html":{},"interfaces/FeathersService.html":{},"interfaces/ILogger.html":{},"injectables/LessonRepo.html":{},"modules/MongoMemoryDatabaseModule.html":{},"classes/NewsListResponse.html":{},"injectables/NewsRepo.html":{},"injectables/NewsUc.html":{},"classes/PaginationResponse.html":{},"classes/TaskListResponse.html":{},"injectables/TaskRepo.html":{},"classes/TaskScope.html":{},"classes/ValidationError.html":{},"miscellaneous/functions.html":{}}}],["yourself",{"_index":5554,"title":{},"body":{"license.html":{}}}],["youruc",{"_index":6428,"title":{},"body":{"additional-documentation/nestjs-application/cross-cutting-concerns.html":{}}}],["ypos",{"_index":890,"title":{},"body":{"classes/DashboardGridElementModel.html":{},"classes/DashboardModelEntity.html":{},"classes/DefaultGridReferenceModel.html":{}}}],["yposition",{"_index":930,"title":{},"body":{"classes/DashboardGridElementResponse.html":{},"classes/DashboardGridSubElementResponse.html":{},"classes/DashboardResponse.html":{}}}],["yyyy",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["zones",{"_index":4479,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthorizationModule.html":{},"modules/ConsoleWriterModule.html":{},"modules/CoreModule.html":{},"modules/DatabaseManagementModule.html":{},"modules/FeathersModule.html":{},"modules/FileSystemModule.html":{},"modules/FilesModule.html":{},"modules/LearnroomModule.html":{},"modules/LoggerModule.html":{},"modules/ManagementModule.html":{},"modules/NewsModule.html":{},"modules/ServerConsoleModule.html":{},"modules/ServerModule.html":{},"modules/TaskModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ApiValidationError.html":{"url":"classes/ApiValidationError.html","title":"class - ApiValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/api-validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrors: ValidationError[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/api-validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrors\n                                                  \n                                                        \n                                                                        ValidationError[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus, ValidationError } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ApiValidationError extends BusinessError {\n\tconstructor(readonly validationErrors: ValidationError[] = []) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'API_VALIDATION_ERROR',\n\t\t\t\ttitle: 'API Validation Error',\n\t\t\t\tdefaultMessage: 'API validation failed, see validationErrors for details',\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiValidationErrorResponse.html":{"url":"classes/ApiValidationErrorResponse.html","title":"class - ApiValidationErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiValidationErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/api-validation-error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for api validation errors.\n\n            \n\n            \n                Extends\n            \n            \n                        ErrorResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                validationErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiValidationError: ApiValidationError)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiValidationError\n                                                  \n                                                        \n                                                                        ApiValidationError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        validationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ValidationErrorDetailResponse[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/dto/api-validation-error.response.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiValidationError } from '@shared/common';\nimport { ErrorResponse } from './error.response';\nimport { ValidationErrorDetailResponse } from './validation-error-detail.response';\n\n/**\n * HTTP response definition for api validation errors.\n */\nexport class ApiValidationErrorResponse extends ErrorResponse {\n\tconstructor(apiValidationError: ApiValidationError) {\n\t\tconst { type, title, message, code } = apiValidationError;\n\t\tsuper(type, title, message, code);\n\n\t\tthis.validationErrors = apiValidationError.validationErrors.map((validationError) => {\n\t\t\tconst constraint = validationError.constraints ? validationError.constraints : ['validation failed'];\n\t\t\tif (Array.isArray(constraint)) {\n\t\t\t\treturn new ValidationErrorDetailResponse(validationError.property, constraint);\n\t\t\t}\n\t\t\tconst errors = Object.values(constraint);\n\t\t\treturn new ValidationErrorDetailResponse(validationError.property, errors);\n\t\t});\n\t}\n\n\tvalidationErrors: ValidationErrorDetailResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppendedAttachment.html":{"url":"interfaces/AppendedAttachment.html","title":"interface - AppendedAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppendedAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authentication/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtValidationAdapter\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UserModule } from '@src/modules/user';\nimport { JwtStrategy } from './strategy/jwt.strategy';\nimport { jwtConstants } from './constants';\nimport { JwtValidationAdapter } from './strategy/jwt-validation.adapter';\n\n@Module({\n\timports: [PassportModule, JwtModule.register(jwtConstants), UserModule],\n\tproviders: [JwtStrategy, JwtValidationAdapter],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthorizationModule.html":{"url":"modules/AuthorizationModule.html","title":"module - AuthorizationModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthorizationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthorizationService\n                        \n                        \n                            FeathersAuthProvider\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FeathersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthorizationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersModule } from '../feathers/feathers.module';\nimport { AuthorizationService } from './authorization.service';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Module({\n\timports: [FeathersModule],\n\tproviders: [AuthorizationService, FeathersAuthProvider],\n\texports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthorizationService.html":{"url":"injectables/AuthorizationService.html","title":"injectable - AuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkEntityPermissions\n                            \n                            \n                                    Async\n                                getEntityPermissions\n                            \n                            \n                                    Async\n                                getPermittedEntities\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersAuthProvider: FeathersAuthProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/authorization.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersAuthProvider\n                                                  \n                                                        \n                                                                        FeathersAuthProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:33\n                \n            \n\n\n            \n                \n                    Ensure that a user has sufficient permissions for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getEntityPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Get all permissions a user has for a specific entity\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The list of entity permissions for the user\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedEntities\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedEntities(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/authorization.service.ts:53\n                \n            \n\n\n            \n                \n                    Get all entities for which a user has specific permissions\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The list of ids of all entities that satisfy the provided permissions for the user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\nimport { FeathersAuthProvider } from './feathers-auth.provider';\n\n@Injectable()\nexport class AuthorizationService {\n\tconstructor(private feathersAuthProvider: FeathersAuthProvider) {}\n\n\t/**\n\t * Get all permissions a user has for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @returns The list of entity permissions for the user\n\t */\n\tasync getEntityPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId): Promise {\n\t\tconst permissions =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getUserSchoolPermissions(userId, targetId)\n\t\t\t\t: await this.feathersAuthProvider.getUserTargetPermissions(userId, targetModel, targetId);\n\t\treturn permissions;\n\t}\n\n\t/**\n\t * Ensure that a user has sufficient permissions for a specific entity\n\t * @param userId\n\t * @param targetModel\n\t * @param targetId\n\t * @param permissions\n\t * @throws UnauthorizedException if the permissions are not satisfied\n\t */\n\tasync checkEntityPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId,\n\t\tpermissions: string[]\n\t): Promise | never {\n\t\tconst entityPermissions = await this.getEntityPermissions(userId, targetModel, targetId);\n\t\tconst hasPermissions = permissions.every((p) => entityPermissions.includes(p));\n\t\tif (!hasPermissions) {\n\t\t\tthrow new UnauthorizedException('Insufficient permissions');\n\t\t}\n\t}\n\n\t/**\n\t * Get all entities for which a user has specific permissions\n\t * @param userId\n\t * @param targetModel\n\t * @param permissions\n\t * @returns The list of ids of all entities that satisfy the provided permissions for the user\n\t */\n\tasync getPermittedEntities(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst entitiyIds =\n\t\t\ttargetModel === NewsTargetModel.School\n\t\t\t\t? await this.feathersAuthProvider.getPermittedSchools(userId)\n\t\t\t\t: await this.feathersAuthProvider.getPermittedTargets(userId, targetModel, permissions);\n\n\t\treturn entitiyIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntityWithTimestamps.html":{"url":"classes/BaseEntityWithTimestamps.html","title":"class - BaseEntityWithTimestamps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntityWithTimestamps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/base.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, PrimaryKey, Property, SerializedPrimaryKey } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\n\n@Entity()\nexport class BaseEntity {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n}\n\n// NOTE we have to include BaseEntityWithTimestamps in the entity discovery if we inherit from BaseEntity.\n// that can be cumbersome e.g. in tests. that's why we define it as a root class here.\n// TODO check if we can use EntitySchema to prevent code duplication (decorators don't work for defining properties btw.)\n@Entity()\nexport class BaseEntityWithTimestamps {\n\t@PrimaryKey()\n\t_id!: ObjectId;\n\n\t@SerializedPrimaryKey()\n\tid!: string;\n\n\t@Property()\n\tcreatedAt = new Date();\n\n\t@Property({ onUpdate: () => new Date() })\n\tupdatedAt = new Date();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseFile.html":{"url":"classes/BaseFile.html","title":"class - BaseFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                isDirectory\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDirectory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\ninterface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepo.html":{"url":"injectables/BaseRepo.html","title":"injectable - BaseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/base.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/base.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/base.repo.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseEntity } from '@shared/domain';\nimport { EntityManager } from '@mikro-orm/mongodb';\n\n@Injectable()\nexport class BaseRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\tpersist(entity: T): T {\n\t\tthis.em.persist(entity);\n\t\treturn entity;\n\t}\n\n\tasync persistAndFlush(entity: T): Promise {\n\t\tawait this.em.persistAndFlush(entity);\n\t\treturn entity;\n\t}\n\n\tpersistAll(entities: T[]): T[] {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\treturn persisted;\n\t}\n\n\tasync persistAllAndFlush(entities: T[]): Promise {\n\t\tconst persisted = entities.map((n) => {\n\t\t\tthis.em.persist(n);\n\t\t\treturn n;\n\t\t});\n\t\tawait this.em.flush();\n\t\treturn persisted;\n\t}\n\n\tremove(entity: T): void {\n\t\tthis.em.remove(entity);\n\t}\n\n\tasync removeAndFlush(entity: T): Promise {\n\t\tawait this.em.removeAndFlush(entity);\n\t}\n\n\tremoveAll(entities: T[]): void {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t}\n\n\tasync removeAllAndFlush(entities: T[]): Promise {\n\t\tentities.forEach((entity) => this.em.remove(entity));\n\t\tawait this.em.flush();\n\t}\n\n\tasync flush(): Promise {\n\t\tawait this.em.flush();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BsonConverter.html":{"url":"injectables/BsonConverter.html","title":"injectable - BsonConverter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BsonConverter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/converter/bson.converter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deserialize\n                        \n                    \n                \n            \n            \n                \ndeserialize(bsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:21\n                \n            \n\n\n            \n                \n                    Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-bson/ejson objects\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-json documents\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serialize\n                        \n                    \n                \n            \n            \n                \nserialize(documents: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/converter/bson.converter.ts:11\n                \n            \n\n\n            \n                \n                    Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    documents\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mongo-json documents\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        mongo-bson/ejson objects\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport BSON from 'bson';\n\n@Injectable()\nexport class BsonConverter {\n\t/**\n\t * Serializes documents from plain JavaScript objects to Extended JSON JavaScript objects.\n\t * @param documents mongo-json documents\n\t * @returns mongo-bson/ejson objects\n\t */\n\tserialize(documents: unknown[]): unknown[] {\n\t\tconst bsonDocuments = BSON.EJSON.serialize(documents) as unknown[];\n\t\treturn bsonDocuments;\n\t}\n\n\t/**\n\t * Deserializes documents from Extended JSON JavaScript objects to plain JavaScript objects.\n\t * @param bsonDocuments mongo-bson/ejson objects\n\t * @returns mongo-json documents\n\t */\n\tdeserialize(bsonDocuments: unknown[]): unknown[] {\n\t\tconst jsonDocuments = BSON.EJSON.deserialize(bsonDocuments) as unknown[];\n\t\treturn jsonDocuments;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessError.html":{"url":"classes/BusinessError.html","title":"class - BusinessError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/business.error.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstract base class for business errors, errors that are handled\nwithin of a client or inside of the application.\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(undefined: IErrorType, code: HttpStatus, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                  \n                                                        \n                                                                        IErrorType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/error/business.error.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/error/business.error.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ErrorResponse } from '@src/core/error/dto/error.response';\nimport { IErrorType } from '@src/core/error/interface';\n\n/**\n * Abstract base class for business errors, errors that are handled\n * within of a client or inside of the application.\n */\nexport abstract class BusinessError extends HttpException {\n\treadonly code: number;\n\n\treadonly type: string;\n\n\treadonly title: string;\n\n\treadonly message: string;\n\n\t// Is not matched by type validation because HttpException is already declared\n\treadonly details: Record;\n\n\tconstructor(\n\t\t{ type, title, defaultMessage }: IErrorType,\n\t\tcode: HttpStatus = HttpStatus.CONFLICT,\n\t\tdetails?: Record\n\t) {\n\t\tsuper({ code, type, title, message: defaultMessage }, code);\n\t\tthis.code = code;\n\t\tthis.type = type;\n\t\tthis.title = title;\n\t\tthis.message = defaultMessage;\n\t\tthis.details = details || {};\n\t}\n\n\tgetDetails(): Record {\n\t\treturn this.details;\n\t}\n\n\tgetResponse(): ErrorResponse {\n\t\treturn new ErrorResponse(this.type, this.title, this.message, this.code);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleWriterModule.html":{"url":"modules/ConsoleWriterModule.html","title":"module - ConsoleWriterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleWriterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleWriterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleWriterService } from './console-writer.service';\n\n@Module({\n\tproviders: [ConsoleWriterService],\n\texports: [ConsoleWriterService],\n})\nexport class ConsoleWriterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleWriterService.html":{"url":"injectables/ConsoleWriterService.html","title":"injectable - ConsoleWriterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleWriterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/console/console-writer/console-writer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                spinner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                info\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        spinner\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ora.Ora\n\n                    \n                \n                \n                    \n                        Default value : createSpinner()\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/console/console-writer/console-writer.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { createSpinner } from 'nestjs-console';\nimport ora from 'ora';\n\n@Injectable()\n/**\n * Console writer service using ora spinner internally.\n */\nexport class ConsoleWriterService {\n\tprivate spinner: ora.Ora = createSpinner();\n\n\tinfo(text: string): void {\n\t\tthis.spinner.info(text);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\nOverrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n\n        \n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ErrorModule\n                        \n                        \n                            InterceptorModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ValidationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ErrorModule } from './error/error.module';\nimport { LoggerModule } from './logger/logger.module';\nimport { ValidationModule } from './validation/validation.module';\nimport { InterceptorModule } from './interceptor/interceptor.module';\n\n/**\n * The core module configures the cross-functional application behaviour by customizing error handling providing and logging.\n * Overrides/Configures global APP_INTERCEPTOR, APP_PIPE, APP_GUARD, APP_FILTER\n */\n@Module({\n\timports: [LoggerModule, ErrorModule, ValidationModule, InterceptorModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                school\n                            \n                            \n                                students\n                            \n                            \n                                substitutionTeachers\n                            \n                            \n                                teachers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNumberOfStudents\n                            \n                            \n                                isSubstitutionTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.color\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.description\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : DEFAULT.name\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        substitutionTeachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToMany('User', undefined, {fieldName: 'substitutionIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teachers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index()@ManyToMany('User', undefined, {fieldName: 'teacherIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/course.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNumberOfStudents\n                        \n                    \n                \n            \n            \n                \ngetNumberOfStudents()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubstitutionTeacher\n                        \n                    \n                \n            \n            \n                \nisSubstitutionTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/course.entity.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\ninterface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tisSubstitutionTeacher(userId: EntityId): boolean {\n\t\tconst teacherIds = this.teachers.getIdentifiers('id');\n\t\tconst substitutionIds = this.substitutionTeachers.getIdentifiers('id');\n\n\t\tconst isSubstitutionTeacher = !teacherIds.includes(userId) && substitutionIds.includes(userId);\n\n\t\treturn isSubstitutionTeacher;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseGroup.html":{"url":"classes/CourseGroup.html","title":"class - CourseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                students\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParentId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ICourseGroupProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ICourseGroupProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        students\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'userIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getParentId\n                        \n                    \n                \n            \n            \n                \ngetParentId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/coursegroup.entity.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ObjectId\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseGroupRepo.html":{"url":"injectables/CourseGroupRepo.html","title":"injectable - CourseGroupRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseGroupRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/coursegroup.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/coursegroup.repo.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup } from '@shared/domain';\n\n@Injectable()\nexport class CourseGroupRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByCourseIds(courseIds: EntityId[]): Promise> {\n\t\tconst [courseGroups, count] = await this.em.findAndCount(CourseGroup, {\n\t\t\tcourse: { $in: courseIds },\n\t\t});\n\t\treturn [courseGroups, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseNews.html":{"url":"classes/CourseNews.html","title":"class - CourseNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:104\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseRepo.html":{"url":"injectables/CourseRepo.html","title":"injectable - CourseRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CourseRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByUserId\n                            \n                            \n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Async\n                                findAllForTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/course.repo.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { EntityId, Course, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { students: userId };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseScope.html":{"url":"classes/CourseScope.html","title":"class - CourseScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/course.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forAllGroupTypes\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forAllGroupTypes\n                        \n                    \n                \n            \n            \n                \nforAllGroupTypes(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/course.repo.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CourseScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { EntityId, Course, Counted } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nclass CourseScope extends Scope {\n\tforAllGroupTypes(userId: EntityId): CourseScope {\n\t\tconst isStudent = { students: userId };\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\n\t\tif (userId) {\n\t\t\tthis.addQuery({ $or: [isStudent, isTeacher, isSubstitutionTeacher] });\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\n@Injectable()\nexport class CourseRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst scope = new CourseScope();\n\t\tscope.forAllGroupTypes(userId);\n\t\tconst [courses, count] = await this.em.findAndCount(Course, scope.query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForStudent(userId: EntityId): Promise> {\n\t\tconst query = { students: userId };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n\n\tasync findAllForTeacher(userId: EntityId): Promise> {\n\t\tconst isTeacher = { teachers: userId };\n\t\tconst isSubstitutionTeacher = { substitutionTeachers: userId };\n\t\tconst query = { $or: [isTeacher, isSubstitutionTeacher] };\n\t\tconst [courses, count] = await this.em.findAndCount(Course, query);\n\t\treturn [courses, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsParams.html":{"url":"classes/CreateNewsParams.html","title":"class - CreateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/create-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for creating a news document.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                    Optional\n                                displayAt\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/create-news.params.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\n/**\n * DTO for creating a news document.\n */\nexport class CreateNewsParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsDate()\n\t@IsOptional()\n\t@ApiPropertyOptional({\n\t\tdescription:\n\t\t\t'The point in time from when the News entity schould be displayed. Defaults to now so that the news is published',\n\t})\n\tdisplayAt?: Date;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@IsString()\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DashboardController.html":{"url":"controllers/DashboardController.html","title":"controller - DashboardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DashboardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dashboard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dashboard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findForUser\n                            \n                            \n                                    Async\n                                moveElement\n                            \n                            \n                                    Async\n                                patchGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findForUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiBody({type: DashboardResponse})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElement\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElement(dashboardId: string, params: MoveElementParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/moveElement')@ApiBody({type: DashboardResponse})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                MoveElementParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        patchGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchGroup(dashboardId: string, x: number, y: number, params: PatchGroupParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id/element')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/controller/dashboard.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                PatchGroupParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Patch, Param, Body, Query } from '@nestjs/common';\nimport { ApiTags, ApiBody } from '@nestjs/swagger';\nimport { Authenticate } from '@src/modules/authentication/decorator/auth.decorator';\nimport { ParseObjectIdPipe } from '@shared/controller';\nimport { DashboardUc } from '../uc/dashboard.uc';\nimport { DashboardResponse, MoveElementParams, PatchGroupParams } from './dto';\nimport { DashboardMapper } from '../mapper/dashboard.mapper';\n\n@ApiTags('Dashboard')\n@Authenticate('jwt')\n@Controller('dashboard')\nexport class DashboardController {\n\tconstructor(private readonly dashboardUc: DashboardUc) {}\n\n\t@Get()\n\t@ApiBody({ type: DashboardResponse })\n\tasync findForUser(): Promise {\n\t\tconst dashboard = await this.dashboardUc.getUsersDashboard(/* currentUser.userId */);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/moveElement')\n\t@ApiBody({ type: DashboardResponse })\n\tasync moveElement(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t/* @CurrentUser() currentUser: ICurrentUser, */\n\t\t@Body() params: MoveElementParams\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.moveElementOnDashboard(dashboardId, params.from, params.to);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n\n\t@Patch(':id/element')\n\tasync patchGroup(\n\t\t@Param('id', ParseObjectIdPipe) dashboardId: string,\n\t\t@Query('x') x: number,\n\t\t@Query('y') y: number,\n\t\t@Body() params: PatchGroupParams\n\t): Promise {\n\t\tconst dashboard = await this.dashboardUc.renameGroupOnDashboard(dashboardId, { x, y }, params.title);\n\t\tconst dto = DashboardMapper.mapToResponse(dashboard);\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardEntity.html":{"url":"classes/DashboardEntity.html","title":"class - DashboardEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                grid\n                            \n                            \n                                id\n                            \n                            \n                                rows\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getElement\n                            \n                            \n                                getGrid\n                            \n                            \n                                getId\n                            \n                            \n                                    Private\n                                getReferencesFromPosition\n                            \n                            \n                                    Private\n                                gridIndexFromPosition\n                            \n                            \n                                    Private\n                                mergeElementIntoPosition\n                            \n                            \n                                moveElement\n                            \n                            \n                                    Private\n                                positionFromGridIndex\n                            \n                            \n                                    Private\n                                removeFromPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string, props: DashboardProps)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:185\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        DashboardProps\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:168\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:166\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:170\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getElement\n                        \n                    \n                \n            \n            \n                \ngetElement(position: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGrid\n                        \n                    \n                \n            \n            \n                \ngetGrid()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementWithPosition[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getReferencesFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferencesFromPosition(position: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        gridIndexFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    gridIndexFromPosition(pos: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pos\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mergeElementIntoPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeElementIntoPosition(element: IGridElement, position: GridPosition)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:253\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                IGridElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IGridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moveElement\n                        \n                    \n                \n            \n            \n                \nmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElementWithPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        positionFromGridIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    positionFromGridIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridPosition\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        removeFromPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeFromPosition(position: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReference(index: number): void;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\ttitle: string;\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: IGridElementReference[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references;\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: IGridElementReference[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReference(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : 'exampleTitle';\n\t\tconst groupMetadata = {\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReference(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementModel.html":{"url":"classes/DashboardGridElementModel.html","title":"class - DashboardGridElementModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dashboard\n                            \n                            \n                                references\n                            \n                            \n                                title\n                            \n                            \n                                xPos\n                            \n                            \n                                yPos\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dashboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DashboardModelEntity', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Collection\n\n                    \n                \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('DefaultGridReferenceModel', 'gridelement')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity({ tableName: 'dashboarddefaultreference' })\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n\n\t// not really happy with this, but didnt find a better solution yet to connect the gridelement with multiple references.\n\t@ManyToOne('DashboardGridElementModel', { wrappedReference: true })\n\tgridelement: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id?: string) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@OneToMany('DefaultGridReferenceModel', 'gridelement')\n\treferences: Collection = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridElementResponse.html":{"url":"classes/DashboardGridElementResponse.html","title":"class - DashboardGridElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                groupElements\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                            \n                                xPosition\n                            \n                            \n                                yPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DashboardGridSubElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of all subelements in the group'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        xPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'X position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        yPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Y position of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardGridSubElementResponse.html":{"url":"classes/DashboardGridSubElementResponse.html","title":"class - DashboardGridSubElementResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardGridSubElementResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                shortTitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Color of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Grid element', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shortTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Short title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the Grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardMapper.html":{"url":"classes/DashboardMapper.html","title":"class - DashboardMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(dashboard: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/mapper/dashboard.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboard\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DashboardResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DashboardEntity } from '@shared/domain';\nimport { DashboardResponse, DashboardGridElementResponse } from '../controller/dto';\n\nexport class DashboardMapper {\n\tstatic mapToResponse(dashboard: DashboardEntity): DashboardResponse {\n\t\tconst dto = new DashboardResponse();\n\n\t\tdto.id = dashboard.id;\n\n\t\tdto.gridElements = dashboard.getGrid().map((elementWithPosition) => {\n\t\t\tconst elementDTO = new DashboardGridElementResponse();\n\n\t\t\telementDTO.id = elementWithPosition.gridElement.getId();\n\t\t\tconst data = elementWithPosition.gridElement.getContent();\n\t\t\telementDTO.title = data.title;\n\t\t\telementDTO.shortTitle = data.shortTitle;\n\t\t\telementDTO.displayColor = data.displayColor;\n\t\t\tif (data.group) {\n\t\t\t\telementDTO.groupElements = data.group;\n\t\t\t}\n\n\t\t\tconst { pos } = elementWithPosition;\n\t\t\telementDTO.xPosition = pos.x;\n\t\t\telementDTO.yPosition = pos.y;\n\n\t\t\treturn elementDTO;\n\t\t});\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardModelEntity.html":{"url":"classes/DashboardModelEntity.html","title":"class - DashboardModelEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardModelEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Collection\n\n                    \n                \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('DashboardGridElementModel', 'dashboard')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity({ tableName: 'dashboarddefaultreference' })\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n\n\t// not really happy with this, but didnt find a better solution yet to connect the gridelement with multiple references.\n\t@ManyToOne('DashboardGridElementModel', { wrappedReference: true })\n\tgridelement: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id?: string) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@OneToMany('DefaultGridReferenceModel', 'gridelement')\n\treferences: Collection = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardModelMapper.html":{"url":"classes/DashboardModelMapper.html","title":"class - DashboardModelMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardModelMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Async\n                                instantiateGridElementModel\n                            \n                            \n                                    Static\n                                    Async\n                                mapElementToEntity\n                            \n                            \n                                    Static\n                                    Async\n                                mapGridElementToModel\n                            \n                            \n                                    Static\n                                mapReferenceToEntity\n                            \n                            \n                                    Static\n                                    Async\n                                mapReferenceToModel\n                            \n                            \n                                    Static\n                                    Async\n                                mapToEntity\n                            \n                            \n                                    Static\n                                    Async\n                                mapToModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        Async\n                        instantiateGridElementModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    instantiateGridElementModel(gridElement: IGridElement, em: EntityManager)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gridElement\n                                    \n                                                IGridElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    em\n                                    \n                                            EntityManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapElementToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapElementToEntity(modelEntity: DashboardGridElementModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardGridElementModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapGridElementToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapGridElementToModel(elementWithPosition: GridElementWithPosition, dashboard: DashboardModelEntity, em: EntityManager)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementWithPosition\n                                    \n                                                GridElementWithPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dashboard\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    em\n                                    \n                                            EntityManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapReferenceToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapReferenceToEntity(modelEntity: DefaultGridReferenceModel)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DefaultGridReferenceModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DefaultGridReference\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapReferenceToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapReferenceToModel(reference: IGridElementReference, element: DashboardGridElementModel, em: EntityManager)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                IGridElementReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    element\n                                    \n                                                DashboardGridElementModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    em\n                                    \n                                            EntityManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapToEntity\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToEntity(modelEntity: DashboardModelEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    modelEntity\n                                    \n                                                DashboardModelEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        mapToModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToModel(entity: DashboardEntity, em: EntityManager)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.model.mapper.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    em\n                                    \n                                            EntityManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, wrap, EntityManager } from '@mikro-orm/core';\nimport {\n\tDashboardEntity,\n\tGridElement,\n\tIGridElement,\n\tGridElementWithPosition,\n\tDefaultGridReference,\n\tIGridElementReference,\n} from '@shared/domain';\nimport { DashboardGridElementModel, DashboardModelEntity, DefaultGridReferenceModel } from './dashboard.model.entity';\n\nexport class DashboardModelMapper {\n\tstatic mapReferenceToEntity(modelEntity: DefaultGridReferenceModel): DefaultGridReference {\n\t\treturn new DefaultGridReference(modelEntity.id, modelEntity.title, modelEntity.color);\n\t}\n\n\tstatic async mapElementToEntity(modelEntity: DashboardGridElementModel): Promise {\n\t\tif (!modelEntity.references.isInitialized()) {\n\t\t\tawait modelEntity.references.init();\n\t\t}\n\t\tconst references = Array.from(modelEntity.references).map((ref) => DashboardModelMapper.mapReferenceToEntity(ref));\n\t\tconst result = {\n\t\t\tpos: { x: modelEntity.xPos, y: modelEntity.yPos },\n\t\t\tgridElement: GridElement.FromPersistedGroup(modelEntity.id, modelEntity.title, references),\n\t\t};\n\t\treturn result;\n\t}\n\n\tstatic async mapToEntity(modelEntity: DashboardModelEntity): Promise {\n\t\tif (!modelEntity.gridElements.isInitialized()) {\n\t\t\tawait modelEntity.gridElements.init();\n\t\t}\n\t\tconst grid: GridElementWithPosition[] = [];\n\t\t// ----------------------\n\t\t// temporary solution, look at how remove orphaned elements on persist\n\t\tawait Promise.all(\n\t\t\tArray.from(modelEntity.gridElements).map(async (e) => {\n\t\t\t\tconst element = await DashboardModelMapper.mapElementToEntity(e);\n\t\t\t\tif (element.gridElement.getReferences().length > 0) {\n\t\t\t\t\tgrid.push(element);\n\t\t\t\t}\n\t\t\t\treturn Promise.resolve();\n\t\t\t})\n\t\t);\n\t\t// ----------------------\n\t\treturn new DashboardEntity(modelEntity.id, { grid });\n\t}\n\n\tstatic async mapReferenceToModel(\n\t\treference: IGridElementReference,\n\t\telement: DashboardGridElementModel,\n\t\tem: EntityManager\n\t): Promise {\n\t\tconst metadata = reference.getMetadata();\n\t\tconst existingReference = await em.findOne(DefaultGridReferenceModel, metadata.id);\n\t\tconst result = existingReference || new DefaultGridReferenceModel(metadata.id);\n\t\tresult.color = metadata.displayColor;\n\t\tresult.title = metadata.title;\n\t\tresult.gridelement = wrap(element).toReference();\n\t\treturn result;\n\t}\n\n\tprivate static async instantiateGridElementModel(\n\t\tgridElement: IGridElement,\n\t\tem: EntityManager\n\t): Promise {\n\t\tif (!gridElement.hasId()) {\n\t\t\treturn new DashboardGridElementModel();\n\t\t}\n\t\tconst existing = await em.findOne(DashboardGridElementModel, gridElement.getId());\n\t\treturn existing || new DashboardGridElementModel(gridElement.getId());\n\t}\n\n\tstatic async mapGridElementToModel(\n\t\telementWithPosition: GridElementWithPosition,\n\t\tdashboard: DashboardModelEntity,\n\t\tem: EntityManager\n\t): Promise {\n\t\tconst { gridElement } = elementWithPosition;\n\t\tconst elementModel = await DashboardModelMapper.instantiateGridElementModel(gridElement, em);\n\t\telementModel.xPos = elementWithPosition.pos.x;\n\t\telementModel.yPos = elementWithPosition.pos.y;\n\n\t\tif (gridElement.isGroup()) {\n\t\t\telementModel.title = gridElement.getContent().title;\n\t\t}\n\n\t\tconst references = await Promise.all(\n\t\t\tgridElement.getReferences().map((ref) => DashboardModelMapper.mapReferenceToModel(ref, elementModel, em))\n\t\t);\n\t\telementModel.references = new Collection(elementModel, references);\n\n\t\telementModel.dashboard = wrap(dashboard).toReference();\n\t\treturn elementModel;\n\t}\n\n\tstatic async mapToModel(entity: DashboardEntity, em: EntityManager): Promise {\n\t\tconst existing = await em.findOne(DashboardModelEntity, entity.getId());\n\t\tconst modelEntity = existing || new DashboardModelEntity(entity.getId());\n\t\tconst mappedElements = await Promise.all(\n\t\t\tentity\n\t\t\t\t.getGrid()\n\t\t\t\t.map((elementWithPosition) => DashboardModelMapper.mapGridElementToModel(elementWithPosition, modelEntity, em))\n\t\t);\n\n\t\tmodelEntity.gridElements = new Collection(modelEntity, mappedElements);\n\n\t\treturn modelEntity;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardRepo.html":{"url":"injectables/DashboardRepo.html","title":"injectable - DashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getDashboardById\n                            \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                persist\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persist\n                        \n                    \n                \n            \n            \n                \n                    \n                    persist(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, DefaultGridReference, GridElement, GridElementWithPosition } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelEntity } from './dashboard.model.entity';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst hardcodedTestDashboardId = '0000d213816abba584714c0a';\nconst generateHardcodedTestDashboard = () => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tgridArray.push({\n\t\tpos: { x: 1, y: 3 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Math')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 1, y: 4 },\n\t\tgridElement: GridElement.FromPersistedGroup(new ObjectId().toString(), 'Science', [\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Physics'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Biology'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Chemistry'),\n\t\t]),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 2, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'English')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 3, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'German')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 4, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Greek')\n\t\t),\n\t});\n\n\tconst dashboard = new DashboardEntity(hardcodedTestDashboardId, { grid: gridArray });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await DashboardModelMapper.mapToModel(entity, this.em);\n\t\tthis.em.persist(modelEntity);\n\t\treturn DashboardModelMapper.mapToEntity(modelEntity);\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await DashboardModelMapper.mapToModel(entity, this.em);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn DashboardModelMapper.mapToEntity(modelEntity);\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await DashboardModelMapper.mapToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, hardcodedTestDashboardId);\n\t\tif (dashboardModel) {\n\t\t\treturn DashboardModelMapper.mapToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateHardcodedTestDashboard();\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DashboardResponse.html":{"url":"classes/DashboardResponse.html","title":"class - DashboardResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DashboardResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridElements\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        gridElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DashboardGridElementResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'List of all elements visible on the dashboard'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the Dashboard entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/dashboard.response.ts:70\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class DashboardGridSubElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n}\n\nexport class DashboardGridElementResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Grid element',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the Grid element',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Short title of the Grid element',\n\t})\n\tshortTitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Color of the Grid element',\n\t})\n\tdisplayColor: string;\n\n\t@ApiProperty({\n\t\tdescription: 'X position of the Grid element',\n\t})\n\txPosition: number;\n\n\t@ApiProperty({\n\t\tdescription: 'Y position of the Grid element',\n\t})\n\tyPosition: number;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridSubElementResponse],\n\t\tdescription: 'List of all subelements in the group',\n\t})\n\tgroupElements: DashboardGridSubElementResponse[];\n}\n\nexport class DashboardResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the Dashboard entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\ttype: [DashboardGridElementResponse],\n\t\tdescription: 'List of all elements visible on the dashboard',\n\t})\n\tgridElements: DashboardGridElementResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardUc.html":{"url":"injectables/DashboardUc.html","title":"injectable - DashboardUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/uc/dashboard.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersDashboard\n                            \n                            \n                                    Async\n                                moveElementOnDashboard\n                            \n                            \n                                    Async\n                                renameGroupOnDashboard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dashboardRepo: IDashboardRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dashboardRepo\n                                                  \n                                                        \n                                                                        IDashboardRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        moveElementOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    moveElementOnDashboard(dashboardId: EntityId, from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    from\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                GridPositionWithGroupIndex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        renameGroupOnDashboard\n                        \n                    \n                \n            \n            \n                \n                    \n                    renameGroupOnDashboard(dashboardId: EntityId, position: GridPosition, params: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/learnroom/uc/dashboard.uc.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dashboardId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    position\n                                    \n                                                GridPosition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { DashboardEntity, EntityId, GridPositionWithGroupIndex, GridPosition } from '@shared/domain';\nimport { IDashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\n@Injectable()\nexport class DashboardUc {\n\tconstructor(@Inject('DASHBOARD_REPO') private readonly dashboardRepo: IDashboardRepo) {}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getUsersDashboard();\n\t\treturn dashboard;\n\t}\n\n\tasync moveElementOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tfrom: GridPositionWithGroupIndex,\n\t\tto: GridPositionWithGroupIndex\n\t\t/* currentUser: ICurrentUser */\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tdashboard.moveElement(from, to);\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n\n\tasync renameGroupOnDashboard(\n\t\tdashboardId: EntityId,\n\t\tposition: GridPosition,\n\t\tparams: string\n\t): Promise {\n\t\tconst dashboard = await this.dashboardRepo.getDashboardById(dashboardId);\n\t\tconst gridElement = dashboard.getElement(position);\n\t\tgridElement.setGroupName(params);\n\t\tawait this.dashboardRepo.persistAndFlush(dashboard);\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseManagementConsole.html":{"url":"classes/DatabaseManagementConsole.html","title":"class - DatabaseManagementConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseManagementConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                seedCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService, databaseManagementUc: DatabaseManagementUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/console/database-management.console.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementUc\n                                                  \n                                                        \n                                                                        DatabaseManagementUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'export', options: undefined, description: 'export database collections to filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedCollections(options: Options)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'seed', options: undefined, description: 'reset database collections with seed data from filesystem'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/console/database-management.console.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabaseManagementController.html":{"url":"controllers/DatabaseManagementController.html","title":"controller - DatabaseManagementController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabaseManagementController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/controller/database-management.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                management/database\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollection\n                            \n                            \n                                    Async\n                                exportCollections\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                            \n                                    Async\n                                importCollections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('export')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('seed/:collectionName')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollections\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollections()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('seed')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/management/controller/database-management.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Param, Post } from '@nestjs/common';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\n@Controller('management/database')\nexport class DatabaseManagementController {\n\tconstructor(private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Post('seed')\n\tasync importCollections(): Promise {\n\t\tconst result = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem();\n\t\treturn result;\n\t}\n\n\t@Post('seed/:collectionName')\n\tasync importCollection(@Param('collectionName') collectionName: string): Promise {\n\t\tconst result = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem([collectionName]);\n\t\treturn result;\n\t}\n\n\t@Post('export')\n\tasync exportCollections(): Promise {\n\t\tconst result = await this.databaseManagementUc.exportCollectionsToFileSystem();\n\t\treturn result;\n\t}\n\n\t@Post('export/:collectionName')\n\tasync exportCollection(@Param('collectionName') collectionName: string): Promise {\n\t\tconst result = await this.databaseManagementUc.exportCollectionsToFileSystem([collectionName]);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseManagementModule.html":{"url":"modules/DatabaseManagementModule.html","title":"module - DatabaseManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseManagementService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseManagementService } from './database-management.service';\n\n@Module({\n\timports: [DatabaseManagementService],\n\texports: [DatabaseManagementService],\n})\nexport class DatabaseManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementService.html":{"url":"injectables/DatabaseManagementService.html","title":"injectable - DatabaseManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/database/management/database-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                clearCollection\n                            \n                            \n                                    Async\n                                collectionExists\n                            \n                            \n                                    Async\n                                createCollection\n                            \n                            \n                                    Async\n                                dropCollection\n                            \n                            \n                                    Async\n                                findDocumentsOfCollection\n                            \n                            \n                                    Async\n                                getCollectionNames\n                            \n                            \n                                    Private\n                                getDatabaseCollection\n                            \n                            \n                                    Async\n                                importCollection\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    db\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        clearCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        collectionExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionExists(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    createCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dropCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    dropCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findDocumentsOfCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    findDocumentsOfCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCollectionNames()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDatabaseCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseCollection(collectionName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Collection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        importCollection\n                        \n                    \n                \n            \n            \n                \n                    \n                    importCollection(collectionName: string, jsonDocuments: [])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jsonDocuments\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        db\n                    \n                \n\n                \n                    \n                        getdb()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/database/management/database-management.service.ts:9\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { Collection, Db } from 'mongodb';\n\n@Injectable()\nexport class DatabaseManagementService {\n\tconstructor(private em: EntityManager) {}\n\n\tprivate get db(): Db {\n\t\treturn this.em.getConnection('write').getDb();\n\t}\n\n\tprivate getDatabaseCollection(collectionName: string): Collection {\n\t\tconst collection = this.db.collection(collectionName);\n\t\treturn collection;\n\t}\n\n\tasync importCollection(collectionName: string, jsonDocuments: unknown[]): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tif (jsonDocuments.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst { insertedCount } = await collection.insertMany(jsonDocuments, {\n\t\t\tforceServerObjectId: true,\n\t\t\tbypassDocumentValidation: true,\n\t\t});\n\t\treturn insertedCount;\n\t}\n\n\tasync findDocumentsOfCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst documents = (await collection.find({}).toArray()) as unknown[];\n\t\treturn documents;\n\t}\n\n\tasync clearCollection(collectionName: string): Promise {\n\t\tconst collection = this.getDatabaseCollection(collectionName);\n\t\tconst { deletedCount } = await collection.deleteMany({});\n\t\treturn deletedCount || 0;\n\t}\n\n\tasync getCollectionNames(): Promise {\n\t\tconst collections = (await this.db.listCollections(undefined, { nameOnly: true }).toArray()) as unknown[] as {\n\t\t\tname: string;\n\t\t}[];\n\t\tconst collectionNames = collections.map((collection) => collection.name);\n\t\treturn collectionNames;\n\t}\n\n\tasync collectionExists(collectionName: string): Promise {\n\t\tconst collections = await this.getCollectionNames();\n\t\tconst result = collections.includes(collectionName);\n\t\treturn result;\n\t}\n\n\tasync createCollection(collectionName: string): Promise {\n\t\tawait this.db.createCollection(collectionName);\n\t}\n\n\tasync dropCollection(collectionName: string): Promise {\n\t\tawait this.db.dropCollection(collectionName);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseManagementUc.html":{"url":"injectables/DatabaseManagementUc.html","title":"injectable - DatabaseManagementUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseManagementUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                basePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                exportCollectionsToFileSystem\n                            \n                            \n                                    Private\n                                getSeedFolder\n                            \n                            \n                                    Private\n                                getTargetFolder\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                loadAllCollectionsFromFilesystem\n                            \n                            \n                                    Private\n                                    Async\n                                loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                            \n                            \n                                    Async\n                                seedDatabaseCollectionsFromFileSystem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    baseDir\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileSystemAdapter: FileSystemAdapter, databaseManagementService: DatabaseManagementService, bsonConverter: BsonConverter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileSystemAdapter\n                                                  \n                                                        \n                                                                        FileSystemAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseManagementService\n                                                  \n                                                        \n                                                                        DatabaseManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bsonConverter\n                                                  \n                                                        \n                                                                        BsonConverter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exportCollectionsToFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:183\n                \n            \n\n\n            \n                \n                    Exports all or defined  from database as bson to filesystem.\nThe behaviour should match $ mongoexport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional override existing seed data files\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getSeedFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSeedFolder()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:38\n                \n            \n\n\n            \n                \n                    setup dir with json files\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTargetFolder\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFolder(toSeedFolder?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:46\n                \n            \n\n\n            \n                \n                    export folder name based on current date\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    toSeedFolder\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromDatabase(targetFolder: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:63\n                \n            \n\n\n            \n                \n                    Loads all collection names from database and adds related file paths.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetFolder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadAllCollectionsFromFilesystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadAllCollectionsFromFilesystem(baseDir: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:76\n                \n            \n\n\n            \n                \n                    Loads all collection names and file paths from backup files.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseDir\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        loadCollectionsAvailableFromSourceAndFilterByCollectionNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadCollectionsAvailableFromSourceAndFilterByCollectionNames(source: \"files\" | \"database\", folder: string, collectionNameFilter?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:91\n                \n            \n\n\n            \n                \n                    Scans  for existing collections and optionally filters them based on \n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                            \"files\" | \"database\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    folder\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collectionNameFilter\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        the filtered collection names and related file paths\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        seedDatabaseCollectionsFromFileSystem\n                        \n                    \n                \n            \n            \n                \n                    \n                    seedDatabaseCollectionsFromFileSystem(collections?: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:134\n                \n            \n\n\n            \n                \n                    Imports all or filtered  from filesystem as bson to database.\nThe behaviour should match $ mongoimport\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collections\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        optional filter applied on existing collections\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        the list of collection names exported\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        basePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '../../../../../../backup'\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/management/uc/database-management.uc.ts:19\n                        \n                    \n\n            \n                \n                    relative path to seed data folder based of location of this file.\n\n                \n            \n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        baseDir\n                    \n                \n\n                \n                    \n                        getbaseDir()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/modules/management/uc/database-management.uc.ts:30\n                                \n                            \n                    \n                        \n                                absolute path reference for seed data base folder.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReference.html":{"url":"classes/DefaultGridReference.html","title":"class - DefaultGridReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElementReference\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayColor\n                            \n                            \n                                id\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetadata\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: EntityId, title: string, displayColor: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        EntityId\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        displayColor\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:22\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMetadata\n                        \n                    \n                \n            \n            \n                \ngetMetadata()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementReferenceMetadata\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReference(index: number): void;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\ttitle: string;\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: IGridElementReference[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references;\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: IGridElementReference[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReference(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : 'exampleTitle';\n\t\tconst groupMetadata = {\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReference(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DefaultGridReferenceModel.html":{"url":"classes/DefaultGridReferenceModel.html","title":"class - DefaultGridReferenceModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DefaultGridReferenceModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.model.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                gridelement\n                            \n                            \n                                title\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        color\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gridelement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IdentifiedReference\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('DashboardGridElementModel', {wrappedReference: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/repositories/learnroom/dashboard.model.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne, OneToMany, Collection, IdentifiedReference } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from '@shared/domain/entity/base.entity';\n\n@Entity({ tableName: 'dashboarddefaultreference' })\nexport class DefaultGridReferenceModel extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\tcolor: string;\n\n\t// not really happy with this, but didnt find a better solution yet to connect the gridelement with multiple references.\n\t@ManyToOne('DashboardGridElementModel', { wrappedReference: true })\n\tgridelement: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboardelement' })\nexport class DashboardGridElementModel extends BaseEntityWithTimestamps {\n\tconstructor(id?: string) {\n\t\tsuper();\n\t\tif (id) {\n\t\t\tthis._id = ObjectId.createFromHexString(id);\n\t\t\tthis.id = id;\n\t\t}\n\t}\n\n\t@Property()\n\ttitle: string;\n\n\t@Property()\n\txPos: number;\n\n\t@Property()\n\tyPos: number;\n\n\t// todo: put in references to useful things like courses via polymorphic inheritance (see news)\n\t@OneToMany('DefaultGridReferenceModel', 'gridelement')\n\treferences: Collection = new Collection(this);\n\n\t@ManyToOne('DashboardModelEntity', { wrappedReference: true })\n\tdashboard: IdentifiedReference;\n}\n\n@Entity({ tableName: 'dashboard' })\nexport class DashboardModelEntity extends BaseEntityWithTimestamps {\n\tconstructor(id: string) {\n\t\tsuper();\n\t\tthis._id = ObjectId.createFromHexString(id);\n\t\tthis.id = id;\n\t}\n\n\t@OneToMany('DashboardGridElementModel', 'dashboard')\n\tgridElements: Collection = new Collection(this);\n\n\t// userId\n\n\t// sizetype\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DelayController.html":{"url":"controllers/DelayController.html","title":"controller - DelayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DelayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/test/create-test.module.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/test/create-test.module.ts:12\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, NestInterceptor } from '@nestjs/common';\n\nimport { Test, TestingModule } from '@nestjs/testing';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\n\nconst delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n@Controller()\nclass DelayController {\n\t/** default route to test public access */\n\t@Get()\n\tasync getHello(): Promise {\n\t\tawait delay(100);\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\nexport const createTestModule = (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteFilesConsole.html":{"url":"classes/DeleteFilesConsole.html","title":"class - DeleteFilesConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteFilesConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/job/delete-files.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeDeletedFilesData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(deleteFilesUc: DeleteFilesUc)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/job/delete-files.console.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deleteFilesUc\n                                                  \n                                                        \n                                                                        DeleteFilesUc\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/files/job/delete-files.console.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDeletedFilesData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDeletedFilesData(removedSinceDays: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'cleanup-job ', description: 'cleanup job to remove files that were marked for deletion  days ago'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/files/job/delete-files.console.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removedSinceDays\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Console, Command } from 'nestjs-console';\nimport { Logger } from '../../../core/logger/logger.service';\nimport { DeleteFilesUc } from '../uc';\n\n@Console({ command: 'files', description: 'file deletion console' })\nexport class DeleteFilesConsole {\n\tprivate logger: Logger;\n\n\tconstructor(private deleteFilesUc: DeleteFilesUc) {\n\t\tthis.logger = new Logger(DeleteFilesConsole.name);\n\t}\n\n\t@Command({\n\t\tcommand: 'cleanup-job ',\n\t\tdescription: 'cleanup job to remove files that were marked for deletion  days ago',\n\t})\n\tasync removeDeletedFilesData(removedSinceDays: number): Promise {\n\t\tthis.logger.log(`cleanup job will remove files that were marked for deletion ${removedSinceDays} days ago`);\n\t\tconst removedSince = new Date();\n\t\tremovedSince.setDate(removedSince.getDate() - removedSinceDays);\n\n\t\tawait this.deleteFilesUc.removeDeletedFilesData(removedSince);\n\t\tthis.logger.log('cleanup job finished');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeleteFilesUc.html":{"url":"injectables/DeleteFilesUc.html","title":"injectable - DeleteFilesUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeleteFilesUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/uc/delete-files.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                removeDeletedFilesData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filesRepo: FilesRepo, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/uc/delete-files.uc.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filesRepo\n                                                  \n                                                        \n                                                                        FilesRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDeletedFilesData\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDeletedFilesData(removedSince: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/files/uc/delete-files.uc.ts:15\n                \n            \n\n\n            \n                \n                    Schedules files that have been removed prior removedSince by a user to be removed.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    removedSince\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Logger } from '@src/core/logger/logger.service';\nimport { FilesRepo } from '../repo';\n\n@Injectable()\nexport class DeleteFilesUc {\n\tconstructor(private filesRepo: FilesRepo, private logger: Logger) {\n\t\tthis.logger.setContext(DeleteFilesUc.name);\n\t}\n\n\t/**\n\t * Schedules files that have been removed prior removedSince by a user to be removed.\n\t * @param removedSince\n\t */\n\tasync removeDeletedFilesData(removedSince: Date): Promise {\n\t\tconst filesForDeletion = await this.filesRepo.findAllFilesForCleanup(removedSince);\n\t\tconst numberOfFiles = filesForDeletion.length;\n\t\tthis.logger.log(`${numberOfFiles} files will be deleted`);\n\t\tconst failingFileIds: string[] = [];\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const file of filesForDeletion) {\n\t\t\ttry {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tawait this.filesRepo.deleteFile(file);\n\t\t\t} catch (err) {\n\t\t\t\tfailingFileIds.push(file.id);\n\t\t\t\tthis.logger.error(err);\n\t\t\t}\n\t\t}\n\t\tthis.logger.log(`${numberOfFiles - failingFileIds.length} out of ${numberOfFiles} files were successfully deleted`);\n\t\tif (failingFileIds.length > 0) {\n\t\t\tthis.logger.error('the following files could not be deleted:', failingFileIds);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Directory.html":{"url":"classes/Directory.html","title":"class - Directory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Directory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFile\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                isDirectory\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDirectory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\ninterface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DurationLoggingInterceptor.html":{"url":"injectables/DurationLoggingInterceptor.html","title":"injectable - DurationLoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DurationLoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor is logging the duration of a REST call.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DurationLoggingInterceptor.name)\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/duration-logging.interceptor.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Logger } from '@src/core/logger';\n\n/**\n * This interceptor is logging the duration of a REST call.\n */\n@Injectable()\nexport class DurationLoggingInterceptor implements NestInterceptor {\n\tprivate readonly logger = new Logger(DurationLoggingInterceptor.name);\n\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\tthis.logger.verbose('Before...');\n\t\tconst now = Date.now();\n\t\treturn next.handle().pipe(tap(() => this.logger.verbose(`After... ${Date.now() - now}ms`)));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EncryptedStringType.html":{"url":"classes/EncryptedStringType.html","title":"class - EncryptedStringType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EncryptedStringType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/types/EncryptedString.type.ts\n        \n\n\n            \n                Description\n            \n            \n                Serialization type to transparent encrypt string values in database.\n\n            \n\n            \n                Extends\n            \n            \n                        Type\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encryptionService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToDatabaseValue\n                            \n                            \n                                convertToJSValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(customKey?: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customKey\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encryptionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SymetricKeyEncryptionService\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:10\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToDatabaseValue\n                        \n                    \n                \n            \n            \n                \nconvertToDatabaseValue(value: string | undefined, platform: Platform)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platform\n                                    \n                                            Platform\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertToJSValue\n                        \n                    \n                \n            \n            \n                \nconvertToJSValue(value: string | undefined, platform: Platform)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/types/EncryptedString.type.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    platform\n                                    \n                                            Platform\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Configuration } from '@hpi-schul-cloud/commons';\nimport { Type, Platform } from '@mikro-orm/core';\nimport { SymetricKeyEncryptionService } from '../../infra/encryption';\n\n/**\n * Serialization type to transparent encrypt string values in database.\n */\nexport class EncryptedStringType extends Type {\n\t// TODO modularize service?\n\tprivate encryptionService: SymetricKeyEncryptionService;\n\n\tconstructor(customKey?: string) {\n\t\tsuper();\n\t\tif (customKey) {\n\t\t\tthis.encryptionService = new SymetricKeyEncryptionService(customKey);\n\t\t} else {\n\t\t\tthis.encryptionService = new SymetricKeyEncryptionService(Configuration.get('S3_KEY'));\n\t\t}\n\t}\n\n\tconvertToDatabaseValue(value: string | undefined, platform: Platform): string {\n\t\t// keep nullish values\n\t\tif (!value) {\n\t\t\treturn value as string;\n\t\t}\n\n\t\t// encrypt non-empty strings only\n\t\tif (value?.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tconst encryptedString = this.encryptionService.encrypt(value);\n\n\t\treturn encryptedString;\n\t}\n\n\tconvertToJSValue(value: string | undefined, platform: Platform): string {\n\t\t// keep nullish values\n\t\tif (!value) {\n\t\t\treturn value as string;\n\t\t}\n\n\t\t// decrypt non-empty strings only\n\t\tif (value?.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// decrypt only non-empty strings\n\t\tconst decryptedString: string = this.encryptionService.decrypt(value);\n\n\t\treturn decryptedString;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EncryptionModule.html":{"url":"modules/EncryptionModule.html","title":"module - EncryptionModule","body":"\n                   \n\n\n\n\n    Modules\n    EncryptionModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: EncryptionModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                EncryptionModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { SymetricKeyEncryptionService } from './encryption.service';\n\nexport interface EncryptionModuleOptions {\n\tSymmetricCipherKey: string;\n}\n\n@Module({})\nexport class EncryptionModule {\n\tstatic forRoot(options: EncryptionModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: EncryptionModule,\n\t\t\tproviders: [\n\t\t\t\tSymetricKeyEncryptionService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'SYMMETRIC_CIPHER_KEY',\n\t\t\t\t\tuseValue: options.SymmetricCipherKey,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [SymetricKeyEncryptionService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EncryptionModuleOptions.html":{"url":"interfaces/EncryptionModuleOptions.html","title":"interface - EncryptionModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EncryptionModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            SymmetricCipherKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SymmetricCipherKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        SymmetricCipherKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { SymetricKeyEncryptionService } from './encryption.service';\n\nexport interface EncryptionModuleOptions {\n\tSymmetricCipherKey: string;\n}\n\n@Module({})\nexport class EncryptionModule {\n\tstatic forRoot(options: EncryptionModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: EncryptionModule,\n\t\t\tproviders: [\n\t\t\t\tSymetricKeyEncryptionService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'SYMMETRIC_CIPHER_KEY',\n\t\t\t\t\tuseValue: options.SymmetricCipherKey,\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [SymetricKeyEncryptionService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ErrorModule.html":{"url":"modules/ErrorModule.html","title":"module - ErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    ErrorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/error/error.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_FILTER } from '@nestjs/core';\nimport { GlobalErrorFilter } from './filter/global-error.filter';\n\n/**\n * Overrides the default global Exception Filter of NestJS provided by @APP_FILTER\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_FILTER,\n\t\t\tuseClass: GlobalErrorFilter,\n\t\t},\n\t],\n})\nexport class ErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/error.response.ts\n        \n\n\n            \n                Description\n            \n            \n                HTTP response definition for errors.\n\n            \n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, title: string, message: string, code: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/error.response.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\n/**\n * HTTP response definition for errors.\n */\nexport class ErrorResponse {\n\tconstructor(\n\t\t/**\n\t\t * Unambigious error identifier, format: UPPERCASE_SNAKE_CASE\n\t\t */\n\t\treadonly type: string,\n\t\t/**\n\t\t * Description about the type, unique by type, format: Sentence case\n\t\t */\n\t\treadonly title: string,\n\t\t/**\n\t\t * additional custom information about the error\n\t\t */\n\t\treadonly message: string,\n\t\t/**\n\t\t * Must match HTTP error code\n\t\t */\n\t\treadonly code: number = HttpStatus.CONFLICT\n\t) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersAuthProvider.html":{"url":"injectables/FeathersAuthProvider.html","title":"injectable - FeathersAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authorization/feathers-auth.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedSchools\n                            \n                            \n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                getUserSchoolPermissions\n                            \n                            \n                                    Async\n                                getUserTargetPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(feathersServiceProvider: FeathersServiceProvider)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        feathersServiceProvider\n                                                  \n                                                        \n                                                                        FeathersServiceProvider\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedSchools\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedSchools(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, targetModel: NewsTargetModel, permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserSchoolPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserSchoolPermissions(userId: EntityId, schoolId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserTargetPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserTargetPermissions(userId: EntityId, targetModel: NewsTargetModel, targetId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authorization/feathers-auth.provider.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { BaseEntity, EntityId } from '@shared/domain';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\nimport { FeathersServiceProvider } from '../feathers/feathers-service.provider';\n\ninterface User {\n\t_id: ObjectId;\n\tschoolId: ObjectId;\n\tpermissions: string[];\n}\n\n@Injectable()\nexport class FeathersAuthProvider {\n\tconstructor(private feathersServiceProvider: FeathersServiceProvider) {}\n\n\tasync getUserSchoolPermissions(userId: EntityId, schoolId: EntityId): Promise | never {\n\t\tconst user = await this.getUser(userId);\n\t\t// test user is school member\n\t\tconst sameSchool = user.schoolId.toString() === schoolId;\n\t\tif (sameSchool && Array.isArray(user.permissions)) {\n\t\t\treturn user.permissions;\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync getUserTargetPermissions(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\ttargetId: EntityId\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`${targetModel}/:scopeId/userPermissions/`);\n\t\tconst targetPermissions = (await service.get(userId, {\n\t\t\troute: { scopeId: targetId },\n\t\t})) as string[];\n\t\treturn targetPermissions;\n\t}\n\n\tasync getPermittedTargets(\n\t\tuserId: EntityId,\n\t\ttargetModel: NewsTargetModel,\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst service = this.feathersServiceProvider.getService(`/users/:scopeId/${targetModel}`);\n\t\tconst targets = (await service.find({\n\t\t\troute: { scopeId: userId.toString() },\n\t\t\tquery: {\n\t\t\t\tpermissions,\n\t\t\t},\n\t\t\tpaginate: false,\n\t\t})) as BaseEntity[];\n\t\tconst targetIds = targets.map((target) => target._id.toString());\n\t\treturn targetIds;\n\t}\n\n\tasync getPermittedSchools(userId: EntityId): Promise {\n\t\tconst user = await this.getUser(userId);\n\t\treturn [user.schoolId.toString()] as EntityId[];\n\t}\n\n\tprivate async getUser(userId: EntityId): Promise {\n\t\tconst service = this.feathersServiceProvider.getService('users');\n\t\tconst user = (await service.get(userId)) as User;\n\t\tif (user == null) throw new NotFoundException();\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersError.html":{"url":"interfaces/FeathersError.html","title":"interface - FeathersError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/feathers-error.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            className\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        className\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        className:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FeathersError extends Error {\n\tcode: number;\n\tclassName: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeathersModule.html":{"url":"modules/FeathersModule.html","title":"module - FeathersModule","body":"\n                   \n\n\n\n\n    Modules\n    FeathersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\n\n\nFeathersModule\n\nFeathersModule\n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            This Module gives access to legacy feathers services. It is request based injected.\nIntroduce strong typing immediately when using this modules service.\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FeathersServiceProvider\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FeathersServiceProvider } from './feathers-service.provider';\n\n/**\n * This Module gives access to legacy feathers services. It is request based injected.\n * Introduce strong typing immediately when using this modules service.\n */\n@Module({\n\tproviders: [FeathersServiceProvider],\n\texports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FeathersService.html":{"url":"interfaces/FeathersService.html","title":"interface - FeathersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FeathersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        find\n                                    \n                                \n                                \n                                    \n                                        get\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service find method\n                \n            \n            \n                \nfind(params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \n                    Access legacy eathers service get method\n                \n            \n            \n                \nget(id: EntityId, params?: FeathersServiceParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                FeathersServiceParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FeathersServiceProvider.html":{"url":"injectables/FeathersServiceProvider.html","title":"injectable - FeathersServiceProvider","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FeathersServiceProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/feathers/feathers-service.provider.ts\n        \n\n\n            \n                Description\n            \n            \n                This Service gives access to legacy feathers services. It is request based injected.\nIMPORTANT: Introduce strong typing immediately when using this modules service.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getService\n                        \n                    \n                \n            \n            \n                \ngetService(path: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/feathers/feathers-service.provider.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FeathersService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope, Inject, ImATeapotException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\nimport { Application } from '@feathersjs/express';\nimport { EntityId } from '@shared/domain';\n\nexport interface FeathersService {\n\t/**\n\t *\n\t * @param id\n\t * @param params\n\t * @deprecated Access legacy eathers service get method\n\t */\n\tget(id: EntityId, params?: FeathersServiceParams): Promise;\n\t/**\n\t *\n\t * @param params\n\t * @deprecated Access legacy eathers service find method\n\t */\n\tfind(params?: FeathersServiceParams): Promise;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceParams = Record;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type FeathersServiceResponse = Record | any[];\n\n/**\n * This Service gives access to legacy feathers services. It is request based injected.\n * IMPORTANT: Introduce strong typing immediately when using this modules service.\n */\n@Injectable({ scope: Scope.REQUEST })\nexport class FeathersServiceProvider {\n\tconstructor(@Inject(REQUEST) private request: Request) {}\n\n\tgetService(path: string): FeathersService {\n\t\tconst feathersApp = this.request.app.get('feathersApp') as Application;\n\t\tif (feathersApp == null) {\n\t\t\t// missing a feathers instance defined in module definition\n\t\t\t// see main.ts how it might work\n\t\t\t// sample: nestExpress.set('feathersApp', feathersExpress);\n\t\t\tthrow new ImATeapotException('this action requires a feathers instance available');\n\t\t}\n\t\tconst service = feathersApp.service(path) as FeathersService;\n\t\treturn service;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFile\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bucket\n                            \n                            \n                                storageFileName\n                            \n                            \n                                storageProvider\n                            \n                            \n                                    Optional\n                                creator\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                isDirectory\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IFileProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IFileProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bucket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageFileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storageProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StorageProvider\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('StorageProvider', {fieldName: 'storageProviderId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/file.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:23\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDirectory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseFile\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseFile:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\ninterface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileStorageAdapter.html":{"url":"injectables/FileStorageAdapter.html","title":"injectable - FileStorageAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileStorageAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/filestorage/filestorage.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: File)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/filestorage/filestorage.adapter.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { S3Client, DeleteObjectCommand } from '@aws-sdk/client-s3';\n\nimport { Injectable } from '@nestjs/common';\nimport { StorageProvider, File } from '@shared/domain';\n\nfunction createStorageProviderClient(storageProvider: StorageProvider): S3Client {\n\treturn new S3Client({\n\t\tendpoint: storageProvider.endpointUrl,\n\t\tforcePathStyle: true,\n\t\tregion: storageProvider.region,\n\t\ttls: true,\n\t\tcredentials: {\n\t\t\taccessKeyId: storageProvider.accessKeyId,\n\t\t\tsecretAccessKey: storageProvider.secretAccessKey,\n\t\t},\n\t});\n}\n\n@Injectable()\nexport class FileStorageAdapter {\n\tasync deleteFile(file: File): Promise {\n\t\tconst { storageProvider, bucket, storageFileName } = file;\n\t\tconst storageProviderClient = createStorageProviderClient(storageProvider);\n\t\tconst deletionCommand = new DeleteObjectCommand({ Bucket: bucket, Key: storageFileName });\n\t\tawait storageProviderClient.send(deletionCommand);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemAdapter.html":{"url":"injectables/FileSystemAdapter.html","title":"injectable - FileSystemAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                encoding\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createDir\n                            \n                            \n                                    Async\n                                createTmpDir\n                            \n                            \n                                joinPath\n                            \n                            \n                                    Async\n                                readDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                    Async\n                                removeDirRecursive\n                            \n                            \n                                    Async\n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    EOL\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:26\n                \n            \n\n\n            \n                \n                    creates a directory if not already exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTmpDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTmpDir(dirNamePrefix: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:68\n                \n            \n\n\n            \n                \n                    Creates a folder in systems temp path.\nThe dirNamePrefix given will be extended by six random characters.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirNamePrefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        full path string to temp folder, format depends on os\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinPath\n                        \n                    \n                \n            \n            \n                \njoinPath(...paths: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    paths\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    readDir(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:36\n                \n            \n\n\n            \n                \n                    Lists filenames of given folderPath\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        string array of filenames\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filePath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:57\n                \n            \n\n\n            \n                \n                    Read file from filesystem with given encoding, defaults to utf-8\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to existing file, format depending on os\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        file content as encoded text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeDirRecursive\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeDirRecursive(folderPath: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:78\n                \n            \n\n\n            \n                \n                    Removes the given folder recursively including content when not empty.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    folderPath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to an existing folder, format depending on\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        writeFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeFile(filePath: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:48\n                \n            \n\n\n            \n                \n                    Write text to file, will override existing files.\nThe folder in which the file will be created must exist.\nThe path format depends on os\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path to a file\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        encoding\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BufferEncoding\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        EOL\n                    \n                \n\n                \n                    \n                        getEOL()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/infra/file-system/file-system.adapter.ts:18\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { promises as fsp, existsSync } from 'fs';\nimport os from 'os';\nimport path from 'path';\n\nimport rimraf = require('rimraf');\n\nconst { mkdir, readdir, writeFile, readFile, mkdtemp } = fsp;\n\n@Injectable()\nexport class FileSystemAdapter {\n\tprivate encoding: BufferEncoding;\n\n\tconstructor() {\n\t\tthis.encoding = 'utf-8';\n\t}\n\n\tget EOL(): string {\n\t\treturn os.EOL;\n\t}\n\n\t/**\n\t * creates a directory if not already exists\n\t * @param folderPath\n\t */\n\tasync createDir(folderPath: string): Promise {\n\t\tconst exists = existsSync(folderPath);\n\t\tif (!exists) await mkdir(folderPath);\n\t}\n\n\t/**\n\t * Lists filenames of given folderPath\n\t * @param folderPath path to an existing folder\n\t * @returns string array of filenames\n\t */\n\tasync readDir(folderPath: string): Promise {\n\t\tconst filenames = await readdir(folderPath, { encoding: this.encoding });\n\t\treturn filenames;\n\t}\n\n\t/**\n\t * Write text to file, will override existing files.\n\t * The folder in which the file will be created must exist.\n\t * The path format depends on os\n\t * @param filePath path to a file\n\t * @param text\n\t */\n\tasync writeFile(filePath: string, text: string): Promise {\n\t\tawait writeFile(filePath, text);\n\t}\n\n\t/**\n\t * Read file from filesystem with given encoding, defaults to utf-8\n\t * @param filePath path to existing file, format depending on os\n\t * @returns file content as encoded text\n\t */\n\tasync readFile(filePath: string): Promise {\n\t\tconst text = await readFile(filePath, this.encoding);\n\t\treturn text;\n\t}\n\n\t/**\n\t * Creates a folder in systems temp path.\n\t * The dirNamePrefix given will be extended by six random characters.\n\t * @param dirNamePrefix\n\t * @returns full path string to temp folder, format depends on os\n\t */\n\tasync createTmpDir(dirNamePrefix: string): Promise {\n\t\tconst dirPath = this.joinPath(os.tmpdir(), dirNamePrefix);\n\t\tconst tmpDirPath = await mkdtemp(dirPath);\n\t\treturn tmpDirPath;\n\t}\n\n\t/**\n\t * Removes the given folder recursively including content when not empty.\n\t * @param folderPath path to an existing folder, format depending on\n\t */\n\tasync removeDirRecursive(folderPath: string): Promise {\n\t\t// fs.rm changed in node 14.14, use rimraf instead\n\t\trimraf.sync(folderPath);\n\t\treturn Promise.resolve();\n\t}\n\n\tjoinPath(...paths: string[]): string {\n\t\treturn path.join(...paths);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileSystemModule.html":{"url":"modules/FileSystemModule.html","title":"module - FileSystemModule","body":"\n                   \n\n\n\n\n    Modules\n    FileSystemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/shared/infra/file-system/file-system.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileSystemAdapter\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileSystemAdapter } from './file-system.adapter';\n\n@Module({\n\tproviders: [FileSystemAdapter],\n\texports: [FileSystemAdapter],\n})\nexport class FileSystemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nLoggerModule->FilesModule\n\n\n\n\n\nDeleteFilesUc\n\nDeleteFilesUc\n\nFilesModule -->\n\nDeleteFilesUc->FilesModule\n\n\n\n\n\nFileStorageAdapter\n\nFileStorageAdapter\n\nFilesModule -->\n\nFileStorageAdapter->FilesModule\n\n\n\n\n\nFilesRepo\n\nFilesRepo\n\nFilesModule -->\n\nFilesRepo->FilesModule\n\n\n\n\n\nStorageProviderRepo\n\nStorageProviderRepo\n\nFilesModule -->\n\nStorageProviderRepo->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeleteFilesUc\n                        \n                        \n                            FileStorageAdapter\n                        \n                        \n                            FilesRepo\n                        \n                        \n                            StorageProviderRepo\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FileStorageAdapter } from '@shared/infra/filestorage';\nimport { DeleteFilesConsole } from './job/delete-files.console';\nimport { LoggerModule } from '../../core/logger/logger.module';\nimport { FilesRepo, StorageProviderRepo } from './repo';\nimport { DeleteFilesUc } from './uc';\n\n@Module({\n\timports: [LoggerModule],\n\tproviders: [DeleteFilesConsole, DeleteFilesUc, FilesRepo, StorageProviderRepo, FileStorageAdapter],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesRepo.html":{"url":"injectables/FilesRepo.html","title":"injectable - FilesRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/repo/files.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                findAllFilesForCleanup\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileStorageAdapter: FileStorageAdapter, em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/files/repo/files.repo.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileStorageAdapter\n                                                  \n                                                        \n                                                                        FileStorageAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(file: BaseFile)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/files/repo/files.repo.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                BaseFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllFilesForCleanup\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllFilesForCleanup(cleanupThreshold: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/files/repo/files.repo.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cleanupThreshold\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['storageProvider']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/files/repo/files.repo.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { BaseFile, File } from '@shared/domain';\nimport { FileStorageAdapter } from '@shared/infra/filestorage';\n\n@Injectable()\nexport class FilesRepo extends BaseRepo {\n\tconstructor(private fileStorageAdapter: FileStorageAdapter, protected readonly em: EntityManager) {\n\t\tsuper(em);\n\t}\n\n\tpropertiesToPopulate = ['storageProvider'];\n\n\tasync findAllFilesForCleanup(cleanupThreshold: Date): Promise {\n\t\tconst filesForCleanupQuery = { deletedAt: { $lte: cleanupThreshold } };\n\t\tconst files = await this.em.find(BaseFile, filesForCleanupQuery);\n\t\tconst regularFiles = files.filter((file) => file instanceof File);\n\t\tawait this.em.populate(regularFiles, this.propertiesToPopulate);\n\t\treturn files;\n\t}\n\n\tasync deleteFile(file: BaseFile): Promise {\n\t\tif (file instanceof File) await this.fileStorageAdapter.deleteFile(file);\n\t\tawait this.removeAndFlush(file);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConstants.html":{"url":"interfaces/GlobalConstants.html","title":"interface - GlobalConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GlobalConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/config/database.config.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            DB_PASSWORD\n                                        \n                                \n                                \n                                        \n                                            DB_URL\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            DB_USERNAME\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        DB_PASSWORD\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_PASSWORD:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_URL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DB_USERNAME\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DB_USERNAME:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import globals = require('../../../../config/globals');\n\ninterface GlobalConstants {\n\tDB_URL: string;\n\tDB_PASSWORD?: string;\n\tDB_USERNAME?: string;\n}\n\nconst usedGlobals: GlobalConstants = globals;\n\n/** Database URL */\nexport const { DB_URL, DB_PASSWORD, DB_USERNAME } = usedGlobals;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalErrorFilter.html":{"url":"classes/GlobalErrorFilter.html","title":"class - GlobalErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/filter/global-error.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                            \n                                createErrorResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('Error')\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/core/error/filter/global-error.filter.ts:119\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(error: T, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponse(error: T)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/error/filter/global-error.filter.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, InternalServerErrorException } from '@nestjs/common';\nimport _ from 'lodash';\nimport { Response } from 'express';\nimport { BusinessError, ApiValidationError } from '@shared/common';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { ErrorResponse } from '../dto/error.response';\nimport { FeathersError } from '../interface';\nimport { ApiValidationErrorResponse } from '../dto/api-validation-error.response';\n\nconst isFeathersError = (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n};\n\nconst isBusinessError = (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n};\n\n/**\n * Compare helper to detect an error is a build in NestJS http exception.\n * @param error\n * @returns\n */\nconst isTechnicalError = (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n};\n\n/**\n * Creates ErrorResponse from NestJS build in technical exceptions\n * @param exception\n * @returns {ErrorResponse}\n */\nconst createErrorResponseForHttpException = (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n};\n\nfunction createErrorResponseForBusinessError(error: BusinessError): ErrorResponse {\n\tif (error instanceof ApiValidationError) {\n\t\tconst response = new ApiValidationErrorResponse(error);\n\t\treturn response;\n\t}\n\tconst response = error.getResponse();\n\treturn response;\n}\n\nfunction createErrorResponseForUnknownError(error?: unknown): ErrorResponse {\n\tconst unknownError = new InternalServerErrorException(error);\n\tconst response = createErrorResponseForHttpException(unknownError);\n\treturn response;\n}\n\nfunction createErrorResponseForFeathersError(error: FeathersError) {\n\tconst { code, className: type, name: title, message } = error;\n\tconst snakeType = _.snakeCase(type).toUpperCase();\n\tconst startTitle = _.startCase(title);\n\treturn new ErrorResponse(snakeType, startTitle, message, code);\n}\n\nconst createErrorResponse = (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n};\n\nconst writeValidationErrors = (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n};\n\nconst writeErrorLog = (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n};\n\n@Catch()\nexport class GlobalErrorFilter implements ExceptionFilter {\n\tprivate static readonly logger: ILogger = new Logger('Error');\n\n\t// eslint-disable-next-line class-methods-use-this\n\tcatch(error: T, host: ArgumentsHost): void {\n\t\tconst ctx = host.switchToHttp();\n\t\tconst response = ctx.getResponse();\n\t\twriteErrorLog(error, GlobalErrorFilter.logger);\n\t\tconst errorResponse: ErrorResponse = this.createErrorResponse(error);\n\t\tresponse.status(errorResponse.code).json(errorResponse);\n\t}\n\n\tcreateErrorResponse(error: T): ErrorResponse {\n\t\treturn createErrorResponse(error, GlobalErrorFilter.logger);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalValidationPipe.html":{"url":"classes/GlobalValidationPipe.html","title":"class - GlobalValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/validation/pipe/global-validation.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                \nGlobal Pipe setup\n\nValidation of DTOs will base on type-checking\nwhich is enabled by default. To you might use\nthe class-validator decorators to extend\nvalidation.\n\n            \n\n            \n                Extends\n            \n            \n                    ValidationPipe\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/validation/pipe/global-validation.pipe.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationError, ValidationPipe } from '@nestjs/common';\nimport { ApiValidationError } from '@shared/common';\n\n/** *********************************************\n * Global Pipe setup\n * **********************************************\n * Validation of DTOs will base on type-checking\n * which is enabled by default. To you might use\n * the class-validator decorators to extend\n * validation.\n */\nexport class GlobalValidationPipe extends ValidationPipe {\n\tconstructor() {\n\t\tsuper({\n\t\t\t// enable DTO instance creation for incoming data\n\t\t\ttransform: true,\n\t\t\ttransformOptions: {\n\t\t\t\t// enable type coersion, requires transform:true\n\t\t\t\tenableImplicitConversion: true,\n\t\t\t},\n\t\t\twhitelist: true, // only pass valid @ApiProperty-decorated DTO properties, remove others\n\t\t\tforbidNonWhitelisted: false, // additional params are just skipped (required when extracting multiple DTO from single query)\n\t\t\texceptionFactory: (errors: ValidationError[]) => {\n\t\t\t\treturn new ApiValidationError(errors);\n\t\t\t},\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GridElement.html":{"url":"classes/GridElement.html","title":"class - GridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGridElement\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                references\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addReferences\n                            \n                            \n                                    Static\n                                FromGroup\n                            \n                            \n                                    Static\n                                FromPersistedGroup\n                            \n                            \n                                    Static\n                                FromPersistedReference\n                            \n                            \n                                    Static\n                                FromSingleReference\n                            \n                            \n                                getContent\n                            \n                            \n                                getId\n                            \n                            \n                                getReferences\n                            \n                            \n                                hasId\n                            \n                            \n                                isGroup\n                            \n                            \n                                removeReference\n                            \n                            \n                                setGroupName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EntityId\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        references\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IGridElementReference[]\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:71\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: IGridElementReference[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                IGridElementReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromGroup(title: string, references: IGridElementReference[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    references\n                                    \n                                                IGridElementReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromPersistedGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromPersistedGroup(id: EntityId, title: string, group: IGridElementReference[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                IGridElementReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromPersistedReference\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromPersistedReference(id: EntityId, reference: IGridElementReference)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reference\n                                    \n                                                IGridElementReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        FromSingleReference\n                        \n                    \n                \n            \n            \n                \n                    \n                    FromSingleReference(reference: IGridElementReference)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reference\n                                    \n                                                IGridElementReference\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GridElement\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getContent\n                        \n                    \n                \n            \n            \n                \ngetContent()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         GridElementContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EntityId\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IGridElementReference[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasId\n                        \n                    \n                \n            \n            \n                \nhasId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReference\n                        \n                    \n                \n            \n            \n                \nremoveReference(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGroupName\n                        \n                    \n                \n            \n            \n                \nsetGroupName(newGroupName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newGroupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReference(index: number): void;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\ttitle: string;\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: IGridElementReference[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references;\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: IGridElementReference[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReference(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : 'exampleTitle';\n\t\tconst groupMetadata = {\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReference(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HtmlMailContent.html":{"url":"interfaces/HtmlMailContent.html","title":"interface - HtmlMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HtmlMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICollectionFilePath.html":{"url":"interfaces/ICollectionFilePath.html","title":"interface - ICollectionFilePath","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICollectionFilePath\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/uc/database-management.uc.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            collectionName\n                                        \n                                \n                                \n                                        \n                                            filePath\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collectionName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collectionName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filePath\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filePath:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { orderBy } from 'lodash';\nimport { FileSystemAdapter } from '@shared/infra/file-system';\nimport { DatabaseManagementService } from '@shared/infra/database';\nimport { BsonConverter } from '../converter/bson.converter';\n\nexport interface ICollectionFilePath {\n\tfilePath: string;\n\tcollectionName: string;\n}\n\n@Injectable()\nexport class DatabaseManagementUc {\n\t/**\n\t * relative path to seed data folder based of location of this file.\n\t */\n\tprivate basePath = '../../../../../../backup';\n\n\tconstructor(\n\t\tprivate fileSystemAdapter: FileSystemAdapter,\n\t\tprivate databaseManagementService: DatabaseManagementService,\n\t\tprivate bsonConverter: BsonConverter\n\t) {}\n\n\t/**\n\t * absolute path reference for seed data base folder.\n\t */\n\tprivate get baseDir(): string {\n\t\tconst folderPath = this.fileSystemAdapter.joinPath(__dirname, this.basePath);\n\t\treturn folderPath;\n\t}\n\n\t/**\n\t * setup dir with json files\n\t */\n\tprivate getSeedFolder() {\n\t\treturn this.fileSystemAdapter.joinPath(this.baseDir, 'setup');\n\t}\n\n\t/**\n\t * export folder name based on current date\n\t * @returns\n\t */\n\tprivate getTargetFolder(toSeedFolder?: boolean) {\n\t\tif (toSeedFolder === true) {\n\t\t\tconst targetFolder = this.getSeedFolder();\n\t\t\treturn targetFolder;\n\t\t}\n\t\tconst now = new Date();\n\t\tconst currentDateTime = `${now.getFullYear()}_${\n\t\t\tnow.getMonth() + 1\n\t\t}_${now.getDate()}_${now.getHours()}_${now.getMinutes()}_${now.getSeconds()}`;\n\t\tconst targetFolder = this.fileSystemAdapter.joinPath(this.baseDir, currentDateTime);\n\t\treturn targetFolder;\n\t}\n\n\t/**\n\t * Loads all collection names from database and adds related file paths.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromDatabase(targetFolder: string): Promise {\n\t\tconst collections = await this.databaseManagementService.getCollectionNames();\n\t\tconst collectionsWithFilePaths = collections.map((collectionName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(targetFolder, `${collectionName}.json`),\n\t\t\tcollectionName,\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Loads all collection names and file paths from backup files.\n\t * @returns {ICollectionFilePath}\n\t */\n\tprivate async loadAllCollectionsFromFilesystem(baseDir: string): Promise {\n\t\tconst filenames = await this.fileSystemAdapter.readDir(baseDir);\n\t\tconst collectionsWithFilePaths = filenames.map((fileName) => ({\n\t\t\tfilePath: this.fileSystemAdapter.joinPath(baseDir, fileName),\n\t\t\tcollectionName: fileName.split('.')[0],\n\t\t}));\n\t\treturn collectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Scans  for existing collections and optionally filters them based on \n\t * @param source\n\t * @param collectionNameFilter\n\t * @returns {ICollectionFilePath} the filtered collection names and related file paths\n\t */\n\tprivate async loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\tsource: 'files' | 'database',\n\t\tfolder: string,\n\t\tcollectionNameFilter?: string[]\n\t) {\n\t\tlet allCollectionsWithFilePaths: ICollectionFilePath[] = [];\n\n\t\t// load all available collections from source\n\t\tif (source === 'files') {\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromFilesystem(folder);\n\t\t} else {\n\t\t\t// source === 'database'\n\t\t\tallCollectionsWithFilePaths = await this.loadAllCollectionsFromDatabase(folder);\n\t\t}\n\n\t\t// when a collection name filter is given, apply it and check\n\t\tif (Array.isArray(collectionNameFilter) && collectionNameFilter.length > 0) {\n\t\t\tconst filteredCollectionsWithFilePaths = allCollectionsWithFilePaths.filter(({ collectionName }) =>\n\t\t\t\tcollectionNameFilter?.includes(collectionName)\n\t\t\t);\n\n\t\t\tif (filteredCollectionsWithFilePaths.length !== collectionNameFilter.length) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`At least one collectionName of ${JSON.stringify(\n\t\t\t\t\t\tcollectionNameFilter\n\t\t\t\t\t)} is invalid. Collection names available in '${source}' are: ${JSON.stringify(\n\t\t\t\t\t\tallCollectionsWithFilePaths.map((file) => file.collectionName)\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn filteredCollectionsWithFilePaths;\n\t\t}\n\n\t\treturn allCollectionsWithFilePaths;\n\t}\n\n\t/**\n\t * Imports all or filtered  from filesystem as bson to database.\n\t * The behaviour should match $ mongoimport\n\t * @param collections optional filter applied on existing collections\n\t * @returns the list of collection names exported\n\t */\n\tasync seedDatabaseCollectionsFromFileSystem(collections?: string[]): Promise {\n\t\t// detect collections to seed based on filesystem data\n\t\tconst setupPath = this.getSeedFolder();\n\t\tconst collectionsToSeed = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'files',\n\t\t\tsetupPath,\n\t\t\tcollections\n\t\t);\n\n\t\tconst seededCollectionsWithAmount: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToSeed.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load text from backup file\n\t\t\t\tconst text = await this.fileSystemAdapter.readFile(filePath);\n\t\t\t\t// create bson-objects from text\n\t\t\t\tconst bsonDocuments = JSON.parse(text) as unknown[];\n\t\t\t\t// deserialize bson (format of mongoexport) to json documents we can import to mongo\n\t\t\t\tconst jsonDocuments = this.bsonConverter.deserialize(bsonDocuments);\n\n\t\t\t\t// hint: collection drop/create is very slow, delete all documents instead\n\t\t\t\tconst collectionExists = await this.databaseManagementService.collectionExists(collectionName);\n\t\t\t\tif (collectionExists) {\n\t\t\t\t\t// clear existing documents, if collection exists\n\t\t\t\t\tawait this.databaseManagementService.clearCollection(collectionName);\n\t\t\t\t} else {\n\t\t\t\t\t// create collection\n\t\t\t\t\tawait this.databaseManagementService.createCollection(collectionName);\n\t\t\t\t}\n\n\t\t\t\t// import backuop data into database collection\n\t\t\t\tconst importedDocumentsAmount = await this.databaseManagementService.importCollection(\n\t\t\t\t\tcollectionName,\n\t\t\t\t\tjsonDocuments\n\t\t\t\t);\n\t\t\t\t// keep collection name and number of imported documents\n\t\t\t\tseededCollectionsWithAmount.push(`${collectionName}:${importedDocumentsAmount}`);\n\t\t\t})\n\t\t);\n\t\treturn seededCollectionsWithAmount;\n\t}\n\n\t/**\n\t * Exports all or defined  from database as bson to filesystem.\n\t * The behaviour should match $ mongoexport\n\t * @param collections optional filter applied on existing collections\n\t * @param toSeedFolder optional override existing seed data files\n\t * @returns the list of collection names exported\n\t */\n\tasync exportCollectionsToFileSystem(collections?: string[], toSeedFolder?: boolean): Promise {\n\t\tconst targetFolder = this.getTargetFolder(toSeedFolder);\n\t\tawait this.fileSystemAdapter.createDir(targetFolder);\n\t\t// detect collections to export based on database collections\n\t\tconst collectionsToExport = await this.loadCollectionsAvailableFromSourceAndFilterByCollectionNames(\n\t\t\t'database',\n\t\t\ttargetFolder,\n\t\t\tcollections\n\t\t);\n\t\tconst exportedCollections: string[] = [];\n\n\t\tawait Promise.all(\n\t\t\tcollectionsToExport.map(async ({ filePath, collectionName }) => {\n\t\t\t\t// load json documents from collection\n\t\t\t\tconst jsonDocuments = await this.databaseManagementService.findDocumentsOfCollection(collectionName);\n\t\t\t\t// serialize to bson (format of mongoexport)\n\t\t\t\tconst bsonDocuments = this.bsonConverter.serialize(jsonDocuments);\n\t\t\t\t// sort results to have 'new' data added at documents end\n\t\t\t\tconst sortedBsonDocuments = orderBy(bsonDocuments, ['_id.$oid', 'createdAt.$date'], ['asc', 'asc']);\n\t\t\t\t// convert to text\n\t\t\t\tconst TAB = '\t';\n\t\t\t\tconst text = JSON.stringify(sortedBsonDocuments, undefined, TAB);\n\t\t\t\t// persist to filesystem\n\t\t\t\tawait this.fileSystemAdapter.writeFile(filePath, text + this.fileSystemAdapter.EOL);\n\t\t\t\t// keep collection name and number of exported documents\n\t\t\t\texportedCollections.push(`${collectionName}:${sortedBsonDocuments.length}`);\n\t\t\t})\n\t\t);\n\t\treturn exportedCollections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseGroupProperties.html":{"url":"interfaces/ICourseGroupProperties.html","title":"interface - ICourseGroupProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseGroupProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/coursegroup.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Collection, ManyToMany, ManyToOne } from '@mikro-orm/core';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { User } from './user.entity';\nimport type { Course } from './course.entity';\n\nexport interface ICourseGroupProperties {\n\tcourse: Course;\n\tstudents?: User[];\n}\n\n@Entity({ tableName: 'coursegroups' })\nexport class CourseGroup extends BaseEntityWithTimestamps {\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ICourseGroupProperties) {\n\t\tsuper();\n\t\tthis.course = props.course;\n\t\tif (props.students) this.students.set(props.students);\n\t}\n\n\tgetParentId(): ObjectId {\n\t\treturn this.course._id;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICourseProperties.html":{"url":"interfaces/ICourseProperties.html","title":"interface - ICourseProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICourseProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/course.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            students\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            substitutionTeachers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teachers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        students\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        students:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        substitutionTeachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        substitutionTeachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teachers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teachers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Index, ManyToOne, ManyToMany, Collection } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { School } from './school.entity';\nimport type { User } from './user.entity';\n\ninterface ICourseProperties {\n\tname?: string;\n\tdescription?: string;\n\tschool: School;\n\tstudents?: User[];\n\tteachers?: User[];\n\tsubstitutionTeachers?: User[];\n\t// TODO: color format\n\tcolor?: string;\n}\n\n// that is really really shit default handling :D constructor, getter, js default, em default...what the hell\n// i hope it can cleanup with adding schema instant of I...Properties.\nconst DEFAULT = {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n};\n\n@Entity({ tableName: 'courses' })\nexport class Course extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string = DEFAULT.name;\n\n\t@Property()\n\tdescription: string = DEFAULT.description;\n\n\t@Index()\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'userIds' })\n\tstudents = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'teacherIds' })\n\tteachers = new Collection(this);\n\n\t@Index()\n\t@ManyToMany('User', undefined, { fieldName: 'substitutionIds' })\n\tsubstitutionTeachers = new Collection(this);\n\n\t// TODO: string color format\n\t@Property()\n\tcolor: string = DEFAULT.color;\n\n\tconstructor(props: ICourseProperties) {\n\t\tsuper();\n\t\tif (props.name) this.name = props.name;\n\t\tif (props.description) this.description = props.description;\n\t\tthis.school = props.school;\n\t\tif (props.students) this.students.set(props.students);\n\t\tif (props.teachers) this.teachers.set(props.teachers);\n\t\tif (props.substitutionTeachers) this.substitutionTeachers.set(props.substitutionTeachers);\n\t\tif (props.color) this.color = props.color;\n\t}\n\n\tgetNumberOfStudents(): number {\n\t\treturn this.students.length;\n\t}\n\n\tisSubstitutionTeacher(userId: EntityId): boolean {\n\t\tconst teacherIds = this.teachers.getIdentifiers('id');\n\t\tconst substitutionIds = this.substitutionTeachers.getIdentifiers('id');\n\n\t\tconst isSubstitutionTeacher = !teacherIds.includes(userId) && substitutionIds.includes(userId);\n\n\t\treturn isSubstitutionTeacher;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICreateNews.html":{"url":"interfaces/ICreateNews.html","title":"interface - ICreateNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICreateNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                news interface for ceating news\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICurrentUser.html":{"url":"interfaces/ICurrentUser.html","title":"interface - ICurrentUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICurrentUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountId\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    account id as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users role ids as string[]\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    users schoolId as string\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IResolvedUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IResolvedUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    authenticated users id\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDashboardRepo.html":{"url":"interfaces/IDashboardRepo.html","title":"interface - IDashboardRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDashboardRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/repositories/learnroom/dashboard.repo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDashboardById\n                                    \n                                \n                                \n                                    \n                                        getUsersDashboard\n                                    \n                                \n                                \n                                    \n                                        persistAndFlush\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDashboardById\n                        \n                    \n                \n            \n            \n                \ngetDashboardById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsersDashboard\n                        \n                    \n                \n            \n            \n                \ngetUsersDashboard()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \npersistAndFlush(entity: DashboardEntity)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/repositories/learnroom/dashboard.repo.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                                DashboardEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, DashboardEntity, DefaultGridReference, GridElement, GridElementWithPosition } from '@shared/domain';\nimport { EntityManager, ObjectId } from '@mikro-orm/mongodb';\nimport { DashboardModelEntity } from './dashboard.model.entity';\nimport { DashboardModelMapper } from './dashboard.model.mapper';\n\nconst hardcodedTestDashboardId = '0000d213816abba584714c0a';\nconst generateHardcodedTestDashboard = () => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tgridArray.push({\n\t\tpos: { x: 1, y: 3 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Math')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 1, y: 4 },\n\t\tgridElement: GridElement.FromPersistedGroup(new ObjectId().toString(), 'Science', [\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Physics'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Biology'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Chemistry'),\n\t\t]),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 2, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'English')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 3, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'German')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 4, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Greek')\n\t\t),\n\t});\n\n\tconst dashboard = new DashboardEntity(hardcodedTestDashboardId, { grid: gridArray });\n\treturn dashboard;\n};\n\nexport interface IDashboardRepo {\n\tgetUsersDashboard(): Promise;\n\tgetDashboardById(id: EntityId): Promise;\n\tpersistAndFlush(entity: DashboardEntity): Promise;\n}\n\n@Injectable()\nexport class DashboardRepo implements IDashboardRepo {\n\tconstructor(protected readonly em: EntityManager) {}\n\n\t// ToDo: refactor this to be in an abstract class (see baseRepo)\n\tasync persist(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await DashboardModelMapper.mapToModel(entity, this.em);\n\t\tthis.em.persist(modelEntity);\n\t\treturn DashboardModelMapper.mapToEntity(modelEntity);\n\t}\n\n\tasync persistAndFlush(entity: DashboardEntity): Promise {\n\t\tconst modelEntity = await DashboardModelMapper.mapToModel(entity, this.em);\n\t\tawait this.em.persistAndFlush(modelEntity);\n\t\treturn DashboardModelMapper.mapToEntity(modelEntity);\n\t}\n\n\tasync getDashboardById(id: EntityId): Promise {\n\t\tconst dashboardModel = await this.em.findOneOrFail(DashboardModelEntity, id);\n\t\tconst dashboard = await DashboardModelMapper.mapToEntity(dashboardModel);\n\t\treturn dashboard;\n\t}\n\n\tasync getUsersDashboard(): Promise {\n\t\tconst dashboardModel = await this.em.findOne(DashboardModelEntity, hardcodedTestDashboardId);\n\t\tif (dashboardModel) {\n\t\t\treturn DashboardModelMapper.mapToEntity(dashboardModel);\n\t\t}\n\n\t\tconst dashboard = generateHardcodedTestDashboard();\n\t\tawait this.persistAndFlush(dashboard);\n\n\t\treturn dashboard;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorType.html":{"url":"interfaces/IErrorType.html","title":"interface - IErrorType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/interface/error-type.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultMessage\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IErrorType {\n\treadonly type: string;\n\treadonly title: string;\n\treadonly defaultMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFileProperties.html":{"url":"interfaces/IFileProperties.html","title":"interface - IFileProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFileProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/file.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bucket\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            creator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deletedAt\n                                        \n                                \n                                \n                                        \n                                            storageFileName\n                                        \n                                \n                                \n                                        \n                                            storageProvider\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deletedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deletedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageFileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storageFileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageProvider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storageProvider:         StorageProvider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StorageProvider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, ManyToOne } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { StorageProvider } from './storageprovider.entity';\nimport type { User } from './user.entity';\n\ninterface IFileProperties {\n\tdeletedAt?: Date;\n\tstorageFileName: string;\n\tbucket: string;\n\tstorageProvider: StorageProvider;\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorColumn: 'isDirectory', abstract: true })\nexport abstract class BaseFile extends BaseEntityWithTimestamps {\n\t@Property()\n\tdeletedAt?: Date;\n\n\t@Property()\n\tisDirectory: boolean;\n\n\t@Property()\n\tcreator?: User;\n}\n\n@Entity({ collection: 'files', discriminatorValue: 'true' })\nexport class Directory extends BaseFile {}\n\n@Entity({ collection: 'files', discriminatorValue: 'false' })\nexport class File extends BaseFile {\n\t@Property()\n\tstorageFileName: string;\n\n\t@Property()\n\tbucket: string;\n\n\t@ManyToOne('StorageProvider', { fieldName: 'storageProviderId' })\n\tstorageProvider: StorageProvider;\n\n\tconstructor(props: IFileProperties) {\n\t\tsuper();\n\t\tthis.isDirectory = false;\n\t\tthis.deletedAt = props.deletedAt;\n\t\tthis.storageFileName = props.storageFileName;\n\t\tthis.bucket = props.bucket;\n\t\tthis.storageProvider = props.storageProvider;\n\t\tthis.creator = props.creator;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFindOptions.html":{"url":"interfaces/IFindOptions.html","title":"interface - IFindOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFindOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            order\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order:         SortOrderMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SortOrderMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         IPagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPagination\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElement.html":{"url":"interfaces/IGridElement.html","title":"interface - IGridElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getContent\n                                        \n                                \n                                \n                                        \n                                            getId\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addReferences\n                                    \n                                \n                                \n                                    \n                                        getReferences\n                                    \n                                \n                                \n                                    \n                                        hasId\n                                    \n                                \n                                \n                                    \n                                        isGroup\n                                    \n                                \n                                \n                                    \n                                        removeReference\n                                    \n                                \n                                \n                                    \n                                        setGroupName\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addReferences\n                        \n                    \n                \n            \n            \n                \naddReferences(anotherReference: IGridElementReference[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    anotherReference\n                                    \n                                                IGridElementReference[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferences\n                        \n                    \n                \n            \n            \n                \ngetReferences()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         IGridElementReference[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasId\n                        \n                    \n                \n            \n            \n                \nhasId()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isGroup\n                        \n                    \n                \n            \n            \n                \nisGroup()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeReference\n                        \n                    \n                \n            \n            \n                \nremoveReference(index: number)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGroupName\n                        \n                    \n                \n            \n            \n                \nsetGroupName(newGroupName: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/dashboard.entity.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newGroupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getContent:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getId:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReference(index: number): void;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\ttitle: string;\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: IGridElementReference[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references;\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: IGridElementReference[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReference(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : 'exampleTitle';\n\t\tconst groupMetadata = {\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReference(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IGridElementReference.html":{"url":"interfaces/IGridElementReference.html","title":"interface - IGridElementReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IGridElementReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/dashboard.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            getMetadata\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getMetadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        getMetadata:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NotFoundException, BadRequestException } from '@nestjs/common';\nimport { EntityId } from '../types/entity-id';\n\nconst defaultColumns = 6;\nconst defaultRows = 6;\n\nexport type GridElementReferenceMetadata = {\n\tid: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n};\n\nexport interface IGridElementReference {\n\tgetMetadata: () => GridElementReferenceMetadata;\n}\n\nexport class DefaultGridReference implements IGridElementReference {\n\t// This is only a temporary fake class, for use until other references, like courses, are fully supported.\n\tid: EntityId;\n\n\ttitle: string;\n\n\tdisplayColor: string;\n\n\tconstructor(id: EntityId, title: string, displayColor = '#f23f76') {\n\t\tthis.id = id;\n\t\tthis.title = title;\n\t\tthis.displayColor = displayColor;\n\t}\n\n\tgetMetadata(): GridElementReferenceMetadata {\n\t\treturn {\n\t\t\tid: this.id,\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: this.title.substr(0, 2),\n\t\t\tdisplayColor: this.displayColor,\n\t\t};\n\t}\n}\n\nexport interface IGridElement {\n\thasId(): boolean;\n\n\tgetId: () => EntityId;\n\n\tgetContent: () => GridElementContent;\n\n\tisGroup(): boolean;\n\n\tremoveReference(index: number): void;\n\n\tgetReferences(): IGridElementReference[];\n\n\taddReferences(anotherReference: IGridElementReference[]): void;\n\n\tsetGroupName(newGroupName: string): void;\n}\n\nexport type GridElementContent = {\n\treferencedId?: string;\n\ttitle: string;\n\tshortTitle: string;\n\tdisplayColor: string;\n\tgroup?: GridElementReferenceMetadata[];\n};\n\nexport class GridElement implements IGridElement {\n\tid: EntityId;\n\n\ttitle: string;\n\n\tprivate constructor(props: { id?: EntityId; title?: string; references: IGridElementReference[] }) {\n\t\tif (props.id) this.id = props.id;\n\t\tif (props.title) this.title = props.title;\n\t\tthis.references = props.references;\n\t}\n\n\tstatic FromPersistedReference(id: EntityId, reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ id, references: [reference] });\n\t}\n\n\tstatic FromPersistedGroup(id: EntityId, title: string, group: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ id, title, references: group });\n\t}\n\n\tstatic FromSingleReference(reference: IGridElementReference): GridElement {\n\t\treturn new GridElement({ references: [reference] });\n\t}\n\n\tstatic FromGroup(title: string, references: IGridElementReference[]): GridElement {\n\t\treturn new GridElement({ title, references });\n\t}\n\n\treferences: IGridElementReference[];\n\n\thasId(): boolean {\n\t\treturn !!this.id;\n\t}\n\n\tgetId(): EntityId {\n\t\treturn this.id;\n\t}\n\n\tgetReferences(): IGridElementReference[] {\n\t\treturn this.references;\n\t}\n\n\tremoveReference(index: number): void {\n\t\tif (!this.isGroup()) {\n\t\t\tthrow new BadRequestException('this element is not a group.');\n\t\t}\n\t\tif (index > 0 && this.references.length  reference.getMetadata());\n\t\tconst checkShortTitle = this.title ? this.title.substr(0, 2) : 'exampleTitle';\n\t\tconst groupMetadata = {\n\t\t\ttitle: this.title,\n\t\t\tshortTitle: checkShortTitle,\n\t\t\tdisplayColor: 'exampleColor',\n\t\t\tgroup: groupData,\n\t\t};\n\t\treturn groupMetadata;\n\t}\n\n\tisGroup(): boolean {\n\t\treturn this.references.length > 1;\n\t}\n\n\tsetGroupName(newGroupName: string): void {\n\t\tif (!this.isGroup()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.title = newGroupName;\n\t}\n}\n\nexport type GridPosition = { x: number; y: number };\nexport type GridPositionWithGroupIndex = { x: number; y: number; groupIndex?: number };\n\nexport type GridElementWithPosition = {\n\tgridElement: IGridElement;\n\tpos: GridPosition;\n};\n\nexport type DashboardProps = { colums?: number; rows?: number; grid: GridElementWithPosition[] };\n\nexport class DashboardEntity {\n\tid: EntityId;\n\n\tcolumns: number;\n\n\trows: number;\n\n\tgrid: Map;\n\n\tprivate gridIndexFromPosition(pos: GridPosition): number {\n\t\tif (pos.x > this.columns || pos.y > this.rows) {\n\t\t\tthrow new BadRequestException('dashboard element position is outside the grid.');\n\t\t}\n\t\treturn this.columns * pos.y + pos.x;\n\t}\n\n\tprivate positionFromGridIndex(index: number): GridPosition {\n\t\tconst y = Math.floor(index / this.columns);\n\t\tconst x = index % this.columns;\n\t\treturn { x, y };\n\t}\n\n\tconstructor(id: string, props: DashboardProps) {\n\t\tthis.columns = props.colums || defaultColumns;\n\t\tthis.rows = props.rows || defaultRows;\n\t\tthis.grid = new Map();\n\t\tprops.grid.forEach((element) => {\n\t\t\tthis.grid.set(this.gridIndexFromPosition(element.pos), element.gridElement);\n\t\t});\n\t\tthis.id = id;\n\t\tObject.assign(this, {});\n\t}\n\n\tgetId(): string {\n\t\treturn this.id;\n\t}\n\n\tgetGrid(): GridElementWithPosition[] {\n\t\tconst result = [...this.grid.keys()].map((key) => {\n\t\t\tconst position = this.positionFromGridIndex(key);\n\t\t\tconst value = this.grid.get(key) as IGridElement;\n\t\t\treturn {\n\t\t\t\tpos: position,\n\t\t\t\tgridElement: value,\n\t\t\t};\n\t\t});\n\t\treturn result;\n\t}\n\n\tgetElement(position: GridPosition): IGridElement {\n\t\tconst element = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (!element) {\n\t\t\tthrow new NotFoundException('no element at grid position');\n\t\t}\n\t\treturn element;\n\t}\n\n\tmoveElement(from: GridPositionWithGroupIndex, to: GridPositionWithGroupIndex): GridElementWithPosition {\n\t\tconst elementToMove = this.getReferencesFromPosition(from);\n\t\tconst resultElement = this.mergeElementIntoPosition(elementToMove, to);\n\t\tthis.removeFromPosition(from);\n\t\treturn {\n\t\t\tpos: to,\n\t\t\tgridElement: resultElement,\n\t\t};\n\t}\n\n\tprivate getReferencesFromPosition(position: GridPositionWithGroupIndex): IGridElement {\n\t\tconst elementToMove = this.getElement(position);\n\n\t\tif (typeof position.groupIndex === 'number' && elementToMove.isGroup()) {\n\t\t\tconst references = elementToMove.getReferences();\n\t\t\tconst referenceForIndex = references[position.groupIndex];\n\t\t\treturn GridElement.FromSingleReference(referenceForIndex);\n\t\t}\n\n\t\treturn elementToMove;\n\t}\n\n\tprivate removeFromPosition(position: GridPositionWithGroupIndex): void {\n\t\tconst element = this.getElement(position);\n\t\tif (typeof position.groupIndex === 'number') {\n\t\t\telement.removeReference(position.groupIndex);\n\t\t} else {\n\t\t\tthis.grid.delete(this.gridIndexFromPosition(position));\n\t\t}\n\t}\n\n\tprivate mergeElementIntoPosition(element: IGridElement, position: GridPosition): IGridElement {\n\t\tconst targetElement = this.grid.get(this.gridIndexFromPosition(position));\n\t\tif (targetElement) {\n\t\t\ttargetElement.addReferences(element.getReferences());\n\t\t\treturn targetElement;\n\t\t}\n\t\tthis.grid.set(this.gridIndexFromPosition(position), element);\n\t\treturn element;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILessonProperties.html":{"url":"interfaces/ILessonProperties.html","title":"interface - ILessonProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILessonProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hidden\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidden\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hidden:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\ninterface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, trace?: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/core/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n\tlog(message: any, context?: string): any;\n\terror(message: any, trace?: string, context?: string): any;\n\twarn(message: any, context?: string): any;\n\tdebug?(message: any, context?: string): any;\n\tverbose?(message: any, context?: string): any;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsProperties.html":{"url":"interfaces/INewsProperties.html","title":"interface - INewsProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            displayAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            externalId\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            source\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sourceDescription\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updater\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         EntityId | User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        displayAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         EntityId | School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \"internal\" | \"rss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"internal\" | \"rss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         EntityId | NewsTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId | NewsTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updater\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updater:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INewsScope.html":{"url":"interfaces/INewsScope.html","title":"interface - INewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/types/news.types.ts\n        \n\n\n            \n                Description\n            \n            \n                interface for finding news with optional targetId\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            target\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unpublished\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unpublished\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unpublished:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from './entity-id';\nimport type { Course } from '../entity/course.entity';\nimport type { School } from '../entity/school.entity';\nimport type { Team } from '../entity/team.entity';\n\nexport enum NewsTargetModel {\n\t'School' = 'schools',\n\t'Course' = 'courses',\n\t'Team' = 'teams',\n}\n\n/** news interface for ceating news */\nexport interface ICreateNews {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt?: Date;\n\ttarget: { targetModel: NewsTargetModel; targetId: EntityId };\n}\n\n/** news interface for updating news */\nexport type IUpdateNews = Partial;\n\n/** interface for finding news with optional targetId */\nexport interface INewsScope {\n\ttarget?: { targetModel: NewsTargetModel; targetId?: EntityId };\n\tunpublished?: boolean;\n}\n\nexport type NewsTarget = School | Team | Course;\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagination.html":{"url":"interfaces/IPagination.html","title":"interface - IPagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/find-options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            skip\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skip:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPagination {\n\tskip?: number;\n\tlimit?: number;\n}\n\nexport enum SortOrder {\n\tasc = 'asc',\n\tdesc = 'desc',\n}\n\nexport type SortOrderMap = Partial>;\n\nexport interface IFindOptions {\n\tpagination?: IPagination;\n\torder?: SortOrderMap;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResolvedUser.html":{"url":"interfaces/IResolvedUser.html","title":"interface - IResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            schoolId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         IRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schoolId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schoolId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRole.html":{"url":"interfaces/IRole.html","title":"interface - IRole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/interface/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import type { Role } from '../entity/role.entity';\n\nexport interface IRole {\n\tname: string;\n\n\tid: string;\n}\n\nexport interface IResolvedUser {\n\tfirstName: string;\n\n\tlastName: string;\n\n\tid: string;\n\n\tcreatedAt: Date;\n\n\tupdatedAt: Date;\n\n\troles: IRole[];\n\n\tpermissions: string[];\n\n\tschoolId: string;\n}\n\nexport interface ICurrentUser {\n\t/** authenticated users id */\n\tuserId: string;\n\t/** users role ids as string[] */\n\troles: string[];\n\t/** users schoolId as string */\n\tschoolId: string;\n\t/** account id as string */\n\taccountId: string;\n\n\tuser: IResolvedUser;\n}\n\nexport type IPermissionsAndRoles = {\n\tpermissions: string[];\n\troles: Role[];\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoleProperties.html":{"url":"interfaces/IRoleProperties.html","title":"interface - IRoleProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoleProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany('Role')\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStorageProviderProperties.html":{"url":"interfaces/IStorageProviderProperties.html","title":"interface - IStorageProviderProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStorageProviderProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/storageprovider.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessKeyId\n                                        \n                                \n                                \n                                        \n                                            endpointUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            secretAccessKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessKeyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessKeyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endpointUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endpointUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretAccessKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretAccessKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { EncryptedStringType } from '@shared/repo/types/EncryptedString.type';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\ninterface IStorageProviderProperties {\n\tendpointUrl: string;\n\taccessKeyId: string;\n\tsecretAccessKey: string;\n\tregion?: string;\n}\n\n@Entity({ tableName: 'storageproviders' })\nexport class StorageProvider extends BaseEntityWithTimestamps {\n\t@Property()\n\tendpointUrl!: string;\n\n\t@Property()\n\taccessKeyId!: string;\n\n\t@Property({ fieldName: 'secretAccessKey', type: EncryptedStringType })\n\tsecretAccessKey!: string;\n\n\t@Property()\n\tregion?: string;\n\n\tconstructor(props: IStorageProviderProperties) {\n\t\tsuper();\n\t\tthis.endpointUrl = props.endpointUrl;\n\t\tthis.accessKeyId = props.accessKeyId;\n\t\tthis.secretAccessKey = props.secretAccessKey;\n\t\tthis.region = props.region;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISubmissionProperties.html":{"url":"interfaces/ISubmissionProperties.html","title":"interface - ISubmissionProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISubmissionProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            courseGroup\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeComment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gradeFiles\n                                        \n                                \n                                \n                                        \n                                            student\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            studentFiles\n                                        \n                                \n                                \n                                        \n                                            task\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teamMembers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        courseGroup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        courseGroup:     CourseGroup[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CourseGroup[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeComment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeComment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gradeFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gradeFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        student\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        student:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentFiles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentFiles:         File[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         File[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task:         Task\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Task\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamMembers:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskProperties.html":{"url":"interfaces/ITaskProperties.html","title":"interface - ITaskProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            availableDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            closed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            course\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dueDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lesson\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            private\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            submissions\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            teacher\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availableDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        availableDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed:         User[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        course\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        course:         Course\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Course\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dueDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dueDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lesson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lesson:         Lesson\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Lesson\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        private\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        private:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submissions:         Submission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Submission[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teacher\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teacher:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport { User } from './user.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tteacher?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tclosed?: User[];\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tteacher?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: is mapped to boolean in future\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tclosed = new Collection(this);\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tisSubstitutionTeacher(userId: EntityId): boolean {\n\t\tif (!this.course) {\n\t\t\treturn false;\n\t\t}\n\t\t// TODO: check if it is loaded if not load it ...isInitialized() is only work for collections, await ...init() also\n\t\tconst isSubstitutionTeacher = this.course.isSubstitutionTeacher(userId);\n\t\treturn isSubstitutionTeacher;\n\t}\n\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\t\treturn descriptions;\n\t}\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.teacher = props.teacher;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\t// TODO: is replaced with boolean in future\n\t\tthis.closed.set(props.closed || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITaskStatus.html":{"url":"interfaces/ITaskStatus.html","title":"interface - ITaskStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITaskStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/vo/task-with-status.vo.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            graded\n                                        \n                                \n                                \n                                        \n                                            isDraft\n                                        \n                                \n                                \n                                        \n                                            isSubstitutionTeacher\n                                        \n                                \n                                \n                                        \n                                            maxSubmissions\n                                        \n                                \n                                \n                                        \n                                            submitted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        graded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        graded:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDraft\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDraft:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSubstitutionTeacher\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isSubstitutionTeacher:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSubmissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSubmissions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        submitted:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Task } from '../entity/task.entity';\n\ninterface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserProperties.html":{"url":"interfaces/IUserProperties.html","title":"interface - IUserProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            school\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        school\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        school:         School\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         School\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InlineAttachment.html":{"url":"interfaces/InlineAttachment.html","title":"interface - InlineAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InlineAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailAttachment\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentDisposition\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentDisposition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentDisposition:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterceptorModule.html":{"url":"modules/InterceptorModule.html","title":"module - InterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    InterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/interceptor/interceptor.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            \nGlobal Interceptor setup\n\nHere, we globally apply\n\nvalidate input data using @ClassSerializerInterceptor\nset a timeout for requests using @TimeoutInterceptor\n\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { TimeoutInterceptor } from '@shared/common';\n\n/** *********************************************\n * Global Interceptor setup\n * **********************************************\n * Here, we globally apply\n * - validate input data using @ClassSerializerInterceptor\n * - set a timeout for requests using @TimeoutInterceptor\n */\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\tuseClass: ClassSerializerInterceptor,\n\t\t},\n\t\t{\n\t\t\tprovide: APP_INTERCEPTOR, // TODO remove (for testing)\n\t\t\tuseClass: TimeoutInterceptor,\n\t\t},\n\t],\n})\nexport class InterceptorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/guard/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConstants.html":{"url":"interfaces/JwtConstants.html","title":"interface - JwtConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/constants.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwtOptions\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwtOptions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtOptions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import externalAuthConfig = require('../../../../../src/services/authentication/configuration');\n\nconst { authConfig } = externalAuthConfig;\n\n/*\n\tTODO: look at existing keys, vs implemented keys\n\tsupport: true,\n\tsupportUserId,\n\taccountId,\n\tuserId,\n\tiat,\n\texp,\n\taud: this.aud,\n\tiss: 'feathers',\n\tsub: accountId,\n\tjti: `support_${ObjectId()}`,\n*/\nexport interface JwtConstants {\n\tsecret: string;\n\tjwtOptions: {\n\t\theader: { typ: string };\n\t\taudience: string;\n\t\tissuer: string;\n\t\talgorithm: string;\n\t\texpiresIn: string;\n\t};\n}\n\nexport const jwtConstants: JwtConstants = {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/interface/jwt-payload.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ICurrentUser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            aud\n                                        \n                                \n                                \n                                        \n                                            exp\n                                        \n                                \n                                \n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            iss\n                                        \n                                \n                                \n                                        \n                                            jti\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        aud\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aud:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    audience\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    expiration in // TODO\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iss\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iss:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    issuer\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jti\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jti:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    // TODO\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ICurrentUser } from '@shared/domain';\n\nexport interface JwtPayload extends ICurrentUser {\n\t/** audience */\n\taud: string;\n\t/** expiration in // TODO\n\t *\n\t */\n\texp: number;\n\tiat: number;\n\t/** issuer */\n\tiss: string;\n\tjti: string;\n\n\t/** // TODO\n\t *\n\t */\n\tsub: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userFacade: UserFacade, jwtValidationAdapter: JwtValidationAdapter)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userFacade\n                                                  \n                                                        \n                                                                        UserFacade\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtValidationAdapter\n                                                  \n                                                        \n                                                                        JwtValidationAdapter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt.strategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { UserFacade } from '@src/modules/user';\nimport { jwtConstants } from '../constants';\nimport { JwtPayload } from '../interface/jwt-payload';\nimport { JwtValidationAdapter } from './jwt-validation.adapter';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\tconstructor(private readonly userFacade: UserFacade, private readonly jwtValidationAdapter: JwtValidationAdapter) {\n\t\tsuper({\n\t\t\tjwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n\t\t\tignoreExpiration: false,\n\t\t\tsecretOrKey: jwtConstants.secret,\n\t\t\t...jwtConstants.jwtOptions,\n\t\t});\n\t}\n\n\tasync validate(payload: JwtPayload): Promise {\n\t\t// check jwt is whitelisted and extend whitelist entry\n\t\tconst { accountId, jti, userId } = payload;\n\t\tawait this.jwtValidationAdapter.isWhitelisted(accountId, jti);\n\t\t// check user exists\n\t\tconst resolvedUser = await this.userFacade.resolveUser(userId);\n\t\tpayload.user = resolvedUser; // todo decide request.user or request.user.user to be used everywhere\n\t\t// TODO: check user/account is active and has one role\n\t\treturn payload;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtValidationAdapter.html":{"url":"injectables/JwtValidationAdapter.html","title":"injectable - JwtValidationAdapter","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtValidationAdapter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addToWhitelist\n                            \n                            \n                                    Async\n                                isWhitelisted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addToWhitelist\n                        \n                    \n                \n            \n            \n                \n                    \n                    addToWhitelist(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isWhitelisted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isWhitelisted(accountId: string, jti: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts:15\n                \n            \n\n\n            \n                \n                    When validating a jwt it must be added to a whitelist, here we check this.\nWhen the jwt is validated, the expiration time will be extended with this call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    accountId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        users account id\n\n                                    \n                                \n                                \n                                    jti\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jwt id (here required to make jwt identifiers identical in redis)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport jwtWhitelist = require('../../../../../../src/services/authentication/logic/whitelist');\n\nconst { ensureTokenIsWhitelisted, addTokenToWhitelist, createRedisIdentifierFromJwtData } = jwtWhitelist;\n\n@Injectable()\nexport class JwtValidationAdapter {\n\t/**\n\t * When validating a jwt it must be added to a whitelist, here we check this.\n\t * When the jwt is validated, the expiration time will be extended with this call.\n\t * @param accountId users account id\n\t * @param jti jwt id (here required to make jwt identifiers identical in redis)\n\t */\n\tasync isWhitelisted(accountId: string, jti: string): Promise {\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait ensureTokenIsWhitelisted({ accountId, jti, privateDevice: false });\n\t}\n\n\tasync addToWhitelist(accountId: string, jti: string): Promise {\n\t\tconst redisIdentifier = createRedisIdentifierFromJwtData(accountId, jti);\n\t\t// eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\t\tawait addTokenToWhitelist(redisIdentifier);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LearnroomModule.html":{"url":"modules/LearnroomModule.html","title":"module - LearnroomModule","body":"\n                   \n\n\n\n\n    Modules\n    LearnroomModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/learnroom.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DashboardUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DashboardController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { DashboardRepo } from '@src/repositories/learnroom/dashboard.repo';\n\nimport { DashboardController } from './controller/dashboard.controller';\nimport { DashboardUc } from './uc/dashboard.uc';\n\n@Module({\n\timports: [],\n\tcontrollers: [DashboardController],\n\tproviders: [\n\t\tDashboardUc,\n\t\t{\n\t\t\tprovide: 'DASHBOARD_REPO',\n\t\t\tuseClass: DashboardRepo,\n\t\t},\n\t],\n})\nexport class LearnroomModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Lesson.html":{"url":"classes/Lesson.html","title":"class - Lesson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Lesson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/lesson.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                course\n                            \n                            \n                                hidden\n                            \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ILessonProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ILessonProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hidden\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/lesson.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\n\ninterface ILessonProperties {\n\tname: string;\n\thidden?: boolean;\n\tcourse: Course;\n}\n\n@Entity({ tableName: 'lessons' })\nexport class Lesson extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\thidden = false;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse: Course;\n\n\tconstructor(props: ILessonProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.hidden !== undefined) this.hidden = props.hidden;\n\t\tthis.course = props.course;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LessonRepo.html":{"url":"injectables/LessonRepo.html","title":"injectable - LessonRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LessonRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByCourseIds\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByCourseIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByCourseIds(courseIds: EntityId[], filters?: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson.repo.ts:15\n                \n            \n\n\n            \n                \n                    TODO add pagination and sorting\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager } from '@mikro-orm/core';\n\nimport { EntityId, Lesson } from '@shared/domain';\n\nimport { LessonScope } from './lesson-scope';\n\n@Injectable()\nexport class LessonRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/**\n\t * TODO add pagination and sorting\n\t */\n\tasync findAllByCourseIds(courseIds: EntityId[], filters?: { hidden?: boolean }): Promise {\n\t\tconst scope = new LessonScope();\n\n\t\tscope.byCourseIds(courseIds);\n\n\t\tif (filters?.hidden !== undefined) {\n\t\t\tscope.byHidden(filters.hidden);\n\t\t}\n\n\t\tconst lessons = this.em.find(Lesson, scope.query);\n\t\treturn lessons;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LessonScope.html":{"url":"classes/LessonScope.html","title":"class - LessonScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LessonScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/lesson/lesson-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byCourseIds\n                            \n                            \n                                byHidden\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byHidden\n                        \n                    \n                \n            \n            \n                \nbyHidden(isHidden: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/lesson/lesson-scope.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isHidden\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LessonScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Lesson } from '@shared/domain';\nimport { Scope } from '../scope';\n\nexport class LessonScope extends Scope {\n\tbyCourseIds(courseIds: EntityId[]): LessonScope {\n\t\tthis.addQuery({ course: { $in: courseIds } });\n\t\treturn this;\n\t}\n\n\tbyHidden(isHidden: boolean): LessonScope {\n\t\tthis.addQuery({ hidden: { $eq: isHidden } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Logger.html":{"url":"injectables/Logger.html","title":"injectable - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ConsoleLogger\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Scope, ConsoleLogger } from '@nestjs/common';\nimport { ILogger } from './logger.interface';\n\n@Injectable({ scope: Scope.TRANSIENT })\n/**\n * Default logger for server application.\n * Must implement ILogger but must not extend ConsoleLogger (this can be changed).\n * Transient injection: Wherever injected, a separate instance will be created, that can be provided with a custom context.\n */\nexport class Logger extends ConsoleLogger implements ILogger {\n\t/**\n\t * This Logger Service can be initialized with a context, that will be added to every log.\n\t * It implements @ILogger which provides the logger methods.\n\t * CAUTION: PREPARE STRINGS AS LOG DATA, DO NOT LOG COMPLEX DATA STRUCTURES\n\t * @param context when initialized in a provider, use setContext with CustomProviderClass.name\n\t * @param isTimestampEnabled\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nLogger \n\nLogger \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Logger\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Logger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Logger } from './logger.service';\n\n@Module({\n\tproviders: [Logger],\n\texports: [Logger],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mail.html":{"url":"interfaces/Mail.html","title":"interface - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            mail\n                                        \n                                \n                                \n                                        \n                                            recipients\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mail:     PlainTextMailContent | HtmlMailContent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PlainTextMailContent | HtmlMailContent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailAttachment.html":{"url":"interfaces/MailAttachment.html","title":"interface - MailAttachment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailAttachment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            base64Content\n                                        \n                                \n                                \n                                        \n                                            mimeType\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base64Content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base64Content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimeType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mimeType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailContent.html":{"url":"interfaces/MailContent.html","title":"interface - MailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attachments\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attachments:     (InlineAttachment | AppendedAttachment)[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     (InlineAttachment | AppendedAttachment)[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: MailModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.module.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MailModuleOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailModuleOptions.html":{"url":"interfaces/MailModuleOptions.html","title":"interface - MailModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Module, DynamicModule } from '@nestjs/common';\nimport { RabbitMQModule } from '@golevelup/nestjs-rabbitmq';\nimport { MailService } from './mail.service';\n\ninterface MailModuleOptions {\n\turi: string;\n\texchange: string;\n\troutingKey: string;\n}\n\ntype RabbitMqModuleOptions = Omit;\n\nconst createRabbitMqModule = (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n};\n\n@Module({})\nexport class MailModule {\n\tstatic forRoot(options: MailModuleOptions): DynamicModule {\n\t\treturn {\n\t\t\tmodule: MailModule,\n\t\t\timports: [createRabbitMqModule(options)],\n\t\t\tproviders: [\n\t\t\t\tMailService,\n\t\t\t\t{\n\t\t\t\t\tprovide: 'MAIL_SERVICE_OPTIONS',\n\t\t\t\t\tuseValue: { exchange: options.exchange, routingKey: options.routingKey },\n\t\t\t\t},\n\t\t\t],\n\t\t\texports: [MailService],\n\t\t};\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(amqpConnection: AmqpConnection, options: MailServiceOptions)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/mail/mail.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpConnection\n                                                  \n                                                        \n                                                                    AmqpConnection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        MailServiceOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(data: Mail)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/mail/mail.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Mail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MailServiceOptions.html":{"url":"interfaces/MailServiceOptions.html","title":"interface - MailServiceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MailServiceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            exchange\n                                        \n                                \n                                \n                                        \n                                            routingKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exchange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exchange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routingKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routingKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { AmqpConnection } from '@golevelup/nestjs-rabbitmq';\n\nimport { Mail } from './mail.interface';\n\ninterface MailServiceOptions {\n\texchange: string;\n\troutingKey: string;\n}\n\n@Injectable()\nexport class MailService {\n\tconstructor(\n\t\tprivate readonly amqpConnection: AmqpConnection,\n\t\t@Inject('MAIL_SERVICE_OPTIONS') private readonly options: MailServiceOptions\n\t) {}\n\n\tpublic async send(data: Mail): Promise {\n\t\tawait this.amqpConnection.publish(this.options.exchange, this.options.routingKey, data, { persistent: true });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManagementModule.html":{"url":"modules/ManagementModule.html","title":"module - ManagementModule","body":"\n                   \n\n\n\n\n    Modules\n    ManagementModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_ManagementModule_imports\n\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFileSystemModule\n\nFileSystemModule\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/management/management.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BsonConverter\n                        \n                        \n                            ConsoleWriterService\n                        \n                        \n                            DatabaseManagementService\n                        \n                        \n                            DatabaseManagementUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabaseManagementController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseManagementModule\n                        \n                        \n                            FileSystemModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { DatabaseManagementService, DatabaseManagementModule } from '@shared/infra/database';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { FileSystemModule } from '@shared/infra/file-system';\n\nimport { ConsoleWriterService } from '@shared/infra/console';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from '@src/config';\nimport { DatabaseManagementController } from './controller/database-management.controller';\nimport { DatabaseManagementUc } from './uc/database-management.uc';\nimport { BsonConverter } from './converter/bson.converter';\nimport { DatabaseManagementConsole } from './console/database-management.console';\n\n@Module({\n\timports: [\n\t\tFileSystemModule,\n\t\tDatabaseManagementModule,\n\t\tMikroOrmModule.forRoot({\n\t\t\t// TODO repeats server module definitions\n\t\t\ttype: 'mongo',\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t}),\n\t],\n\tproviders: [\n\t\tDatabaseManagementUc,\n\t\tDatabaseManagementService,\n\t\tBsonConverter,\n\t\t// console providers\n\t\tDatabaseManagementConsole,\n\t\t// infra services\n\t\tConsoleWriterService,\n\t],\n\tcontrollers: [DatabaseManagementController],\n})\nexport class ManagementModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MongoMemoryDatabaseModule.html":{"url":"modules/MongoMemoryDatabaseModule.html","title":"module - MongoMemoryDatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    MongoMemoryDatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options?: MongoDatabaseModuleOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                MongoDatabaseModuleOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleDestroy()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MikroORM } from '@mikro-orm/core';\nimport { MikroOrmModule, MikroOrmModuleAsyncOptions } from '@mikro-orm/nestjs';\nimport { DynamicModule, Inject, Module, OnModuleDestroy } from '@nestjs/common';\nimport { ModuleRef } from '@nestjs/core';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { MongoMemoryServer } from 'mongodb-memory-server-global-4.2';\nimport { MongoDatabaseModuleOptions } from './types';\n\nconst createMikroOrmModule = async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n};\n\n@Module({})\nexport class MongoMemoryDatabaseModule implements OnModuleDestroy {\n\tconstructor(\n\t\t@Inject(MikroORM) private orm: MikroORM,\n\t\t@Inject(MongoMemoryServer) private mongod: MongoMemoryServer,\n\t\tprivate readonly moduleRef: ModuleRef\n\t) {}\n\n\tstatic forRoot(options?: MongoDatabaseModuleOptions): DynamicModule {\n\t\tconst defaultOptions = {\n\t\t\tentities: ALL_ENTITIES,\n\t\t};\n\t\treturn {\n\t\t\tmodule: MongoMemoryDatabaseModule,\n\t\t\timports: [createMikroOrmModule({ ...defaultOptions, ...options })],\n\t\t\texports: [MikroOrmModule],\n\t\t};\n\t}\n\n\t// close db connection and stop mongo server\n\t// NOTE: we have to call close() on this module to make nest call this callback\n\tasync onModuleDestroy(): Promise {\n\t\tawait this.orm.close();\n\t\tawait this.mongod.stop();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementParams.html":{"url":"classes/MoveElementParams.html","title":"class - MoveElementParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MoveElementPosition\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min, IsOptional } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\tx: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\ty: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiPropertyOptional({ description: 'used to identify a position within a group.' })\n\tgroupIndex?: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoveElementPosition.html":{"url":"classes/MoveElementPosition.html","title":"class - MoveElementPosition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoveElementPosition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                groupIndex\n                            \n                            \n                                x\n                            \n                            \n                                y\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groupIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@IsOptional()@ApiPropertyOptional({description: 'used to identify a position within a group.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/movePosition.params.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { ValidateNested, IsNumber, Min, IsOptional } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\n\nexport class MoveElementPosition {\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\tx: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@ApiProperty()\n\ty: number;\n\n\t@IsNumber()\n\t@Min(0)\n\t@IsOptional()\n\t@ApiPropertyOptional({ description: 'used to identify a position within a group.' })\n\tgroupIndex?: number;\n}\n\nexport class MoveElementParams {\n\t@ValidateNested()\n\t@ApiProperty()\n\tfrom: MoveElementPosition;\n\n\t@ValidateNested()\n\t@ApiProperty()\n\tto: MoveElementPosition;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/News.html":{"url":"classes/News.html","title":"class - News","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  News\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: INewsProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        INewsProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:35\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:39\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTarget\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:51\n                        \n                    \n\n            \n                \n                    id reference to a collection populated later with name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:55\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:31\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/news.entity.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/news.entity.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsController.html":{"url":"controllers/NewsController.html","title":"controller - NewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                news\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(currentUser: ICurrentUser, params: CreateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:21\n                \n            \n\n\n            \n                \n                    Create a news by a user in a given scope (school or team).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:85\n                \n            \n\n\n            \n                \n                    Delete a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiBody({type: NewsListResponse})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:36\n                \n            \n\n\n            \n                \n                    Responds with all news for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(newsId: string, currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:57\n                \n            \n\n\n            \n                \n                    Retrieve a specific news entry by id.\nA user may only read news of scopes he has the read permission.\nThe news entity has school and user names populated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(newsId: string, currentUser: ICurrentUser, params: UpdateNewsParams)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/news.controller.ts:71\n                \n            \n\n\n            \n                \n                    Update properties of a news.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newsId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Patch, Delete } from '@nestjs/common';\nimport { ApiTags, ApiBody } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\nimport { ParseObjectIdPipe, PaginationQuery } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { NewsUc } from '../uc/news.uc';\n\nimport { CreateNewsParams, NewsFilterQuery, NewsListResponse, NewsResponse, UpdateNewsParams } from './dto';\nimport { NewsMapper } from '../mapper/news.mapper';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('news')\nexport class NewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Create a news by a user in a given scope (school or team).\n\t */\n\t@Post()\n\tasync create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n\t\tconst news = await this.newsUc.create(\n\t\t\tcurrentUser.userId,\n\t\t\tcurrentUser.schoolId,\n\t\t\tNewsMapper.mapCreateNewsToDomain(params)\n\t\t);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Responds with all news for a user.\n\t */\n\t@Get()\n\t@ApiBody({ type: NewsListResponse })\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new NewsListResponse(dtoList, count);\n\t\treturn response;\n\t}\n\n\t/**\n\t * Retrieve a specific news entry by id.\n\t * A user may only read news of scopes he has the read permission.\n\t * The news entity has school and user names populated.\n\t */\n\t@Get(':id')\n\tasync findOne(\n\t\t// A parameter pipe like ParseObjectIdPipe gives us the guarantee of typesafety for @Param\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst news = await this.newsUc.findOneByIdForUser(newsId, currentUser.userId);\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Update properties of a news.\n\t */\n\t@Patch(':id')\n\tasync update(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Body() params: UpdateNewsParams\n\t): Promise {\n\t\tconst news = await this.newsUc.update(newsId, currentUser.userId, NewsMapper.mapUpdateNewsToDomain(params));\n\t\tconst dto = NewsMapper.mapToResponse(news);\n\t\treturn dto;\n\t}\n\n\t/**\n\t * Delete a news.\n\t */\n\t@Delete(':id')\n\tasync delete(\n\t\t@Param('id', ParseObjectIdPipe) newsId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser\n\t): Promise {\n\t\tconst deletedId = await this.newsUc.delete(newsId, currentUser.userId);\n\t\treturn deletedId;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsFilterQuery.html":{"url":"classes/NewsFilterQuery.html","title":"class - NewsFilterQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsFilterQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news-filter.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                targetId\n                            \n                            \n                                    Optional\n                                targetModel\n                            \n                            \n                                    Optional\n                                unpublished\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@ApiPropertyOptional({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the news are related (works only together with targetModel)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsIn(TARGET_MODEL_VALUES)@ApiPropertyOptional({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the news are related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unpublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@StringToBoolean()@ApiPropertyOptional({description: 'Flag that filters if the news should be published or not'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news-filter.query.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsBoolean, IsIn, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { StringToBoolean } from '@shared/controller/transformer';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\n\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\nexport class NewsFilterQuery {\n\t@IsOptional()\n\t@IsString()\n\t@IsIn(TARGET_MODEL_VALUES)\n\t@ApiPropertyOptional({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the news are related',\n\t})\n\ttargetModel?: string;\n\n\t@IsOptional()\n\t@IsMongoId()\n\t@ApiPropertyOptional({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the news are related (works only together with targetModel)',\n\t})\n\ttargetId?: string;\n\n\t@IsOptional()\n\t@IsBoolean()\n\t@StringToBoolean()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Flag that filters if the news should be published or not',\n\t})\n\tunpublished?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsListResponse.html":{"url":"classes/NewsListResponse.html","title":"class - NewsListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:95\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    NewsResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NewsResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:102\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\nexport class NewsListResponse extends PaginationResponse {\n\tconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [NewsResponse] })\n\tdata: NewsResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsMapper.html":{"url":"classes/NewsMapper.html","title":"class - NewsMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/news.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapCreateNewsToDomain\n                            \n                            \n                                    Static\n                                mapNewsScopeToDomain\n                            \n                            \n                                    Static\n                                mapToResponse\n                            \n                            \n                                    Static\n                                mapUpdateNewsToDomain\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapCreateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapCreateNewsToDomain(params: CreateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                CreateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ICreateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapNewsScopeToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapNewsScopeToDomain(query: NewsFilterQuery)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         INewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapUpdateNewsToDomain\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapUpdateNewsToDomain(params: UpdateNewsParams)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/news.mapper.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                UpdateNewsParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IUpdateNews\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { News } from '@shared/domain';\nimport { ICreateNews, INewsScope, IUpdateNews, NewsTargetModel } from '@shared/domain/types/news.types';\nimport { CreateNewsParams, NewsFilterQuery, NewsResponse, UpdateNewsParams } from '../controller/dto';\nimport { SchoolInfoMapper } from './school-info.mapper';\nimport { TargetInfoMapper } from './target-info.mapper';\nimport { UserInfoMapper } from './user-info.mapper';\n\nexport class NewsMapper {\n\tstatic mapToResponse(news: News): NewsResponse {\n\t\tconst dto = new NewsResponse();\n\t\tdto.id = news.id;\n\t\tdto.title = news.title;\n\t\tdto.content = news.content;\n\t\tdto.displayAt = news.displayAt;\n\t\tdto.source = news.source;\n\t\tdto.sourceDescription = news.sourceDescription;\n\t\tdto.targetId = news.target.id;\n\t\tdto.targetModel = news.targetModel;\n\t\tdto.target = TargetInfoMapper.mapToResponse(news.target);\n\t\tdto.school = SchoolInfoMapper.mapToResponse(news.school);\n\t\tdto.creator = UserInfoMapper.mapToResponse(news.creator);\n\t\tif (news.updater) {\n\t\t\tdto.updater = UserInfoMapper.mapToResponse(news.updater);\n\t\t}\n\t\tdto.createdAt = news.createdAt;\n\t\tdto.updatedAt = news.updatedAt;\n\t\tdto.permissions = news.permissions;\n\t\treturn dto;\n\t}\n\n\tstatic mapNewsScopeToDomain(query: NewsFilterQuery): INewsScope {\n\t\tconst dto: INewsScope = {};\n\t\tif (query.targetModel) {\n\t\t\tdto.target = {\n\t\t\t\ttargetModel: query.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: query.targetId,\n\t\t\t};\n\t\t}\n\t\tif ('unpublished' in query) {\n\t\t\tdto.unpublished = query.unpublished;\n\t\t}\n\t\treturn dto;\n\t}\n\n\tstatic mapCreateNewsToDomain(params: CreateNewsParams): ICreateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t\ttarget: {\n\t\t\t\ttargetModel: params.targetModel as NewsTargetModel,\n\t\t\t\ttargetId: params.targetId,\n\t\t\t},\n\t\t};\n\t\treturn dto;\n\t}\n\n\tstatic mapUpdateNewsToDomain(params: UpdateNewsParams): IUpdateNews {\n\t\tconst dto = {\n\t\t\ttitle: params.title,\n\t\t\tcontent: params.content,\n\t\t\tdisplayAt: params.displayAt,\n\t\t};\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsModule.html":{"url":"modules/NewsModule.html","title":"module - NewsModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_imports\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/news/news.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsRepo\n                        \n                        \n                            NewsUc\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsController\n                        \n                        \n                            TeamNewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthorizationModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NewsUc\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerModule } from '@src/core/logger/logger.module';\nimport { AuthorizationModule } from '@src/modules/authorization/authorization.module';\nimport { NewsUc } from './uc/news.uc';\nimport { NewsRepo } from './repo/news.repo';\nimport { NewsController } from './controller/news.controller';\nimport { TeamNewsController } from './controller/team-news.controller';\n\n/* NewsController\n * to enable:\n * - unskip e2e tests\n * - execute migration news_add_target_schools (in migrations/scheduled)\n * - update backup/setup/news.json from db after migration has been executed\n */\n@Module({\n\timports: [AuthorizationModule, LoggerModule],\n\tcontrollers: [NewsController, TeamNewsController],\n\tproviders: [NewsUc, NewsRepo],\n\texports: [NewsUc],\n})\nexport class NewsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsRepo.html":{"url":"injectables/NewsRepo.html","title":"injectable - NewsRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propertiesToPopulate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findNewsAndCount\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(targets: NewsTargetFilter[], unpublished: boolean, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:19\n                \n            \n\n\n            \n                \n                    Find news\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findNewsAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findNewsAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:39\n                \n            \n\n\n            \n                \n                    resolves a news documents list with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news.repo.ts:32\n                \n            \n\n\n            \n                \n                    resolves a news document with some elements (school, target, and updator/creator) populated already\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        propertiesToPopulate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['school', 'target', 'creator', 'updater']\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/repo/news.repo.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { FilterQuery } from '@mikro-orm/core';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { QueryOrderMap } from '@mikro-orm/core/enums';\nimport { Counted, CourseNews, EntityId, IFindOptions, News, SchoolNews, TeamNews } from '@shared/domain';\nimport { NewsScope } from './news-scope';\nimport { NewsTargetFilter } from './news-target-filter';\n\n@Injectable()\nexport class NewsRepo extends BaseRepo {\n\tpropertiesToPopulate = ['school', 'target', 'creator', 'updater'];\n\n\t/**\n\t * Find news\n\t * @param targets\n\t * @param unpublished\n\t * @param options\n\t */\n\tasync findAll(\n\t\ttargets: NewsTargetFilter[],\n\t\tunpublished: boolean,\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new NewsScope();\n\t\tscope.byTargets(targets);\n\t\tscope.byUnpublished(unpublished);\n\t\tconst countedNewsList = await this.findNewsAndCount(scope.query, options);\n\t\treturn countedNewsList;\n\t}\n\n\t/** resolves a news document with some elements (school, target, and updator/creator) populated already */\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst newsEntity = await this.em.findOneOrFail(News, id);\n\t\tawait this.em.populate(newsEntity, this.propertiesToPopulate);\n\t\treturn newsEntity;\n\t}\n\n\t/** resolves a news documents list with some elements (school, target, and updator/creator) populated already */\n\tprivate async findNewsAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [newsEntities, count] = await this.em.findAndCount(News, query, {\n\t\t\t...pagination,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\t\tawait this.em.populate(newsEntities, this.propertiesToPopulate);\n\t\t// populate target for all inheritances of news which not works when the list contains different types\n\t\tconst discriminatorColumn = 'target';\n\t\tconst schoolNews = newsEntities.filter((news) => news instanceof SchoolNews);\n\t\tawait this.em.populate(schoolNews, discriminatorColumn);\n\t\tconst teamNews = newsEntities.filter((news) => news instanceof TeamNews);\n\t\tawait this.em.populate(teamNews, discriminatorColumn);\n\t\tconst courseNews = newsEntities.filter((news) => news instanceof CourseNews);\n\t\tawait this.em.populate(courseNews, discriminatorColumn);\n\t\treturn [newsEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsResponse.html":{"url":"classes/NewsResponse.html","title":"class - NewsResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/news.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                id\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                target\n                            \n                            \n                                targetId\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                    Optional\n                                updater\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The creation timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Reference to the User that created the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the News entity', pattern: '[a-f0-9]{24}'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of permissions the current user has for the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SchoolInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The School ownership'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SourceType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'string', enum: NEWS_SOURCES, description: 'The type of source of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The source description of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TargetInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The target object with id and name, could be the school, team, or course name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'Specific target id to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TARGET_MODEL_VALUES, enumName: 'NewsTargetModel', description: 'Target model to which the News entity is related'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The update timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserInfoResponse\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Reference to the User that updated the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/news.response.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse } from '@shared/controller';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\nimport { SchoolInfoResponse } from './school-info.response';\nimport { TargetInfoResponse } from './target-info.response';\nimport { UserInfoResponse } from './user-info.response';\n\nconst NEWS_SOURCES = ['internal', 'rss'] as const;\nconst TARGET_MODEL_VALUES = Object.values(NewsTargetModel);\n\ntype SourceType = typeof NEWS_SOURCES[number];\nexport class NewsResponse {\n\t@ApiProperty({\n\t\tdescription: 'The id of the News entity',\n\t\tpattern: '[a-f0-9]{24}',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@ApiProperty({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n\n\t@ApiPropertyOptional({\n\t\ttype: 'string',\n\t\tenum: NEWS_SOURCES,\n\t\tdescription: 'The type of source of the News entity',\n\t})\n\tsource?: SourceType;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'The source description of the News entity',\n\t})\n\tsourceDescription?: string;\n\n\t@ApiProperty({\n\t\tenum: TARGET_MODEL_VALUES,\n\t\tenumName: 'NewsTargetModel',\n\t\tdescription: 'Target model to which the News entity is related',\n\t})\n\ttargetModel: string;\n\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'Specific target id to which the News entity is related',\n\t})\n\ttargetId: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The target object with id and name, could be the school, team, or course name',\n\t})\n\ttarget: TargetInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The School ownership',\n\t})\n\tschool: SchoolInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'Reference to the User that created the News entity',\n\t})\n\tcreator: UserInfoResponse;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Reference to the User that updated the News entity',\n\t})\n\tupdater?: UserInfoResponse;\n\n\t@ApiProperty({\n\t\tdescription: 'The creation timestamp',\n\t})\n\tcreatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'The update timestamp',\n\t})\n\tupdatedAt: Date;\n\n\t@ApiProperty({\n\t\tdescription: 'List of permissions the current user has for the News entity',\n\t})\n\tpermissions: string[];\n}\n\nexport class NewsListResponse extends PaginationResponse {\n\tconstructor(data: NewsResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [NewsResponse] })\n\tdata: NewsResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsScope.html":{"url":"classes/NewsScope.html","title":"class - NewsScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                byTargets\n                            \n                            \n                                byUnpublished\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        byTargets\n                        \n                    \n                \n            \n            \n                \nbyTargets(targets: NewsTargetFilter[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targets\n                                    \n                                                NewsTargetFilter[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byUnpublished\n                        \n                    \n                \n            \n            \n                \nbyUnpublished(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/repo/news-scope.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NewsScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery, Scope } from '@shared/repo';\nimport { News } from '@shared/domain';\nimport { NewsTargetFilter } from './news-target-filter';\n\nexport class NewsScope extends Scope {\n\tbyTargets(targets: NewsTargetFilter[]): NewsScope {\n\t\tconst queries: FilterQuery[] = targets.map((target) => {\n\t\t\treturn { $and: [{ targetModel: target.targetModel }, { 'target:in': target.targetIds }] };\n\t\t});\n\t\tif (queries.length === 0) {\n\t\t\t// mission impossile query to ensure empty query result\n\t\t\tthis.addQuery(EmptyResultQuery);\n\t\t} else if (queries.length === 1) {\n\t\t\tthis.addQuery(queries[0]);\n\t\t} else {\n\t\t\tthis.addQuery({ $or: queries });\n\t\t}\n\t\treturn this;\n\t}\n\n\tbyUnpublished(unpublished: boolean): NewsScope {\n\t\tconst now = new Date();\n\t\tthis.addQuery({ displayAt: unpublished ? { $gt: now } : { $lte: now } });\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NewsTargetFilter.html":{"url":"interfaces/NewsTargetFilter.html","title":"interface - NewsTargetFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NewsTargetFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/repo/news-target-filter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            targetIds\n                                        \n                                \n                                \n                                        \n                                            targetModel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetIds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetIds:         EntityId[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         EntityId[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetModel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        targetModel:         NewsTargetModel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NewsTargetModel\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityId } from '@shared/domain';\nimport { NewsTargetModel } from '@shared/domain/types/news.types';\n\nexport interface NewsTargetFilter {\n\ttargetModel: NewsTargetModel;\n\ttargetIds: EntityId[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsUc.html":{"url":"injectables/NewsUc.html","title":"injectable - NewsUc","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsUc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/uc/news.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                            \n                                    Async\n                                findOneByIdForUser\n                            \n                            \n                                    Private\n                                    Async\n                                getNewsPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getPermittedTargets\n                            \n                            \n                                    Private\n                                    Static\n                                getRequiredPermissions\n                            \n                            \n                                    Private\n                                    Async\n                                getTargetFilters\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(newsRepo: NewsRepo, authorizationService: AuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        newsRepo\n                                                  \n                                                        \n                                                                        NewsRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        AuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: EntityId, schoolId: EntityId, params: ICreateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                ICreateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:57\n                \n            \n\n\n            \n                \n                    Provides news for a user, by default odered by displayAt to show latest news first.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneByIdForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByIdForUser(id: EntityId, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getNewsPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsPermissions(userId: EntityId, news: News)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    news\n                                    \n                                                News\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getPermittedTargets\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                INewsScope | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                                Permission[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        getRequiredPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequiredPermissions(unpublished: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    unpublished\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        news with displayAt set to future date are not published for users with view permission\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTargetFilters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTargetFilters(userId: EntityId, targetModels: NewsTargetModel[], permissions: string[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    targetModels\n                                    \n                                                NewsTargetModel[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: EntityId, userId: EntityId, params: IUpdateNews)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/uc/news.uc.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                IUpdateNews\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ILogger\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/uc/news.uc.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId, IFindOptions, News, SortOrder } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\nimport { Logger, ILogger } from '@src/core/logger';\nimport { AuthorizationService } from '@src/modules/authorization/authorization.service';\nimport { NewsTargetModel, ICreateNews, INewsScope, IUpdateNews } from '@shared/domain/types/news.types';\nimport { NewsRepo } from '../repo/news.repo';\nimport { NewsTargetFilter } from '../repo/news-target-filter';\n\ntype Permission = 'NEWS_VIEW' | 'NEWS_EDIT';\n\n@Injectable()\nexport class NewsUc {\n\tprivate logger: ILogger;\n\n\tconstructor(private newsRepo: NewsRepo, private authorizationService: AuthorizationService) {\n\t\tthis.logger = new Logger(NewsUc.name);\n\t}\n\n\t/**\n\t *\n\t * @param userId\n\t * @param schoolId\n\t * @param params\n\t * @returns\n\t */\n\tasync create(userId: EntityId, schoolId: EntityId, params: ICreateNews): Promise {\n\t\tthis.logger.log(`create news as user ${userId}`);\n\n\t\tconst { targetModel, targetId } = params.target;\n\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, ['NEWS_CREATE']);\n\n\t\tconst { target, displayAt: paramDisplayAt, ...props } = params;\n\t\t// set news as published by default\n\t\tconst displayAt = paramDisplayAt || new Date();\n\t\tconst news = News.createInstance(targetModel, {\n\t\t\t...props,\n\t\t\tdisplayAt,\n\t\t\tschool: schoolId,\n\t\t\tcreator: userId,\n\t\t\ttarget: targetId,\n\t\t});\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\tthis.logger.log(`news ${news.id} created by user ${userId}`);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t * Provides news for a user, by default odered by displayAt to show latest news first.\n\t * @param userId\n\t * @param scope\n\t * @param pagination\n\t * @returns\n\t */\n\tasync findAllForUser(userId: EntityId, scope?: INewsScope, options?: IFindOptions): Promise> {\n\t\tthis.logger.log(`start find all news for user ${userId}`);\n\n\t\tconst unpublished = !!scope?.unpublished; // default is only published news\n\t\tconst permissions: [Permission] = NewsUc.getRequiredPermissions(unpublished);\n\n\t\tconst targets = await this.getPermittedTargets(userId, scope, permissions);\n\n\t\tif (options == null) options = {};\n\t\t// by default show latest news first\n\t\tif (options.order == null) options.order = { displayAt: SortOrder.desc };\n\n\t\tconst [newsList, newsCount] = await this.newsRepo.findAll(targets, unpublished, options);\n\n\t\tawait Promise.all(\n\t\t\tnewsList.map(async (news: News) => {\n\t\t\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\t\t\t})\n\t\t);\n\n\t\tthis.logger.log(`return ${newsList.length} news for user ${userId}`);\n\n\t\treturn [newsList, newsCount];\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync findOneByIdForUser(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start find one news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tconst isPublished = news.displayAt > new Date();\n\t\tconst requiredPermissions = NewsUc.getRequiredPermissions(isPublished);\n\t\tawait this.authorizationService.checkEntityPermissions(\n\t\t\tuserId,\n\t\t\tnews.targetModel,\n\t\t\tnews.target.id,\n\t\t\trequiredPermissions\n\t\t);\n\t\tnews.permissions = await this.getNewsPermissions(userId, news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @param params\n\t * @returns\n\t */\n\tasync update(id: EntityId, userId: EntityId, params: IUpdateNews): Promise {\n\t\tthis.logger.log(`start update news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\t// eslint-disable-next-line no-restricted-syntax\n\t\tfor (const [key, value] of Object.entries(params)) {\n\t\t\tif (value) {\n\t\t\t\tnews[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tawait this.newsRepo.persistAndFlush(news);\n\n\t\treturn news;\n\t}\n\n\t/**\n\t *\n\t * @param id\n\t * @param userId\n\t * @returns\n\t */\n\tasync delete(id: EntityId, userId: EntityId): Promise {\n\t\tthis.logger.log(`start remove news ${id}`);\n\n\t\tconst news = await this.newsRepo.findOneById(id);\n\t\tawait this.authorizationService.checkEntityPermissions(userId, news.targetModel, news.target.id, ['NEWS_EDIT']);\n\n\t\tawait this.newsRepo.removeAndFlush(news);\n\n\t\treturn id;\n\t}\n\n\tprivate async getPermittedTargets(userId: EntityId, scope: INewsScope | undefined, permissions: Permission[]) {\n\t\tlet targets: NewsTargetFilter[];\n\n\t\tif (scope?.target == null) {\n\t\t\t// for all target models\n\t\t\ttargets = await this.getTargetFilters(userId, Object.values(NewsTargetModel), permissions);\n\t\t} else {\n\t\t\tconst { targetModel, targetId } = scope.target;\n\t\t\tif (targetModel && targetId) {\n\t\t\t\t// for specific news target\n\t\t\t\tawait this.authorizationService.checkEntityPermissions(userId, targetModel, targetId, permissions);\n\t\t\t\ttargets = [{ targetModel, targetIds: [targetId] }];\n\t\t\t} else {\n\t\t\t\t// for single target model\n\t\t\t\ttargets = await this.getTargetFilters(userId, [targetModel], permissions);\n\t\t\t}\n\t\t}\n\t\treturn targets;\n\t}\n\n\tprivate async getTargetFilters(\n\t\tuserId: EntityId,\n\t\ttargetModels: NewsTargetModel[],\n\t\tpermissions: string[]\n\t): Promise {\n\t\tconst targets = await Promise.all(\n\t\t\ttargetModels.map(async (targetModel) => {\n\t\t\t\treturn {\n\t\t\t\t\ttargetModel,\n\t\t\t\t\ttargetIds: await this.authorizationService.getPermittedEntities(userId, targetModel, permissions),\n\t\t\t\t};\n\t\t\t})\n\t\t);\n\t\tconst nonEmptyTargets = targets.filter((target) => target.targetIds.length > 0);\n\n\t\treturn nonEmptyTargets;\n\t}\n\n\tprivate async getNewsPermissions(userId: EntityId, news: News): Promise {\n\t\tconst permissions = await this.authorizationService.getEntityPermissions(userId, news.targetModel, news.target.id);\n\t\treturn permissions.filter((permission) => permission.includes('NEWS'));\n\t}\n\n\t/**\n\t *\n\t * @param unpublished news with displayAt set to future date are not published for users with view permission\n\t * @returns\n\t */\n\tprivate static getRequiredPermissions(unpublished: boolean): [Permission] {\n\t\treturn unpublished ? ['NEWS_EDIT'] : ['NEWS_VIEW'];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/management/console/database-management.console.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            collection\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            override\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        collection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        override\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        override:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console/console-writer/console-writer.service';\nimport { DatabaseManagementUc } from '../uc/database-management.uc';\n\ninterface Options {\n\tcollection?: string;\n\toverride?: boolean;\n}\n\n@Console({ command: 'database', description: 'database setup console' })\nexport class DatabaseManagementConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService, private databaseManagementUc: DatabaseManagementUc) {}\n\n\t@Command({\n\t\tcommand: 'seed',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t],\n\t\tdescription: 'reset database collections with seed data from filesystem',\n\t})\n\tasync seedCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst collections = await this.databaseManagementUc.seedDatabaseCollectionsFromFileSystem(filter);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n\n\t@Command({\n\t\tcommand: 'export',\n\t\toptions: [\n\t\t\t{\n\t\t\t\tflags: '-c, --collection ',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'filter for a single ',\n\t\t\t},\n\t\t\t{\n\t\t\t\tflags: '-o, --override',\n\t\t\t\trequired: false,\n\t\t\t\tdescription: 'optional export collections to setup folder and override existing files',\n\t\t\t},\n\t\t],\n\t\tdescription: 'export database collections to filesystem',\n\t})\n\tasync exportCollections(options: Options): Promise {\n\t\tconst filter = options?.collection ? [options.collection] : undefined;\n\t\tconst toSeedFolder = options?.override ? true : undefined;\n\t\tconst collections = await this.databaseManagementUc.exportCollectionsToFileSystem(filter, toSeedFolder);\n\t\tconst report = JSON.stringify(collections);\n\t\tthis.consoleWriter.info(report);\n\t\treturn collections;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationQuery.html":{"url":"classes/PaginationQuery.html","title":"class - PaginationQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.query.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(1)@Max(100)@ApiPropertyOptional({description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Min(0)@ApiPropertyOptional({description: 'Number of elements (not pages) to be skipped'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.query.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, Max, Min } from 'class-validator';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class PaginationQuery {\n\t@IsInt()\n\t@Min(0)\n\t@ApiPropertyOptional({ description: 'Number of elements (not pages) to be skipped' })\n\tskip?: number = 0;\n\n\t@IsInt()\n\t@Min(1)\n\t@Max(100)\n\t@ApiPropertyOptional({ description: 'Page limit, defaults to 10.', minimum: 1, maximum: 99 })\n\tlimit?: number = 10;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationResponse.html":{"url":"classes/PaginationResponse.html","title":"class - PaginationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/dto/pagination.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/controller/dto/pagination.response.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport abstract class PaginationResponse {\n\tconstructor(total: number, skip?: number, limit?: number) {\n\t\tthis.total = total;\n\t\tthis.skip = skip;\n\t\tthis.limit = limit;\n\t}\n\n\t@ApiProperty()\n\tabstract data: T;\n\n\t@ApiProperty({ type: 'number' })\n\ttotal: number;\n\n\t@ApiProperty({ type: 'number' })\n\tskip?: number;\n\n\t@ApiProperty({ type: 'number' })\n\tlimit?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ParseObjectIdPipe.html":{"url":"injectables/ParseObjectIdPipe.html","title":"injectable - ParseObjectIdPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ParseObjectIdPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/controller/pipe/parse-object-id.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, BadRequestException } from '@nestjs/common';\nimport { ObjectId } from '@mikro-orm/mongodb';\nimport { EntityId } from '@shared/domain';\n\n@Injectable()\nexport class ParseObjectIdPipe implements PipeTransform {\n\ttransform(value: string): string {\n\t\tconst validObjectId = ObjectId.isValid(value);\n\n\t\tif (!validObjectId) {\n\t\t\tthrow new BadRequestException('Invalid ObjectId');\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchGroupParams.html":{"url":"classes/PatchGroupParams.html","title":"class - PatchGroupParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchGroupParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/learnroom/controller/dto/patchGroup.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Patching a the group name of a grid element.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Title of the Group grid element'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/learnroom/controller/dto/patchGroup.params.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\n/**\n * DTO for Patching a the group name of a grid element.\n */\nexport class PatchGroupParams {\n\t@IsString()\n\t@ApiProperty({\n\t\tdescription: 'Title of the Group grid element',\n\t})\n\ttitle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlainTextMailContent.html":{"url":"interfaces/PlainTextMailContent.html","title":"interface - PlainTextMailContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlainTextMailContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/mail/mail.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        MailContent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            htmlContent\n                                        \n                                \n                                \n                                        \n                                            plainTextContent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        htmlContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        htmlContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plainTextContent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plainTextContent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface MailAttachment {\n\tbase64Content: string;\n\n\tmimeType: string;\n\n\tname: string;\n}\n\ninterface InlineAttachment extends MailAttachment {\n\tcontentDisposition: 'INLINE';\n\n\tcontentId: string;\n}\n\ninterface AppendedAttachment extends MailAttachment {\n\tcontentDisposition: 'ATTACHMENT';\n}\n\ninterface MailContent {\n\tsubject: string;\n\n\tattachments?: (InlineAttachment | AppendedAttachment)[];\n}\n\ninterface PlainTextMailContent extends MailContent {\n\thtmlContent?: string;\n\n\tplainTextContent: string;\n}\n\ninterface HtmlMailContent extends MailContent {\n\thtmlContent: string;\n\n\tplainTextContent?: string;\n}\n\nexport interface Mail {\n\tmail: PlainTextMailContent | HtmlMailContent;\n\n\trecipients: string[];\n\n\tfrom?: string;\n\n\tcc?: string[];\n\n\tbcc?: string[];\n\n\treplyTo?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUser.html":{"url":"classes/ResolvedUser.html","title":"class - ResolvedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IResolvedUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                schoolId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IResolvedUser, IRole } from '@shared/domain';\n\nexport type Role = IRole;\n\nexport class ResolvedUser implements IResolvedUser {\n\t@ApiProperty()\n\tfirstName: string;\n\n\t@ApiProperty()\n\tlastName: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\troles: Role[];\n\n\t@ApiProperty()\n\tpermissions: string[];\n\n\t@ApiProperty()\n\tschoolId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResolvedUserMapper.html":{"url":"classes/ResolvedUserMapper.html","title":"class - ResolvedUserMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResolvedUserMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User, permissions: string[], roles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/mapper/ResolvedUser.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    permissions\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                                \n                                    roles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ResolvedUser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User, Role } from '@shared/domain';\nimport { ResolvedUser } from '../controller/dto';\n\nexport class ResolvedUserMapper {\n\tstatic mapToResponse(user: User, permissions: string[] = [], roles: Role[] = []): ResolvedUser {\n\t\tconst dto = new ResolvedUser();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName || '';\n\t\tdto.lastName = user.lastName || '';\n\t\tdto.createdAt = user.createdAt;\n\t\tdto.updatedAt = user.updatedAt;\n\t\tdto.schoolId = user.school.toString();\n\t\tdto.roles = roles.map((role) => ({ name: role.name, id: role.id }));\n\n\t\tdto.permissions = permissions;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/role.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                roles\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IRoleProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IRoleProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'primaryRoleSearchOperation'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('Role')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property, Unique, Index, ManyToMany, Collection } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IRoleProperties {\n\tpermissions?: string[];\n\troles?: Role[];\n\tname: string;\n}\n\n@Entity({ tableName: 'roles' })\nexport class Role extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'primaryRoleSearchOperation' })\n\t@Unique()\n\tname: string;\n\n\t// @Enum({ items: ['a', 'b', 'c'] }) in array with no permission is valid => validator function\n\t@Property()\n\tpermissions: string[] = [];\n\t// TODO: enum\n\n\t// @ManyToMany('Role', 'roles')\n\t// roles = new Collection(this);\n\n\t// @ManyToMany({ fieldName: 'roles', type: Role })\n\t// roles = new Collection(this);\n\n\t@ManyToMany('Role')\n\troles = new Collection(this);\n\n\tconstructor(props: IRoleProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tif (props.permissions) this.permissions = props.permissions;\n\t\tif (props.roles) this.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepo.html":{"url":"injectables/RoleRepo.html","title":"injectable - RoleRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/role.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByName\n                            \n                            \n                                    Async\n                                resolvePermissionsFromSubRolesById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsFromSubRolesById\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsFromSubRolesById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/role.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cache\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in apps/server/src/modules/user/repo/role.repo.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, Role } from '@shared/domain';\n\n@Injectable()\nexport class RoleRepo {\n\tcache: 60000;\n\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findByName(name: string): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { name }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst role = await this.em.findOneOrFail(Role, { id }, { cache: this.cache });\n\t\treturn role;\n\t}\n\n\tasync resolvePermissionsFromSubRolesById(id: EntityId): Promise {\n\t\tconst role = await this.findById(id);\n\t\tlet { permissions } = role;\n\n\t\tfor (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleUC.html":{"url":"injectables/RoleUC.html","title":"injectable - RoleUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RoleUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/role.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolvePermissionsByRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepo: RoleRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/role.uc.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepo\n                                                  \n                                                        \n                                                                        RoleRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolvePermissionsByRoles\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolvePermissionsByRoles(inputRoles: Role[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/role.uc.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputRoles\n                                    \n                                                Role[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { IPermissionsAndRoles, Role } from '@shared/domain';\n\nimport { RoleRepo } from '../repo';\n\n@Injectable()\nexport class RoleUC {\n\tconstructor(private readonly roleRepo: RoleRepo) {}\n\n\tasync resolvePermissionsByRoles(inputRoles: Role[]): Promise {\n\t\tconst roles = await Promise.all(\n\t\t\tinputRoles.map((role) => this.roleRepo.resolvePermissionsFromSubRolesById(role.id))\n\t\t);\n\n\t\tlet permissions: string[] = [];\n\t\troles.forEach((role) => {\n\t\t\tpermissions = [...permissions, ...role.permissions];\n\t\t});\n\t\tpermissions = [...new Set(permissions)];\n\n\t\treturn { roles, permissions };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/school.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/school.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\n@Entity({ tableName: 'schools' })\nexport class School extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoMapper.html":{"url":"classes/SchoolInfoMapper.html","title":"class - SchoolInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/school-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(schoolInfo: School)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/school-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolInfo\n                                    \n                                                School\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SchoolInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { School } from '@shared/domain';\nimport { SchoolInfoResponse } from '../controller/dto';\n\nexport class SchoolInfoMapper {\n\tstatic mapToResponse(schoolInfo: School): SchoolInfoResponse {\n\t\tconst dto = new SchoolInfoResponse();\n\t\tdto.id = schoolInfo.id;\n\t\tdto.name = schoolInfo.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolInfoResponse.html":{"url":"classes/SchoolInfoResponse.html","title":"class - SchoolInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/school-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the School entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/school-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class SchoolInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the School entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the School entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolNews.html":{"url":"classes/SchoolNews.html","title":"class - SchoolNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:98\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Scope.html":{"url":"classes/Scope.html","title":"class - Scope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Scope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/repo/scope.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(operator: ScopeOperator)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        operator\n                                                  \n                                                        \n                                                                        ScopeOperator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/repo/scope.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/repo/scope.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        query\n                    \n                \n\n                \n                    \n                        getquery()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/repo/scope.ts:17\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EmptyResultQuery } from './query/empty-result.query';\n\ntype EmptyResultQueryType = typeof EmptyResultQuery;\n\ntype ScopeOperator = '$and' | '$or';\n\nexport class Scope {\n\tprivate _queries: FilterQuery[] = [];\n\n\tprivate _operator: ScopeOperator;\n\n\tconstructor(operator: ScopeOperator = '$and') {\n\t\tthis._operator = operator;\n\t}\n\n\tget query(): FilterQuery {\n\t\tif (this._queries.length === 0) {\n\t\t\treturn EmptyResultQuery as FilterQuery;\n\t\t}\n\t\tconst query = this._queries.length > 1 ? { [this._operator]: this._queries } : this._queries[0];\n\t\treturn query as FilterQuery;\n\t}\n\n\taddQuery(query: FilterQuery | EmptyResultQueryType): void {\n\t\tthis._queries.push(query);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServerConsole.html":{"url":"classes/ServerConsole.html","title":"class - ServerConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServerConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/server.console.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getInOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consoleWriter: ConsoleWriterService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/console/server.console.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consoleWriter\n                                                  \n                                                        \n                                                                        ConsoleWriterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'test', description: 'sample test output'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:11\n                \n            \n\n\n            \n                \n                    test method for console output\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInOut\n                        \n                    \n                \n            \n            \n                \ngetInOut(whatever: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'out ', description: 'return input args'})\n                \n            \n\n            \n                \n                    Defined in apps/server/src/console/server.console.ts:17\n                \n            \n\n\n            \n                \n                    test method for console input\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    whatever\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Command, Console } from 'nestjs-console';\nimport { ConsoleWriterService } from '@shared/infra/console';\n\n@Console({ command: 'server', description: 'sample server console' })\nexport class ServerConsole {\n\tconstructor(private consoleWriter: ConsoleWriterService) {}\n\n\t/** test method for console output */\n\t@Command({ command: 'test', description: 'sample test output' })\n\tgetHello(): void {\n\t\tthis.consoleWriter.info('Schulcloud Server API');\n\t}\n\n\t/** test method for console input */\n\t@Command({ command: 'out ', description: 'return input args' })\n\tgetInOut(whatever: string): void {\n\t\tthis.consoleWriter.info(`input was: ${whatever}`);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerConsoleModule.html":{"url":"modules/ServerConsoleModule.html","title":"module - ServerConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerConsoleModule_imports\n\n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerConsoleModule -->\n\nFilesModule->ServerConsoleModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConsoleWriterModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ManagementModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConsoleModule } from 'nestjs-console';\nimport { ConsoleWriterModule } from '@shared/infra/console/console-writer/console-writer.module';\nimport { ManagementModule } from '../modules/management/management.module';\nimport { FilesModule } from '../modules/files/files.module';\nimport { ServerConsole } from './server.console';\n\n@Module({\n\timports: [ManagementModule, ConsoleModule, ConsoleWriterModule, FilesModule],\n\tproviders: [\n\t\t/** add console services as providers */\n\t\tServerConsole,\n\t],\n})\nexport class ServerConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ServerController.html":{"url":"controllers/ServerController.html","title":"controller - ServerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ServerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/server.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/server.controller.ts:7\n                \n            \n\n\n            \n                \n                    default route to test public access\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller()\nexport class ServerController {\n\t/** default route to test public access */\n\t@Get()\n\tgetHello(): string {\n\t\treturn 'Schulcloud Server API';\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServerModule.html":{"url":"modules/ServerModule.html","title":"module - ServerModule","body":"\n                   \n\n\n\n\n    Modules\n    ServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nServerModule -->\n\nFilesModule->ServerModule\n\n\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nNewsModule\n\nNewsModule\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/server.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ServerController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            LearnroomModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            NewsModule\n                        \n                        \n                            TaskModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, NotFoundException } from '@nestjs/common';\nimport { MikroOrmModule } from '@mikro-orm/nestjs';\nimport { Dictionary, IPrimaryKey } from '@mikro-orm/core';\nimport { Configuration } from '@hpi-schul-cloud/commons';\nimport { ALL_ENTITIES } from '@shared/domain';\nimport { AuthModule } from './modules/authentication/auth.module';\nimport { ServerController } from './server.controller';\nimport { DB_URL, DB_USERNAME, DB_PASSWORD } from './config';\n\nimport { CoreModule } from './core/core.module';\nimport { TaskModule } from './modules/task/task.module';\nimport { UserModule } from './modules/user/user.module';\nimport { NewsModule } from './modules/news/news.module';\nimport { MailModule } from './modules/mail/mail.module';\nimport { FilesModule } from './modules/files/files.module';\n\nimport { LearnroomModule } from './modules/learnroom/learnroom.module';\n\n@Module({\n\timports: [\n\t\tAuthModule,\n\t\tTaskModule,\n\t\tNewsModule,\n\t\tUserModule,\n\t\tLearnroomModule,\n\t\tMailModule.forRoot({\n\t\t\turi: Configuration.get('RABBITMQ_URI') as string,\n\t\t\texchange: Configuration.get('MAIL_SEND_EXCHANGE') as string,\n\t\t\troutingKey: Configuration.get('MAIL_SEND_ROUTING_KEY') as string,\n\t\t}),\n\t\tFilesModule,\n\n\t\tMikroOrmModule.forRoot({\n\t\t\ttype: 'mongo',\n\t\t\t// TODO add mongoose options as mongo options (see database.js)\n\t\t\tclientUrl: DB_URL,\n\t\t\tpassword: DB_PASSWORD,\n\t\t\tuser: DB_USERNAME,\n\t\t\tentities: ALL_ENTITIES,\n\t\t\tfindOneOrFailHandler: (entityName: string, where: Dictionary | IPrimaryKey) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t\t\treturn new NotFoundException(`The requested ${entityName}: ${where} has not been found.`);\n\t\t\t},\n\t\t\t// debug: true, // use it for locally debugging of querys\n\t\t}),\n\t\tCoreModule,\n\t],\n\tcontrollers: [ServerController],\n})\nexport class ServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StorageProvider.html":{"url":"classes/StorageProvider.html","title":"class - StorageProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StorageProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/storageprovider.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessKeyId\n                            \n                            \n                                endpointUrl\n                            \n                            \n                                    Optional\n                                region\n                            \n                            \n                                secretAccessKey\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IStorageProviderProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IStorageProviderProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessKeyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpointUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        secretAccessKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({fieldName: 'secretAccessKey', type: EncryptedStringType})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/storageprovider.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { EncryptedStringType } from '@shared/repo/types/EncryptedString.type';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\ninterface IStorageProviderProperties {\n\tendpointUrl: string;\n\taccessKeyId: string;\n\tsecretAccessKey: string;\n\tregion?: string;\n}\n\n@Entity({ tableName: 'storageproviders' })\nexport class StorageProvider extends BaseEntityWithTimestamps {\n\t@Property()\n\tendpointUrl!: string;\n\n\t@Property()\n\taccessKeyId!: string;\n\n\t@Property({ fieldName: 'secretAccessKey', type: EncryptedStringType })\n\tsecretAccessKey!: string;\n\n\t@Property()\n\tregion?: string;\n\n\tconstructor(props: IStorageProviderProperties) {\n\t\tsuper();\n\t\tthis.endpointUrl = props.endpointUrl;\n\t\tthis.accessKeyId = props.accessKeyId;\n\t\tthis.secretAccessKey = props.secretAccessKey;\n\t\tthis.region = props.region;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageProviderRepo.html":{"url":"injectables/StorageProviderRepo.html","title":"injectable - StorageProviderRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StorageProviderRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/files/repo/storageprovider.repo.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseRepo\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                flush\n                            \n                            \n                                persist\n                            \n                            \n                                persistAll\n                            \n                            \n                                    Async\n                                persistAllAndFlush\n                            \n                            \n                                    Async\n                                persistAndFlush\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                    Async\n                                removeAllAndFlush\n                            \n                            \n                                    Async\n                                removeAndFlush\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/files/repo/storageprovider.repo.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        flush\n                        \n                    \n                \n            \n            \n                \n                    \n                    flush()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persist\n                        \n                    \n                \n            \n            \n                \npersist(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        persistAll\n                        \n                    \n                \n            \n            \n                \npersistAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        persistAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    persistAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeAll\n                        \n                    \n                \n            \n            \n                \nremoveAll(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAllAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAllAndFlush(entities: T[])\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeAndFlush\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeAndFlush(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseRepo\n\n                \n            \n            \n                \n                        Defined in         BaseRepo:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BaseRepo } from '@shared/repo/base.repo';\nimport { StorageProvider, EntityId } from '@shared/domain';\n\n@Injectable()\nexport class StorageProviderRepo extends BaseRepo {\n\tasync findOneById(id: EntityId): Promise {\n\t\tconst storageProvider = await this.em.findOneOrFail(StorageProvider, id);\n\t\treturn storageProvider;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/submission.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comment\n                            \n                            \n                                    Optional\n                                courseGroup\n                            \n                            \n                                grade\n                            \n                            \n                                gradeComment\n                            \n                            \n                                gradeFiles\n                            \n                            \n                                student\n                            \n                            \n                                studentFiles\n                            \n                            \n                                task\n                            \n                            \n                                teamMembers\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isGraded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ISubmissionProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ISubmissionProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CourseGroup\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('CourseGroup', {fieldName: 'courseGroupId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeComment\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gradeFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'gradeFileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        student\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'studentId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentFiles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('File', undefined, {fieldName: 'fileIds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Task', {fieldName: 'homeworkId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teamMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'teamMembers'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/submission.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isGraded\n                        \n                    \n                \n            \n            \n                \nisGraded()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/submission.entity.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, ManyToOne, Collection, Property, ManyToMany } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { CourseGroup } from './coursegroup.entity';\nimport type { User } from './user.entity';\nimport type { File } from './file.entity';\nimport type { Task } from './task.entity';\n\ninterface ISubmissionProperties {\n\ttask: Task;\n\tstudent: User;\n\tcourseGroup?: CourseGroup[];\n\tteamMembers?: User[];\n\tcomment: string;\n\tstudentFiles?: File[];\n\tgrade?: number;\n\tgradeComment?: string;\n\tgradeFiles?: File[];\n}\n\n@Entity({ tableName: 'submissions' })\nexport class Submission extends BaseEntityWithTimestamps {\n\t@ManyToOne('Task', { fieldName: 'homeworkId' })\n\ttask: Task;\n\n\t@ManyToOne('User', { fieldName: 'studentId' })\n\tstudent: User;\n\n\t@ManyToOne('CourseGroup', { fieldName: 'courseGroupId' })\n\tcourseGroup?: CourseGroup;\n\n\t@ManyToMany('User', undefined, { fieldName: 'teamMembers' })\n\tteamMembers = new Collection(this);\n\n\t/* ***** student uploads ***** */\n\t@Property()\n\tcomment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'fileIds' })\n\tstudentFiles = new Collection(this);\n\n\t/* ***** teacher uploads ***** */\n\t@Property()\n\tgrade: number | null;\n\n\t@Property()\n\tgradeComment: string | null;\n\n\t@ManyToMany('File', undefined, { fieldName: 'gradeFileIds' })\n\tgradeFiles = new Collection(this);\n\n\tisGraded(): boolean {\n\t\tconst isGraded =\n\t\t\t(typeof this.grade === 'number' && this.grade >= 0) ||\n\t\t\t(typeof this.gradeComment === 'string' && this.gradeComment.length > 0) ||\n\t\t\t(this.gradeFiles !== undefined && this.gradeFiles.length > 0);\n\t\treturn isGraded;\n\t}\n\n\tconstructor(props: ISubmissionProperties) {\n\t\tsuper();\n\t\tthis.student = props.student;\n\t\tthis.comment = props.comment;\n\t\tthis.task = props.task;\n\n\t\tthis.grade = props.grade || null;\n\t\tthis.gradeComment = props.gradeComment || null;\n\n\t\tconst { courseGroup, teamMembers, studentFiles, gradeFiles } = props;\n\t\tObject.assign(this, { courseGroup, teamMembers, studentFiles, gradeFiles });\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubmissionRepo.html":{"url":"injectables/SubmissionRepo.html","title":"injectable - SubmissionRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SubmissionRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/submission.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                byUserIdQuery\n                            \n                            \n                                    Async\n                                findAllByTaskIds\n                            \n                            \n                                    Async\n                                findAllByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/submission.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        byUserIdQuery\n                        \n                    \n                \n            \n            \n                \n                    \n                    byUserIdQuery(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByTaskIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByTaskIds(taskIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUserId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUserId(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/submission.repo.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { FilterQuery } from '@mikro-orm/core';\nimport { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\n\nimport { Counted, EntityId, CourseGroup, Submission } from '@shared/domain';\n\n// TODO: add scope helper\n\n@Injectable()\nexport class SubmissionRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findAllByTaskIds(taskIds: EntityId[]): Promise> {\n\t\tconst [submissions, count] = await this.em.findAndCount(Submission, {\n\t\t\ttask: { $in: taskIds },\n\t\t});\n\n\t\treturn [submissions, count];\n\t}\n\n\tasync findAllByUserId(userId: EntityId): Promise> {\n\t\tconst result = await this.em.findAndCount(Submission, await this.byUserIdQuery(userId));\n\t\treturn result;\n\t}\n\n\tprivate async byUserIdQuery(userId: EntityId): Promise> {\n\t\tconst courseGroupsOfUser = await this.em.find(CourseGroup, { students: userId });\n\t\tconst query = { $or: [{ student: userId }, { teamMembers: userId }, { courseGroup: { $in: courseGroupsOfUser } }] };\n\t\treturn query;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymetricKeyEncryptionService.html":{"url":"injectables/SymetricKeyEncryptionService.html","title":"injectable - SymetricKeyEncryptionService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SymetricKeyEncryptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/infra/encryption/encryption.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                decrypt\n                            \n                            \n                                    Public\n                                encrypt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        decrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    decrypt(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        encrypt\n                        \n                    \n                \n            \n            \n                \n                    \n                    encrypt(data: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/infra/encryption/encryption.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import CryptoJs from 'crypto-js';\n\nimport { Inject, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class SymetricKeyEncryptionService {\n\tconstructor(@Inject('SYMMETRIC_CIPHER_KEY') private readonly key: string) {}\n\n\tpublic encrypt(data: string): string {\n\t\treturn CryptoJs.AES.encrypt(data, this.key).toString();\n\t}\n\n\tpublic decrypt(data: string): string {\n\t\treturn CryptoJs.AES.decrypt(data, this.key).toString(CryptoJs.enc.Utf8);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoMapper.html":{"url":"classes/TargetInfoMapper.html","title":"class - TargetInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/target-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(target: NewsTarget)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/target-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                                NewsTarget\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TargetInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NewsTarget } from '@shared/domain/types/news.types';\nimport { TargetInfoResponse } from '../controller/dto/target-info.response';\n\nexport class TargetInfoMapper {\n\tstatic mapToResponse(target: NewsTarget): TargetInfoResponse {\n\t\tconst dto = new TargetInfoResponse();\n\t\tdto.id = target.id;\n\t\tdto.name = target.name;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TargetInfoResponse.html":{"url":"classes/TargetInfoResponse.html","title":"class - TargetInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TargetInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/target-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the Target entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/target-info.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TargetInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the Target entity',\n\t})\n\tid: string;\n\n\t@ApiProperty({\n\t\tdescription: 'The name of the Target entity',\n\t})\n\tname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/task.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                closed\n                            \n                            \n                                    Optional\n                                course\n                            \n                            \n                                    Optional\n                                dueDate\n                            \n                            \n                                    Optional\n                                lesson\n                            \n                            \n                                name\n                            \n                            \n                                private\n                            \n                            \n                                submissions\n                            \n                            \n                                    Optional\n                                teacher\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDescriptions\n                            \n                            \n                                isDraft\n                            \n                            \n                                isSubstitutionTeacher\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITaskProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:85\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        ITaskProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany('User', undefined, {fieldName: 'archived'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        course\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Course', {fieldName: 'courseId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dueDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Lesson\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Lesson', {fieldName: 'lessonId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submissions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany('Submission', 'task')\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        teacher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'teacherId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/task.entity.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDescriptions\n                        \n                    \n                \n            \n            \n                \ngetDescriptions()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TaskParentDescriptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDraft\n                        \n                    \n                \n            \n            \n                \nisDraft()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSubstitutionTeacher\n                        \n                    \n                \n            \n            \n                \nisSubstitutionTeacher(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/domain/entity/task.entity.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToOne, OneToMany, ManyToMany, Property } from '@mikro-orm/core';\n\nimport { EntityId } from '../types';\n\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { Lesson } from './lesson.entity';\nimport type { Submission } from './submission.entity';\nimport { User } from './user.entity';\n\ninterface ITaskProperties {\n\tname: string;\n\tavailableDate?: Date;\n\tdueDate?: Date;\n\tprivate?: boolean;\n\tteacher?: User;\n\tcourse?: Course;\n\tlesson?: Lesson;\n\tsubmissions?: Submission[];\n\tclosed?: User[];\n}\n\nexport type TaskParentDescriptions = { name: string; description: string; color: string };\n\n@Entity({ tableName: 'homeworks' })\nexport class Task extends BaseEntityWithTimestamps {\n\t@Property()\n\tname: string;\n\n\t@Property()\n\tavailableDate?: Date;\n\n\t@Property()\n\tdueDate?: Date;\n\n\t@Property()\n\tprivate = true;\n\n\t@ManyToOne('User', { fieldName: 'teacherId' })\n\tteacher?: User;\n\n\t@ManyToOne('Course', { fieldName: 'courseId' })\n\tcourse?: Course;\n\n\t@ManyToOne('Lesson', { fieldName: 'lessonId' })\n\tlesson?: Lesson; // In database exist also null, but it can not set.\n\n\t@OneToMany('Submission', 'task')\n\tsubmissions = new Collection(this);\n\n\t// TODO: is mapped to boolean in future\n\t@ManyToMany('User', undefined, { fieldName: 'archived' })\n\tclosed = new Collection(this);\n\n\tisDraft(): boolean {\n\t\t// private can be undefined in the database\n\t\treturn !!this.private;\n\t}\n\n\tisSubstitutionTeacher(userId: EntityId): boolean {\n\t\tif (!this.course) {\n\t\t\treturn false;\n\t\t}\n\t\t// TODO: check if it is loaded if not load it ...isInitialized() is only work for collections, await ...init() also\n\t\tconst isSubstitutionTeacher = this.course.isSubstitutionTeacher(userId);\n\t\treturn isSubstitutionTeacher;\n\t}\n\n\tgetDescriptions(): TaskParentDescriptions {\n\t\tlet descriptions: TaskParentDescriptions;\n\t\tif (this.course) {\n\t\t\tdescriptions = {\n\t\t\t\tname: this.course.name,\n\t\t\t\tdescription: this.lesson ? this.lesson.name : '',\n\t\t\t\tcolor: this.course.color,\n\t\t\t};\n\t\t} else {\n\t\t\tdescriptions = {\n\t\t\t\tname: '',\n\t\t\t\tdescription: '',\n\t\t\t\tcolor: '#ACACAC',\n\t\t\t};\n\t\t}\n\t\treturn descriptions;\n\t}\n\n\tconstructor(props: ITaskProperties) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t\tthis.availableDate = props.availableDate;\n\t\tthis.dueDate = props.dueDate;\n\t\tif (props.private !== undefined) this.private = props.private;\n\t\tthis.teacher = props.teacher;\n\t\tthis.course = props.course;\n\t\tthis.lesson = props.lesson;\n\t\tthis.submissions.set(props.submissions || []);\n\t\t// TODO: is replaced with boolean in future\n\t\tthis.closed.set(props.closed || []);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskAuthorizationService.html":{"url":"injectables/TaskAuthorizationService.html","title":"injectable - TaskAuthorizationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskAuthorizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.authorization.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPermittedCourses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseRepo: CourseRepo)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseRepo\n                                                  \n                                                        \n                                                                        CourseRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPermittedCourses\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPermittedCourses(userId: EntityId, permission: TaskParentPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.authorization.service.ts:17\n                \n            \n\n\n            \n                \n                    Important user group operations are only a temporary solution until we have established groups\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskParentPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { CourseRepo } from '@src/repositories';\n\nexport enum TaskParentPermission {\n\tread,\n\twrite,\n}\n\n@Injectable()\nexport class TaskAuthorizationService {\n\tconstructor(private readonly courseRepo: CourseRepo) {}\n\n\t/**\n\t * Important user group operations are only a temporary solution until we have established groups\n\t */\n\tasync getPermittedCourses(userId: EntityId, permission: TaskParentPermission): Promise {\n\t\t// courseGroups are missing\n\t\t// lessons are missing -> only search for hidden: false,\n\t\tconst [permittedCourses] =\n\t\t\tpermission === TaskParentPermission.write\n\t\t\t\t? await this.courseRepo.findAllForTeacher(userId)\n\t\t\t\t: await this.courseRepo.findAllForStudent(userId);\n\n\t\tconst entityIds = permittedCourses.map((o) => o.id);\n\t\treturn entityIds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tasks\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, paginationQuery: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/task/controller/task.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    paginationQuery\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { ICurrentUser } from '@shared/domain';\nimport { PaginationQuery } from '@shared/controller/';\nimport { Controller, Get, Query } from '@nestjs/common';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { TaskUC } from '../uc/task.uc';\nimport { TaskListResponse } from './dto';\nimport { TaskMapper } from '../mapper/task.mapper';\n\n@ApiTags('Task')\n@Authenticate('jwt')\n@Controller('tasks')\nexport class TaskController {\n\tconstructor(private readonly taskUc: TaskUC) {}\n\n\t@Get()\n\tasync findAll(\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() paginationQuery: PaginationQuery\n\t): Promise {\n\t\tconst [tasksWithStatus, total] = await this.taskUc.findAll(currentUser, paginationQuery);\n\t\tconst taskresponses = tasksWithStatus.map((taskWithStatus) => {\n\t\t\treturn TaskMapper.mapToResponse(taskWithStatus);\n\t\t});\n\t\tconst { skip, limit } = paginationQuery;\n\t\tconst result = new TaskListResponse(taskresponses, total, skip, limit);\n\t\treturn result;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskListResponse.html":{"url":"classes/TaskListResponse.html","title":"class - TaskListResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskListResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PaginationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                skip\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    TaskResponse[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        skip\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TaskResponse[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:55\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'number'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         PaginationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         PaginationResponse:14\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse, DecodeHtmlEntities } from '@shared/controller';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiProperty()\n\tavailableDate?: Date;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t\tisDraft: boolean;\n\t\tisSubstitutionTeacher: boolean;\n\t};\n}\n\nexport class TaskListResponse extends PaginationResponse {\n\tconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [TaskResponse] })\n\tdata: TaskResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskMapper.html":{"url":"classes/TaskMapper.html","title":"class - TaskMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/mapper/task.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(taskWithStatus: TaskWithStatusVo)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/mapper/task.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskWithStatus\n                                    \n                                                TaskWithStatusVo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TaskWithStatusVo } from '@shared/domain';\nimport { TaskResponse } from '../controller/dto';\n\nexport class TaskMapper {\n\tstatic mapToResponse(taskWithStatus: TaskWithStatusVo): TaskResponse {\n\t\tconst { task, status } = taskWithStatus;\n\t\tconst dto = new TaskResponse();\n\n\t\tdto.id = task.id;\n\t\tdto.name = task.name;\n\t\tdto.availableDate = task.availableDate;\n\t\tdto.duedate = task.dueDate;\n\t\tdto.createdAt = task.createdAt;\n\t\tdto.updatedAt = task.updatedAt;\n\t\tdto.status = {\n\t\t\tsubmitted: status.submitted,\n\t\t\tmaxSubmissions: status.maxSubmissions,\n\t\t\tgraded: status.graded,\n\t\t\tisDraft: status.isDraft,\n\t\t\tisSubstitutionTeacher: status.isSubstitutionTeacher,\n\t\t};\n\n\t\tconst taskDesc = task.getDescriptions();\n\t\tdto.courseName = taskDesc.name;\n\t\tdto.displayColor = taskDesc.color;\n\t\tdto.description = taskDesc.description;\n\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nCourseRepo\n\nCourseRepo\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CourseRepo\n                        \n                        \n                            LessonRepo\n                        \n                        \n                            TaskAuthorizationService\n                        \n                        \n                            TaskRepo\n                        \n                        \n                            TaskUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { CourseRepo } from '@src/repositories';\n\nimport { LessonRepo } from '@shared/repo';\nimport { TaskController } from './controller/task.controller';\nimport { TaskUC } from './uc';\nimport { TaskRepo } from './repo';\nimport { TaskAuthorizationService } from './uc/task.authorization.service';\n\n@Module({\n\timports: [],\n\tcontrollers: [TaskController],\n\tproviders: [TaskUC, TaskRepo, TaskAuthorizationService, LessonRepo, CourseRepo],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskRepo.html":{"url":"injectables/TaskRepo.html","title":"injectable - TaskRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllByParentIds\n                            \n                            \n                                    Private\n                                    Async\n                                findTasksAndCount\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/repo/task.repo.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByParentIds\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByParentIds(parentIds: literal type, filters?: literal type, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:24\n                \n            \n\n\n            \n                \n                    Find all tasks by their parents which can be any of\n\na teacher who owns the task\na list of courses\na list of lessons\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    parentIds\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        parentIds for teacher, courses and lesson\n\n                                    \n                                \n                                \n                                    filters\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        filters\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        pagination, sorting\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findTasksAndCount\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTasksAndCount(query: FilterQuery, options?: IFindOptions)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task.repo.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                IFindOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityManager, FilterQuery, QueryOrderMap } from '@mikro-orm/core';\n\nimport { EntityId, IFindOptions, Task } from '@shared/domain';\nimport { Counted } from '@shared/domain/types';\n\nimport { TaskScope } from './task-scope';\n\n@Injectable()\nexport class TaskRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\t/**\n\t * Find all tasks by their parents which can be any of\n\t * - a teacher who owns the task\n\t * - a list of courses\n\t * - a list of lessons\n\t *\n\t * @param parentIds parentIds for teacher, courses and lesson\n\t * @param filters filters\n\t * @param options pagination, sorting\n\t * @returns\n\t */\n\tasync findAllByParentIds(\n\t\tparentIds: {\n\t\t\tteacherId?: EntityId;\n\t\t\tcourseIds?: EntityId[];\n\t\t\tlessonIds?: EntityId[];\n\t\t},\n\t\tfilters?: { draft?: boolean; afterDueDateOrNone?: Date; closed?: EntityId },\n\t\toptions?: IFindOptions\n\t): Promise> {\n\t\tconst scope = new TaskScope();\n\n\t\tconst parentIdScope = new TaskScope('$or');\n\n\t\tif (parentIds.teacherId) {\n\t\t\tparentIdScope.byTeacherId(parentIds.teacherId);\n\t\t}\n\n\t\tif (parentIds.courseIds) {\n\t\t\tparentIdScope.byCourseIds(parentIds.courseIds);\n\t\t}\n\n\t\tif (parentIds.lessonIds) {\n\t\t\tparentIdScope.byLessonIds(parentIds.lessonIds);\n\t\t}\n\n\t\tscope.addQuery(parentIdScope.query);\n\n\t\tif (filters?.closed) {\n\t\t\tscope.byClosed(filters.closed);\n\t\t}\n\n\t\tif (filters?.draft !== undefined) {\n\t\t\tscope.byDraft(filters.draft);\n\t\t}\n\n\t\tif (filters?.afterDueDateOrNone !== undefined) {\n\t\t\tscope.afterDueDateOrNone(filters.afterDueDateOrNone);\n\t\t}\n\n\t\tconst countedTaskList = await this.findTasksAndCount(scope.query, options);\n\t\treturn countedTaskList;\n\t}\n\n\tprivate async findTasksAndCount(query: FilterQuery, options?: IFindOptions): Promise> {\n\t\tconst { pagination, order } = options || {};\n\t\tconst [taskEntities, count] = await this.em.findAndCount(Task, query, {\n\t\t\toffset: pagination?.skip,\n\t\t\tlimit: pagination?.limit,\n\t\t\torderBy: order as QueryOrderMap,\n\t\t});\n\n\t\tawait this.em.populate(taskEntities, ['course', 'lesson', 'submissions']);\n\t\treturn [taskEntities, count];\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskResponse.html":{"url":"classes/TaskResponse.html","title":"class - TaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/controller/dto/task.response.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for returning a task document via api.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                availableDate\n                            \n                            \n                                    Optional\n                                courseName\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                displayColor\n                            \n                            \n                                    Optional\n                                duedate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        availableDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        courseName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        displayColor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        duedate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@DecodeHtmlEntities()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/task/controller/dto/task.response.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { PaginationResponse, DecodeHtmlEntities } from '@shared/controller';\n\n/**\n * DTO for returning a task document via api.\n */\nexport class TaskResponse {\n\t@ApiProperty()\n\t@DecodeHtmlEntities()\n\tname: string;\n\n\t@ApiProperty()\n\tavailableDate?: Date;\n\n\t@ApiProperty()\n\tduedate?: Date;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tcourseName?: string;\n\n\t@ApiPropertyOptional()\n\t@DecodeHtmlEntities()\n\tdescription?: string;\n\n\t@ApiPropertyOptional()\n\tdisplayColor?: string;\n\n\t@ApiProperty()\n\tid: string;\n\n\t@ApiProperty()\n\tcreatedAt: Date;\n\n\t@ApiProperty()\n\tupdatedAt: Date;\n\n\t@ApiProperty()\n\tstatus: {\n\t\tsubmitted?: number;\n\t\tmaxSubmissions?: number;\n\t\tgraded?: number;\n\t\tisDraft: boolean;\n\t\tisSubstitutionTeacher: boolean;\n\t};\n}\n\nexport class TaskListResponse extends PaginationResponse {\n\tconstructor(data: TaskResponse[], total: number, skip?: number, limit?: number) {\n\t\tsuper(total, skip, limit);\n\t\tthis.data = data;\n\t}\n\n\t@ApiProperty({ type: [TaskResponse] })\n\tdata: TaskResponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskScope.html":{"url":"classes/TaskScope.html","title":"class - TaskScope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskScope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/repo/task-scope.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Scope\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _operator\n                            \n                            \n                                    Private\n                                _queries\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterDueDateOrNone\n                            \n                            \n                                byClosed\n                            \n                            \n                                byCourseIds\n                            \n                            \n                                byDraft\n                            \n                            \n                                byLessonIds\n                            \n                            \n                                byTeacherId\n                            \n                            \n                                addQuery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _operator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScopeOperator\n\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _queries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FilterQuery[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         Scope\n\n                            \n                        \n                    \n                        \n                                Defined in         Scope:9\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterDueDateOrNone\n                        \n                    \n                \n            \n            \n                \nafterDueDateOrNone(dueDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dueDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byClosed\n                        \n                    \n                \n            \n            \n                \nbyClosed(userId?: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byCourseIds\n                        \n                    \n                \n            \n            \n                \nbyCourseIds(courseIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    courseIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byDraft\n                        \n                    \n                \n            \n            \n                \nbyDraft(isDraft: boolean)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDraft\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byLessonIds\n                        \n                    \n                \n            \n            \n                \nbyLessonIds(lessonIds: EntityId[])\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lessonIds\n                                    \n                                                EntityId[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        byTeacherId\n                        \n                    \n                \n            \n            \n                \nbyTeacherId(teacherId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/repo/task-scope.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teacherId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskScope\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addQuery\n                        \n                    \n                \n            \n            \n                \naddQuery(query: FilterQuery | EmptyResultQueryType)\n                \n            \n\n\n            \n                \n                    Inherited from         Scope\n\n                \n            \n            \n                \n                        Defined in         Scope:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FilterQuery | EmptyResultQueryType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EntityId, Task } from '@shared/domain';\nimport { Scope } from '@shared/repo';\n\nexport class TaskScope extends Scope {\n\t// TODO: parameter > isClosed: boolean\n\tbyClosed(userId?: EntityId): TaskScope {\n\t\tthis.addQuery({ closed: { $ne: userId } });\n\n\t\treturn this;\n\t}\n\n\tbyTeacherId(teacherId: EntityId): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ teacher: teacherId }, { course: null }, { lesson: null }],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyCourseIds(courseIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({\n\t\t\t$and: [{ course: { $in: courseIds } }, { lesson: null }],\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tbyLessonIds(lessonIds: EntityId[]): TaskScope {\n\t\tthis.addQuery({ lesson: { $in: lessonIds } });\n\n\t\treturn this;\n\t}\n\n\tbyDraft(isDraft: boolean): TaskScope {\n\t\t// FIXME - WE DON'T WANT THIS!!! NON-OPTIONAL BOOLEAN PROPERTIES HAVE TO BE DEFINED.\n\t\t// additionally handle undefined and null as false\n\t\tconst query = isDraft ? { private: { $eq: true } } : { private: { $ne: true } };\n\t\tthis.addQuery(query);\n\n\t\treturn this;\n\t}\n\n\tafterDueDateOrNone(dueDate: Date): TaskScope {\n\t\tthis.addQuery({ $or: [{ dueDate: { $gte: dueDate } }, { dueDate: null }] });\n\n\t\treturn this;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskUC.html":{"url":"injectables/TaskUC.html","title":"injectable - TaskUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TaskUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/task/uc/task.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                computeTaskStatusForStudent\n                            \n                            \n                                    Private\n                                computeTaskStatusForTeacher\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForStudent\n                            \n                            \n                                    Private\n                                    Async\n                                findAllForTeacher\n                            \n                            \n                                    Private\n                                getDefaultMaxDueDate\n                            \n                            \n                                    Private\n                                hasTaskDashboardPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(taskRepo: TaskRepo, lessonRepo: LessonRepo, authorizationService: TaskAuthorizationService)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/task/uc/task.uc.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        taskRepo\n                                                  \n                                                        \n                                                                        TaskRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lessonRepo\n                                                  \n                                                        \n                                                                        LessonRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authorizationService\n                                                  \n                                                        \n                                                                        TaskAuthorizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        computeTaskStatusForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTaskStatusForStudent(task: Task, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        computeTaskStatusForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeTaskStatusForTeacher(task: Task, userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                                Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TaskWithStatusVo\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(currentUser: ICurrentUser, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForStudent\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForStudent(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findAllForTeacher\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeacher(userId: EntityId, pagination: IPagination)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                IPagination\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDefaultMaxDueDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDefaultMaxDueDate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hasTaskDashboardPermission\n                        \n                    \n                \n            \n            \n                \n                    \n                    hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/task/uc/task.uc.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    permission\n                                    \n                                                TaskDashBoardPermission\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { EntityId, IPagination, Counted, ICurrentUser, SortOrder, Task, TaskWithStatusVo } from '@shared/domain';\n\nimport { LessonRepo } from '@shared/repo';\nimport { TaskRepo } from '../repo';\nimport { TaskAuthorizationService, TaskParentPermission } from './task.authorization.service';\n\nexport enum TaskDashBoardPermission {\n\tteacherDashboard = 'TASK_DASHBOARD_TEACHER_VIEW_V3',\n\tstudentDashboard = 'TASK_DASHBOARD_VIEW_V3',\n}\n@Injectable()\nexport class TaskUC {\n\tconstructor(\n\t\tprivate readonly taskRepo: TaskRepo,\n\t\tprivate readonly lessonRepo: LessonRepo,\n\t\tprivate readonly authorizationService: TaskAuthorizationService\n\t) {}\n\n\t// TODO replace curentUser with userId. this requires that permissions are loaded inside the use case by authorization service\n\tasync findAll(currentUser: ICurrentUser, pagination: IPagination): Promise> {\n\t\tlet response: Counted;\n\n\t\tif (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.studentDashboard)) {\n\t\t\tresponse = await this.findAllForStudent(currentUser.userId, pagination);\n\t\t} else if (this.hasTaskDashboardPermission(currentUser, TaskDashBoardPermission.teacherDashboard)) {\n\t\t\tresponse = await this.findAllForTeacher(currentUser.userId, pagination);\n\t\t} else {\n\t\t\tthrow new UnauthorizedException();\n\t\t}\n\n\t\treturn response;\n\t}\n\n\tprivate async findAllForStudent(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst courseIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.read);\n\t\tconst visibleLessons = await this.lessonRepo.findAllByCourseIds(courseIds, { hidden: false });\n\t\tconst dueDate = this.getDefaultMaxDueDate();\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tcourseIds,\n\t\t\t\tlessonIds: visibleLessons.map((o) => o.id),\n\t\t\t},\n\t\t\t{ draft: false, afterDueDateOrNone: dueDate, closed: userId },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.asc },\n\t\t\t}\n\t\t);\n\n\t\tconst computedTasks = tasks.map((task) => this.computeTaskStatusForStudent(task, userId));\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tprivate async findAllForTeacher(userId: EntityId, pagination: IPagination): Promise> {\n\t\tconst courseIds = await this.authorizationService.getPermittedCourses(userId, TaskParentPermission.write);\n\t\tconst visibleLessons = await this.lessonRepo.findAllByCourseIds(courseIds, { hidden: false });\n\n\t\tconst [tasks, total] = await this.taskRepo.findAllByParentIds(\n\t\t\t{\n\t\t\t\tteacherId: userId,\n\t\t\t\tcourseIds,\n\t\t\t\tlessonIds: visibleLessons.map((o) => o.id),\n\t\t\t},\n\t\t\t{ closed: userId },\n\t\t\t{\n\t\t\t\tpagination,\n\t\t\t\torder: { dueDate: SortOrder.desc },\n\t\t\t}\n\t\t);\n\n\t\tconst computedTasks = tasks.map((task) => this.computeTaskStatusForTeacher(task, userId));\n\n\t\treturn [computedTasks, total];\n\t}\n\n\tprivate hasTaskDashboardPermission(currentUser: ICurrentUser, permission: TaskDashBoardPermission): boolean {\n\t\tconst hasPermission = currentUser.user.permissions.includes(permission);\n\t\treturn hasPermission;\n\t}\n\n\tprivate computeTaskStatusForStudent(task: Task, userId: EntityId): TaskWithStatusVo {\n\t\tconst studentSubmissions = task.submissions.getItems().filter((submission) => submission.student.id === userId);\n\n\t\tconst submitted = studentSubmissions.length > 0 ? 1 : 0;\n\t\tconst graded = studentSubmissions.filter((submission) => submission.isGraded()).length;\n\t\tconst maxSubmissions = 1;\n\t\tconst isDraft = false;\n\t\tconst isSubstitutionTeacher = false;\n\n\t\tconst valueObject = new TaskWithStatusVo(task, {\n\t\t\tsubmitted,\n\t\t\tmaxSubmissions,\n\t\t\tgraded,\n\t\t\tisDraft,\n\t\t\tisSubstitutionTeacher,\n\t\t});\n\n\t\treturn valueObject;\n\t}\n\n\tprivate computeTaskStatusForTeacher(task: Task, userId: EntityId): TaskWithStatusVo {\n\t\tconst submittedStudentIds = task.submissions.getItems().map((submission) => submission.student.id);\n\n\t\t// unique by studentId\n\t\tconst submitted = [...new Set(submittedStudentIds)].length;\n\n\t\tconst gradedStudentIds = task.submissions\n\t\t\t.getItems()\n\t\t\t.filter((submission) => submission.isGraded())\n\t\t\t.map((submission) => submission.student.id);\n\n\t\t// unique by studentId\n\t\tconst graded = [...new Set(gradedStudentIds)].length;\n\t\tconst maxSubmissions = task.course ? task.course.getNumberOfStudents() : 0;\n\t\tconst isDraft = task.isDraft();\n\t\tconst isSubstitutionTeacher = task.isSubstitutionTeacher(userId);\n\n\t\tconst valueObject = new TaskWithStatusVo(task, {\n\t\t\tisSubstitutionTeacher,\n\t\t\tsubmitted,\n\t\t\tmaxSubmissions,\n\t\t\tgraded,\n\t\t\tisDraft,\n\t\t});\n\n\t\treturn valueObject;\n\t}\n\n\tprivate getDefaultMaxDueDate(): Date {\n\t\tconst oneWeekAgo = new Date();\n\t\toneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\t\treturn oneWeekAgo;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskWithStatusVo.html":{"url":"classes/TaskWithStatusVo.html","title":"class - TaskWithStatusVo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskWithStatusVo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/vo/task-with-status.vo.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                task\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(task: Task, status: ITaskStatus)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/vo/task-with-status.vo.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        task\n                                                  \n                                                        \n                                                                        Task\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        ITaskStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITaskStatus\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/vo/task-with-status.vo.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/vo/task-with-status.vo.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Task } from '../entity/task.entity';\n\ninterface ITaskStatus {\n\tsubmitted: number;\n\tmaxSubmissions: number;\n\tgraded: number;\n\tisDraft: boolean;\n\tisSubstitutionTeacher: boolean;\n}\n\nexport class TaskWithStatusVo {\n\ttask!: Task;\n\n\tstatus!: ITaskStatus;\n\n\tconstructor(task: Task, status: ITaskStatus) {\n\t\tthis.task = task;\n\t\tthis.status = status;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Team.html":{"url":"classes/Team.html","title":"class - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/team.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                _id\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: literal type)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/team.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:10\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Property } from '@mikro-orm/core';\nimport { BaseEntity } from './base.entity';\n\n@Entity({ tableName: 'teams' })\nexport class Team extends BaseEntity {\n\t@Property()\n\tname!: string;\n\n\tconstructor(props: { name: string }) {\n\t\tsuper();\n\t\tthis.name = props.name;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamNews.html":{"url":"classes/TeamNews.html","title":"class - TeamNews","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamNews\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/news.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        News\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                            \n                                content\n                            \n                            \n                                creator\n                            \n                            \n                                displayAt\n                            \n                            \n                                    Optional\n                                externalId\n                            \n                            \n                                permissions\n                            \n                            \n                                school\n                            \n                            \n                                    Optional\n                                source\n                            \n                            \n                                    Optional\n                                sourceDescription\n                            \n                            \n                                targetModel\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updater\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                createInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        target\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('Team')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:110\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:35\n\n                        \n                    \n\n            \n                \n                    the news content as html\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'creatorId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:61\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:39\n\n                        \n                    \n\n            \n                \n                    only past news are visible for viewers, when edit permission, news visible in the future might be accessed too\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        externalId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:66\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:58\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"internal\" | \"rss\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:45\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        sourceDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:48\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        targetModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NewsTargetModel\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Enum()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:55\n\n                        \n                    \n\n            \n                \n                    name of a collection which is referenced in target\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:31\n\n                        \n                    \n\n            \n                \n                    the news title\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne('User', {fieldName: 'updaterId'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         News\n\n                            \n                        \n                    \n                        \n                                Defined in         News:64\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        createInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInstance(targetModel: NewsTargetModel, props: INewsProperties)\n                \n            \n\n\n            \n                \n                    Inherited from         News\n\n                \n            \n            \n                \n                        Defined in         News:79\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    targetModel\n                                    \n                                                NewsTargetModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    props\n                                    \n                                                INewsProperties\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         News\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Enum, ManyToOne, Property } from '@mikro-orm/core';\nimport { BaseEntityWithTimestamps } from './base.entity';\nimport type { Course } from './course.entity';\nimport type { School } from './school.entity';\nimport type { Team } from './team.entity';\nimport type { User } from './user.entity';\nimport { NewsTarget, NewsTargetModel } from '../types/news.types';\nimport { EntityId } from '../types';\n\nexport interface INewsProperties {\n\ttitle: string;\n\tcontent: string;\n\tdisplayAt: Date;\n\tschool: EntityId | School;\n\tcreator: EntityId | User;\n\ttarget: EntityId | NewsTarget;\n\n\texternalId?: string;\n\tsource?: 'internal' | 'rss';\n\tsourceDescription?: string;\n\tupdater?: User;\n}\n\n@Entity({\n\tdiscriminatorColumn: 'targetModel',\n\tabstract: true,\n})\nexport abstract class News extends BaseEntityWithTimestamps {\n\t/** the news title */\n\t@Property()\n\ttitle!: string;\n\n\t/** the news content as html */\n\t@Property()\n\tcontent!: string;\n\n\t/** only past news are visible for viewers, when edit permission, news visible in the future might be accessed too  */\n\t@Property()\n\tdisplayAt!: Date;\n\n\t@Property()\n\texternalId?: string;\n\n\t@Property()\n\tsource?: 'internal' | 'rss';\n\n\t@Property()\n\tsourceDescription?: string;\n\n\t/** id reference to a collection populated later with name */\n\ttarget!: NewsTarget;\n\n\t/** name of a collection which is referenced in target */\n\t@Enum()\n\ttargetModel: NewsTargetModel;\n\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\t@ManyToOne('User', { fieldName: 'creatorId' })\n\tcreator!: User;\n\n\t@ManyToOne('User', { fieldName: 'updaterId' })\n\tupdater?: User;\n\n\tpermissions: string[] = [];\n\n\tconstructor(props: INewsProperties) {\n\t\tsuper();\n\t\tthis.title = props.title;\n\t\tthis.content = props.content;\n\t\tthis.displayAt = props.displayAt;\n\t\tObject.assign(this, { school: props.school, creator: props.creator, updater: props.updater, target: props.target });\n\t\tthis.externalId = props.externalId;\n\t\tthis.source = props.source;\n\t\tthis.sourceDescription = props.sourceDescription;\n\t}\n\n\tstatic createInstance(targetModel: NewsTargetModel, props: INewsProperties): News {\n\t\tlet news: News;\n\t\tif (targetModel === NewsTargetModel.Course) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new CourseNews(props);\n\t\t} else if (targetModel === NewsTargetModel.Team) {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new TeamNews(props);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\n\t\t\tnews = new SchoolNews(props);\n\t\t}\n\t\treturn news;\n\t}\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.School })\nexport class SchoolNews extends News {\n\t@ManyToOne('School')\n\ttarget: School;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Course })\nexport class CourseNews extends News {\n\t@ManyToOne('Course')\n\ttarget: Course;\n}\n\n@Entity({ discriminatorValue: NewsTargetModel.Team })\nexport class TeamNews extends News {\n\t@ManyToOne('Team')\n\ttarget: Team;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TeamNewsController.html":{"url":"controllers/TeamNewsController.html","title":"controller - TeamNewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TeamNewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/team-news.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                team\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAllForTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForTeam\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForTeam(teamId: string, currentUser: ICurrentUser, scope: NewsFilterQuery, pagination: PaginationQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':teamId/news')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/news/controller/team-news.controller.ts:22\n                \n            \n\n\n            \n                \n                    Responds with news of a given team for a user.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scope\n                                    \n                                                NewsFilterQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pagination\n                                    \n                                                PaginationQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Query } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { PaginationQuery, ParseObjectIdPipe } from '@shared/controller';\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\n\nimport { NewsMapper } from '../mapper/news.mapper';\nimport { NewsUc } from '../uc';\nimport { NewsFilterQuery, NewsListResponse } from './dto';\n\n@ApiTags('News')\n@Authenticate('jwt')\n@Controller('team')\nexport class TeamNewsController {\n\tconstructor(private readonly newsUc: NewsUc) {}\n\n\t/**\n\t * Responds with news of a given team for a user.\n\t */\n\t@Get(':teamId/news')\n\tasync findAllForTeam(\n\t\t@Param('teamId', ParseObjectIdPipe) teamId: string,\n\t\t@CurrentUser() currentUser: ICurrentUser,\n\t\t@Query() scope: NewsFilterQuery,\n\t\t@Query() pagination: PaginationQuery\n\t): Promise {\n\t\t// enforce filter by a given team, used in team tab\n\t\tscope.targetId = teamId;\n\t\tscope.targetModel = 'teams';\n\t\tconst [newsList, count] = await this.newsUc.findAllForUser(\n\t\t\tcurrentUser.userId,\n\t\t\tNewsMapper.mapNewsScopeToDomain(scope),\n\t\t\t{ pagination }\n\t\t);\n\t\tconst dtoList = newsList.map((news) => NewsMapper.mapToResponse(news));\n\t\tconst response = new NewsListResponse(dtoList, count);\n\t\treturn response;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestBootstrapConsole.html":{"url":"classes/TestBootstrapConsole.html","title":"class - TestBootstrapConsole","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestBootstrapConsole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/console/test/bootstrap.console.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    AbstractBootstrapConsole\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate()\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/console/test/bootstrap.console.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Test, TestingModule } from '@nestjs/testing';\nimport { AbstractBootstrapConsole, BootstrapConsole } from 'nestjs-console';\n\nexport class TestBootstrapConsole extends AbstractBootstrapConsole {\n\tcreate(): Promise {\n\t\treturn Test.createTestingModule({\n\t\t\timports: [this.options.module],\n\t\t}).compile();\n\t}\n}\n\nexport const execute = async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeoutInterceptor.html":{"url":"injectables/TimeoutInterceptor.html","title":"injectable - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/interceptor/timeout.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                This interceptor leaves the request execution after a given timeout in ms.\nThis will not stop the running services behind the controller.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _timeout\n                            \n                            \n                                    Protected\n                                    Static\n                                defaultTimeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    timeout\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _timeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Static\n                        defaultTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : REQUEST_TIMEOUT\n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        timeout\n                    \n                \n\n                \n                    \n                        gettimeout()\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:29\n                                \n                            \n\n                \n                    \n                        settimeout(milliseconds: number)\n                    \n                \n                            \n                                \n                                    Defined in apps/server/src/shared/common/interceptor/timeout.interceptor.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            milliseconds\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler, RequestTimeoutException } from '@nestjs/common';\nimport { Observable, throwError, TimeoutError } from 'rxjs';\nimport { catchError, timeout } from 'rxjs/operators';\nimport { REQUEST_TIMEOUT } from './constants';\n\n/**\n * This interceptor leaves the request execution after a given timeout in ms.\n * This will not stop the running services behind the controller.\n */\n@Injectable()\nexport class TimeoutInterceptor implements NestInterceptor {\n\tprotected static defaultTimeout = REQUEST_TIMEOUT;\n\n\tprivate _timeout?: number;\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\tintercept(context: ExecutionContext, next: CallHandler): Observable {\n\t\treturn next.handle().pipe(\n\t\t\ttimeout(this.timeout),\n\t\t\tcatchError((err) => {\n\t\t\t\tif (err instanceof TimeoutError) {\n\t\t\t\t\treturn throwError(new RequestTimeoutException());\n\t\t\t\t}\n\t\t\t\treturn throwError(err);\n\t\t\t})\n\t\t);\n\t}\n\n\tget timeout(): number {\n\t\treturn this._timeout || TimeoutInterceptor.defaultTimeout;\n\t}\n\n\tset timeout(milliseconds: number) {\n\t\tthis._timeout = milliseconds;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNewsParams.html":{"url":"classes/UpdateNewsParams.html","title":"class - UpdateNewsParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNewsParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/update-news.params.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for Updating a news document.\nA PartialType is a halper which allows to extend an existing class by making all its properties optional.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                displayAt\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Content of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDate()@ApiPropertyOptional({description: 'The point in time from when the News entity schould be displayed'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'Title of the News entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/update-news.params.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsDate, IsOptional, IsString } from 'class-validator';\n\n/**\n * DTO for Updating a news document.\n * A PartialType is a halper which allows to extend an existing class by making all its properties optional.\n */\nexport class UpdateNewsParams {\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Title of the News entity',\n\t})\n\ttitle: string;\n\n\t@IsOptional()\n\t@IsString()\n\t@ApiPropertyOptional({\n\t\tdescription: 'Content of the News entity',\n\t})\n\tcontent: string;\n\n\t@IsOptional()\n\t@IsDate()\n\t@ApiPropertyOptional({\n\t\tdescription: 'The point in time from when the News entity schould be displayed',\n\t})\n\tdisplayAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/domain/entity/user.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntityWithTimestamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                roles\n                            \n                            \n                                school\n                            \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: IUserProperties)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        IUserProperties\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()@Index({name: 'externalUserIdentifier'})@Unique()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Collection(this)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'roleIdBasedSearches'})@ManyToMany('Role', undefined, {fieldName: 'roles'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :         School\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Index({name: 'searchUserForSchool'})@ManyToOne('School', {fieldName: 'schoolId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/shared/domain/entity/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @SerializedPrimaryKey()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Property({onUpdate: undefined})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         BaseEntityWithTimestamps\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntityWithTimestamps:28\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Collection, Entity, ManyToMany, ManyToOne, Property, Index, Unique } from '@mikro-orm/core';\nimport type { Role } from './role.entity';\nimport type { School } from './school.entity';\nimport { BaseEntityWithTimestamps } from './base.entity';\n\nexport interface IUserProperties {\n\temail: string;\n\tfirstName?: string;\n\tlastName?: string;\n\tschool: School;\n\troles: Role[];\n}\n\n@Entity({ tableName: 'users' })\nexport class User extends BaseEntityWithTimestamps {\n\t@Property()\n\t@Index({ name: 'externalUserIdentifier' })\n\t@Unique()\n\temail: string;\n\n\t@Property()\n\tfirstName?: string;\n\n\t@Property()\n\tlastName?: string;\n\n\t@Index({ name: 'roleIdBasedSearches' })\n\t@ManyToMany('Role', undefined, { fieldName: 'roles' })\n\troles = new Collection(this);\n\n\t@Index({ name: 'searchUserForSchool' })\n\t@ManyToOne('School', { fieldName: 'schoolId' })\n\tschool!: School;\n\n\tconstructor(props: IUserProperties) {\n\t\tsuper();\n\t\tthis.firstName = props.firstName;\n\t\tthis.lastName = props.lastName;\n\t\tthis.email = props.email;\n\t\tthis.school = props.school;\n\t\tthis.roles.set(props.roles);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/controller/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                me\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(currentUser: ICurrentUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in apps/server/src/modules/user/controller/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    currentUser\n                                    \n                                                ICurrentUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { ApiTags } from '@nestjs/swagger';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ICurrentUser } from '@shared/domain';\n\nimport { Authenticate, CurrentUser } from '@src/modules/authentication/decorator/auth.decorator';\nimport { UserUC } from '../uc';\nimport { ResolvedUser } from './dto/ResolvedUser.dto';\n\n@ApiTags('User')\n@Authenticate('jwt')\n@Controller('user')\nexport class UserController {\n\tconstructor(private readonly userUc: UserUC) {}\n\n\t@Get('me')\n\tasync me(@CurrentUser() currentUser: ICurrentUser): Promise {\n\t\treturn Promise.resolve(currentUser.user);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/user.facade.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                resolveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userUC: UserUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/user.facade.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userUC\n                                                  \n                                                        \n                                                                        UserUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        resolveUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolveUser(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/user.facade.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\n\nimport { UserUC } from './uc/user.uc';\nimport { ResolvedUser } from './controller/dto';\n\n@Injectable()\nexport class UserFacade {\n\tconstructor(private readonly userUC: UserUC) {}\n\n\tasync resolveUser(userId: EntityId): Promise {\n\t\tconst resolvedUser = await this.userUC.getUserWithPermissions(userId);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoMapper.html":{"url":"classes/UserInfoMapper.html","title":"class - UserInfoMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/mapper/user-info.mapper.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                mapToResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        mapToResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapToResponse(user: User)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/news/mapper/user-info.mapper.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserInfoResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '@shared/domain';\nimport { UserInfoResponse } from '../controller/dto';\n\nexport class UserInfoMapper {\n\tstatic mapToResponse(user: User): UserInfoResponse {\n\t\tconst dto = new UserInfoResponse();\n\t\tdto.id = user.id;\n\t\tdto.firstName = user.firstName;\n\t\tdto.lastName = user.lastName;\n\t\treturn dto;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserInfoResponse.html":{"url":"classes/UserInfoResponse.html","title":"class - UserInfoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserInfoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/news/controller/dto/user-info.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'First name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({pattern: '[a-f0-9]{24}', description: 'The id of the User entity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Last name of the user'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/server/src/modules/news/controller/dto/user-info.response.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class UserInfoResponse {\n\t@ApiProperty({\n\t\tpattern: '[a-f0-9]{24}',\n\t\tdescription: 'The id of the User entity',\n\t})\n\tid: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'First name of the user',\n\t})\n\tfirstName?: string;\n\n\t@ApiPropertyOptional({\n\t\tdescription: 'Last name of the user',\n\t})\n\tlastName?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserFacade \n\nUserFacade \n\n\n\nUserModule\n\nUserModule\n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepo\n                        \n                        \n                            RoleUC\n                        \n                        \n                            UserFacade\n                        \n                        \n                            UserRepo\n                        \n                        \n                            UserUC\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserFacade\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserController } from './controller';\nimport { UserUC, RoleUC } from './uc';\nimport { RoleRepo, UserRepo } from './repo';\nimport { UserFacade } from './user.facade';\n\n@Module({\n\tcontrollers: [UserController],\n\tproviders: [RoleRepo, UserRepo, UserUC, RoleUC, UserFacade],\n\texports: [UserFacade],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepo.html":{"url":"injectables/UserRepo.html","title":"injectable - UserRepo","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/repo/user.repo.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(em: EntityManager)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/repo/user.repo.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        em\n                                                  \n                                                        \n                                                                    EntityManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/repo/user.repo.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EntityManager } from '@mikro-orm/mongodb';\nimport { Injectable } from '@nestjs/common';\nimport { EntityId, User } from '@shared/domain';\n\n@Injectable()\nexport class UserRepo {\n\tconstructor(private readonly em: EntityManager) {}\n\n\tasync findById(id: EntityId): Promise {\n\t\tconst user = await this.em.findOneOrFail(User, { id });\n\t\treturn user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserUC.html":{"url":"injectables/UserUC.html","title":"injectable - UserUC","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserUC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/modules/user/uc/user.uc.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserWithPermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: UserRepo, roleUC: RoleUC)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/modules/user/uc/user.uc.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        UserRepo\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleUC\n                                                  \n                                                        \n                                                                        RoleUC\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserWithPermissions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserWithPermissions(userId: EntityId)\n                \n            \n\n\n            \n                \n                    Defined in apps/server/src/modules/user/uc/user.uc.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                EntityId\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EntityId } from '@shared/domain';\nimport { ResolvedUserMapper } from '../mapper';\nimport { ResolvedUser } from '../controller/dto/ResolvedUser.dto';\nimport { RoleUC } from './role.uc';\nimport { UserRepo } from '../repo';\n\n@Injectable()\n// TODO: this is a domain service and must move to right place. It combine the repo roles and users\nexport class UserUC {\n\tconstructor(private readonly userRepo: UserRepo, private readonly roleUC: RoleUC) {}\n\n\tasync getUserWithPermissions(userId: EntityId): Promise {\n\t\tconst user = await this.userRepo.findById(userId);\n\t\tconst roles = user.roles.getItems();\n\t\tconst resolved = await this.roleUC.resolvePermissionsByRoles(roles);\n\n\t\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, resolved.permissions, resolved.roles);\n\t\treturn resolvedUser;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationError.html":{"url":"classes/ValidationError.html","title":"class - ValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/shared/common/error/validation.error.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BusinessError\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                            \n                                    Readonly\n                                message\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDetails\n                            \n                            \n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, details?: Record)\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/shared/common/error/validation.error.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        details\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         BusinessError\n\n                            \n                        \n                    \n                        \n                                Defined in         BusinessError:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDetails\n                        \n                    \n                \n            \n            \n                \ngetDetails()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Record\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResponse\n                        \n                    \n                \n            \n            \n                \ngetResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         BusinessError\n\n                \n            \n            \n                \n                        Defined in         BusinessError:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { BusinessError } from './business.error';\n\nexport class ValidationError extends BusinessError {\n\tconstructor(readonly message: string, details?: Record) {\n\t\tsuper(\n\t\t\t{\n\t\t\t\ttype: 'VALIDATION_ERROR',\n\t\t\t\ttitle: 'Validation Error',\n\t\t\t\tdefaultMessage: message,\n\t\t\t},\n\t\t\tHttpStatus.BAD_REQUEST,\n\t\t\tdetails\n\t\t);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationErrorDetailResponse.html":{"url":"classes/ValidationErrorDetailResponse.html","title":"class - ValidationErrorDetailResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationErrorDetailResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/server/src/core/error/dto/validation-error-detail.response.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(field: string, errors: string[])\n                    \n                \n                        \n                            \n                                Defined in apps/server/src/core/error/dto/validation-error-detail.response.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ValidationErrorDetailResponse {\n\tconstructor(readonly field: string, readonly errors: string[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ValidationModule.html":{"url":"modules/ValidationModule.html","title":"module - ValidationModule","body":"\n                   \n\n\n\n\n    Modules\n    ValidationModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/server/src/core/validation/validation.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_PIPE } from '@nestjs/core';\nimport { GlobalValidationPipe } from './pipe/global-validation.pipe';\n\n@Module({\n\tproviders: [\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseClass: GlobalValidationPipe,\n\t\t},\n\t],\n})\nexport class ValidationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\nAllowed Types of change: Added, Changed, Deprecated, Removed, Fixed, Security\n[Unreleased]\nAdded\n\nBC-526 - files deleted via directory deletion will be deleted with the deletion concept\nBC-369 - add more LDAP systems to the init deployment\n\nChanged\n[26.14.0] - 2021-10-26\nAdded\n\nBC-155 - add substitution teacher flag to task\nBC-121 - add console script to delete soft-deleted files\nBC-495 - ungroup elements from groups in the course dashboard\nBC-496 - naming of groups in the course dashboard\n\nChanged\n\nBC-383 - remove usage of npm run seed in server\nBC-527 - cleanup legacy code for filestorage deletion concept\nBC-13 - filter archived tasks and dont return it by task.findAll uc\nBC-501 - return lesson name as task description for more detailed informations\nBC-578 - enable esModuleInterop in typescript configuration\n\n[26.13.2] - 2021-10-22\nChanged\n\nBC-379 - hard-code node 14 and npm 6\n\n[26.13.0] - 2021-10-19\nAdded\n\nBC-394 - send email wishes to additionally needed addresses\nBC-391 - display special characters properly\nBC-339 - creation of groups in the courses dashboard\nBC-339 - add elements to groups in the courses dashboard\n\nFixed\n\nBC-436 - Fix univention LDAP strategy\nBC-21 - Remove generics from DTOs, because generics can not be used to generate OpenApi properly\n\nChanged\n\nBC-487 - update mongodb-memory-server from 6.9.6 to 7.4.4\nBC-490 - setup entities for tests without needing a database\n\n[26.12.0] - 2021-10-12\nAdded\n\nBC-388 - add simple script for end sjw\nBC-319 - add route to change the position of a course dashboard element\nBC-343 - run unstable e2e tests on label run unstable tests\nBC-6 - Show prepared tasks (drafts) for teachers\n\nChanged\n\nBC-25 - sort database seeds ascending by date of creation (_id, createdAt)\nBC-25 - move logic of npm run setup into console application and add management application with same behavior\nBC-237 - Clean up global entity registration\nBC-331 - BC-354 - rename ansible variables for OnePassword\nBC-269 - check in firstLogin that students can only pass with existing birthdate\nBC-154 - remove lesson entity from task repository\nBC-231 - upgraded nestjs@7 to nestjs@8\n\nFixed\nSecurity\n\nBC-386 - added CREATE tests for consentVersionService\nBC-297 - fixed set-value dependency vulnerabilities\nBC-377 - fixed axios dependency vulnerabilities\n\n[26.11.3] - 2021-10-05\nFixed\n\nBC-121 - run add bucket to files migration in parallel\n\n[26.11.2] - 2021-09-29\nFixed\n\nBC-111 wait for mongodb to spin up in deployment\n\nBC-370 - fixed file directory creation\n\n\n[26.11.1] - 2021-09-29\nFixed\n\nBC-365 - fixed task overview pagination\n\n[26.11.0] - 2021-09-22\nChanged\n\nBC-274 Change Course Colors\nBC-213 - rewrite file deletion with deletion marker\nBC-68 - e2e run dependent on build image job\nBC-179 - refactor task and entity and relations\nBC-315 - stabilized resolve user roles workflow by use roles from requested user and not from jwt\n\nAdded\n\nBC-121 add bucket and storage provider to file documents\nBC-164 - refactored the supportJWTservice and added roles information to its jwt data\nBC-279 - introduce console application interface to call providers via console command\nBC-9 add entity and repo for course dashboards\nBC-9 add a route to recieve dummy data for course dashboards\nBC-318 implement persistance for course dashboards\n\nFixed\n\nBC-232 prevent users from changing schoolyears\nBC-233 - when an LDAP system is removed from a school, the ldapschoolidentifier and lastLdapSync are removed as well\nmoved some changelog entries into their correct place\n\nRemoved\n\nBC-262 - remove S3 lifecycle configuration code\nBC-247 - remove timestamp from LDAP search Query for sync\n\n[26.10.3] - 2021-09-09\nFixed\n\nBC-267 - skip whitelist-check for api requests on /wopi\n\n[26.10.2] - 2021-09-03\nAdded\n\nBC-120 - add feature flag for S3 CORS\nBS-112 - insert missing attribute during school creation\n\n[26.10.1] - 2021-09-03\nFixed\n\nBC-187 - secures the system route\n\n[26.10.0] - 2021-09-03\nFixed\n\nremove broken systemid from seed data\nSC-9083 - expose env variables for school administration\nBC-44 - remove JWT_WHITELIST_ACCEPT_ALL feature flag\nBC-44 - integrate jwt whitelist check in nestjs jwt authentication\nBC-42 - cycle detection in role inheritance\nBC-64 - enable e2e test execution for push event on main branch\nBC-41 - adds feature flag for S3 storage lifecycle management (currently not supported by Strato Hidrive)\nBC-37 - BC-54 - reduce resource consumption for deployed server\nBC-81 - remove old Lern-Store\nBC-119 - remove malfunction S3 lifecycle migration\nBC-38 - BC-124 - Add ansible files for Bosscloud (default)\nBC-110 - fileStorage/security should only be called from within the cluster\n\nAdded\n\nBC-5 - Show completed tasks for students\n\nChanged\n\nRefactor nestjs task module and resort imports for course and coursegroup entities and repositories. Add testHelpers.\n\n[26.9.3] - 2021-09-10\nFixed\n\nBC-239 - fix date parsing for students birth date\n\n[26.9.2] - 2021-08-27\nChanged\n\nBC-137 - fix bug with display of Blue Bar\nBC-106 - exit maintenance & change school year for LDAP schools on Boss and NBC\n\n[26.9.1] - 2021-08-18\nChanged\n\nSC-9192 - enable cors for nestjs app routes\nSC-9130 - use whiltelisted filenames at the s3 file storage backend\n\n[26.9.0] - 2021-08-14\nChanged\n\nOPS-2491 - Change the hydra service url\nSC-9231 - add permissions to SuperHero to edit admin role\nSC-9269 - let eslint ensure no tests with .only exist anymore\nSC-9192 - mount feathers and nestjs apps under dedicated version paths and allow general path prefix for the whole server\n\nAdded\n\nadd inital learnroom module with support of course and coursegroups for preparing the next refactoring iteration in tasks module\nSC-9231 - add permissions to SuperHero to edit admin role\n\n[26.8.0] - 2021-08-10\n[26.7.1] - 2021-08-03\n\nSC-9233 - fix Lern-Store on THR to load also WLO content\n\n[26.7.0] - 2021-07-28\nAdded\n\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nSC-9150 - add script to change school year\nSC-9211 - enable maildrop and mailcatcher for e2e tests (see docker-compose)\nSC-9177 - allow superheros to delete admins\n\nChanged\n\nSC-9219 - limited jest workers for not taking all workers within of a single github action\n\nFixed\n\nSC-9212 - fix changing classes via CSV import\nSC-9053 - fix sending registration link via checkbox for student/teacher creation\n\n[26.6.4] - 2021-07-23\nChanged\n\nmove S3 expiration migration to the end\n\n[26.6.3] - 2021-07-21\nFixed\n\nSC-9092 - add missing S3 key decryption in migration\n\n[26.6.2] - 2021-07-21\nChanged\n\nuse edusharing lernstore mode on production\n\n[26.6.1] - 2021-07-21\nChanged\n\nchange default lernstore mode to edusharing\n\n[26.6.0] - 2021-07-20\nAdded\n\nSC-9018; SC-9003 - created schoolsList public endpoint, and jwt secured /schools endpoint\nSC-9093 - make configured default language and timezone available in config service\nSC-9092 - delete S3 files after 7 days from user deletion\nSC-8959 - Add messenger to deletion concept\nSC-9157 - Add RabbitMQ connection to new mail service\nSC-9157 - Improve config handling for RabbitMQ\nSC-9213 - Consider group submissions when deciding what open tasks a student has\nOPS-2574 - Removeing autodeployed branches for developers if branch deleted\nOPS-2579 - Add Ansible task and templates for adding storage\n\nChanged\n\nSC-9190 - publish news target names\nSC-8887 - allow public access to consentVersion service\nSC-8448 - Not storing temporary Merlin links and fixed concurrency bug\nremove unnecessary timeout definitions from tests and avoid promise chains\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\nexecute unit tests via github action instead of using travis\n\nFixed\n\nSC-9197 - Limiting the max workers for jest to 2 workers, if the default mechanism runs it's go up to infinity workers and if one die the test never stop\nSC-9202 - fix sending of registration link mails\n\n[26.5.0] - 2021-06-28\nAdded\n\nSC-9431 - add teacher view to task/open over permission TASK_DASHBOARD_VIEW_V3, solving permissions after authenticate and add v3/user/me route.\n\nChanged\n\nSC-6294 Restructure NestJS Sources: Testing, Core Module, Entities, Shared. See details in https://hpi-schul-cloud.github.io/schulcloud-server/\n\n[26.4.9] - 2021-06-29\nFixed\n\napi route forwarding\n\nRemoved\n\nSC-9159 removed news from feathers except remove team event, which already is replaced by v3/news\n\n[26.4.8] - 2021-06-29\nFixed\n\nroute forwarding\n\n[26.4.7] - 2021-06-22\nAdded\n\nSC-9148 - Add migration for change of school year on BRB\n\nFixed\n\nSC-9170 - let superhero delete other users\n\n[26.4.6] - 2021-06-24\nChanged\n\nOPS-2466 - changes build pipeline to github actions\n\n[26.4.5] - 2021-06-21\nAdded\n\nSC-9156 - Add maintenance mode for LDAP rewrite\n\n[26.4.4] - 2021-06-16\nChange\n\nrename permission TASK_DASHBOARD_VIEW_V3\n\n[26.4.3] - 2021-06-16\nChange\n\nSC-9139 - Add a check if user roles should be updated or not to the repo\n\n[26.4.2] - 2021-06-16\nFixed\n\nnpm run syncIndex work for not existing collections in the db\n\n[26.4.1] - 2021-06-15\nChange\n\nSC-9029 - Change place of the channel creation for RabbitMQ\n\n[26.4.0] - 2021-06-11\n\nSC-9004 - Sync env variables between backend and frontend\n\n[26.3.1] - 2021-06-14\nAdded\n\nSC-9134 - Add missing mongo indexes for LDAP Sync\n\n[26.3.0] - 2021-06-07\nChanged\n\nSC-8898 - parallelize LDAP sync using RabbitMQ\n\n[26.2.2] - 2021-06-04\nFixed\n\nFixed dependencies issue\n\n[26.2.1] - 2021-06-02\nAdded\n\nSC-9103 - add logging for syncIndexes script\n\n[26.2.0] - 2021-06-01\nAdded\n\nOPS-2418 - Change buildpipelines (Server, Client, Nuxt) to execute E2E tests according QF decision\nSC-8250 - add bulk deletion to user service v2\nSC-8341 - add tombstone school to tombstone user\nSC-8408 - added delete events by scope Id route\nSC-7937 - Allow adding multiple materials to lesson\nSC-7868 - Deletion concept for personal file connections\nSC-8873 - Add prioritization for Matrix messenger tasks\nSC-8982 - add inital service ressource messuring test setup\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches and automatic deploy of release to staging\nAdd run script for sync indexes based on existing and registered schemas.\nSC-9085 - add registration pin deletion for parent emails\nSC-9004 - Sync env variables between backend and frontend\nOPS-1499 - Add feature to CI Pipeline and provide manual deployments of branches\nAdd run script for sync indexes based on existing and registered schemas.\n\nChanged\n\nSC-8440 - fixed open api validation for manual consent\nSC-9055 - changed Edu-Sharing permissions for Brandenburg Sportinhalt content\nSC-6950 - validation for officialSchoonNumber now allows 5 or 6 digits\nSC-8599 - added helparea contact dropdown and send value\nSC-7944 - use persistent ids for Lern-Store content items\nOPS-1508 - added limits for cpu and ram to the docker compose files\nSC-8500 - refactoring in error handling\nSC-7021 - automatic deletion documents in the trashbins collection after 7 days.\nSC-5202 - homework tests refactoring\nSC-7868 - filestorage integration tests are skipped on local test environments if minio is not setup\nSC-8779 - messenger: use user-based fixed device ids\n\nFixed\n\nSC-8933 - fix date format on first login\nSC-8728 - fix configuration reset in tests\nSC-8873 - fix addUser prioritization for full school Matrix messenger sync\nSC-8982 - fix test setup for on the fly building test like routes jwt\n\n[26.1.0]\nAdded\n\nSC-8910 - added an isExternal check to the adminUsers service remove method\n\nChanged\n\nSC-8732 - change search filter gate and weight of values in indexes. Will reduce amount of results\nSC-8880 - changed the validation for search queries in NAT, now it allows empty\n\n[26.0.16] - 2021-04-20\nRemoved\n\n\nSC-8748 - revert: bump feathers-mongoose from 6.3.0 to 8.3.1\n\n\n\n[26.0.15] - 2021-04-19\nChanged\n\nSC-8909 - messenger: use user-based fixed device ids\n\n[26.0.14] - 2021-04-16\nChanged\n\nSC-8934 - no more autosync for the migrations for the mongodb\n\n[26.0.13] - 2021-04-15\nFixed\n\nSC-8917 - verify configuration missing school\n\n[26.0.12] - 2021-04-14\nChanged\n\nSC-8929 - increase performance for alert requests\n\n[26.0.11] - 2021-04-13\nChanged\n\nSC-8748 - bump feathers-mongoose from 6.3.0 to 8.3.1\n\n[26.0.10] - 2021-04-09\nFixed\n\nSC-8908 ldap sync: fix lock\n\n[26.0.9] - 2021-04-06\n\nSC-8779 - fix partial LDAP sync\n\n[26.0.8] - 2021-03-31\nFixed\n\nSC-8691 ldap sync: fix potential deadlock while loadind ldap data\n\n[26.0.7] - 2021-03-31\nFixed\n\nSC-8768 ldap sync: in user search include current school\n\n[26.0.6] - 2021-03-30\nFixed\n\nSC-8836 - teachers can add classes from other teachers to their courses\n\n[26.0.5] - 2021-03-29\nFixed\n\nSC-8691 - LDAP sync can be run with multiple school in parallel\n\n[26.0.4] - 2021-03-25\nChanged\n\nSC-8829 - status of logging in rocket chat user is set to offline\n\n[26.0.3] - 2021-03-17\nChanged\n\nmerged hotfixes 25.6.11 and following into 26.0 branch\n\n[26.0.2] - 2021-03-10\nFixed\n\nSC-5202 - fixed an issue with internal pagination in homework-submissions\n\n[26.0.1] - 2021-03-09\nChanged\n\nmerged 25.6.10 into new version\n\n[26.0.0]\nFixed\n\nSC-6679 - fixed table styling in topic text-component\nSC-8534 - fix registration link generation\nSC-8682 - fix students are editable in externally managed schools\nSC-8534 fix registration link generation\nAllow sorting after search\n\n[25.6.11] - 2021-03-17\n[25.6.13] - 2021-03-16\n\nSC-8782 Migration for changing urls\n\n[25.6.12] - 2021-03-15\n\nSC-8782 Fixed lesson context Query\n\n[25.6.11] - 2021-03-15\nFixed\n\nSC-8211 - Fixed course events duplications\n\n[25.6.10] - 2021-03-09\n\nSC-8770 Fixed issue where parent consents were overwritten\n\n[25.6.9] - 2021-02-26\nFixed\n\nSC-8714 Fixed an issue in school creation that could cause the iserv-sync to fail\n\n[25.6.8] - 2021-02-19\nChanged\n\nSC-8477 LDAP-Sync: Speed up class sync by holding all the school's users in map while creating/populating classes\nSC-8477 LDAP-Sync: Speed up user sync by grouping users into chunks and loading the chunks from DB instead of individual users\n\n[25.6.7] - 2021-02-18\nSecurity\n\nSC-8655 - prevent changes to immutable user attributes\n\n[25.6.6] - 2021-02-18\nFixed\n\nSC-8657 - Recreate shared links for homework\n\n[25.6.5] - 2021-02-17\nFixed\n\nSC-8634 - Recreate shared links for homework\n\n[25.6.4] - 2021-02-17\nChanged\n\nReverted Changes for SC-8410\n\n[25.6.3] - 2021-02-15\nSecurity\n\nVOR-3 - Enable and replace old file links.\n\n[25.6.2] - 2021-02-11\nChanged\n\nVOR-2 - Adjusted business rules for adding team members from external school.\n\n[25.6.1] - 2021-02-11\nFixed\n\nVOR-1 - Fix passwordRecovery id validation.\n\n[25.6.0] - 2021-02-09\nFixed\n\nSC-8514 - QR Code generation fails\nSC-8390 - Lern-Store collections feature flag was not excluding collections in search\nSC-8322 prevent wrong assignment from school to storage provider\n\nAdded\n\nSC-8482 - Deletion concept orchestration integration\nSC-8029 - Add deletion concept handling for pseudonyms and registration pins\nSC-6950 - Add access for superhero to change kreisid and officialSchoolNumber\nSC-8206 - Add school tombstone for deleting concept\nSC-7825 - Deletion concept for user data in tasks\n\nChanged\n\nSC-8541 - restrict class modifing requests to the teachers, who are inside these classes\nSC-8380 removed reqlib, replaced by normal require to keep referenced types known\nSC-8213 error handling concept\nSC-4576 - sanitize bbb room and member names\nSC-8300 Added user information to LDAP Sync in case of errors\n\n[25.5.16] - 2021-02-08\nAdded\n\nSC-8512 - Creating a migration for duplicated events\n\n[25.5.15]\nFixed\n\nSC-8571 - New courses does not appear in bettermarks\n\n[25.5.14] - 2021-02-02\nChanged\n\nSC-8420 - Fix old missing indexes that migration for new indexes can executed. 25.5.3\n\n[25.5.13]\nChanged\n\nSC-8462 - Add logging for homework deletion\n\n[25.5.12]\nFixed\n\nSC-8499 - Change order of migrations\n\n[25.5.11]\nFixed\n\nSC-8499 - Prevent duplicated pseudonyms\n\n[25.5.10]\n\nSC-8506 - add origin server name to bbb create and join requests\n\n[25.5.9]\nFixed\n\nSC-8503 - Clicking on task in BRB and THR shows pencil page\n\n[25.5.8]\nChanged\n\nSC-8480 - Return GeneralError if unknown error code is given to error pipeline\n\n[25.5.7]\nAdded\n\nSC-8489 - Added permission check for homework deletion\n\n[25.5.6]\nFixed\n\nSC-8410 - Verify ldap connection reads the first page of users only to avoid timeouts\nSC-8444 - resolve eventual consistency in course shareToken generation\n\n[25.5.5]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.4]\nAdded\n\nSC-8358 - bettermarks: show hint for safari users\nSC-8412 - update swagger documentation of pseudonym/roster/ltitools\n\nFixed\n\nSC-5287 - Fixed OAuth2 rostering\nSC-5287 - Repair Bettermark's depseudonymization\nSC-8313 - Bettermarks: depseudonymization iframe needs to use Storage Access API in Safari\nSC-8379 - Secure ltiTools route\nSC-8315 - bettermarks: security check and production configuration\n\n[25.5.3]\nAdded\n\nSC-8420 - Migration for sync new indexes.\n\n[25.5.2]\nFixed\n\nSC-8189 - fix duplicate events by returning updated object at findOneAndUpdate\n\n[25.5.1]\nFixed\n\nSC-8303 - fix wrong assignment from school to storage provider\n\n[25.5.0]\nAdded\n\nSC-7835 - Add deletion concept handling for helpdesk problems\nSC-8229 - Added invalid DN error to ldap-config service error handling\nSC-7825 - Remove user relations from courses\nSC-7827 - Add deletion concept handling for file permissions.\nSC-8030 - Setup orchestrator for deleting concept\nSC-8060 - increase unit test coverage for lernstore counties\nSC-8179 - repaired unit test\nSC-7763 - adds searchable feature flag for lernstore.\nSC-8020 - adds collections filter to edu-sharing service\nSC-8260 - new team indexes and migration to add this\n\nFixed\n\nSC-8230 - fix deletion of teachers via new route\n\nRemoved\n\nSC-8233 - Removed attribute and member as required attributes for the LDAP-config service\n\nFixed\n\nSC-8329 - Cluster returns old verison of Pin object after patch\n\n[25.4.1]\n\nUpdate from 25.3.9 into master\n\n[25.3.9]\n\nSC-8198 continue school sync on user issues\n\n[25.3.8]\nChanged\n\nSC-8198 - handle eventually consistent database in THR sync\n\n[25.3.7] - 2020-12-18\nChanged\n\nSC-8209 - prevent sync from stopping if error occurs for a single student\n\n[25.3.6]\nFixed\n\nSC-8235 - repaired reigstration link for students\n\n[25.3.5]\nChanged\n\nSC-8149 - no longer require a registrationPin for internal calls\n\n[25.3.4]\nChanged\n\nSC-7998 - use default service setup for /version\n\n[25.3.3] (pick from 25.2)\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.3.2]\nAdded\n\nSC-7734 - Added a hook that takes care of merlin content to generate valid urls for users\nSC-7483 - Updating terms of use for all users for each instance separately\n\n[25.3.1]\nFixed\nSC-8077 - the migration copy-parents-data-into-children-entities-and-delete-parent-users is broken\n[25.3.0]\nAdded\n\nSC-7841 - remove deleted user from classes\nSC-7836 - Removing registration pin by removing the user\nSC-7838 - move pseudonyms to trashbin\nSC-7142 - Counties/Kreise added to federal states.\nSC-7555 - move user and account to trashbin\nSC-4666 - Added a pool based LDAP system and school sync. LDAP_SYSTEM_SYNCER_POOL_SIZE and LDAP_SCHOOL_SYNCER_POOL_SIZE variables\ndetermine how many system/school syncers will be run in parallel (at most) during the LDAP sync.\nSC-7615 - reduces the errors in lernstore\nSC-5476 - Extend tests for Matrix messenger config and permission service\nSC-6690 - refactors edu-sharing service and sets defaults\nSC-6738 - Extend search input field in new admin tables to search for full name\nSC-7293 - added Lern-Store view permission and a feature flag\nSC-7357 - Add config service\nSC-7083 - Added officialSchoolNumber to school-model\nIntroduce plainSecrets in Configuration\nIntroduce FEATURE_PROMETHEUS_ENABLED to have a flag for enable prometheus api metrics\nSC-7411 - add API Specification and validation for /me service\nSC-7411 - add API Specification and validation for /version service\nSC-7205 - create new data seed for QA\nSC-7614 - creates documentation for edu sharing endpoints\nSC-7370 - Add optional rootPath attribute modifier to iserv-idm strategy\nSC-4667 - persist time of last attempted and last successful LDAP sync to database (based on system)\nSC-4667 - Only request and compare LDAP entities that have changed since the last sync (using operational attribute modifyTimestamp with fallback)\nSC-4667 - Add optional forceFullSync option (as get param or json payload) to force a full LDAP sync\nSC-7499 - add API Specification for public services\nSC-7915 - facade locator\nSC-7571 - solved performance issues - bulk QR-code generation\nSC-6294 - Introduce Typescript in schulcloud-server\nSC-7543 - Adds ldap-config service to create, load, and patch LDAP-configs (replaces /ldap endpoints for new client)\nSC-7028 - Add Course Component API Specification document\nSC-7476 - Prevent hash generation if user has account\nSC-6692 - Added Lern-Store counties support for Niedersachsen (Merlin)\n\nChanged\n\nrequest logging disabled for non development environment\nOPS-1289 - moved and updated commons (to hpi-schul-cloud/commons)\nSC-6596 - Changed route for messenger permissions service\nSC-7331 - introduce axios for external requests, implemented in status api\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\nSC-6080 - move REQUEST_TIMEOUT from globals to Configuration\nDependencies: querystring replaced by qs\nSC-6060 - Updated error handling\nSC-7404 - automatic forwarding for requests without versionnumber if no matching route is found\nSC-7411 - api versioning for /me service\nSC-7411 - api versioning for /version service\nIMP-160 - integration-tests repo renamed to end-to-end-tests\nSC-5900 - Move Synapse synchronization logic into server\nSC-7499 - Fixes documentation for edu sharing endpoints\nSC-7872 - Fix audience of the jwt to new organisation name.\nSC-7543 - deprecates GET /ldap/:id and PATCH /ldap/:id routes\nSC-7868 - Move external request helpers to more present file location\nSC-7474 pull docker container for tests if commit id exists on docker hub\n\nFixed\n\nSC-6294 fix mocha test execution and build, summarize coverage results\nSC-1589 Trim strings to avoid empty team names\nARC-138 fix changelog action\nARC-137 avoid DoS on alerts in error state\nSC-7353 course sharing between teachers\nSC-7530 rename SHOW_VERSION to FEATURE_SHOW_VERSION_ENABLED\nSC-7517 improve oauth test stability\nSC-6586 Repaired migration script\nSC-7454 - Restored invalid birth date fix in adminUsers service\nfixed README badges\nFix mocha tests\nSC-6151 fixed a bug that prevented api docu from being accessible\nSC-6151 fixed paths to openapi documentation\nFixed searching for names including a dash\nSC-7572 - Find /users route after hooks - extremely slow\nSC-7573 - Route/hash-broken promise chain\nSC-7884 - Authentication error when accessing any nuxt page in the client.\nFix typescript compiling error\n\nRemoved\n\nSC-7413 - Cleanup UnhandledRejection code that is handled from winston now\n\n[25.2.6]\nRemoved\n\nSC-8101 - Sanitization for read operations\n\nFixed\n\nSC-8101 - Make it possible to disable sentry by removing SENTRY_DSN\n\n[25.2.5]\nFixed\n\nOPS-1735 - Fixes transaction handling in file service by using the mongoose transaction helper,\nproperly closing the session, and using the correct readPreference (everything except primary fails)\n\n[25.2.4]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen - fixed after review\n\n[25.2.3]\nChanged\n\nSC-6727 - Change email addresses for tickets for Niedersachsen\n\n[25.2.2]\nChanged\n\nSC-7773 - moved config values for antivirus file service\n\n[25.2.1]\nFixed\n\nSC-7714 - Fixes script injection issue\n\n[25.2.0]\nAdded\n\nSC-4385 - Added a user exclusion regex to IServ strategy\nSC-7049 - Added unit tests for Merlin Service\nSC-7157 - add feature flag for Merlin feature with fallback\nSC-6567 - add new application errros\nSC-6766 - Added ESLint rules with Promise rules\nSC-6830 - Added hook to parse request to arrays when > 20 users are requested in adminUsers service\nSC-6769 - Introduce API validation module\nSC-6769 - API validation for users/admin routes\nSC-6510 - Added Merlin Url Generator for Lern Store / Edu-sharing\nSC-5476 - Added school settings to enable students to open own chat rooms\nSC-6567 - Add utils to cleanup incomingMessage stacks by logging errors\n\nRemoved\n\nSC-6586- Remove parents from users collection to improve maintainability\n\nChanged\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\nSC-6567 - clean up error pipline\nSC-6510, fix a minor syntax error when exporting module\nUpdate commons to 1.2.7: print configuration on startup, introduce hierarchical configuration file setup\nSupport asynchronous calls during server startup\nSC-7091 - Migration to enable the Matrix Messenger for all schools that had RocketChat enabled before\n\nFixed\n\nfixed README badges\nSC-6151 - fixed a bug that prevented api docu from being accessible\nFix mocha tests\n\n[25.1.13] - 2020-11-12\nChanged\n\nSC-7395 - Changed ldap general strategy fetching of users from parallel to serialized\n\n[25.1.12] - 2020-11-09\nAdded\n\nSC-7683 - add request logging options\n\n[25.1.11] - 2020-11-06\nSecurity\n\nSC-7695 - prevent csv user override operations on other schools\n\n[25.1.10] - 2020-11-05\nAdded\n\nSC-7683 - Add log metic for memory usage, add async error logging util, catch one unhandledRejection error and remove cronjob task from server.\n\n[25.1.9] - 2020-11-03\nFixed\n\nSC-7638 - fixed pin creation for users with accounts\n\n[25.1.8] - 2020-10-22\nFixed\n\nSC-7333 - fixed creation of homeworks within lessons\n\n[25.1.7] - 2020-10-28\nAdded\n\nSC-7491 - Add missing index on users.email to speed up slow query in registrationLink service\n\n[25.1.6] - 2020-10-23\nChanged\n\nSC-7413 - Remove event listener for unhandled rejections and move this to winston\n\n[25.1.5] - 2020-10-22\nFixed\n\nSC-7452 - fixed time window check for LDAP users\n\n[25.1.4] - 2020-10-20\nChanged\n\nSC-6986 - Changed permission check for PATCH method in the account service from STUDENT_CREATE to STUDENT_EDIT to allow teachers to change students' password\n\n[25.1.3] - 2020-10-20\nFixed\n\nSC-6986 - Changed a hook in the accounts service that restricts get requests to the same school, it expects a valid userID and matching schoolIds for both the requester and requested users\n\n[25.1.2] - 2020-10-15\nFixed\n\nSC-7085 - fixed importHash error when asking parent consent\n\nAdded\nRemoved\n[25.1.1] - 2020-10-12\nSecurity\n\nSC-7165 package update for sanitization and add onload handler\n\n[25.1.0] - 2020-10-12\nAdded\nRemoved\n\nSC-6784 - Removed duplicated birth date formatting code in adminUsers service, which was causing an \"Invalid date\" output\nSC-6743 - Removed usersForConsent related things in adminUsers service because the client does not send that parameter anymore\nSC-6506 - Remove dependecy to feathers-swagger in routes.test.js\n\nChanged\n\nSC-6774 remove no-await-in-loop from eslint exceptions\nRename statistic mails route, secure it over sync api key now\nSC-6809 - Maintain RabbitMQ connection and channels\nSC-5230 - Unblock Account-Page in Nuxt (securing /accounts and /users routes)\n\nSecurity\n\nAdded hotfix merges\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.12] - 2020-10-12\nFixed\n\nSC-6676 allows only following roles for registration: teacher/student…\n\n[25.0.11] - 2020-10-07\nFixed\n\nSC-7180 homework create now validates data properly\n\n[25.0.10] - 2020-10-07\nAdded\n\nconfigured prometheus metrics - bucket sizes\nSC-6766 log unhandledRejection and unhandledException\n\n[25.0.9] - 2020-10-07\nAdded\n\nSC-7115 - Reduce mongoose DB role request by enabling minor caching\n\n[25.0.8] - 2020-10-06\nFixed\n\nSC-6676 - Registration: User with role parent should not be able to log-in\nSC-6960 - instead of deleting and recreating users during the rollback of a failed registration, use replace if necessary\nSC-6960 - properly raise exceptions during the registration process\n\n[25.0.7] - 2020-10-01\nRemoved\n\nOPS-1316 - removed custom keep-alive header creation in express middleware\n\n[25.0.6] - 2020-10-01\nAdded\n\nOPS-1316 - add indexes for slow files and submission queries\n\n[25.0.5] - 2020-10-01\nAdded\n\nSC-6973 - add time window for pin creation\n\n[25.0.4] - 2020-09-30\nAdded\n\nAdded lead time detection\n\n[25.0.3]\nAdded\n\nSC-6942 - add parse method to TSP strategy to declare it can handle the request and to keep authentication params clean\n\nFixed\n\nSC-6942 - don't override payload defined by authentication method\nSC-6942 - don't search for account to populate if no username is given in injectUsername\n\n[25.0.2]\nChanged\n\nsend mail for registration pin after add pin to db\n\n[25.0.1]\nFixed\n\nSC-6696 - Fixed query used to determine course membership when checking permissions for course group lessons\n\n[25.0.0]\nChanged\n\nExtend JWT payload by schoolId and roleIds\n\n[24.5.1] - 2020-09-16\nSecrutiy\n\nSecure admin routes (update, patch, create)\n\n[24.5.0] - 2020-09-14\n\nIgnore database seed data with prettier, eslint, and codacy\nSC-6640 - Fixed email check within registration (case insensitive)\nSC-2710 - Adding time zones, default for school and theme\n\nAdded - 24.5.0\n\nTest changelog has been updated for feature or hotfix branches\nSC-5612 - Adding search feature to the admintables for nuxt-client.\n\n[24.4.6] - 2020-09-11\nChanged\n\nSC-6733: central personal data does not get updated via CSV import\n\n[24.4.5] - 2020-09-10\nFixed in 24.4.5\n\nSC-6637: generate QR codes for consent print sheets if group size exceeds 20\n\n[24.4.4] - 2020-09-08\nFixed in 24.4.4]\n\nSC-6697: updates/sync account username when user is updated\n\n[24.4.3] - 2020-09-09\nFixed in 24.4.3\n\nSC-6533 - Login not possible if admin reset password\n\n[24.4.2] - 2020-08-31\nFixed in 24.4.2\n\nSC-6554: CSV-Importer no longer allows patching users with different roles\n\n[24.4.1] - 2020-08-31\nFixed in 24.4.1\n\nSC-6511 - LDAP edit button missing.\n\nChanged in 24.4.1\n\nSC-5987 Internationalisation: extend user and school model with default language\n\nAdded 24.4.1\n\nSC-6172: added hooks and checks to look for unique and not disposable emails in adminUsers service\n\n[24.4.0] - 2020-8-31\nFixed in 24.4.0\n\nSC-6122 - Edusharing preload thumbnails in parallel. Edusharing authentication stabilisation.\n\n[24.3.3] - 2020-08-28\n\nSC-6469: prevent admin access to lessons admins shouldnt have access to.\n\n[24.3.2] - 2020-08-26\n\nSC-6382: fix handling of consents for users with unknown birthdays. consentStatus: 'ok' will be returned for valid consents without birthday.\n\n[24.3.1] - 2020-08-25\n\nSC-5420: TSC Schuljahreswechsel\n\n[24.3.0] - 2020-08-25\n[24.2.5] - 2020-08-24\n\nSC-6328 add migration to set student_list settings in all non n21 clouds schools to false.\n\n[24.2.4] - 2020-08-20\n[24.2.3] - 2020-08-20\n[24.2.2] - 2020-08-20\nAdded in 24.2.2\n\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\nSC-5808: added an isExternal check to the create method of AdminUsers service, only users from not external schools can create users\n\nFixed in 24.2.2\n\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\n\nChanged in 24.2.2\n\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[24.0.2] - 2020-08-05\nFixed in 24.0.2\n\nSC-5835: Starting the new school year automatically - Cluster 4\n\n[24.0.1] - 2020-07-31\nFixed in 24.0.1\n\nSC-5917 Fix activation of LDAP system\n\n[23.6.4] - 2020-07-29\nFixed in 23.6.4\n\nSC-5883: Choose current schoolyear based on the school instead of the date for creating classes.\n\n[23.6.3] - 2020-07-28\nAdded in 23.6.3\n\nSC-5754 Added isExternal attribute to school model. If ldapSchoolIdentifier or source is defined, isExternal will be set to true\notherwise, if none of them are defined it wil be set to false.\nSC-4520 created a new Service called Activation Service; with which jobs can be defined and are\nonly executed when an activation link (activation code) is confirmed (e.g.: change of e-mail address/username)\nAlso added a sub-service for changing email/username in Activation Service\nSC-5280: the LDAP service will try to reconnect up to three times if the connection was lost or could not be established\nSC-5280: the LDAP service and LDAP syncers now report more errors to the stats object\n\nFixed in 23.6.3\n\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\nSC-5686: only users with the team permission \"RENAME_TEAM\" can execute the patch method in teams route\nSC-5280: the LDAP sync now handles (timeout/firewall) errors much more gracefully\nSC-5280: LDAP bind operations will only be issued if the connection was established successfully\nSC-5280: aggregated LDAP statistics will now show the number of succesful and failed sub-syncs instead of just 1 or 0\nSC-5416: Enable maintenance Mode for LDAP Schools and change the currentSchoolYear for non-LDAP Schools\n\nChanged in 23.6.3\n\nSC-5542: Added an after hook for AdminUsers find method which formats birthday date to DD.MM.YYYY format.\nSC-4289 Changed aggregations in admin tables, classes are now taken only from current year or max grade level, and are sorted\nby numeric ordering.\nSC-5280: if disconnected prematurely, the LDAP service will not try to connect again just to unbind from the server\n\n[23.6.2] - 2020-07-22\nFixed in 23.6.2\n\nSC-5773: LDAPSchoolSyncer now correctly populates classes synced from an LDAP server, even if only students or only teachers are assigned to the class.\nSC-5250: Fixes the CSV-Import, if there are whitespaces in the columnnames\n\n[23.6.1] - 2020-07-22\nFixed in 23.6.1\n\nSC-5733: LDAPSchoolSyncer now uses the Users model service to avoid ignoring indexes due to automatic collation\n\n[23.6.0] - 2020-07-21\nAdded in 23.6.0\n\nSC-4142: Added indexes on TSP sync related attributes in user and school schema.\nSC-4142: Adds info about unchanged entities to TSP sync statistics\n\n[23.5.4] - 2020-07-08\nAdded in 23.5.4\n\nSC-2714 Added the federal state \"Internationale Schule\"\n\n[23.5.0] - 2020-06-15\nAdded in 23.5.0\n\nSC-4192 add tests that ensure classes on other schools cant be manipulated\n\nFixed in 23.5.0\nChanged in 23.5.0\n\nSC-4957 user.ldapId and user.ldapDn are now indexed to improve performance\n\n[23.4.7] - 2020-07-01\nFixed in 23.4.7\n\nSC-4965 Converted \"consent\" subdocument in \"users\" to a nested document to fix changing consents in administration and removing a bug in registration that resulted in deleted users.\n\n[23.4.5] - 2020-06-17\nFixed in 23.4.5\n\nSC-5007 re-introduces ldap system root path to API result to fix issue with duplicating schools\n\n[23.4.3-nbc] - 2020-06-15\nFixed in 23.4.3-nbc\n\nSC-5054 Revert hook restrictions that prevented registration with custom deata privacy documents enabled\n\n[23.4.0-nbc] - 2020-06-11\nAdded in 23.4.0-nbc\n\nSC-4577 extend consentversions with school specific privacy policy, which can be added by the school admin\n\n[23.2.4] - 2020-06-05\nFixed in 23.2.4\n\nSC-4876 soften sanitization to allow editor actions to be persisted correctly\n\n[23.2.1] - 2020-06-04\nSecurity - 23.2.1\n\nSC-4720 improve importhashes for registrationlinks\n\n[23.2.0] - 2020-06-03\nSecurity - 23.2.0\n\nSC-4506 Secure Find User Route. Access user list by students is allowed only if they are eligible to create teams.\nSC-4506 Secure Get User Route. Read user details may only users with STUDENT_LIST or TEACHER_LIST permissions\n\n[23.1.4] - 2020-05-29\nFixed in 23.1.4\n\nSC-4749 avoid xss in image onerror event attribute for submissions\n\n[23.0.0] - 2020-05-19\nChanged in 23.0.0\n\nSC-4075 Teams creation by students logic was changed. New environment enumeration variable STUDENT_TEAM_CREATION\nwith possible values disabled, enabled, opt-in, opt-out was introduced. The feature value is set by instance deployment.\nIn case of disabled, enabled it is valid for all schools of the instance and cannot be changed by the admin.\nIn case of opt-in and opt-out the feature should be enabled/disabled by the school admin.\n\n[22.10.3] - 2020-05-13\nFixed in 22.10.3\n\nUnbind errors no longer stop the LDAP sync if more systems follow\n\n[22.10.2] - 2020-05-12\nFixed in 22.10.2\n\nfixed pagination for students/teacher table\n\n[22.10.0] - 2020-05-11\nAdded in 22.10.0\n\nSC-3719 Files now have a creator attribute that references the ID of the user that created the file.\nFor old files, it is set to the first user permission inside the permissions array (legacy creator check).\nSC-3719 The files collection now has two additional indexes: {creator} and {permissions.refId, permissions.refPermModel}.\nadd MongoDB Collation Support to control sorting behaviour in regards to capitalization.\nSC-3607 CSVSyncer now allows the optional birthday field (formats: dd/mm/yyyy, dd.mm.yyyy, dd-mm-yyyy) in CSV data\nSC-3948 support users query in adminusers routes\nSC-4018 Add additional nexboard permissions\nSC-4008 Migrated generateRegistrationLink Hook from SC-Client into Server\nSC-3686 Added new Registration Link Service for sending mails\nSC-4094 Teachers can now provide feedback in the form of uploaded files\n\nFixed in 22.10.0\n\nSC-3892 Update Filter of submission in order to work with older submissions\nSC-3395 if fetching the release fails, a error will be thrown\nbackup.js now outputs valid json exports\nSC-4105 fixed a problem with new users tests not working with recent hotfix.\nChecks of user consent calculated correct now\n\nChanged in 22.10.0\n\nUser delete now accepts bulk delete requests\nSC-3958: the \"general\" LDAP strategy now returns an empty array if classes are not configured properly\nIncrease performance - error logging in sentry\nMergify: add and modified some configs\n\nRemoved in 22.10.0\n\nSC-3958: the LDAP strategy interface no longer supports synchronizing team members to the never-used original N21-IDM\nSC-3958: the environment variables NBC_IMPORTURL, NBC_IMPORTUSER, and NBC_IMPORTPASSWORD are no longer used and have been removed\nRemoved the obsolete commentSchema from the homework service. It was not in use.\n\n[22.9.20]\nAdded in 22.9.20\n\nSC-4042: Added support for a central IServ-Connector\n\nChanged in 22.9.20\n\nLDAP syncs on servers with multiple schools now only sync one school at a time to avoid issues when paging search requests\nLDAP syncs use less memory (because they do a lot less in parallel)\nLDAPSchoolSyncer now returns user and class statistics\n\nFixed in 22.9.20\n\nFixed LDAP-Service disconnect method\nLDAPSystemSyncers now properly close their connections after syncing\nAuthentication via LDAP now tries to close the connection after login\nFixed a warning message appearing when patching users via internal request\n\n[22.9.18]\nFixed in 22.9.18\n\nSC-4215: Do not allow unprivileged users to find users with non-school roles (expert, parent, etc.)\n\n[22.9.17]\nFixed in 22.9.17\n\nSC-4121: File uploads no longer fail if the security scan is misconfigured or errors during enqueuing\n\n[22.9.10]\nAdded in 22.9.10\n\nenable API key for /mails route\n\nFixed in 22.9.10\n\nfixed an issue that prevented api-key authenticated calls to function with query.\n\n[22.9.9]\nAdded in 22.9.9\n\nSync can now be authenticated with an api-key.\n\n[22.9.8]\nFixed in 22.9.8\n\nFixed an error where ldap users without proper uuid where not filtered correctly.\n\n[22.9.7]\nSecurity in 22.9.7\n\nthe /ldap route can now only be triggered for the users own school.\n\n[22.9.6]\nAdded in 22.9.6\n\nusers without SCHOOL_EDIT permission, but with SCHOOL_STUDENT_TEAM_MANAGE permission can now toggle the school feature disableStudentTeamCreation.\n\nFixed in 22.9.6\n\nAdmins in Thuringia can now prevent students from creating teams\n\n[22.9.5]\nSecurity in 22.9.5\n\nincreased security for the publicTeachers route.\n\n[22.9.4]\nFixed in 22.9.4\n\nfixes an issue with LDAP account updates if more than one account exists for the user (migration from local login to LDAP)\n\n[22.9.3]\nFixed in 22.9.3\n\nfixes regression in LDAP sync, that caused incomplete user updates\n\n[22.9.2]\nSecurity in 22.9.2\n\nincreased security for user PUT operation\n\n[22.9.1]\nFixed in 22.9.1\n\nSC-3994: remove unnecessary bucket creation call that caused school administration and LDAP Sync to throw errors\n\nChanged in 22.9.1\n\nuse collation for /homeworks, /users, /publicTeachers, /users/admin/teachers, /users/admin/students, /classes, and /courses.\n\n[22.9.0]\n\nSecurity updates\n\n[22.8.0]\nAdded in 22.8.0\n\nThis changelog has been added\n\nRemoved in 22.8.0\n\nClipboard sockets\nThis changelog has been added\nBackend route to confirm analog consents in bulk\nChanged Seed Data + Migration Script: Added feature flag for new Editor to klara.fall@schul-cloud.org\nSC-2922: Enable use of multiple S3 instances as file storage provider\nA new collection is added to administrate multiple S3 instances\nA migration will automatically use the AWS environment variables to add those as default provider for all existing schools\nFor new schools the less used provider is assigned as storage provider\nEnvironment Variables:\nFEATURE_MULTIPLE_S3_PROVIDERS_ENABLED=true will activate the feature\nS3_KEY, used for symmetric encryption, already required for the migration because of the secret access key encryption\n\n\n\n\n\nChanged in 22.8.0\n\nSC-3767: moved env variables to globals.js, NODE_ENV required to equal 'test' for test execution and right database selection\nmigrated backup.sh script to node, so it can run platform independant and works on windows.\n\nFixed in 22.8.0\n\nSC-3821: Fix Co-Teachers and Substitution teachers not being able to Grade Homeworks\n\n22.7.1\nFixed in 22.7.1\n\nAdmin and teacher user could change other users without changing them self\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @feathersjs/authentication : ^4.5.11\n        \n            @feathersjs/authentication-local : ^4.5.11\n        \n            @feathersjs/configuration : ^4.5.11\n        \n            @feathersjs/errors : ^4.5.11\n        \n            @feathersjs/express : ^4.5.11\n        \n            @feathersjs/feathers : ^4.5.11\n        \n            @feathersjs/socketio : ^4.5.11\n        \n            @golevelup/nestjs-rabbitmq : ^1.17.0\n        \n            @hpi-schul-cloud/commons : ^1.3.3\n        \n            @mikro-orm/core : ^4.5.5\n        \n            @mikro-orm/mongodb : ^4.5.5\n        \n            @mikro-orm/nestjs : ^4.3.0\n        \n            @nestjs/common : ^8.0.9\n        \n            @nestjs/core : ^8.0.9\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/microservices : ^8.0.9\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.9\n        \n            @nestjs/swagger : ^5.1.0\n        \n            @sentry/node : ^6.2.0\n        \n            ajv : ^8.5.0\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.8.0\n        \n            arg : ^5.0.0\n        \n            args : ^5.0.1\n        \n            async : ^2.6.0\n        \n            aws-sdk : ^2.970.0\n        \n            axios : ^0.22.0\n        \n            bbb-promise : ^1.2.0\n        \n            bcryptjs : latest\n        \n            body-parser : ^1.15.2\n        \n            bson : ^4.5.1\n        \n            chalk : ^4.0.0\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            client-oauth2 : ^4.2.5\n        \n            commander : ^8.1.0\n        \n            compression : ^1.6.2\n        \n            concurrently : ^6.0.0\n        \n            cors : ^2.8.1\n        \n            cross-env : ^7.0.0\n        \n            crypto-js : ^4.0.0\n        \n            disposable-email-domains : ^1.0.56\n        \n            es6-promisify : ^7.0.0\n        \n            eslint-plugin-react : ^7.24.0\n        \n            eslint-plugin-react-hooks : ^4.2.0\n        \n            express : ^4.14.0\n        \n            express-openapi-validator : 4.7.1\n        \n            feathers-hooks-common : ^5.0.3\n        \n            feathers-mongoose : ^6.3.0\n        \n            feathers-swagger : ^1.1.0\n        \n            file-type : ^16.2.0\n        \n            freeport : ^1.0.5\n        \n            html-entities : ^2.3.2\n        \n            jose : ^1.28.1\n        \n            jsonwebtoken : 8.5.1\n        \n            ldapjs : git://github.com/hpi-schul-cloud/node-ldapjs.git\n        \n            lodash : ^4.17.19\n        \n            migrate-mongoose : ^4.0.0\n        \n            mixwith : ^0.1.1\n        \n            moment : ^2.19.2\n        \n            mongodb-uri : ^0.9.7\n        \n            mongoose : ^5.13.9\n        \n            mongoose-delete : ^0.5.4\n        \n            mongoose-diff-history : git://github.com/schul-cloud/mongoose-diff-history.git\n        \n            mongoose-history : ^0.8.0\n        \n            mongoose-id-validator : ^0.6.0\n        \n            mongoose-lean-virtuals : ^0.8.1\n        \n            mongoose-shortid-nodeps : git://github.com/leeroybrun/mongoose-shortid-nodeps.git\n        \n            moodle-client : ^0.5.2\n        \n            nanoid : ^3.1.20\n        \n            nestjs-console : ^7.0.0\n        \n            oauth-1.0a : ^2.2.6\n        \n            papaparse : ^5.1.1\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prom-client : ^12.0.0\n        \n            prometheus-api-metrics : ^3.1.0\n        \n            qs : ^6.9.4\n        \n            read-chunk : ^3.0.0\n        \n            redis : ^3.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request-promise-core : ^1.1.4\n        \n            request-promise-native : ^1.0.3\n        \n            rimraf : ^3.0.2\n        \n            rss-parser : ^3.6.2\n        \n            rxjs : ^7.3.1\n        \n            sanitize-html : ^2.1.0\n        \n            serve-favicon : ^2.3.2\n        \n            service : ^0.1.4\n        \n            socketio-file-upload : ^0.7.0\n        \n            source-map-support : ^0.5.19\n        \n            strip-bom : ^4.0.0\n        \n            swagger-ui-express : ^4.1.6\n        \n            tiny-async-pool : ^1.2.0\n        \n            universal-analytics : ^0.4.17\n        \n            urlsafe-base64 : ^1.0.0\n        \n            uuid : ^8.3.0\n        \n            wait-on : ^6.0.0\n        \n            winston : ^3.2.0\n        \n            xml2js-es6-promise : ^1.1.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NewsTargetModel   (apps/.../news.types.ts)\n                        \n                        \n                            SortOrder   (apps/.../find-options.ts)\n                        \n                        \n                            TaskDashBoardPermission   (apps/.../task.uc.ts)\n                        \n                        \n                            TaskParentPermission   (apps/.../task.authorization.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/types/news.types.ts\n    \n        \n            \n                \n                    \n                        \n                        NewsTargetModel\n                    \n                \n                        \n                            \n                                 School\n                            \n                        \n                        \n                            \n                                Value : schools\n                            \n                        \n                        \n                            \n                                 Course\n                            \n                        \n                        \n                            \n                                Value : courses\n                            \n                        \n                        \n                            \n                                 Team\n                            \n                        \n                        \n                            \n                                Value : teams\n                            \n                        \n            \n        \n\n    apps/server/src/shared/domain/interface/find-options.ts\n    \n        \n            \n                \n                    \n                        \n                        SortOrder\n                    \n                \n                        \n                            \n                                 asc\n                            \n                        \n                        \n                            \n                                Value : asc\n                            \n                        \n                        \n                            \n                                 desc\n                            \n                        \n                        \n                            \n                                Value : desc\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.uc.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskDashBoardPermission\n                    \n                \n                        \n                            \n                                 teacherDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_TEACHER_VIEW_V3\n                            \n                        \n                        \n                            \n                                 studentDashboard\n                            \n                        \n                        \n                            \n                                Value : TASK_DASHBOARD_VIEW_V3\n                            \n                        \n            \n        \n\n    apps/server/src/modules/task/uc/task.authorization.service.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskParentPermission\n                    \n                \n                        \n                            \n                                 read\n                            \n                        \n                        \n                            \n                                 write\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            bootstrap   (apps/.../management.ts)\n                        \n                        \n                            createErrorResponseForBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForUnknownError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createStorageProviderClient   (apps/.../filestorage.adapter.ts)\n                        \n                        \n                            DecodeHtmlEntities   (apps/.../decode-html-entities.transformer.ts)\n                        \n                        \n                            StringToBoolean   (apps/.../string-to-boolean.transformer.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/management.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponseForBusinessError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForBusinessError(error: BusinessError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                BusinessError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForFeathersError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForFeathersError(error: FeathersError)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                FeathersError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForUnknownError\n                        \n                    \n                \n            \n            \n                \ncreateErrorResponseForUnknownError(error?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/infra/filestorage/filestorage.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createStorageProviderClient\n                        \n                    \n                \n            \n            \n                \ncreateStorageProviderClient(storageProvider: StorageProvider)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storageProvider\n                                    \n                                                StorageProvider\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     S3Client\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/decode-html-entities.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DecodeHtmlEntities\n                        \n                    \n                \n            \n            \n                \nDecodeHtmlEntities()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a string value so that all contained html entities are decoded.\nThe purpose of this decorator is to revert html entity encodings that come from generic\ninput sanitization in the legacy server. We don't need this encoding in the output of our API\nbecause in common template systems (e.g handlebars and vue.js) strings are generally\nescaped for the output. That leads to wrong text output because html entities are rendered \"as is\"\nwith all characters encoded again.\nExamples:\n\nwhen text = \"X & Y\" and template is {{ text }} it is rendered as \"X &amp; Y\" => wrong\nwhen text = \"X & Y\"     and template is {{ text }} it is rendered as \"X & Y\"      => good\n\n(both for vue.js and handlebars)\nUse this decorator in your response DTO wherever redundant html encoding from the legacy server has to be reverted.\nIMPORTANT: Should be removed later when sanitization works properly\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        the string with decoded html entities\n\n                    \n                \n            \n        \n    \n    apps/server/src/shared/controller/transformer/string-to-boolean.transformer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StringToBoolean\n                        \n                    \n                \n            \n            \n                \nStringToBoolean()\n                \n            \n\n\n\n\n            \n                \n                    Decorator to transform a boolish string value to a boolean.\nAccepts: '1', 'true', '0', 'false' with type string only.\n\n\n                    \n                    \n                    \n                        Returns :     PropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nHPI Schul-Cloud Server\nDevelop: \nMaster: \nDevelop: \nMaster: \nCodacy: \n\nNestJS application\n\nFind the NestJS applications documentation of this repository at GitHub pages. It contains information about\n\n\nsetup & preconditions\nstarting the application\ntesting\ntools setup (VSCode, Git)\narchitecture\n\nBased on NestJS\nFeathers application\nThis is legacy part of the application!\nBased on Node.js and Feathers\nApplication seperation\nIn order to seperate NestJS and Feathers each application runs in its own express instance. These express instances are then mounted on seperate paths under a common root express instance.\nRoot-Express-App \n├─ api/v1/       --> Feathers-App\n├─ api/v3/       --> NestJS-AppThis ensures that each application can run its own middleware stack for authentication, error handling, logging etc.\nThe mount paths don't have any impact on the routes inside of the applications, e.g. the path /api/v3/news will translate to the inner path /news. That means that in terms of route matching each child application doesn't have to take any measures regarding the path prefix. It simply works as it was mounted to /.\nHowever note that when URLs are generated inside a child application the path prefix has to be prepended. Only then the generated URLs match the appropriate child application, e.g. the path /news has to be provided as the external path /api/v3/news.\nIt is possible (not very likely) that the server api is called with URLs that use the old schema without a path prefix. As a safety net for that we additionally mount the Feathers application as before under the paths:\n\n/ - for internal calls\n/api - for external calls\n\nWhen these paths are accessed an error with context [DEPRECATED-PATH] is logged.\nSetup\nFor more detailed setup instructions, take a look at setup.\nThe whole application setup with all dependencies can be found in System Architecture. It contains information about how different application components are connected to each other.\nDebugger Configuration in Visual Studio Code\nFor more details how to set up Visual Studio Code, read this document.\nHow to name your branch and create a pull request (PR)\n\nTake the Ticket Number from JIRA (ticketsystem.hpi-schul-cloud.org), e.g. SC-999\nName the feature branch beginning with Ticket Number, all words separated by dash \"-\", e.g. feature/SC-999-fantasy-problem\nCreate a PR on branch develop containing the Ticket Number in PR title\nKeep the WIP label as long as this PR is in development, complete PR checklist (is automatically added), keep or increase code test coverage, and pass all tests before you remove the WIP label. Reviewers will be added automatically. For more information check our Definition of Done here.\n\nCommitting\nDefault branch: develop\n\nGo into project folder\nCheckout to develop branch (or clone for the first time)\nRun git pull\nCreate a branch for your new feature named feature/SC-Ticket-ID-Description\nRun the tests (see above)\nCommit with a meaningful commit message(!) even at 4 a.m. and not stuff like \"dfsdfsf\"\nStart a pull request (see above) to branch develop to merge your changes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\nhttp://www.gnu.org/licenses/.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthorizationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleWriterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EncryptionModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ErrorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeathersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileSystemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LearnroomModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManagementModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MongoMemoryDatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ValidationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthorizationModule\n\n\n\ncluster_AuthorizationModule_imports\n\n\n\ncluster_AuthorizationModule_exports\n\n\n\ncluster_AuthorizationModule_providers\n\n\n\ncluster_ConsoleWriterModule\n\n\n\ncluster_ConsoleWriterModule_exports\n\n\n\ncluster_ConsoleWriterModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_DatabaseManagementModule\n\n\n\ncluster_DatabaseManagementModule_imports\n\n\n\ncluster_DatabaseManagementModule_exports\n\n\n\ncluster_FeathersModule\n\n\n\ncluster_FeathersModule_exports\n\n\n\ncluster_FeathersModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FileSystemModule\n\n\n\ncluster_FileSystemModule_exports\n\n\n\ncluster_FileSystemModule_providers\n\n\n\ncluster_LearnroomModule\n\n\n\ncluster_LearnroomModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ManagementModule\n\n\n\ncluster_ManagementModule_providers\n\n\n\ncluster_NewsModule\n\n\n\ncluster_NewsModule_exports\n\n\n\ncluster_NewsModule_providers\n\n\n\ncluster_ServerConsoleModule\n\n\n\ncluster_ServerModule\n\n\n\ncluster_ServerModule_imports\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nServerModule\n\nServerModule\n\nServerModule -->\n\nUserModule->ServerModule\n\n\n\n\n\nUserFacade \n\nUserFacade \n\nUserFacade  -->\n\nUserModule->UserFacade \n\n\n\nServerModule -->\n\nAuthModule->ServerModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtValidationAdapter\n\nJwtValidationAdapter\n\nAuthModule -->\n\nJwtValidationAdapter->AuthModule\n\n\n\n\n\nFeathersModule\n\nFeathersModule\n\n\n\nAuthorizationModule\n\nAuthorizationModule\n\nAuthorizationModule -->\n\nFeathersModule->AuthorizationModule\n\n\n\n\n\nFeathersServiceProvider \n\nFeathersServiceProvider \n\nFeathersServiceProvider  -->\n\nFeathersModule->FeathersServiceProvider \n\n\n\n\n\nAuthorizationService \n\nAuthorizationService \n\nAuthorizationService  -->\n\nAuthorizationModule->AuthorizationService \n\n\n\n\n\nNewsModule\n\nNewsModule\n\nNewsModule -->\n\nAuthorizationModule->NewsModule\n\n\n\n\n\nAuthorizationService\n\nAuthorizationService\n\nAuthorizationModule -->\n\nAuthorizationService->AuthorizationModule\n\n\n\n\n\nFeathersAuthProvider\n\nFeathersAuthProvider\n\nAuthorizationModule -->\n\nFeathersAuthProvider->AuthorizationModule\n\n\n\n\n\nConsoleWriterService \n\nConsoleWriterService \n\n\n\nConsoleWriterModule\n\nConsoleWriterModule\n\nConsoleWriterService  -->\n\nConsoleWriterModule->ConsoleWriterService \n\n\n\n\n\nServerConsoleModule\n\nServerConsoleModule\n\nServerConsoleModule -->\n\nConsoleWriterModule->ServerConsoleModule\n\n\n\n\n\nConsoleWriterService\n\nConsoleWriterService\n\nConsoleWriterModule -->\n\nConsoleWriterService->ConsoleWriterModule\n\n\n\n\n\nManagementModule\n\nManagementModule\n\nManagementModule -->\n\nConsoleWriterService->ManagementModule\n\n\n\n\n\nErrorModule\n\nErrorModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nErrorModule->CoreModule\n\n\n\n\n\nInterceptorModule\n\nInterceptorModule\n\nCoreModule -->\n\nInterceptorModule->CoreModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCoreModule -->\n\nLoggerModule->CoreModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nLoggerModule->FilesModule\n\n\n\n\n\nLogger \n\nLogger \n\nLogger  -->\n\nLoggerModule->Logger \n\n\n\nNewsModule -->\n\nLoggerModule->NewsModule\n\n\n\n\n\nValidationModule\n\nValidationModule\n\nCoreModule -->\n\nValidationModule->CoreModule\n\n\n\nServerModule -->\n\nCoreModule->ServerModule\n\n\n\n\n\nDatabaseManagementService\n\nDatabaseManagementService\n\n\n\nDatabaseManagementModule\n\nDatabaseManagementModule\n\nDatabaseManagementModule -->\n\nDatabaseManagementService->DatabaseManagementModule\n\n\n\nManagementModule -->\n\nDatabaseManagementService->ManagementModule\n\n\n\n\n\nDatabaseManagementService \n\nDatabaseManagementService \n\nDatabaseManagementService  -->\n\nDatabaseManagementModule->DatabaseManagementService \n\n\n\nManagementModule -->\n\nDatabaseManagementModule->ManagementModule\n\n\n\n\n\nFeathersServiceProvider\n\nFeathersServiceProvider\n\nFeathersModule -->\n\nFeathersServiceProvider->FeathersModule\n\n\n\nServerConsoleModule -->\n\nFilesModule->ServerConsoleModule\n\n\n\nServerModule -->\n\nFilesModule->ServerModule\n\n\n\n\n\nDeleteFilesUc\n\nDeleteFilesUc\n\nFilesModule -->\n\nDeleteFilesUc->FilesModule\n\n\n\n\n\nFileStorageAdapter\n\nFileStorageAdapter\n\nFilesModule -->\n\nFileStorageAdapter->FilesModule\n\n\n\n\n\nFilesRepo\n\nFilesRepo\n\nFilesModule -->\n\nFilesRepo->FilesModule\n\n\n\n\n\nStorageProviderRepo\n\nStorageProviderRepo\n\nFilesModule -->\n\nStorageProviderRepo->FilesModule\n\n\n\n\n\nFileSystemAdapter \n\nFileSystemAdapter \n\n\n\nFileSystemModule\n\nFileSystemModule\n\nFileSystemAdapter  -->\n\nFileSystemModule->FileSystemAdapter \n\n\n\nManagementModule -->\n\nFileSystemModule->ManagementModule\n\n\n\n\n\nFileSystemAdapter\n\nFileSystemAdapter\n\nFileSystemModule -->\n\nFileSystemAdapter->FileSystemModule\n\n\n\n\n\nDashboardUc\n\nDashboardUc\n\n\n\nLearnroomModule\n\nLearnroomModule\n\nLearnroomModule -->\n\nDashboardUc->LearnroomModule\n\n\n\nServerModule -->\n\nLearnroomModule->ServerModule\n\n\n\n\n\nLogger\n\nLogger\n\nLoggerModule -->\n\nLogger->LoggerModule\n\n\n\nServerConsoleModule -->\n\nManagementModule->ServerConsoleModule\n\n\n\n\n\nBsonConverter\n\nBsonConverter\n\nManagementModule -->\n\nBsonConverter->ManagementModule\n\n\n\n\n\nDatabaseManagementUc\n\nDatabaseManagementUc\n\nManagementModule -->\n\nDatabaseManagementUc->ManagementModule\n\n\n\n\n\nNewsUc \n\nNewsUc \n\nNewsUc  -->\n\nNewsModule->NewsUc \n\n\n\nServerModule -->\n\nNewsModule->ServerModule\n\n\n\n\n\nNewsRepo\n\nNewsRepo\n\nNewsModule -->\n\nNewsRepo->NewsModule\n\n\n\n\n\nNewsUc\n\nNewsUc\n\nNewsModule -->\n\nNewsUc->NewsModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nServerModule -->\n\nMailModule->ServerModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nServerModule -->\n\nTaskModule->ServerModule\n\n\n\n\n\nCourseRepo\n\nCourseRepo\n\nTaskModule -->\n\nCourseRepo->TaskModule\n\n\n\n\n\nLessonRepo\n\nLessonRepo\n\nTaskModule -->\n\nLessonRepo->TaskModule\n\n\n\n\n\nTaskAuthorizationService\n\nTaskAuthorizationService\n\nTaskModule -->\n\nTaskAuthorizationService->TaskModule\n\n\n\n\n\nTaskRepo\n\nTaskRepo\n\nTaskModule -->\n\nTaskRepo->TaskModule\n\n\n\n\n\nTaskUC\n\nTaskUC\n\nTaskModule -->\n\nTaskUC->TaskModule\n\n\n\n\n\nRoleRepo\n\nRoleRepo\n\nUserModule -->\n\nRoleRepo->UserModule\n\n\n\n\n\nRoleUC\n\nRoleUC\n\nUserModule -->\n\nRoleUC->UserModule\n\n\n\n\n\nUserFacade\n\nUserFacade\n\nUserModule -->\n\nUserFacade->UserModule\n\n\n\n\n\nUserRepo\n\nUserRepo\n\nUserModule -->\n\nUserRepo->UserModule\n\n\n\n\n\nUserUC\n\nUserUC\n\nUserModule -->\n\nUserUC->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        22 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    38 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    71 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    42 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTechnical TODO around Nest Introduction\nSUGGESTED\n\nfilter logs by request with reflect-metadata (see mikroorm em setup)\ndisable Document from window\nfind a name for base entity id type\nfind a name for base entity class\ndecide if we want to use our entity id type in all layers (also in dtos etc.)\nuse index.ts files to bundle exports - we could use path names for imports then, e.g. @shared/domain\ncheck how we can implement mandatory/optional fields in dtos\nshould we use Expose() as default in dtos?\nin the controller we have to prohibit serialization of properties that have no @EXPOSE\nfind the best way ORM entity discovery\ndecide where to put domain interfaces (directory)\nhow can we log validation errors during development?\nsanitizer\nremove non-node async library\nfix async cleanup & remove timeout in tests\ntest object creator for nest entities\nenable log only for failed tests: https://stackoverflow.com/a/61909588\nremove sentry from code\nremove mongoose history (keep one)\nremove custom npm packages (ldap, ...)\ne2e default tests to extend: auth required, fails without/succeeds with\n\nACCEPTED\n\ndocumentation\n\nentity constructor\nem to be used in repositories only (!!!)\n\n\nload/perf test\n\ndisable legacy ts support (app, tests)\n\nfix .env/config for windows\n\n\nMERGE\n\napi path prefix cleanup: remove middleware and multiple path mounts, sync with nest\nuser module stucture\nsingle domain: shared entity (main.ts), shared repository \nrequest.user.user in jwt strategy\nremove outdated sorting.ts \nremove default launch/settings json files, apply them\nfix https://github.com/hpi-schul-cloud/schulcloud-server/pull/2729#pullrequestreview-699615164\n\nSELECTED\n\ntest shared / core module \n\nasync test fixes (remove this.timeout and red promise chains)\n\ndb configuration\n\nkeep mongoose options as mongo options\npovider for mikroorm options and db url\ntest db provider\nentity discovery\ncheck indexes in mikroorm: when are they updated?\nteardown (test, server module, main.ts)\nreplikaset for test module\nentity discovery\n\n\nnews\n\nuc cleanup: 2auth, visibilities\ndocument best practices/layers/orm\n\n\ncontext: user-/request-context (see mikroorm/asynclocalstorage)\n\n\nDONE\n\ncheck build & start for production with ops\nfix jest, linter, ...\ninject APP_FILTER (exception handler) and APP_INTERCEPTOR (logger), see core module\ncustom error handling (log/response), see global-error.filter.ts\nwatch docs should hot reload on md file change\n404 error handling in feathers has to be replaced (tests too). better: have nest before feathers... but seems not to be working\nremove mongoose\npublish documentation, see https://hpi-schul-cloud.github.io/schulcloud-server/overview.html\nfix all tests (nest/legacy)\nremove legacy scripts from package json (except tests) goal: have separated tests (legacy/nest) but only execute the nest app\nusing legacy database connection string\nv3 with/-out slash: diffenrent routes should respond with different result (/v3 is a resssource, /v3/ === /v3/index)\nvscode/lauch files: we put only default files into the repo\nnaming of dtos and dto-files: api vs domain, we leave out \"dto\" suffix for simplicity (we know that they are dtos) and instead append a specific suffix:\ne.g.\napi: , , \ndomain: , \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConnectionOptions   (apps/.../types.ts)\n                        \n                        \n                            Counted   (apps/.../counted.ts)\n                        \n                        \n                            DashboardProps   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            EmptyResultQueryType   (apps/.../scope.ts)\n                        \n                        \n                            EntityId   (apps/.../entity-id.ts)\n                        \n                        \n                            FeathersServiceParams   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            FeathersServiceResponse   (apps/.../feathers-service.provider.ts)\n                        \n                        \n                            GridElementContent   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridElementReferenceMetadata   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridElementWithPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPosition   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            GridPositionWithGroupIndex   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            IPermissionsAndRoles   (apps/.../user.ts)\n                        \n                        \n                            IUpdateNews   (apps/.../news.types.ts)\n                        \n                        \n                            MongoDatabaseModuleOptions   (apps/.../types.ts)\n                        \n                        \n                            NewsTarget   (apps/.../news.types.ts)\n                        \n                        \n                            Permission   (apps/.../news.uc.ts)\n                        \n                        \n                            RabbitMqModuleOptions   (apps/.../mail.module.ts)\n                        \n                        \n                            Role   (apps/.../ResolvedUser.dto.ts)\n                        \n                        \n                            ScopeOperator   (apps/.../scope.ts)\n                        \n                        \n                            SortOrderMap   (apps/.../find-options.ts)\n                        \n                        \n                            SourceType   (apps/.../news.response.ts)\n                        \n                        \n                            Strategies   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TaskParentDescriptions   (apps/.../task.entity.ts)\n                        \n                        \n                            ValueOf   (apps/.../value-of.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/modules/database/mongo-memory-database/types.ts\n    \n    \n        \n            \n                \n                    \n                    ConnectionOptions\n                \n            \n            \n                \n                    connection options not to be used in module options for the in memory db module as it is overriding the connection\n\n                \n            \n            \n                \n                        \"type\" | \"driver\" | \"clientUrl\" | \"dbName\" | \"user\" | \"password\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MongoDatabaseModuleOptions\n                \n            \n            \n                \n                            Omit\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/counted.ts\n    \n    \n        \n            \n                \n                    \n                    Counted\n                \n            \n            \n                \n                    Counted numbers inform about total counts beside the amount of items in T.\n\n                \n            \n            \n                \n                        [T, number]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n    \n        \n            \n                \n                    \n                    DashboardProps\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementContent\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementReferenceMetadata\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridElementWithPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPosition\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GridPositionWithGroupIndex\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/repo/scope.ts\n    \n    \n        \n            \n                \n                    \n                    EmptyResultQueryType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ScopeOperator\n                \n            \n            \n                \n                        \"$and\" | \"$or\"\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/entity-id.ts\n    \n    \n        \n            \n                \n                    \n                    EntityId\n                \n            \n            \n                \n                    Entity id type\n\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    apps/server/src/modules/feathers/feathers-service.provider.ts\n    \n    \n        \n            \n                \n                    \n                    FeathersServiceParams\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FeathersServiceResponse\n                \n            \n            \n                \n                        Record | any[]\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/user.ts\n    \n    \n        \n            \n                \n                    \n                    IPermissionsAndRoles\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/news.types.ts\n    \n    \n        \n            \n                \n                    \n                    IUpdateNews\n                \n            \n            \n                \n                    news interface for updating news\n\n                \n            \n            \n                \n                            Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NewsTarget\n                \n            \n            \n                \n                        School | Team | Course\n\n                \n            \n        \n    \n    apps/server/src/modules/news/uc/news.uc.ts\n    \n    \n        \n            \n                \n                    \n                    Permission\n                \n            \n            \n                \n                        \"NEWS_VIEW\" | \"NEWS_EDIT\"\n\n                \n            \n        \n    \n    apps/server/src/modules/mail/mail.module.ts\n    \n    \n        \n            \n                \n                    \n                    RabbitMqModuleOptions\n                \n            \n            \n                \n                        Omit\n\n                \n            \n        \n    \n    apps/server/src/modules/user/controller/dto/ResolvedUser.dto.ts\n    \n    \n        \n            \n                \n                    \n                    Role\n                \n            \n            \n                \n                            IRole\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/interface/find-options.ts\n    \n    \n        \n            \n                \n                    \n                    SortOrderMap\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n    \n        \n            \n                \n                    \n                    SourceType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n    \n        \n            \n                \n                    \n                    Strategies\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/server/src/shared/domain/entity/task.entity.ts\n    \n    \n        \n            \n                \n                    \n                    TaskParentDescriptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    apps/server/src/shared/domain/types/value-of.ts\n    \n    \n        \n            \n                \n                    \n                    ValueOf\n                \n            \n            \n                \n                    The type of the values in T (counterpart to keyof)\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ENTITIES   (apps/.../all-entities.ts)\n                        \n                        \n                            Authenticate   (apps/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (apps/.../console.ts)\n                        \n                        \n                            config   (jest.config.ts)\n                        \n                        \n                            config   (apps/.../swagger.ts)\n                        \n                        \n                            courseFactory   (apps/.../course.factory.ts)\n                        \n                        \n                            createCurrentTestUser   (apps/.../createCurrentTestUser.ts)\n                        \n                        \n                            createErrorResponse   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createErrorResponseForHttpException   (apps/.../global-error.filter.ts)\n                        \n                        \n                            createMikroOrmModule   (apps/.../mongo-memory-database.module.ts)\n                        \n                        \n                            createRabbitMqModule   (apps/.../mail.module.ts)\n                        \n                        \n                            createTestModule   (apps/.../create-test.module.ts)\n                        \n                        \n                            CurrentUser   (apps/.../auth.decorator.ts)\n                        \n                        \n                            DEFAULT   (apps/.../course.entity.ts)\n                        \n                        \n                            defaultColumns   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            defaultRows   (apps/.../dashboard.entity.ts)\n                        \n                        \n                            delay   (apps/.../create-test.module.ts)\n                        \n                        \n                            EmptyResultQuery   (apps/.../empty-result.query.ts)\n                        \n                        \n                            enableOpenApiDocs   (apps/.../swagger.ts)\n                        \n                        \n                            execute   (apps/.../bootstrap.console.ts)\n                        \n                        \n                            fileFactory   (apps/.../file.factory.ts)\n                        \n                        \n                            generateHardcodedTestDashboard   (apps/.../dashboard.repo.ts)\n                        \n                        \n                            hardcodedTestDashboardId   (apps/.../dashboard.repo.ts)\n                        \n                        \n                            isBusinessError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isFeathersError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            isTechnicalError   (apps/.../global-error.filter.ts)\n                        \n                        \n                            jwtConstants   (apps/.../constants.ts)\n                        \n                        \n                            NEWS_SOURCES   (apps/.../news.response.ts)\n                        \n                        \n                            NOT_FOUND_ERROR_TYPE   (apps/.../server-error-types.ts)\n                        \n                        \n                            REQUEST_TIMEOUT   (apps/.../constants.ts)\n                        \n                        \n                            schoolFactory   (apps/.../school.factory.ts)\n                        \n                        \n                            serverErrorTypes   (apps/.../server-error-types.ts)\n                        \n                        \n                            setupEntities   (apps/.../setup-entities.ts)\n                        \n                        \n                            storageProviderFactory   (apps/.../storageprovider.factory.ts)\n                        \n                        \n                            STRATEGIES   (apps/.../auth.decorator.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../create-news.params.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news-filter.query.ts)\n                        \n                        \n                            TARGET_MODEL_VALUES   (apps/.../news.response.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                               (jest.config.ts)\n                        \n                        \n                            usedGlobals   (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../database.config.ts)\n                        \n                        \n                               (apps/.../server-error-types.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            writeErrorLog   (apps/.../global-error.filter.ts)\n                        \n                        \n                            writeValidationErrors   (apps/.../global-error.filter.ts)\n                        \n                        \n                               (apps/.../jwt-validation.adapter.ts)\n                        \n                        \n                               (apps/.../constants.ts)\n                        \n                        \n                            userFactory   (apps/.../user.factory.ts)\n                        \n                        \n                               (apps/.../file-system.adapter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/server/src/shared/domain/entity/all-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ENTITIES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\tCourse,\n\tCourseGroup,\n\tDashboardModelEntity,\n\tDashboardGridElementModel,\n\tDefaultGridReferenceModel,\n\tBaseFile,\n\tFile,\n\tDirectory,\n\tStorageProvider,\n\tLesson,\n\tRole,\n\tSchool,\n\tSubmission,\n\tTask,\n\tTeam,\n\tUser,\n\tCourseNews,\n\tNews,\n\tSchoolNews,\n\tTeamNews,\n]\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/decorator/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...strategies: Strategies) => {\n\tif (strategies.includes('jwt')) {\n\t\tconst decorators = [\n\t\t\t// apply jwt authentication\n\t\t\tUseGuards(JwtAuthGuard),\n\t\t\t// add jwt authentication to openapi spec\n\t\t\tApiBearerAuth(),\n\t\t];\n\t\treturn applyDecorators(...decorators);\n\t}\n\tthrow new ForbiddenException('jwt strategy required');\n}\n                    \n                \n\n            \n                \n                    Authentication Decorator taking care of require authentication header to be present, setting up the user context and extending openAPI spec.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n\tconst { user }: Request = ctx.switchToHttp().getRequest();\n\tif (!user)\n\t\tthrow new UnauthorizedException(\n\t\t\t'CurrentUser missing in request context. This route requires jwt authentication guard enabled.'\n\t\t);\n\treturn user as ICurrentUser;\n})\n                    \n                \n\n            \n                \n                    Returns the current authenticated user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRATEGIES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['jwt'] as const\n                    \n                \n\n\n        \n    \n\n    apps/server/src/console/console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BootstrapConsole({\n\tmodule: ServerConsoleModule,\n\tuseDecorators: true,\n})\n                    \n                \n\n            \n                \n                    The console is starting the application wrapped into commander.\nThis allows adding console commands to execute provider methods.\n\n                \n            \n\n        \n    \n\n    jest.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Config.InitialOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n\tmoduleFileExtensions: ['js', 'json', 'ts'],\n\trootDir: '.',\n\t/* we have tests in src/...*.spec.ts and test/...*.e2e-spec.ts either we test all files via `npm run nest:test` or override the regex in npm scripts to separate the execution via `npm run nest:test:spec` or `npm run nest:test:e2e` */\n\ttestRegex: '\\\\.(e2e-)?spec\\\\.ts$',\n\t// ignore legacy mocha tests\n\ttestPathIgnorePatterns: ['^src', '^test'],\n\ttransform: {\n\t\t'^.+\\\\.(t|j)s$': 'ts-jest',\n\t},\n\tcollectCoverageFrom: ['apps/**/*.(t|j)s'],\n\tcoverageDirectory: './coverage',\n\tcoveragePathIgnorePatterns: ['.module.ts$', 'index.ts$', 'spec.ts$'],\n\tcoverageThreshold: {\n\t\tglobal: {\n\t\t\tbranches: 80,\n\t\t\tfunctions: 80,\n\t\t\tlines: 80,\n\t\t\tstatements: -10,\n\t\t},\n\t\t// add custom paths: './apps/server/path...': { branches: X, functions: ... }\n\t},\n\ttestEnvironment: 'node',\n\t// detectOpenHandles: true,\n\t// detectLeaks: true,\n\troots: ['/apps/'],\n\tmoduleNameMapper: {\n\t\t// add ts-config path's here as regex\n\t\t'^@shared/(.*)$': '/apps/server/src/shared/$1',\n\t\t'^@src/(.*)$': '/apps/server/src/$1',\n\t},\n\tmaxWorkers: 2, // limited for not taking all workers within of a single github action\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('ts-jest/utils')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('./tsconfig.json')\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/controller/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n\t.setTitle('HPI Schul-Cloud Server API')\n\t.setDescription('This is v3 of HPI Schul-Cloud Server. Checkout /docs for v1.')\n\t.setVersion('3.0')\n\t/** set authentication for all routes enabled by default */\n\t.addBearerAuth({ type: 'http', scheme: 'bearer', bearerFormat: 'JWT' })\n\t.build()\n                    \n                \n\n            \n                \n                    \nOpenAPI docs setup\n\nThey will be generated by Controller routes\nand DTOs/Entities passed. Their properties\nmust use @ApiProperty\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enableOpenApiDocs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (app: INestApplication, path: string): void => {\n\tconst document = SwaggerModule.createDocument(app, config);\n\tSwaggerModule.setup(path, app, document);\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/factory/course.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        courseFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: {\n\t\tname?: string;\n\t\tdescription?: string;\n\t\tcolor?: string;\n\t\tschool?: School;\n\t\tstudents?: User[];\n\t\tteachers?: User[];\n\t\tsubstitutionTeachers?: User[];\n\t}): Course => {\n\t\tconst course = new Course({\n\t\t\tname: 'course #1',\n\t\t\tdescription: 'course #1 description',\n\t\t\tcolor: '#FFFFFF',\n\t\t\tschool: schoolFactory.build(),\n\t\t\t...(props || {}),\n\t\t});\n\n\t\treturn course;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/user/utils/createCurrentTestUser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCurrentTestUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n\tinitPermissions?: string[]\n): {\n\tcurrentUser: ICurrentUser;\n\tuser: User;\n\troles: Role[];\n} => {\n\tconst accountId = new ObjectId().toHexString();\n\tconst school = schoolFactory.build();\n\tschool._id = new ObjectId();\n\tschool.id = school._id.toHexString();\n\tconst userIdObject = new ObjectId();\n\tconst userId = userIdObject.toHexString();\n\n\tconst permissions = initPermissions || ['A', 'B'];\n\tconst roles = [new Role({ name: 'name', permissions })] as Role[];\n\tconst roleIds = roles.map((role) => role.id);\n\n\tconst user = new User({ email: `Date.now()@email.de`, roles, school });\n\tuser._id = userIdObject;\n\tuser.id = userId;\n\tconst resolvedUser = ResolvedUserMapper.mapToResponse(user, permissions, roles);\n\n\tconst currentUser = { userId, roles: roleIds, schoolId: school.id, accountId, user: resolvedUser } as ICurrentUser;\n\treturn { currentUser, user, roles };\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/filter/global-error.filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createErrorResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): ErrorResponse => {\n\ttry {\n\t\tif (error instanceof Error) {\n\t\t\tif (isFeathersError(error)) {\n\t\t\t\t// handles feathers errors only when calling feathers services from nest app\n\t\t\t\treturn createErrorResponseForFeathersError(error);\n\t\t\t}\n\t\t\tif (isBusinessError(error)) {\n\t\t\t\t// create response from business error using 409/conflict\n\t\t\t\treturn createErrorResponseForBusinessError(error);\n\t\t\t}\n\t\t\tif (isTechnicalError(error)) {\n\t\t\t\t// create response from technical error\n\t\t\t\treturn createErrorResponseForHttpException(error);\n\t\t\t}\n\t\t}\n\t\t// create response from unknown error\n\t\treturn createErrorResponseForUnknownError(error);\n\t} catch (exception) {\n\t\tconst stack = exception instanceof Error ? exception.stack : undefined;\n\t\tlogger.error(exception, stack, 'Response Error');\n\t\treturn createErrorResponseForUnknownError();\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createErrorResponseForHttpException\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (exception: HttpException): ErrorResponse => {\n\tconst code = exception.getStatus();\n\tconst msg = exception.message || 'Some error occurred';\n\tconst exceptionName = exception.constructor.name.replace('Exception', '');\n\tconst type = _.snakeCase(exceptionName).toUpperCase();\n\tconst title = _.startCase(exceptionName);\n\treturn new ErrorResponse(type, title, msg, code);\n}\n                    \n                \n\n            \n                \n                    Creates ErrorResponse from NestJS build in technical exceptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isBusinessError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is BusinessError => {\n\treturn error instanceof BusinessError;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFeathersError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is FeathersError => {\n\tif (!(error && 'type' in error)) return false;\n\treturn (error as FeathersError)?.type === 'FeathersError';\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTechnicalError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: Error): error is HttpException => {\n\treturn error instanceof HttpException;\n}\n                    \n                \n\n            \n                \n                    Compare helper to detect an error is a build in NestJS http exception.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeErrorLog\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: unknown, logger: ILogger): void => {\n\tif (error instanceof Error) {\n\t\tif (isFeathersError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Feathers Error');\n\t\t} else if (isBusinessError(error)) {\n\t\t\tif (error instanceof ApiValidationError) {\n\t\t\t\twriteValidationErrors(error, logger);\n\t\t\t} else {\n\t\t\t\tlogger.error(error, error.stack, 'Business Error');\n\t\t\t}\n\t\t} else if (isTechnicalError(error)) {\n\t\t\tlogger.error(error, error.stack, 'Technical Error');\n\t\t} else {\n\t\t\tlogger.error(error, error.stack, 'Unhandled Error');\n\t\t}\n\t} else {\n\t\tlogger.error(error, 'Unknown error');\n\t}\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValidationErrors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (error: ApiValidationError, logger: ILogger) => {\n\tconst errorMsg = error.validationErrors.map(\n\t\t// eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\t\t(e) => `Wrong property ${e.property} got ${e.value} : ${JSON.stringify(e.constraints)}`\n\t);\n\tlogger.error(errorMsg, error.stack, 'API Validation Error');\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/mongo-memory-database/mongo-memory-database.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createMikroOrmModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (options: MikroOrmModuleAsyncOptions): Promise => {\n\tconst mikroOrmModule = MikroOrmModule.forRootAsync({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: MongoMemoryServer,\n\t\t\t\tuseFactory: async () => {\n\t\t\t\t\tconst mongo = await MongoMemoryServer.create();\n\t\t\t\t\treturn mongo;\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tuseFactory: async (mongo: MongoMemoryServer) => {\n\t\t\tawait mongo.ensureInstance();\n\t\t\tconst clientUrl = mongo.getUri();\n\t\t\treturn {\n\t\t\t\t...options,\n\t\t\t\ttype: 'mongo',\n\t\t\t\tclientUrl,\n\t\t\t};\n\t\t},\n\t\tinject: [MongoMemoryServer],\n\t});\n\n\t// TODO maybe we can find a better way to export the MongoMemoryServer provider\n\t// currently we cannot specify the export otherwise because MikroOrmModuleSyncOptions doesn't provide an export option\n\tif (mikroOrmModule.imports && mikroOrmModule.imports.length > 0) {\n\t\tconst mikroOrmCoreModule = (await mikroOrmModule.imports[0]) as DynamicModule;\n\t\tmikroOrmCoreModule.exports ||= [];\n\t\tmikroOrmCoreModule.exports.push(MongoMemoryServer);\n\t}\n\n\treturn mikroOrmModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/mail/mail.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createRabbitMqModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (options: RabbitMqModuleOptions) => {\n\tconst rabbitMqModule = RabbitMQModule.forRoot(RabbitMQModule, {\n\t\texchanges: [\n\t\t\t{\n\t\t\t\tname: options.exchange,\n\t\t\t\ttype: 'direct',\n\t\t\t},\n\t\t],\n\t\turi: options.uri,\n\t});\n\treturn rabbitMqModule;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/test/create-test.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTestModule\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (interceptor: NestInterceptor): Promise => {\n\treturn Test.createTestingModule({\n\t\tproviders: [\n\t\t\t{\n\t\t\t\tprovide: APP_INTERCEPTOR,\n\t\t\t\tuseValue: interceptor,\n\t\t\t},\n\t\t],\n\t\tcontrollers: [DelayController],\n\t}).compile();\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (ms) => new Promise((resolve) => setTimeout(resolve, ms))\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/course.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tcolor: '#ACACAC',\n\tname: 'Kurse',\n\tdescription: '',\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/entity/dashboard.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defaultColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultRows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/repo/query/empty-result.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmptyResultQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { $and: [{ _id: false }] }\n                    \n                \n\n            \n                \n                    When this query is added ($and) to an existing query,\nit should ensure an empty result\n\n                \n            \n\n        \n    \n\n    apps/server/src/console/test/bootstrap.console.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (bootstrap: BootstrapConsole, args: string[]): Promise => {\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tconst commandResponse = await bootstrap.boot([process.argv0, 'console', ...args]);\n\treturn Promise.resolve();\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/factory/file.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: Partial): File => {\n\t\tconst file = new File({\n\t\t\tstorageFileName: 'storageFileName',\n\t\t\tbucket: 'test-bucket',\n\t\t\tdeletedAt: undefined,\n\t\t\tstorageProvider: storageProviderFactory.build(),\n\t\t\tcreator: userFactory.build(),\n\t\t\t...props,\n\t\t});\n\t\treturn file;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/repositories/learnroom/dashboard.repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        generateHardcodedTestDashboard\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n\tconst gridArray: GridElementWithPosition[] = [];\n\n\tgridArray.push({\n\t\tpos: { x: 1, y: 3 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Math')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 1, y: 4 },\n\t\tgridElement: GridElement.FromPersistedGroup(new ObjectId().toString(), 'Science', [\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Physics'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Biology'),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Chemistry'),\n\t\t]),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 2, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'English')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 3, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'German')\n\t\t),\n\t});\n\tgridArray.push({\n\t\tpos: { x: 4, y: 1 },\n\t\tgridElement: GridElement.FromPersistedReference(\n\t\t\tnew ObjectId().toString(),\n\t\t\tnew DefaultGridReference(new ObjectId().toString(), 'Greek')\n\t\t),\n\t});\n\n\tconst dashboard = new DashboardEntity(hardcodedTestDashboardId, { grid: gridArray });\n\treturn dashboard;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hardcodedTestDashboardId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0000d213816abba584714c0a'\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/authentication/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JwtConstants\n\n                    \n                \n                \n                    \n                        Default value : {\n\tsecret: authConfig.secret as string,\n\tjwtOptions: authConfig.jwtOptions,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : externalAuthConfig\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news.response.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NEWS_SOURCES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ['internal', 'rss'] as const\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/core/error/server-error-types.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_ERROR_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IErrorType\n\n                    \n                \n                \n                    \n                        Default value : {\n\ttype: 'NOT_FOUND_ERROR',\n\ttitle: 'Not Found',\n\tdefaultMessage: 'The requested ressource has not been found.',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverErrorTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : legacyErrorTypes\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : serverErrorTypes\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/common/interceptor/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REQUEST_TIMEOUT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Configuration.get('REQUEST_TIMEOUT') as number\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : config\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/factory/school.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        schoolFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: { name?: string }): School => {\n\t\tconst school = new School({\n\t\t\tname: 'school #1',\n\t\t\t...props,\n\t\t});\n\n\t\treturn school;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/database/setup-entities.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupEntities\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (): Promise => {\n\tconst orm = await MikroORM.init({ type: 'mongo', dbName: 'dummy', entities: ALL_ENTITIES });\n\treturn orm;\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/factory/storageprovider.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        storageProviderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: Partial): StorageProvider => {\n\t\tconst storageProvider = new StorageProvider({\n\t\t\tendpointUrl: 'http://localhost',\n\t\t\taccessKeyId: 'accessKeyId',\n\t\t\tsecretAccessKey: 'secret',\n\t\t\t...props,\n\t\t});\n\t\treturn storageProvider;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/create-news.params.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/modules/news/controller/dto/news-filter.query.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TARGET_MODEL_VALUES\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.values(NewsTargetModel)\n                    \n                \n\n\n        \n    \n\n    apps/server/src/config/database.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usedGlobals\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalConstants\n\n                    \n                \n                \n                    \n                        Default value : globals\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : usedGlobals\n                    \n                \n\n            \n                \n                    Database URL\n\n                \n            \n\n        \n    \n\n    apps/server/src/modules/authentication/strategy/jwt-validation.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : jwtWhitelist\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/domain/factory/user.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tbuild: (props?: { firstName?: string; lastName?: string; email?: string }): User => {\n\t\tconst user = new User({\n\t\t\tfirstName: 'John',\n\t\t\tlastName: 'Doe',\n\t\t\temail: `user.${Date.now()}@example.com`,\n\t\t\troles: [],\n\t\t\tschool: schoolFactory.build(),\n\t\t\t...props,\n\t\t});\n\n\t\treturn user;\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    apps/server/src/shared/infra/file-system/file-system.adapter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : fsp\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application.html":{"url":"additional-documentation/nestjs-application.html","title":"additional-page - NestJS Application","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHPI Schul-Cloud NestJS server\nThis application extends the existing server-application based on feathers and express by introducing dependency injection supporting unit testing and modularization, the possibility to develop against interfaces, and start implementation of modules using TypeScript.\nYou find the whole documentation published as GitHub Page\nRequirements\n\nNode.js (see .nvmrc for version)\nMongoDB (4.x)\nRabbitMQ (configure using RABBITMQ_URL, see default.schema.json)\n\npreconditions\n\nHave a MongoDB started, run mongod \nHave some seed data in datase, use npm run setup to reset the db and apply seed data\nHave RabbitMQ started, run docker run -d -p 5672:5672 -p 15672:15672 --name rabbitmq rabbitmq:3.8.9-management. This starts RabbitMQ on port 5672 and a web admin console at localhost:15672 (use guest:guest to login).\n\nHow to start the application\nBeside existing scripts, for the nestJS application the following scripts have been added. Try not changing the scripts as they should match what NestJS defines by default. Execute npm run ...\n\nnest:prebuild remove existing data from previous build\nnest:build compile the applications typescript ressources from apps/server to dist folder, keeps legacy js-code where it is\nnest:build:all currently executes nest:build, could additionaly build static assets\nnest:start starts the nest application on localhost:3030\nnest:start:dev run application without build from sources in dev-mode with hot-reload\nnest:start:debug run application in dev-mode with hot-reload and debug port opened on port :9229\nnest:start:prod start applicaiton in production mode, requires nest:build to be executed beforehand\n\nHow to build and serve the documentation\n\nnest:docs:build builds code documentation and module relations into /documentation folder\nnest:docs:serve builds code documentation and module relations into /documentation folder and serves it on port :8080 with hot reload on changes\n\nHow to start the server console\nThe console offers management capabilities of the application.\n\nnest:console after nest:build in production or\nnest:console:dev for development\n\nTo run a specific command run npm run nest:console:dev -- command . The --is required for npm to send params to the console. Use --helpto get an overview about existing commands.\nHow to test the nest-application with jest\n NestJS must not use _.test.[ts|js] as filename but instead either *.spec.ts for unit-tests beside tested files or *.e2e-spec.ts in test folder for end-to-end tests. This ensures legacy/feathers/mocha tests can be separated from jest test suites.\nThe application must pass the following statement which executes separate checks:\n\nnest:test executes all jest (NestJS) tests with coverage and eslint\n\nTo test a subset, use\n\nnest:test:all execute unit and e2e tests \n\nnest:test:e2e execute e2e tests only\n\nnest:test:spec execute unit tests (without e2e) only\n\nnest:test:cov executes all jest tests with coverage check\n\nnest:test:watch executes changed tests again on save\n\nnest:test:debug executes tests with debugging\n\nnest:lint run eslint to report linter issues and apply formatting\n\nnest:lint:fix run eslint to report and auto-fix fixable linter issues and apply formatting\n\n\nQuality gates\nWith coverage on tests and static code analysis we ensure some quality gates which are all handled by running nest:test:\n\nESLint with prettier ensures formatting and static code analysis to pass, see .eslintrc.js for details.\nTests ensure functional requirements via unit & e2e tests.\nCoverage on tests ensures a coverage of 80% on NestJS code, see jest.config.ts for details.\n\nGates are part of pull request checks.\nOpenAPI documentation\nThe NestJS applicaiton serves a documentation at :3030/v3/docs. The JSON-representation can be found at /v3/docs-json to be used for generating a client application.\nLegacy/feathers Swagger UI documentation when running the server locally, it is served at :3030/docs/.\nLegacy (feathers) testing with mocha\n\nnpm run test\nTo run a single test, use npm run mocha-single -- .\n\nHow to get full documentation\nThe documentation is provided by compodoc, run npm run nest:docs:serve, check generated compodoc features, custom information can be found in additional information section. Your console will tell you, where it is served.\nThe updated documentation is published as GitHub Page\nContent\nFor further reading, browse apps/server/doc.\nNestJS CLI\nTo use the NestJS CLI, install the nest cli globally.\n$ npm i -g @nestjs/cliThen you may use features like nest g service foo within of /apps/server/src.\nDebugging\nThere are launch configurations available for VSCode in .vscode/launch.default.json\nTech Stack\nFeel free to find related documentation:\n\nhttps://nestjs.com/\nhttps://jestjs.io/\nhttps://mikro-orm.io/\nhttps://min.io/\nhttps://www.rabbitmq.com/\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/software-architecture.html":{"url":"additional-documentation/nestjs-application/software-architecture.html","title":"additional-page - Software Architecture","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware Architecture\nGoals\nOur architecture aims to achieve the following goals:\n\ndecouple the business logic from any protocol, framework or technology specific code\nmakes business code easier to understand and test\nmakes code easier to maintain and change\n\n\nDefine standard solutions for cross-cutting-concerns and implement them once, for example:\nerror handling\nlogging\ntransaction handling\nAPI documentation and validation\n\n\n\nPrinciples\nOur architecture is based on the following principles:\n\nComponent Oriented DesignWe follow a strictly component oriented design to address the following sub-principles:\nSeparation of Concerns\nReusability and avoiding redundant code\nInformation Hiding via component API and its exchangeable implementation treated as secret.\nDesign by Contract for self-contained, descriptive, and stable component APIs.\nLayering as well as separation of business logic from technical code for better maintenance.\nData Sovereignty (and high cohesion with low coupling) says that a component is responsible for its data and changes to this data shall only happen via the component. Otherwise maintenance problems will arise to ensure that data remains consistent. Therefore interfaces of a component that may be used by other components are designed call-by-value and not call-by-reference.\n\n\nHomogeneitySolve similar problems in similar ways and establish a uniform code-style.\n\nOverview\nThe following figure shows the general architecture approach for the HPI-Schul-Cloud. It contains two different architecture categories (business architecture and technical architecture), which are described in more detail bellow.\n\nBusiness Architecture\nThe business architecture divides the application into business components. A business component has a well-defined responsibility that it encapsulates. All aspects related to that responsibility have to be implemented within that business component. Further the business architecture defines the dependencies between the business components. These dependencies need to be free of cycles. A business component exports his functionality via well-defined interfaces as a self-contained API. A business component may use another business component via its API and compliant with the dependencies defined by the business architecture.\nThe business components in the architecture should be the output of the business architecture created and managed by the product owner and it must stay aligned with the implementation to provide actual value. If their components are hard to implement (e.g. because technically, there is a very high cohesion between two components), the business component model should be changed. The business architecture has a very high impact on the solution and should therefore (especially in a agile environment) be the result of a mix team (business and development).\nThe application might contain components, which are not part of the business architecture, but have a technical background (e.g. a complex adapter component used to connect to an external system).\nTechnical Architecture\nThe technical architecture **divides the application into technical ****layers** based on the multilayered architecture. A layer is a unit of code with the same category such as service or presentation logic. A layer is therefore often supported by a technical framework. Each business component can therefore be split into *component parts* for each layer.\nComponents\nFollowing separation-of-concerns we divide an application into components using our folder-conventions and the architecture-mapping (see Architecture Mapping to Code). Components must use the UseCase-Facade of other components to communicate with them. Never access any other code from a different component directly.\nFor the HPI Schul-Cloud, we have two major types of components\nBusiness Components\nThese usually manage one or more entities and provide the related business logic to other components and external systems.\nAdapter Components\nAdapter components encapsulate interactions with external systems:\n\nrequests to an external system like a chat system, microservices etc.\nrequests from external systems, but only if:\nthe external system needs a specific API (e.g. a public standard for user/class management)\nthere are other (non-)functional requirements, which make it reasonable to encapsulate the interface into its own component, for example:\na reporting API, which aggregates data of multiple components\nAPIs, which have different security requirements\n\n\nOtherwise, the standard API provided by business components should be used\n\n\n\nHow to use Components\nCommunication between components\nIf component B needs anything from component A, it must always access it using the UseCase Facade of A. The general rules are:\n\nOnly the logic exposed in the UseCase facade can be invoked by other components. All other logic must not be called directly. This provides a clean and defined interface, which can be tested and validated.\n\naccessing the datalayer directly would heavily impact maintainability and encapsulation\naccessing the service layer makes no sense because it contains protocol specific aspects and overhead, which is not relevant within the application\n\n\nIn some cases, it is reasonable for the service layer of component B to call the UseCase facade of component A directly\n\nfor example if component B has no business logic (like a simple adapter component)\nIn any other situation, you should only put it into the business logic\n\n\n\n\n\n\nProvide dedicated APIs for external systems\nIf external applications can't use the default REST API of the system (e.g. because they expect application specific endpoints), those endpoints are provided as a separate component. For example, if an external MyLearningApp Application want's to connect to the HPI Schul-Cloud, create a new component called \"MyLearningAppAdapter\", which maps the external requests from the app to the internal datamodel and calls the use-case facade. Additional Hints:\n\nDo not access the Service Layer, the Data-Access Layer or the actual data in the database of the target component from this adapter component. Only access the UseCase-Facade. By doing this, we ensure that there are no side-effects introduced and the logic layer has full control over the business logic/rules.\nThe adapter component can contain it's own logic layer, if there is actual logic related to providing the interface (e.g more complex mapping and validation rules).\nThe adapter component can also contain a data-access layer, which for example caches data for the responses, contains mapping rules or buffers data from requests for processing.\nDo not use any relations, constraints or other dependencies onto the target component(s) on database level and do not query the data directly. Always use the UseCase Facade\n\n\nAn adapter component can contain multiple endpoints (e.g. for users, courses and classes) and the adapter is allowed to access multiple business components (e.g. to retrieve data from users, courses and classes).\n\n The figure above shows the generic setup. As stated above, the adapter component can access additional components\nAccessing an external API / System\nUsually, access to an external system should be encapsulated in it's own component. This adapter component is responsible for the mapping between the internal and external datamodel and all the protocol and system specific logic. The guidelines are:\n\nIn many cases, external system specific logic is encapsulated in it's own adapter component\nThe component should have an abstract name, e.g. instead of \"RocketChatAdapter\", it should be \"ChatAdapter\". That way, we reduce the amount of changes in the code, if we replace the system.\n\n\nThere are cases, in which the client to an external system could be part of a business component. Thats allowed, if the following conditons are true:\nIt will not be reused/called directly by other components. All calls must go through this business components usecase facade and obviously, the logic must fit into the components responsibility.\nit's very simple or tightly related to an entity managed by the business component, e.g.\nif course content is not stored in a database but in a third party LMS. In that case, the external system is the actual \"repository\" of the data and the client for it belongs in the dataaccess layer\na component managing addresses could contain a client which calls an external application to validate addresses.\n\n\n\n\nan adapter component provides a business interface (use case oriented)\nadapter components can provide their own REST API / service layer, but don't have to\nprovided APIs should also be business oriented and not system specific\n\n\nthe actual client and protocol logic (rest client, etc.) is located in the dataaccess layer\nAn adapter component can contain multiple clients for different services (e.g. rocketchat and matrixchat)\nIf a framework encapsulates the protocol specific logic enough, the framework can be used as \"dataaccess layer\"\n\n\nThe dataaccess layer can also contain entites and db repositories. This might be the case if the adapter component caches or buffers data or needs to manage mapping master data/rules\nthe logic layer is usually rather empty and contains only mapping and data-enrichment logic\nIt can also contain logic to determine the correct dataaccess-layer-client (e.g. if bundesland=x, use rocketchat, otherwise use matrix chat)\n\n\n\nScenarios:\nWith Adapter Component\n\nWith Business Component\n\nAccess Legacy Code\nIf you need to access legacy code (not yet migrated to the new architecture), you can do it from the logic layer (preferred) or the service layer (if there is no logic layer or it is only needed for service-layer-mapping)\n\nExtract Component into external system (Microservice)\nThe component approach not only increases the maintainability and test-ability by a large amount, it also allows to extract components into separate applications without large refactorings. The components are already decoupled and the required functionality in the UseCase Facade can be pulled up into the REST-API.\n\nLayers\nUI Layer\nThe UI layer is implemented as single-page-application using the https://nuxtjs.org/ framework, which wraps the https://vuejs.org/ framework. It should contain only logic related to:\n\npresentation\nsimple form validation\nlocalization\n\nThe client architecture uses an atomic design approach. For details, please check the client-architecture documentation.\nService Layer\nThe service layer is responsible for exposing functionality made available by the logical layer to **external consumers **over a network via technical protocols. By doing this, it decouples the logic layer completely from any protocols or frameworks used to provide logic to the outside world. The service layer can actually contain multiple services for all kinds of protocols (e.g. REST, Sockets, Kafka Messages and so on), which all map protocol specific requests to the protocol-independent logic layer.\nThe service layer in the project uses the feathers/express framework to expose RESTful/socket APIs to the legacy client and NUXT client as well as any other authorized consumer.\nThe layer ensures that the API specification contract is fulfilled, but also handles a large set of cross-cutting-concerns. Its most important tasks are:\n\nEnsure authentication, authorization ((Student-,Teacher-,Admin-)Role/Permissions only)\nRequest/Response validation against the API specification\nMapping form the internal data model to the external view (e.g. remove security critical information, technical keys etc.)\nProvide old versions of an API and map to the new business logic (this is not always possible in the service layer)\nGlobal error handling i.e. translates Application Exception into protocol specific errors\nCapture trace-information (e.g. request-id, user) and provide them to the application for logging\ncollect monitoring information (e.g. number of requests, response times, error rates etc)\nRequest/response/error logging\n\nCross-cutting-concerns are actually shared across all components (hence the name), but many of them are hooked (aspect oriented programming) around the services in the service-layer und some need a service-specific configuration. For example, a hook, which does role based authorization, is implemented only once and wraps all services. But it needs to know which roles must be checked for specific services and service operations.\nLogic Layer\nThe logic layer is the heart of the application and contains the main business logic. According to our business architecture we divide an application into components, which contains use-cases. Each component provides a usecase facade, which can be used to trigger the business logic for a use case from either:\n\nthe service layer\nfrom another component.\n\nThe logic layer is responsible for the implementation of the business logic according to the specified functional demands and requirements. It therefore creates the actual value of the application. The following additional aspects are also in its responsibility:\n\nValidation based on business rules. For example:\nParents must provide their consent for students bellow 16 years of age\n\n\nAuthorization and data access rights (scope or user specific permission), for example:\nA teacher are not allowed to see courses or students from other schools\n\n\nChoreography: In general, only the logic layer is allowed to call other components or trigger a call to an external system. Exceptions are possible (e.g. if a component has no business logic and therefore no logic layer)\n\nThe service layer must be free from protocol or database specific code and does not make assumptions about which protocol or client called it or where the data is stored. For example:\n\nthe die business layer must not access any HTTP-request parameters or headers directly. It has a defined interface which contains the data independently from the caller.\nit does not throw HTTP specific errors like 404 NotFound. Instead it throws an application specific error, which is mapped to 404 by the general REST API ErrorHandler\nIt does not create SQL or mongoDB queries. Instead it calls a defined interface and the dataaccess layer transform the input parameters into a DB specific query.\n\nUsing this approach, the business layer, which contains the actual logic, is much easier to test, understand and change. For example, it is possible to write xUnit Tests with no dependencies to DBs or protocols.\nDataaccess Layer\nThe data-access layer is responsible for all outgoing connections to access and process data. This is mainly about accessing data from a persistent data-store but also about invoking external services. It provides a more or less business oriented interface - e.g. findUser(userId)- and translates it into an database or database-framework specific query. No matter which database, database framework or protocol-client you use, the interface of the dataaccess layer should be neutral. That means that your interface must also provide parameters for pagination etc.\nThis approach brings a couple of benefits:\n\nSeparation of Concerns: encapsulates DB queries/requests to external services and allows for testing it separately\nIntroduces an abstraction over DB/protocol Connector/framework\nSeparates DB-specific Query Language and Application Specific Search Criteria\nIncreases security level - the DB is not exposed via Rest API, minimizes chance for Non-SQL/SQL-Injections\n\nBatch Layer\nThe batch layer is basically a service layer, which contains code related to batch processing (bulk-oriented, non-interactive, typically long running execution of tasks). For simplicity the term batch or batch job is used for such tasks in the project.\nThe batch layer is responsible for batch processes, whereas the business logic is implemented in the logic layer. Compared to the service layer you may understand the batch layer just as a different way of accessing the business logic. Batches should invoke use cases in the logic layer for doing their work. Only \"batch specific\" technical aspects should be implemented in the batch layer. Example: For a batch, which imports user data from a CSV file, this means that all code for actually reading and parsing the CSV input file is implemented in the batch layer. The batch calls the use case \"create user\" in the logic layer for actually creating the users for each line read from the CSV input file.\nIn practice it is not always appropriate to create use cases in the logic layer for every bit of work a batch should do. Instead, the data access layer can be used directly. An example for that is a typical batch for data retention which deletes out-of-time data. Often deleting out-dated data is done by invoking a single SQL statement. It is appropriate to implement that SQL in a Repository method (provided by the dataaccess layer interface) and call this method directly from the batch. But be careful that this pattern is a simplification which could lead to business logic cluttered in different layers which reduces maintainability of the application. It is a typical design decision you have to take when designing your specific batches.\nCross Cutting Concerns\n\nError Handling\nAn important part of the layered architecture is the handling of errors. In our architecture, errors should either be:\n\nhandled directly (e.g. retry a failed REST-API-Call after a timeout error occurred)\nBubble up un-catched to the generic error handler in the cross cutting concerns layer (which , which knows how to map this error to an external error and return it to the caller.\nIn case of batch jobs, the batch layer catches the error and knows how to handle it (e.g. restart a job, skip a part of the job, stop the job completely etc).\n\n\n\nPlease check the error handling guidelines for details.\nTransaction Handling\nTransactions can span multiple layers and components. A concept is necessary to execute/rollback those transactions.\nTODO: add a link to the concept and describe how it interacts with layers.\nRequest Context\nMultiple crosscutting concerns make it necessary to introduce a \"request context\". This is a set of request specific variables accessible everywhere within the application during a request. For example:\n\neach request will contain a request-specific trace id, which must be added to log messages and audit log entries\neach request is triggered by a user or a batch job. We need to store this trigger in the audit logs\nif we introduce transactions across multiple components (e.g. users and classes), we need a way to share transaction information between components and store the transaction until a commit\n\nBecause this context is required in all layers (especially in the data access layer for audit logging) and in cross cutting hooks, we need a framework/feature, which makes this available for direct access without adding this object to every method signature as input variable. Luckily, the necessary functionality is now part of nodejs: AsyncLocalStorage.\nThe general approach for rest requests:\n\nA request is received\nA hook initializes the request context\nA hook extracts trace information (e.g. traceid and spanid) from the request and adds it to the request context\nA hook authenticates and authorizes the user and stores basic user information (e.g. user id, maybe general permissions roles) in the request context\nIf the user is not authenticated, a \"guest user\" is set in the content with only guest permissions\nFor batch jobs, a technial user must be set in the request context. For the business logic, the technology, channel and user must be hidden behind the request context.\n\n\nThe normal code is executed and can access the request context\nIf the business logic needs data from the request context, it can access it\ncross cutting logic like audit logging can extract the information. E.g. before the data access layer writes a entity change to the database, it retrieves the trace id and the user id from the request context and adds these information to the entity\nIf we make a call to another service (e.g. calendar), we retrieve the trace id from the request context and add it to the outgoing request\nOur logging abstraction retrieves the trace id from the request context and adds it to the log message before writing it to the logfile (actually the console).\n\n\nAfter the response is sent to the client, the request context is \"destroyed\"\n\nCharacteristics of the context:\n\nIt is request specific and destroyed after the request is processed\nData in it are only accessable by the processing o f a specific request, not any other request of the same user or another user!\nIt should only contain very basic information necessary for cross cutting concerns like logging and audit logging. Do not use it to transport all kinds of business data around\n\nImportant: In order to make the code (and especially the business logic) agnostic to the source of a request, the request context should be considered a \"invocation context\". That means that also batch jobs (time based triggerd requests) and anonymous rest request should work the exact same way. That means that:\n\nwe must setup the request context for batch jobs\nwe need technical users for anonymous requests and batch jobs\nsuper users (super heroes) must use the same mechanisms as normal users (no special permission checks etc)\n\nThat way, we can use the same logic for all invocations and the source of an invocation is isolated within the service layer.\nLogging and Tracing\nFor details see the corresponding logging and tracing guidelines.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/architecture-mapping-to-code.html":{"url":"additional-documentation/nestjs-application/architecture-mapping-to-code.html","title":"additional-page - Architecture Mapping to Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchitecture mapping to Code\nConventions\nFile structure\nThe server app located in /apps/server is structured like. Beside each ts-file, a test file _.spec.ts has to be added for unit tests (hidden for simplification). Use index.ts files that combine a folders content and export all files from within of the folder using export _ from './file' where this makes sense. When there are naming conflicts, use more specific names and correct concepts. Think about not to create sub-folders, when only one concept exist.\nsrc/ // sourcecode & unit tests\n    - config/  // for global definitions\n    - modules/ // for your NestJS modules\n        - [module] // where [module] could be like user, homework, school\n            - entity/\n                - .entity.ts // (where  might be a user, news, ... owned by the module) exports entity class & document type\n                - .entity.ts // where related-info is a partial of another entity used in the entity above\n                - index.ts // exports all entities\n            - controller/ // where controllers define the api\n                - dto/ // dto's define api in/out types as a class with annotations\n                    - [param|query].ts // (like create-user-param.ts or pagination.query)\n                    - [response].ts // (like create-user-response.ts)\n                    - index.ts // exports all dto's\n                - .controller.ts // defines rest api, references main service file\n                - .controller.ts // think about a new module when require multiple controllers :)\n            - repo/ // repositories take care to load/persist/... entities\n                - schema/ // contains schema imports from legacy app or new definitions (might be replaced by OR mapper)\n                    - .schema.ts // exports (legacy-) mongoose schemas\n                - .repo.ts // where entity might be user, news, school\n            - service/ // for technical dependencies (libraries, infrastructure layer concerns)\n                - .service.ts // the modules main service file, might be exported for other modules\n                - .service.ts // use services not for features\n            - mapper/\n                - .mapper.ts // mapper for a domain entity, should contain mapDomainToResponse and mapFooToDomain\n            - uc/ // preferred for features\n                - .uc.ts // one file per single use case (use a long name)\n            - .module.ts // DI instructions to build the module\n    - shared/ // reused stuff without module ownership\n        - core/ // shared concepts (decorators, pipes, guards, errors, ...) folders might be added\n        - domain // (abstract) domain base entities which will be extended in the modules\n        - util/ // helpers, tools, utils can be located here (but find a better name)\ntest/ // e2e tests against controllers should use same folder names like controllers\nFor concepts (see https://docs.nestjs.com/first-steps) of NestJS put implementations in shared/core. You might use shared/utils for own solutions, assume TextUtils but when it contains text validators, move it better to shared/validators/text.validator.ts before merge. The core concepts of NestJS can be extended with ours (like repo).\nFile naming conventions\nIn TypeScript files: for Classes we use PascalCase (names start with uppercase letter), variables use lowercase for the first letter camelCase.\nWhen assigning names, they may end with a concept name:\n\nA Concept might be a known term which is widely used. Samples from NestJS: Controller, Provider, Module, Middleware, Exception, Pipe, Guard, Interceptor.\n\nBeside we have own concepts like comparator, validator (generic ones should not be part of a modules (and located in shared folder btw) or repo, use-case which might be owned by a module.\n\n\nIn file names, we use lowercase and minus in the beginning and end with ..ts\nSamples\n\n\n\nFile name\nClass name\nConcept\nLocation\n\n\n\n\nlogin-user.uc.ts\nLoginUserUc\nuse case\nmodule/uc\n\n\ntext.validator.ts\nTextValidator\nvalidator\nshared/validators\n\n\nuser.repo.ts\nUserRepo\nrepository\nmodule/repo\n\n\nparse-object-id.pipe.ts\nParseObjectIdPipe\npipe\nshared/pipes\n\n\n\nComponents\nComponents are defined as NestJS Modules. \nCommunication between components\nTo access other modules services, it can be injected anywhere. The usage is allowed only, when the module which owns that service has exported it in the modules definition.\n// modules/feathers/feathers-service.provider.ts\n// modules/feathers/feathers.module.ts\n@Module({\n    providers: [FeathersServiceProvider],\n    exports: [FeathersServiceProvider],\n})\nexport class FeathersModule {}\nThe feathers module is used to handle how the application is using legacy services, when access them, inject the FeathersServiceProvider but in your module definition, import the FeathersModule.\n// your module, here modules/authorization/authorization.module.ts\n@Module({\n    imports: [FeathersModule], // here import the services module\n    // providers: [AuthorizationService, FeathersAuthProvider],\n    // exports: [AuthorizationService],\n})\nexport class AuthorizationModule {}\n\n// inside of your service, here feathers-auth.provider.ts\n@Injectable()\nexport class FeathersAuthProvider {\n\n    // inject the service in constructor\n    constructor(private feathersServiceProvider: FeathersServiceProvider) {}\n    \n    // ...\n\n    async getUserTargetPermissions(\n        // ...\n    ): Promise {\n        const service = this.feathersServiceProvider.getService(`path`);\n        const result = await service.get(...)\n        // ...\n        return result;\n    }\nAccess legacy Code\nUse the feathers module introduced above to get access to legacy services.\nIt is important to introduce strong typing like it happened above in the FeathersAuthProvider. While the FeathersServiceProvider from the feathers module, has only an abstract implementation for all services, add a concrete service inside your module for a specific feathers-service, like above in FeathersAuthProvider.\nLayered Architecture\nThe different layers use separately defined objects that must be mapped when crossing layers.\n\nNever export entities through the service layer without DTO-mapping which is defined in the controller\nConcepts owned by a layer must not be shared with other layers\n\n\nFurther reading: https://khalilstemmler.com/articles/software-design-architecture/organizing-app-logic/\nService Layer\nA modules service layer is defined within of controllers.\nThe main responsibilities of a controller is to define the REST API interface as openAPI specification and map DTO's to match the logic layers interfaces.\n    @Post()\n    async create(@CurrentUser() currentUser: ICurrentUser, @Body() params: CreateNewsParams): Promise {\n        const news = await this.newsUc.create(\n            currentUser.userId,\n            currentUser.schoolId,\n            NewsMapper.mapCreateNewsToDomain(params)\n        );\n        const dto = NewsMapper.mapToResponse(news);\n        return dto;\n    }JWT-Authentication\nFor authentication, use guards like JwtAuthGuard. It can be applied to a whole controller or a single controller method only. Then, ICurrentUser can be injected using the @CurrentUser() decorator.\nValidation\nGlobal settings of the core-module ensure request/response validation against the api definition. Simple input types might additionally use a custom pipe while for complex types injected as query/body are validated by default when parsed as DTO class.\nFile naming\nComplex input DTOs are defined like [create-news].param.ts (class-name: CreateNewsParam) or [pagination].query.ts (class-name: PaginationQuery)\nWhen DTO's are shared between multiple modules, locate them in the layer-related shared folder.\n\nSecurity: When exporting data, internal entities must be mapped to a response DTO class named like [news].response.dto. The mapping ensures which data of internal entities are exported.\n\nopenAPI specification\nDefining the request/response DTOs in a controller will define the openAPI specification automatically. Additional validation rules and openAPI definitions can be added using decorators. For simplification, openAPI decorators should define a type and if a property is required, while additional decorators can be used from class-validator to validate content.\nMapping\nIt is forbidden, to directly pass a DTO to a use-case or return an Entity (or other use-case result) via REST. In-between a mapper must transform the given data, to protect the logic layer from outside implications.\nThe use of a mapper gives us the guarantee, that\n\nno additional data beside the known properties is published.\nA plain object might contain more properties than defined in TS-interfaces.\nSample: All school properties are published while only name & id are intended to be published.\n\n\nthe API definition is complete\n\nLogic (Domain-) Layer\nThe domain layer assumes a kind of higher-level policy that everything else relies on (Source).\n\nThis means, a controller or a repository must fit this layer.\nSpecific goals of a repository, like query optimization must not be a transparent part of the repository only.\n\nData access Layer\nThe data access layer consists of repositories. A repository takes care to persist domain entities defined in the business layer. As we use decorators in entities to define how they are persisted, they are used in this layer too. The repository does not need to map entities like in the presentation layer as it maps data from/to an external system into the domain and to be used from/in the business layer.\n\nIt's not the task of the business layer to fit a repository. A respository should give the logic layer the ability to persist/make available what is defined in the logic layer. The domain model must be independent from a repository (See Clean Architecture).\n\nSpecific concepts from within of this layer must be hidden for the business layer like database queries, protocol specifics, mapping to data layer. Others like putting multiple persistence rules into transactions is part of the domain layer (while how a transaction is implemented, then is part of the data access layer).\nLogic should not be part of a repository, use logic layer instead.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/domain-driven-design.html":{"url":"additional-documentation/nestjs-application/domain-driven-design.html","title":"additional-page - Domain driven design","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDomain driven design\nWhile DDD is not enforced, we still try to follow its goals:\n\nDiscover the domain model by interacting with domain experts and agreeing upon a common set of terms to refer to processes, actors and any other phenomenon that occurs in the domain.\nTake those newly discovered terms and embed them in the code, creating a rich domain model that reflects the actual living, breathing business and it's rules.\nProtect that domain model from all the other technical intricacies involved in creating a web application.\n\nClean Architecture\n \"The Clean Architecture from the golden Uncle Bob archives\"\nFor the 3-layer architecture this means we have to protect the business layer and domain models from the outside world and infrastructure to keep it clean, fast, testable, ready for changes.\nConcepts\nEntities\nNestJS does not cover how to persist entities, the heart of our application. We need a solution that not only transfers data like mongoose, instead we want to define business rules on objects with strong typing added.\nInstead of Interface, Model and Schema which describe the view on data, now we define Entities, that get a DRY possibility to be created, loaded, and persisted using en entity manager. The definition of how an entity relates with others or how it is persisted can be added using decorators.\nSee https://github.com/mikro-orm/mikro-orm#-core-features for further details.\nDomain Services\nDomain Services are most often executed by application layer Application Services / Use Cases. Because Domain Services are a part of the Domain Layer and adhere to the dependency rule, Domain Services aren't allowed to depend on infrastructure layer concerns like Repositories to get access to the domain entities that they interact with. Application Services fetch the necessary entities, then pass them to domain services to run allow them to interact.\nSample: Within of a use case we not depend on a user context from outside while for logging, error handling or in a repository it might be used. Like we see in the clean architecture schema.\nUse Cases\nBeside Concepts NestJS introduces, own services like repositories or use-cases might be created.\nUse cases either return entities (data) to the user through a query (CRUD) or apply a command (do ... ok/err).\nFurther reading: https://khalilstemmler.com/articles/oop-design-principles/command-query-separation/\nThey focus on providing business use cases and should only contain higher logical function calls, that are well-tested and hide their implementation inside of a use-case.\n    /**\n     * Let an existing user create a new user (on same school).\n     * @throws: USER_ALREADY_EXISTS, API_VALIDATION_ERROR\n     * @throws: FORBIDDEN, BAD_REQUEST, INTERNAL_SERVER_ERROR, ...\n     */\n    async registerNewUser(creatorId: EntityId, schoolId: EntityId, props: INewUserProps): Promise {\n        this.logger.log(`create new user called by ${creatorId}`);\n\n        // check creator has permission in school to create user\n        await this.authorizationService.checkEntityPermissions(creatorId, School, schoolId, ['USER_CREATE']);\n\n        // check user not exists\n        await this.userService.checkUserNotExistByEmail(props.email)\n\n        const user = new User(props);\n        await this.userRepo.save(user);\n\n        if(enableUserActivation){\n            // call other service which creates pin and sends email\n        }\n\n        if(sendWelcomeEmailToUser){\n            await this.userEmailService.sendWelcomeMessage(user);\n        }\n\n        this.logger.log(`user ${user.id} created by user ${creatorId}`);\n\n        return user;\n    }\n\n\n    // ... userService\n\n    checkUserNotExistByEmail(email: string){\n        // todo email is not empty\n        const existingUser = await this.userRepo.findByEmail(props.email);\n        if(existingUser.length > 0) {\n            throw new UserAlreadyExistError();\n        }\n    }How to structure a use case? When creating a use case, care of\n\nthe general business goal\npreconditions\nactors, in-put & out-put data\npost conditions to be well-known\nthe normal case (step by step)\nall (handled) exception-cases (to be handled in a client application)\n\nClean Code principles\nA use case should consist only of business-rules and decisions (functional requirements), while the final implementation is part of functions that are called from the use case. There, we no more see any details about the functional requirements.\nDomain events\nEvents have to be handled very carefully or in best case not to be used. Like hooks around services might lead into separating the business logic into independend untestable workflows, the events task and data must be defined clearly and should only be used for independent tasks.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/cross-cutting-concerns.html":{"url":"additional-documentation/nestjs-application/cross-cutting-concerns.html","title":"additional-page - Cross-cutting concerns","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCross cutting concerns\nThe cross cutting topics are implemented within of the core-module. \nLogging\nFor logging use the logger ServerLogger, provided by the logger module. It is hooked up in the application on startup, replacing the default logger and can be transient injected into any provider by additionally define set a context into the logger.\n// add Logger module to your feature module imports or unit tests\nimport { LoggerModule } from '../core/logger/logger.module';\n// ...\nimports: [LoggerModule],\n// within of a provider (use-case, service, ...)\n\n// import the server logger service\nimport { ServerLogger } from '../core/logger/logger.service';\n\n@Injectable()\nexport class YourUc {\n    constructor(\n        // initialize a ServerLogger\n        private logger: ServerLogger\n    ) {\n        // set the context by this class name (here: 'YourUc')\n        this.logger.setContext(YourUc.name);\n    }\n\n    async sampleUcMethod(params) {\n        this.logger.log(`start do something...`);\n        // ...\n        this.logger.log(`finished successfully to do something...`);\n    }This produces a logging output like\n[Nest] NUMBER - TIME   [YourUc] start do something...\n[Nest] NUMBER - TIME   [YourUc] finished successfully to do something...Later we can filter the log for a single [context].\nA logger does implement the LoggerService interface:\ninterface LoggerService {\n    log(message: any, context?: string): any;\n    error(message: any, trace?: string, context?: string): any;\n    warn(message: any, context?: string): any;\n    debug?(message: any, context?: string): any;\n    verbose?(message: any, context?: string): any;\n}Only a string should be provided as a single parameter by default. Ensure not putting complex objects into a log. Think about persisting more complex results for later analysis into a database.\nOptionally in the second parameter, the context can be overridden only.\nException Handling\n\nWe separate our business exceptions from technical exceptions. While for technical exceptions, we use the predefined HTTPExceptions from NestJS, business exceptions inherit from abstract BusinessException.\nBy default, implementations of BusinessException must define\n    code: 500\n    type: \"CUSTOM_ERROR_TYPE\",\n    title: \"Custom Error Type\",\n    message: \"Human readable details\",\n    // additional: optionalDataThere is a GlobalErrorFilter provided to handle exceptions, which cares about the response format of exceptions and logging. It overrides the default NestJS APP_FILTER in the core/error-module.\nIn client applications, for technical errors, evaluate the http-error-code, then for business exceptions, the type can be used as identifier and additional data can be evaluated.\nFor business errors we use 409/conflict as default to clearly have all business errors with one error code identified.\n\nSample: For API validation errors, 409/Bad Request will be extended with validationError: ValidationError[{ field: string, error: string }] and a custom type API_VALIDATION_ERROR.\n\nPipes can be used as input validation. To get errors reported in the correct format, they can define a custom exception factory when they should produce api validation error or other exceptions, handled by clients.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/testing.html":{"url":"additional-documentation/nestjs-application/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTesting\nAutomated testing is the essential part of the software development process.\nIt improves the code quality and ensure that the code operates correctly especially after refactoring.\nThe Different Tests\n\n\nOur goal is to test each application layer mostly independent of others.\n\nRepo tests operate on data access layer.\nThey prove that the database queries are executed correctly.\nUse case tests operate on logic layer.\nThey verify the correct implementation of the business requirements.\nMapper tests operate between logic and service layer.\nThey verify the correct mapping between domain objects and objects delivered to the clients via REST API.\nEnd-to-end tests operate on all layers of the application.\nThe testing endpoint is the service layer. These tests verify the availability of the expected endpoints and checks\nthe expected status codes and the structure of the received objects.\n\nGeneral Test Conventions\nLean Tests\nThe tests should be as simple to read and understand as possible. They should be effortless to write and change, in order to not slow down development. Wherever possible:\n\navoid complex logic\ncover only one case per test\nonly use clearly named and widely used helper functions\nstick to blackbox testing: think about the unit from the outside, not its inner workings.\nits okay to duplicate code for each test\n\nNaming Convention\nWhen a test fails, the name of the test is the first hint to the developer (or any other person) to what went wrong where. (along with the \"describe\" blocks the test is in).\nThus, your describe structure and testcase names should be designed to enable a person unfamiliar with the code to identify the problem as fast as possible. It should tell him:\n\nwhat component is being tested\nunder what condition\nthe expected outcome\n\nTo facilitate this, your tests should be wrapped in at least two describe levels.\n// Name of the unit under test\ndescribe(\"Course Service\", (() => {\n    // a \"when...\" sentence\n    describe(\"When a student tries to create a course\", (() => {\n        // a \"should...\" sentence\n        it(\"should fail\", async () => {\n            ...\n        });\n    });\n});Isolation\nEach test should be able to run alone, as well as together with any other tests. To ensure this, it is important that the test does not depend on any preexisting data.\n\nEach test should generate the data it needs, and ensure that its data is deleted afterwards. (this is usually done via mocha's \"afterEach\" function.\nWhen you create objects with fields that have to be globally unique, like the account username, you must ensure the name you choose is unique. This can be done by including a timestamp.\nNever use seeddata.\n\nTest Structure\nYour test should be structured in three seperate areas, each distinguished by at least an empty line:\n\nArrange - set up your testdata\nAct - call the function you want to test\nAssert - check the result\n\nthis is known as the AAA-pattern.\nTesting Samples\nHandling of function return values\nWhen assigning a value to an expect, separate the function call from the expectation to simplify debugging. This later helps when you not know about the return value type or if it's an promise or not. This is good style not only for tests.\n    // doSomethingCrazy : retValue\n    it('bad sample', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good sample', () => {\n        const result = doSomethingCrazy(x,y,z)\n        expect(result).to... // here we can simply debug\n    })\nPromises and Timouts in tests\nWhen using asynchronous functions and/opr promises, results must be awaited within of an async test function instead of using promise chains. While for expexting error conditions it might be helpful to use catch for extracting a value from an expected error, in every case avoid writing long promise chains.\n\nInstead of using done callback, use async test functions.\nUse await instead of (long) promise chains\nnever manually set a timeout\n\n    // doSomethingCrazy : Promise\n    it('bad async sample', async function (done) => {\n        this.timeout(10000);\n        return doSomethingCrazy(x,y,z).then(result=>{\n            expect(result).to...\n            done() // expected done\n        }).catch(()=>{\n            logger.info(`Could not ... ${error}`);\n            done() // unexpected done, test will always succeed which is wrong\n        })\n    })\n    it('good async sample', async () => {\n        // no timeout set\n        const result = await doSomethingCrazy(x,y,z)\n        expect(result).to...\n    })\nTimeouts must not be used, when async handling is correctly defined!\n\nExpecting errors in tests\nWhen expecting an error, you might take values from an error, test for the error type thrown and must care of promises.\n    // doSomethingCrazy : Promise\n    it('bad async sample expecting an error', () => {\n        expect(doSomethingCrazy(x,y,z)).to...\n    })\n    it('good async sample expecting an error value', async () => {\n        const code = await doSomethingCrazy(x,y,z).catch(err => err.code)\n        expect(code).to...\n    })\n    it('good sample expecting an error type from a sync function', () => {\n        expect(() => doSomethingCrazySync(wrong, param)).toThrow(BadRequestException);\n    })\n    it('good sample expecting an error type from an async function', async () => {\n        await expect(doSomethingCrazySync(wrong, param)).rejects.toThrow(BadRequestException);\n    })Testing Utilities\nNestJS:\n\nprovides default tooling (such as test runner that builds an isolated module/application loader)\nprovides integration with Jest and Supertest out of the box\nmakes the Nest dependency injection system available in the testing environment for mocking components\n\nThe @nestjs/testing.Test class provides an execution context that mocks the full Nest runtime, but gives\nhooks that can help to manage class instances, including mocking and overriding.\nThe method Test.createTestingModule() takes module metadata as argument it returns TestingModule instance.\nThe TestingModule instance provides method compile() which bootstraps a module with its dependencies.\nEvery provider can be overwritten with custom provider implementation for testing purposes.\n  beforeAll(async () => {\n      const moduleRef = await Test.createTestingModule({\n          controllers: [SampleController],\n          providers: [SampleService],\n        }).compile();\n\n      sampleService = moduleRef.get(SampleService);\n      sampleController = moduleRef.get(CatsController);\n    });Unit Tests vs Integration Tests\nIn Unit Tests we access directly only the layer which is currently testing.\nOther layers should be mocked or are replaced with default testing implementation.\nEspecially the database access and database calls should be mocked.\nIn contrast to unit tests the integration tests use access to the database and execute\nreal queries using repositories.\nRepo Tests\nFor the data access layer, integration tests can be used to check the repositories base functionality against a database.\nFor Queries care DRY principle, they should be tested very carefully.\n\nUse a in-memory database for testing to allow parallel test execution and have isolated execution of tests.\n\n\nA test must define the before and after state of the data set clearly and cleanup the database after execution to the before state.\n\n\nInstead of using predefined data sets, all preconditions should be defined in code through fixtures.\n\nOur repository layer uses mikro-orm/EntityManager to execute the queries.\nBy testing repositories we want to verify the correct behaviour of the repository functions.\nIt includes verifying expected database state after executed repository function.\nTherefore, the *.repo.integration.spec.js should be used.\nThe basic structure of the repo integration test:\nPreconditions (beforeAll):\n\nCreate Nest JS testing module:\n1.1 with MongoMemoryDatabaseModule defining entities which are used in tests. This will wrap MikroOrmModule.forRoot() with running a MongoDB in memory.\n1.2 provide the repo which should be tested\nGet repo, orm and entityManager from testing module\n\n    import { MongoMemoryDatabaseModule } from '@src/modules/database';\n\n    let repo: NewsRepo;\n    let em: EntityManager;\n    let testModule: TestingModule;\n\n    beforeAll(async () => {\n        testModule: TestingModule = await Test.createTestingModule({    (1)\n             imports: [\n                     MongoMemoryDatabaseModule.forRoot({                 (1.1)\n                    entities: [News, CourseNews, ...],\n                }),\n              ],\n             providers: [NewsRepo],                                     (1.2)\n      }).compile();\n      repo = testModule.get(NewsRepo);                        (2)\n      orm = testModule.get(MikroORM);\n      em = testModule.get(EntityManager);\n    })Post conditions (afterAll), Teardown\nAfter all tests are executed close the app and orm to release the resources by closing the test module.\n    afterAll(async () => {\n        await testModule.close();\n    });\nWhen Jest reports open handles that not have been closed, ensure all Promises are awaited and all application parts started are correctly closed.\n\nMapping Tests\nMapping tests are Unit Tests which verify the correct mapping between entities and Dto objects.\nThese tests should not have any external dependencies to other layers like database or use cases.\nUse Case Tests\nUse case tests are Unit Tests which verify the business logic of the application.\nThe database calls are mocked and spyied. So we can check how and with which parameters the repo functions are called.\n\nUse unit-tests to ensure a use-cases logic matches the given requirements (from a [user-]story).\n\n\nA unit test should cover preconditions, allowed input, the result, and expected exceptions defined by the story, and roughly what happens on malformed input (the execution should stop).\n\nPreconditions\n\nCreate Nest JS testing module\nUse Repo as provider reimplement the repo functions with some default implementations\nProvide other dependencies like AuthorizationService and provide default implementation for the function, which are called.\nGet repo and uc from testing module\n\n      const module: TestingModule = await Test.createTestingModule({ (1)\n            imports: [LoggerModule],\n            providers: [\n                NewsUc,\n                {\n                    provide: NewsRepo,                                  (2)\n                    useValue: {\n                        save() {\n                            ...\n                        },\n                        findAll() {\n                            ...\n                        },\n                    },\n                },\n                {\n                    provide: AuthorizationService,                      (3)\n                    useValue: {\n                        getPermittedEntities(userId, targetModel, permissions) {\n                            ...\n                        },\n                    },\n                },\n            ],\n        }).compile();\n\n        service = module.get(NewsUc);                           (4)\n        repo = module.get(NewsRepo);Test\n\nSpy repo function which is called inside the tested use case\nCall the tested function\nVerify that the repo spy is called with the expected functions\n\n        it('should search for news by empty scope ', async () => {\n            const findAllSpy = jest.spyOn(repo, 'findAll');             (1)\n            await service.findAllForUser(userId, scope, pagination);    (2)\n            const expectedParams = [targets, false, pagination];\n            expect(findAllSpy).toHaveBeenCalledWith(...expectedParams); (3)\n        });Testing expected error\n\nExecute the function with the expected exception in expect context than define how and with which exception\nthe function should be rejected\n\n\nDon't forget to add 'await' before expect, otherwise the test will be executed successfully regardless assertions\nand throw an error in log after the test execution.\n\n        it('should throw not found exception if news was not found', async () => {\n            const anotherNewsId = new ObjectId().toHexString();\n            await expect(service.findOneByIdForUser(anotherNewsId, userId)).rejects.toThrow(NotFoundException);  (1)\n        });E2E Tests\nUnlike unit testing, which focuses on individual modules, end-to-end testing covers the interaction between classes and\nmodules at a more aggregate level. Automated end-to-end tests help us to ensure that the overall behavior of the system is correct.\nController Tests\nTo test the setup behind a controller, use e2e-tests to ensure, use cases and repositories below\nare correctly mounted and available at a specific path.\n\nA controller unit test should ensure it responds with the correct data-format and a referenced use-case is called correctly.\n\n\nAuthentication and response codes can be unit tested.\n\n\nDo not test logic (from the business layer or repository) in e2e-tests, this must be done where the logic is defined within of a unit test. A e2e test should only ensure everything is correctly initialized.\n\n\nDo not put logic (beside statements, transactions, mapping) inside a controller, use the logic layer instead.\n\n\nMappers must be unit tested.\n\nPreconditions\n\nCreate Nest testing module\nImport ServerModule as the whole\nOverride authentication using JwAuthGuard\n3.1 Override authorized user with the mocked user data\nOverride other services for example for authorization\nCreate and initialize the whole Nest Application using createNestApplication()\nGet Orm and Entity Manager from module\n\n\n    beforeAll(async () => {\n        const module: TestingModule = await Test.createTestingModule({  (1)\n            imports: [ServerModule],                                    (2)\n        })\n            .overrideGuard(JwtAuthGuard)                                (3)\n            .useValue({\n                canActivate(context: ExecutionContext) {\n                    const req: Request = context.switchToHttp().getRequest();\n                    req.user = {                                        (3.1)\n                            userId: '0000d224816abba584714c9c',\n                            roles: [],\n                            schoolId: '5f2987e020834114b8efd6f8',\n                            accountId: '0000d225816abba584714c9d',\n                    };\n                    return true;\n                },\n            })\n            .overrideProvider(AuthorizationService)                     (4)\n            .useValue({\n                checkEntityPermissions() {},\n                getEntityPermissions() {\n                    return ['NEWS_VIEW', 'NEWS_EDIT'];\n                },\n            })\n            .compile();\n\n        app = module.createNestApplication();                           (5)\n        await app.init();\n        orm = module.get(MikroORM);                           (6)\n        em = module.get(EntityManager);\n    });Clean up\nAfter Each test delete the created data in test to have a clean database for the next test.\n    afterEach(async () => {\n        await em.nativeDelete(News, {});\n    });Post Conditions\nAfter all tests are executed close the app and orm to release the resources\n    afterAll(async () => {\n        await app.close();\n        await orm.close();\n    });Test\nAn example e2e test uses app http server to call the tested url.\nThe request() function from the supertest library simulates HTTP request.\nThe response can be verified by checking the response code or by applying some verification to the result object.\n    describe('GET /news', () => {\n      it('should get empty response if there is no news', async () => {\n        const response = await request(app.getHttpServer()).get(`/news`).expect(200);\n        const {data, total} = response.body as NewsListResponse;\n        expect(total).toBe(0);\n        expect(data.length).toBe(0);\n      });\n    });\nDon't forget to test HTTP error codes as well\n\nReferences\nThis guide is inspired by https://github.com/goldbergyoni/javascript-testing-best-practices/\n        it('should throw not found error, if news doesnt exists', async () => {\n            const newsId = new ObjectId().toHexString();\n            await request(app.getHttpServer()).delete(`/news/${newsId}`).expect(404);\n        });\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/decisions.html":{"url":"additional-documentation/nestjs-application/decisions.html","title":"additional-page - Decisions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDecisions\nArchitecture decisions\nSOLID\nSolution: NestJS\nTypeScript\nSolution: Use in schulcloud-server, extend strong typing over the api via openAPI and use it in nuxt-client.\nMikro-ORM\nTypescript Support\n\nstrong typed entities\nprovide meta data through:\nclasses\ndecorators (on classes, properties)MongoDB Support\n\n\n\nfull Support for MongoDB\n(as opposed to e.g. TypeORM, Prisma)\n\nUnit of Work\n\nimplicit transactions\nmanaged entities / references\ncollect changes\nem.flush()\n\nIdentity Map\n\nalways get the same instance of one entity\ngood for:\noptimizations\ncaching\ncomparison by identity\n\n\nrequest scope in web applications\n\nDatabase agnostic\n\ncan be used with different databases (SQL/NoSQL)\n\nRelation mapping\n\n1:n, 1:1, m:n\nforeign collection relations\nembedded relations (MongoDB)\n\nPreloading\n\nnested structures can be preloaded via populate\n\nMisc\n\nuse serialized mongo-id\n\nIssues\n\nno join queries in MongoDB\nno populate in queries over relations\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/vscode.html":{"url":"additional-documentation/nestjs-application/vscode.html","title":"additional-page - VSCode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVSCode\nLaunch scripts\nIn the file ./vscode/launch.default.json you find following actions:\n\nAttach to NestJS will allow to attach VSCode debugger to an already running application\nDeubg NestJS via NPM will start the application and attach the debugger\n\nSettings\nIn the file ./vscode/settings.default.json find suggested settings.\nRecommended extensions\nSee ./vscode/extensions.json for recommendations.\nJest\nJest is used to care of unit- and end2end tests on all *.spec.ts files.\n Allows to just see failing tests in Problems tab.\n and get small icons like ✔️ or a cross beside it-definitions inside of test files.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/nestjs-application/git.html":{"url":"additional-documentation/nestjs-application/git.html","title":"additional-page - Git","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGit\nWindows\nWe strongly recommend to let git translate line endings. Please set git config --global --add core.autocrlf input when working with windows.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
